{"version":3,"sources":["./src/app/pages/tables/OrderTable/apiGet.services.ts","./src/app/pages/tables/OrderTable/orderTable.component.ts","./src/app/pages/tables/OrderTable/orderTable.component.html","./src/app/pages/tables/SmartOrderTable/smartOrderTable.component.ts","./src/app/pages/tables/SmartOrderTable/smartOrderTable.component.html","./src/app/pages/tables/WindowCreateOrderPopup/apiWindowCreateOrderPopup.services.ts","./src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.ts","./src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.html","./src/app/pages/tables/WindowOrderPopup/apiWindowiOrderPopup.services.ts","./src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.ts","./src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.html","./src/app/pages/tables/alarms/alarms.component.ts","./src/app/pages/tables/alarms/alarms.component.html","./src/app/pages/tables/smart-table/smart-table.component.ts","./src/app/pages/tables/smart-table/smart-table.component.html","./src/app/pages/tables/tables-routing.module.ts","./src/app/pages/tables/tables.component.ts","./src/app/pages/tables/tables.module.ts","./src/app/pages/tables/tree-grid/tree-grid.component.ts","./src/app/pages/tables/tree-grid/tree-grid.component.html"],"names":[],"mappings":"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","file":"tables-tables-module.js","sourcesContent":["import { Injectable} from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\n// import { Observable, Subject, of } from 'rxjs';\r\n\r\n\r\ninterface Ordenes {\r\n    order: string;\r\n    name: string;\r\n    description: string;\r\n    reference: string;\r\n    orderLength: number;\r\n  }\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ApiGetService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    GetJson(url: string) {\r\n        return this.http.get(url);\r\n    }\r\n\r\n\r\n}\r\n","import { Component, EventEmitter, HostBinding, OnDestroy, OnInit, Output, ViewChild , TemplateRef, PipeTransform} from '@angular/core';\r\nimport { Location, LocationStrategy } from '@angular/common';\r\nimport { NbThemeService } from '@nebular/theme';\r\nimport { map, takeUntil, startWith, debounceTime, tap, switchMap, delay, takeWhile } from 'rxjs/operators';\r\nimport { Observable, Subject, of, BehaviorSubject,Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { i18nMetaToDocStmt } from '@angular/compiler/src/render3/view/i18n/meta';\r\nimport {ApiGetService} from '../OrderTable/apiGet.services'\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms'; \r\nimport {WindowComponent} from '../WindowOrderPopup/windowsOrderPopup.component'\r\nimport {ApiWindowOrderPopup} from '../WindowOrderPopup/apiWindowiOrderPopup.services'\r\nimport {WindowCreateComponent} from '../WindowCreateOrderPopup/windowsCreateOrderPopup.component'\r\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\r\nimport { MessageService } from '../../dashboard/services/MessageService';\r\nimport { Identifiers } from '@angular/compiler';\r\nimport { NbAccessChecker } from '@nebular/security';\r\n\r\n\r\n  interface Ordenes {\r\n    id: number;\r\n    order: string;\r\n    batch?: number;\r\n    name: string;\r\n    description: string;\r\n    reference: string;\r\n    orderLength: number;\r\n    cutsNumber: number;\r\n    cutsWidth: number;\r\n    cutsLength: number;\r\n    origen:string;\r\n    priority: number;\r\n  }\r\n\r\n  interface State {\r\n    page: number;\r\n    pageSize: number;\r\n    searchTerm: string;\r\n  }\r\n\r\n\r\n  interface SearchResult2 {\r\n    ordenes: Ordenes[];\r\n    total: number;\r\n  }\r\n\r\n  let ORDENES: Ordenes[]= [\r\n  \r\n\r\n  ];\r\n\r\n  let ORDEN: Ordenes  \r\n{\r\n\r\n};\r\n\r\n\r\n\r\nfunction matches2(ordenes: Ordenes, term: string, pipe: PipeTransform) {\r\n  return ordenes.order.toLowerCase().includes(term)\r\n    || ordenes.name.toLowerCase().includes(term.toLowerCase())\r\n    || ordenes.description.toLowerCase().includes(term.toLowerCase())\r\n    || ordenes.reference.toLowerCase().includes(term)\r\n    || ordenes.origen.toLowerCase().includes(term.toLowerCase())\r\n    || pipe.transform(ordenes.orderLength).includes(term);\r\n}\r\n\r\n\r\n\r\n@Component({\r\n    providers:[\r\n    //   JacComponent\r\n    // , WindowComponent\r\n     ApiGetService\r\n     ,DecimalPipe\r\n     ,WindowComponent\r\n     ,WindowCreateComponent\r\n    // , WindowFormComponent\r\n    ],\r\n    selector: 'ngx-ordertable',\r\n    templateUrl: './orderTable.component.html',\r\n    styleUrls: ['./orderTable.component.scss'],\r\n  })\r\n\r\n  export class OrderTableComponent implements OnInit {\r\n\r\n    subscription: Subscription;\r\n    private _state: State = {\r\n      page: 1,\r\n      pageSize: 5,\r\n      searchTerm: ''\r\n\r\n    };\r\n\r\n    public select = false;\r\n    private alive = true;\r\n    mostrar: Boolean;\r\n\r\n    total: number ;\r\n\r\n    private _loading$ = new BehaviorSubject<boolean>(true);\r\n    private _search$ = new Subject<void>();\r\n    // private _countries$ = new BehaviorSubject<Country[]>([]);\r\n    private _Ordenes$ = new BehaviorSubject<Ordenes[]>([]);\r\n\r\n    private _total$ = new BehaviorSubject<number>(0);\r\n\r\n    filter = new FormControl('');\r\n\r\n    constructor(\r\n        public accessChecker: NbAccessChecker,\r\n        public apiGetComp: ApiGetService,\r\n        public pipe : DecimalPipe,\r\n        private orderPopup: WindowComponent, \r\n        private orderCrearPopup: WindowCreateComponent,\r\n        private api: HttpService,\r\n        private messageService: MessageService\r\n      ) {\r\n        \r\n        this.subscription = this.messageService.onMessage()\r\n        .pipe(takeWhile(() => this.alive))\r\n        .subscribe(message => {\r\n          if (message.text==\"orderTable\") {\r\n            //this.messages.push(message);\r\n            this.CargarTabla();\r\n          }\r\n        });\r\n        this._search$.pipe(\r\n          takeWhile(() => this.alive),\r\n          tap(() => this._loading$.next(true)),\r\n          debounceTime(200),\r\n          switchMap(() => this._search()),\r\n          delay(200),\r\n          tap(() => this._loading$.next(false))\r\n        )\r\n        .pipe(takeWhile(() => this.alive))\r\n        .subscribe(result => {\r\n          this._Ordenes$.next(result.ordenes);\r\n          this._total$.next(result.total);\r\n        });\r\n    \r\n        this._search$.next();\r\n        this.CargarTabla();\r\n        this.alive;\r\n        this.accessChecker.isGranted('edit', 'ordertable').subscribe((res: any) => {\r\n          if(res){ \r\n            this.select = false;\r\n            this.mostrar = false;\r\n          }else {\r\n            this.select=true;\r\n            this.mostrar=true;\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n      // get countries$() { return this._countries$.asObservable(); }\r\n      get ordenesMaquina$() { return this._Ordenes$.asObservable(); }\r\n      get total$() { return this._total$.asObservable(); }\r\n      get loading$() { return this._loading$.asObservable(); }\r\n      get page() { return this._state.page; }\r\n      get pageSize() { return this._state.pageSize; }\r\n      get searchTerm() { return this._state.searchTerm; }\r\n\r\n      // get searchTerm() { return this._state.searchTerm; }\r\n      set page(page: number) { this._set({page}); }\r\n      set pageSize(pageSize: number) { this._set({pageSize}); }\r\n      set searchTerm(searchTerm: string) { this._set({searchTerm}); }\r\n\r\n      private _set(patch: Partial<State>) {\r\n        Object.assign(this._state, patch);\r\n        this._search$.next();\r\n      }\r\n      \r\n    ngOnInit(): void {\r\n        // throw new Error('Method not implemented.');\r\n        // console.log(\"entrooo\")\r\n        this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\r\n        .pipe(takeWhile(() => this.alive))\r\n        .subscribe((res:any)=>{\r\n        // console.log(res)\r\n        ORDENES = res;     \r\n        });\r\n        this._search$.next();\r\n\r\n        // this.refreshCountries();\r\n    }  \r\n\r\n    CargarTabla(){\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res:any)=>{\r\n        ORDENES = res;     \r\n        });\r\n        this._search$.next();\r\n    }  \r\n\r\n    _search(): Observable<SearchResult2> {\r\n    \r\n      const {pageSize, page, searchTerm} = this._state;\r\n\r\n\r\n      let ordenes = ORDENES;\r\n  \r\n      // 2. filter\r\n      ordenes = ordenes.filter(ordenes => matches2(ordenes, searchTerm, this.pipe));\r\n      const total = ordenes.length;\r\n  \r\n      // 3. paginate\r\n      ordenes = ordenes.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n      // return of({countries, total});\r\n      return of({ordenes, total});\r\n    }\r\n\r\n    Edit(orden:string, nombre:string, descripcion:string, referencia:string, tamañoOrden:number, origenValor:string, corteNumero: number, corteAncho:number, corteLargo:number, parPrority:number, idForm: number){\r\n      ORDEN = {\r\n        order: orden,\r\n        id: idForm,\r\n        name: nombre,\r\n        description: descripcion,\r\n        reference: referencia,\r\n        orderLength: tamañoOrden,\r\n        cutsNumber: corteNumero,\r\n        cutsWidth: corteAncho,\r\n        cutsLength: corteLargo,\r\n        origen: origenValor,\r\n        priority: parPrority,\r\n      }\r\n      // console.log(ORDEN);\r\n      \r\n      this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        if(res){ \r\n          this.orderPopup.openWindowForm(\"Propiedades de la Orden \" + ORDEN.order , \"\", ORDEN);\r\n          this.select = false;\r\n          this.mostrar = false;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n        }\r\n      });\r\n      \r\n    }\r\n\r\n    Refresh(){\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res:any)=>{\r\n        // console.log(res)\r\n        ORDENES = res;     \r\n        });\r\n        this._search$.next();\r\n    }\r\n    \r\n\r\n    \r\n\r\n    CrearOrden(){\r\n      this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => { \r\n        if(res){ \r\n          this.orderCrearPopup.openWindowForm(\"CREAR ORDEN\",\"\");\r\n          this.select = false;\r\n        }else {\r\n          this.select=true;\r\n        }\r\n      });\r\n    }\r\n  \r\n    ngOnDestroy() {\r\n      this.alive = false;\r\n    }\r\n\r\n}","<div class=\"row\">\r\n  <!-- <div class=\"col-xxxl-9 col-xl-12\"> -->\r\n  <div class=\"col-md-12 col-lg-12 col-xxxl-12\">\r\n\r\n    <nb-card style=\"padding: 20px;\">\r\n\r\n      <form> \r\n        <div class=\"form-group form-inline\">\r\n          Buscar: <input class=\"form-control ml-2\" type=\"text\"  name=\"searchTerm\" placeholder=\"Buscar ordenes\" [(ngModel)]=\"searchTerm\"/>\r\n          <span class=\"ml-3\" *ngIf=\"loading$ | async\">Loading...</span>\r\n          <td><button nbButton shape=\"semi-round\" class=\"boton1\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"CrearOrden()\" >Crear Orden</button></td>\r\n      </div>\r\n      <nb-card-body>\r\n      <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Orden</th>\r\n          <th scope=\"col\">Batch</th>\r\n          <!-- <th scope=\"col\">Nombre</th> -->\r\n          <th scope=\"col\">Referencia</th>\r\n          <th scope=\"col\">Destino</th>\r\n          <th scope=\"col\">Origen</th>\r\n          <th scope=\"col\">Longitud</th>\r\n          <th scope=\"col\"># Cortes</th>\r\n          <th scope=\"col\">Ancho Cortes</th>\r\n          <th scope=\"col\">Largo Cortes</th>\r\n          <th scope=\"col\">Prioridad</th>\r\n          <th scope=\"col\" *ngIf=\"!mostrar\">Editar</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let ordenes of ordenesMaquina$ | async\">\r\n        <!-- <th scope=\"row\">{{ ordenes.id }}</th> -->\r\n        <td><ngb-highlight [result]=\"ordenes.id\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.order\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.batch\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <!-- <td><ngb-highlight [result]=\"ordenes.name\" [term]=\"filter.value\"></ngb-highlight></td> -->\r\n        <td><ngb-highlight [result]=\"ordenes.reference\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.description\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.origen\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.orderLength\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.cutsNumber\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.cutsWidth\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.cutsLength\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.priority\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <!-- <td><button (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength)\" nbButton>EDIT</button></td> -->\r\n        <td><button nbButton shape=\"semi-round\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength, ordenes.origen, ordenes.cutsNumber, ordenes.cutsWidth, ordenes.cutsLength, ordenes.priority, ordenes.id)\">EDITAR</button></td>\r\n    \r\n      </tr>\r\n      </tbody>\r\n      </table>\r\n    </nb-card-body>\r\n        <div class=\"d-flex justify-content-between p-2\">\r\n      \r\n         <ngb-pagination\r\n         [collectionSize]=\"(total$ | async)!\" [(page)]=\"page\" [pageSize]=\"pageSize\">\r\n        </ngb-pagination>\r\n        <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\" [(ngModel)]=\"pageSize\">\r\n          <!-- <option [ngValue]=\"2\">2 items per page</option> -->\r\n          <option [ngValue]=\"5\">5 items per page</option>\r\n          <option [ngValue]=\"10\">10 items per page</option>\r\n          <option [ngValue]=\"15\">15 items per page</option>\r\n    \r\n        </select>\r\n      </div>\r\n      <td><button nbButton shape=\"semi-round\" class=\"boton2\" status=\"primary\" (click)=\"Refresh()\">Refrescar</button></td>\r\n    \r\n      </form>\t  \r\n    \r\n    \r\n    </nb-card>\r\n    \r\n    \r\n    \r\n    <!-- <ngx-temperature></ngx-temperature> -->\r\n\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\r\nimport {ApiGetService} from '../OrderTable/apiGet.services'\r\nimport { Router } from '@angular/router';\r\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\r\n\r\n\r\ninterface Ordenes {\r\n  // id?: number;\r\n  order: string;\r\n  name: string;\r\n  description: string;\r\n  reference: string;\r\n  orderLength: number;\r\n}\r\n\r\nlet ORDENES: Ordenes[]= [\r\n  \r\n\r\n];\r\n\r\n@Component({\r\n  selector: 'ngx-smartOrderTable',\r\n  templateUrl: './smartOrderTable.component.html',\r\n  styleUrls: ['./smartOrderTable.component.scss'],\r\n})\r\nexport class SmartOrderTableComponent {\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n  \r\n    columns: {\r\n      order: {\r\n        title: 'Order',\r\n        type: 'string',\r\n      },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'string',\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n        type: 'string',\r\n      },\r\n      reference: {\r\n        title: 'Reference',\r\n        type: 'string',\r\n      },\r\n      orderLength: {\r\n        title: 'OrderLength',\r\n        type: 'number',\r\n      },  \r\n    },\r\n  };\r\n\r\n \r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData,\r\n    public apiGetComp: ApiGetService, private router: Router\r\n    ,private api: HttpService\r\n    ) {\r\n    // const data = this.service.getData();\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders').subscribe((res:any)=>{\r\n      // console.log(res)\r\n      ORDENES = res;     \r\n      this.source.load(ORDENES);\r\n\r\n      });\r\n    \r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  createUser() {\r\n    this.router.navigate(['/pages/users/add/']);\r\n    // this.router.navigate(['.../WindowOrderPopup/windowsOrderPopup.component']);\r\n\r\n  }\r\n\r\n  // onEdit($event: any) {\r\n  //   this.router.navigate([`/pages/users/edit/${$event.data.id}`]);\r\n  // }\r\n\r\n\r\n  \r\n}\r\n","\r\n<nb-card>\r\n    <nb-card-header>\r\n      Smart Order Table\r\n    </nb-card-header>\r\n  \r\n    <nb-card-body>\r\n      <ng2-smart-table class=\"example-smart-table\"\r\n                       [settings]=\"settings\"\r\n                       [source]=\"source\"\r\n                       (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n                       <!-- (edit)=\"onEdit($event)\" -->\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n      <button type=\"submit\" (click)=\"createUser()\" class=\"btn btn-primary\">Add User</button>\r\n    </nb-card-footer>\r\n  </nb-card>","import { Injectable} from '@angular/core'\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\r\nimport { Interface } from 'readline';\r\n\r\ninterface OrdenActualizar {\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n}\r\n\r\ninterface OrdenCrear {\r\n  orden: string;\r\n  referencia: string;\r\n  batch: number;\r\n  longitudOrden: number;\r\n  cortesNumero: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n  sheetsNumbers: number;\r\n  stackHeight: number;\r\n  sheetThickness: number;\r\n  origen: string;\r\n  destino: string;\r\n  productMissing: number;\r\n  signalStart: boolean;\r\n  sheetScrap: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ApiWindowCreateOrderPopup{\r\n\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n        //   responseType: 'text'\r\n        }),\r\n        'responseType': 'blob' as 'json'\r\n      };\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    GetJson(url:string){\r\n        return this.http.get(url);\r\n    }\r\n\r\n    PostJson(url:string, ordenActualizar: OrdenActualizar){\r\n        return this.http.post(url, ordenActualizar, this.httpOptions);\r\n    }\r\n\r\n    PostJsonCrear(url:string, ordenCrear: OrdenCrear){\r\n      return this.http.post(url, ordenCrear, this.httpOptions);\r\n  }\r\n    // GetJson(url:string){\r\n    //     return this.http.get<Observable<Ordenes[]>>(url);\r\n    // }\r\n\r\n    Suma(){\r\n        console.log(5+5);\r\n    }\r\n\r\n}\r\n","import { Component, ElementRef, Input, PipeTransform, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NbComponentStatus, NbSelectComponent, NbWindowConfig, NbWindowRef, NbWindowService,NbToastrService, NbWindowModule } from '@nebular/theme';\r\nimport { title } from 'process';\r\nimport { threadId } from 'worker_threads';\r\nimport {ApiWindowCreateOrderPopup} from './apiWindowCreateOrderPopup.services'\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, delay, map, startWith, switchMap, tap } from 'rxjs/operators';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {ApiGetService} from '../../../@auth/components/register/apiGet.services';\r\n\r\n// import { ApiGetService } from '../OrderTable/apiGet.services';\r\n// import {HttpClient} from '@angular/common/http'\r\n// import { WindowFormComponent } from '../..window-form/window-form.component';\r\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\r\n\r\ninterface Ordenes {\r\n  id?: number;\r\n  order: string;\r\n  name: string;\r\n  description: string;\r\n  reference: string;\r\n  orderLength: number;\r\n  cutsNumber: number;\r\n  cutsWidth: number;\r\n  cutsLength: number;\r\n  origen:string;\r\n}\r\n\r\ninterface OrdenActualizar {\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n}\r\n\r\ninterface OrdenCrear {\r\n  orden: string;\r\n  referencia: string;\r\n  batch: number;\r\n  longitudOrden: number;\r\n  cortesNumero: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n  sheetsNumbers: number;\r\n  stackHeight: number;\r\n  sheetThickness: number;\r\n  origen: string;\r\n  destino: string;\r\n  productMissing: number;\r\n  signalStart: boolean;\r\n  sheetScrap: string;\r\n}\r\n\r\n\r\ninterface MaquinasDestino {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface MaquinasOrigen {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\n\r\nlet DESTINOS: MaquinasDestino[]= [\r\n \r\n\r\n]; \r\n\r\nlet ORIGENES: MaquinasOrigen[]= [\r\n \r\n\r\n]; \r\n\r\nlet ORDENESACTUALIZAR: OrdenActualizar\r\n{\r\n\r\n};\r\n\r\nlet ORDENCREAR: OrdenCrear \r\n{\r\n\r\n};\r\n\r\nlet DESTINO: MaquinasDestino \r\n{\r\n\r\n};\r\n\r\nlet ORIGEN: MaquinasOrigen \r\n{\r\n\r\n};\r\n\r\nlet ORDEN: Ordenes \r\n{\r\n\r\n};\r\n\r\nlet win:NbWindowRef\r\n\r\n@Component({\r\n  providers:[ApiWindowCreateOrderPopup],\r\n  selector: 'ngx-windowCreateOrderPopup',\r\n  templateUrl: './windowsCreateOrderPopup.component.html',\r\n  styleUrls: ['windowsCreateOrderPopup.component.scss'],\r\n})\r\nexport class WindowCreateComponent {\r\n\r\n\r\n  origenSelect\r\n  dataPost: OrdenActualizar;\r\n  statuses: NbComponentStatus[] = ['basic'];\r\n\r\n  options = [\r\n    { value: 'STAKER#1', label: 'STAKER#1' },\r\n    { value: 'STAKER#2', label: 'STAKER#2' },\r\n    // { value: 'This is value 3', label: 'Option 3' },\r\n    // { value: 'This is value 4', label: 'Option 4' },\r\n  ];\r\n  option;\r\n\r\n  options2 = [\r\n    { value: 'Martin 1228', label: 'Martin 1228' },\r\n    { value: 'JS', label: 'JS' },\r\n    { value: '924', label: '924' },\r\n    { value: 'S&S', label: 'S&S' },\r\n  ];\r\n  option2;\r\n\r\n  destino = DESTINOS;\r\n  maquinaDestino = DESTINO;\r\n  origen = ORIGENES;\r\n  maquinaOrigen = ORIGEN;\r\n\r\npublic selectedDestino ;\r\npublic selectedOrigen ;\r\n\r\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\r\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\r\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\r\n  @ViewChild('ordenValor') ordenValor:ElementRef;\r\n  @ViewChild('referenciaValor') referenciaValor:ElementRef;\r\n  @ViewChild('batchValor') batchValor:ElementRef;\r\n  @ViewChild('longitudValor') longitudValor:ElementRef;\r\n  @ViewChild('cortesValor') cortesValor:ElementRef;\r\n  @ViewChild('anchoValor') anchoValor:ElementRef;\r\n  @ViewChild('largoValor') largoValor:ElementRef;\r\n  @ViewChild('sheetsNumberValor') sheetsNumberValor:ElementRef;\r\n  @ViewChild('stackHeightValor') stackHeightValor:ElementRef;\r\n  @ViewChild('sheetsThicknessValor') sheetsThicknessValor:ElementRef;\r\n  @ViewChild('productsMissingValor') productsMissingValor:ElementRef;\r\n  @ViewChild('sheetScrapValor') sheetScrapValor:ElementRef;\r\n\r\n\r\n\r\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private windowService: NbWindowService,\r\n    private apiGetComp: ApiGetService,\r\n    private api: HttpService,\r\n    private toasterService: NbToastrService,\r\n    ){   \r\n      this.MaquinasDestinoLista();\r\n      this.MaquinasOrigenLista();\r\n    }\r\n\r\n    data = ORDEN;\r\n    dataOption2\r\n    toggleNgModel = true;\r\n\r\n\r\nopenWindowForm(nombreWindow:string, texto:string) {   \r\n    DESTINO =\r\n    {\r\n      value : 'ID-11 Salida Corrugador',\r\n      label : 'ID-11 Salida Corrugador'\r\n    }\r\n\r\n    ORIGEN = \r\n    {\r\n      value : 'Martin 1228',\r\n      label : 'Martin 1228'\r\n    }\r\n    win=this.windowService.open(WindowCreateComponent, { title: nombreWindow});  \r\n  \r\n  }\r\n\r\n  MaquinasDestinoLista(){\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res:any)=>{\r\n      DESTINOS = res; \r\n      });\r\n  }\r\n\r\n  MaquinasOrigenLista(){\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res:any)=>{\r\n      ORIGENES = res; \r\n      // console.log(ORIGENES);\r\n      });\r\n  }\r\n\r\n\r\nopenWindow(contentTemplate, titleValue:string, textValue:string, numberValue: number, nameValue: string, value:number) {\r\n\r\n    this.windowService.open(\r\n      contentTemplate,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          text: textValue,\r\n          number: numberValue,\r\n          name: nameValue,\r\n          x: value,\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  openWindow2(contentTemplate2, titleValue:string, orderValue:string, nameValue: string, descripcionValue: string, referenciaValue:string, orderLengthValue:number) {\r\n    this.windowService.open(\r\n      contentTemplate2,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          orden: orderValue,\r\n          nombre: nameValue,\r\n          descripcion: descripcionValue,\r\n          referencia: referenciaValue,\r\n          orderLength: orderLengthValue,\r\n          \r\n        },\r\n      },\r\n    );\r\n  }\r\n  \r\n\r\n  Refresh(orden:string, nombre:string){\r\n    // console.log(this._Ordenes$);\r\n    // console.log(this.ordenesMaquina$)\r\n    // console.log(this.ordenesFiltro);\r\n    console.log(orden + \", \" + nombre);\r\n  }\r\n\r\n  handleSuccessResponse() {\r\n    this.toasterService.success('Orden ' + this.ordenValor.nativeElement.value + ' creada con exito' );\r\n    this.back();\r\n  }\r\n  handleWrongResponse() {\r\n    this.toasterService.danger('', 'Error almacenando ordenes');\r\n  }\r\n\r\n  back() {\r\n    win.close();\r\n    this.router.navigate(['/pages/tables/OrderTable']);\r\n  }\r\n\r\n  Crear(){\r\n    // console.log(this.ordenValor.nativeElement.value);\r\n    // console.log(this.referenciaValor.nativeElement.value);\r\n    // console.log(this.batchValor.nativeElement.value);\r\n    // console.log(this.longitudValor.nativeElement.value);\r\n    // console.log(this.cortesValor.nativeElement.value);\r\n    // console.log(this.anchoValor.nativeElement.value);\r\n    // console.log(this.largoValor.nativeElement.value);\r\n    // console.log(this.sheetsNumberValor.nativeElement.value);\r\n    // console.log(this.maquinaOrigen.value);\r\n    // console.log(this.maquinaDestino.value);\r\n    // console.log(this.stackHeightValor.nativeElement.value);\r\n    // console.log(this.sheetsThicknessValor.nativeElement.value);\r\n    // console.log(this.productsMissingValor.nativeElement.value);\r\n    // console.log(this.toggleNgModel);\r\n    // console.log(this.sheetScrapValor.nativeElement.value);\r\n    \r\n    ORDENCREAR =\r\n    {\r\n      orden : this.ordenValor.nativeElement.value,\r\n      referencia: this.referenciaValor.nativeElement.value,\r\n      batch:  Number(this.batchValor.nativeElement.value),\r\n      longitudOrden:  Number(this.longitudValor.nativeElement.value),\r\n      cortesNumero:  Number(this.cortesValor.nativeElement.value),\r\n      cortesAncho:  Number(this.anchoValor.nativeElement.value),\r\n      cortesLargo:  Number(this.largoValor.nativeElement.value),\r\n      sheetsNumbers:  Number(this.sheetsNumberValor.nativeElement.value),\r\n      stackHeight:  Number(this.stackHeightValor.nativeElement.value),\r\n      sheetThickness:  Number(this.sheetsThicknessValor.nativeElement.value),\r\n      origen: this.maquinaOrigen.value,\r\n      destino: this.maquinaDestino.value,\r\n      productMissing:  Number(this.productsMissingValor.nativeElement.value),\r\n      signalStart: this.toggleNgModel,\r\n      sheetScrap: this.sheetScrapValor.nativeElement.value\r\n    }\r\n    if (ORDENCREAR.orden ==\"\" && ORDENCREAR.referencia == \"\" && ORDENCREAR.origen && ORDENCREAR.destino){\r\n      this.handleWrongResponse();\r\n    }else{\r\n      this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/CrearOrden', ORDENCREAR).subscribe((res:any)=>{\r\n        this.handleSuccessResponse();\r\n      });\r\n    }\r\n    \r\n\r\n  }\r\n \r\n}"," <!-- <p>Orden: </p>\r\n    <p>Nombre: </p>\r\n    <p>Descripcion: </p>\r\n    <p>Referencia: </p> -->\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n         <!-- <nb-card> -->\r\n            <p>Orden: <input type=\"text\" id=\"ordenValor\" status=\"info\" name=\"ordenValor\" nbInput #ordenValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Referencia: <input type=\"text\" id=\"referenciaValue\" status=\"info\" name=\"referenciaValue\" nbInput #referenciaValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Batch: <input type=\"number\" id=\"batchValor\" status=\"info\" name=\"batchValor\" nbInput #batchValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Longitud: <input type=\"number\" id=\"longitudValue\" status=\"info\" name=\"longitudValue\" nbInput #longitudValor   required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Cortes: <input type=\"number\" id=\"cortesValue\" status=\"info\" name=\"cortesValue\" nbInput #cortesValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Cortes Ancho: <input type=\"number\" id=\"anchoValue\" status=\"info\" name=\"anchoValue\" nbInput #anchoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Cortes Largo: <input type=\"number\" id=\"largoValue\" status=\"info\" name=\"largoValue\" height=\"20\" nbInput #largoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Sheets Number: <input type=\"number\" id=\"sheetsNumberValor\" status=\"info\" name=\"sheetsNumberValor\" height=\"20\" nbInput #sheetsNumberValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n\r\n\r\n            <!-- </nb-card> -->\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n            \r\n          <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\r\n            <p><nb-select [(ngModel)]=\"maquinaOrigen.value\" >\r\n            <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\r\n             {{ option.label }}\r\n             </nb-option>             \r\n           </nb-select></p>\r\n    \r\n           <p><nb-card-header>Dispositivos Destino</nb-card-header></p>  \r\n           <p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \r\n            <nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\r\n            {{ option2.label }}\r\n            </nb-option>             \r\n            </nb-select></p>\r\n            <p>Stack Height: <input type=\"number\" id=\"stackHeightValor\" status=\"info\" name=\"stackHeightValor\" height=\"20\" nbInput #stackHeightValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>SheetThickness: <input type=\"number\" id=\"sheetsThicknessValor\" status=\"info\" name=\"sheetsThicknessValor\" height=\"20\" nbInput #sheetsThicknessValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>ProductsMissing: <input type=\"number\" id=\"productsMissingValor\" status=\"info\" name=\"productsMissingValor\" height=\"20\" nbInput #productsMissingValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <nb-toggle [(ngModel)]=\"toggleNgModel\" status=\"success\">SignalStart</nb-toggle>\r\n            <p>SheetScrap: <input type=\"text\" id=\"sheetScrapValor\" status=\"info\" name=\"sheetScrapValor\" nbInput #sheetScrapValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n\r\n           \r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n     \r\n      <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Crear()\">Crear Orden</button></p>\r\n     </div>\r\n     \r\n     \r\n     </div>","import { Injectable} from '@angular/core';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\n// import { Observable, Subject, of } from 'rxjs';\r\n\r\n\r\n// export class OrdenActualizar {\r\n//     orden: string;\r\n//     referencia: string;\r\n//     origen: string;\r\n//     destino: string;\r\n//     longitud: number;\r\n//     cortes: number;\r\n//     cortesAncho: number;\r\n//     cortesLargo: number;\r\n//   }\r\n\r\ninterface OrdenActualizar {\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n}\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ApiWindowOrderPopup {\r\n\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n        //   responseType: 'text'\r\n        }),\r\n        'responseType': 'blob' as 'json',\r\n      };\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    GetJson(url: string) {\r\n        return this.http.get(url);\r\n    }\r\n\r\n    PostJson(url: string, ordenActualizar: OrdenActualizar) {\r\n        return this.http.post(url, ordenActualizar, this.httpOptions);\r\n    }\r\n    // GetJson(url:string){\r\n    //     return this.http.get<Observable<Ordenes[]>>(url);\r\n    // }\r\n\r\n    Suma() {\r\n        console.log(5 + 5);\r\n    }\r\n\r\n}\r\n","import { Component, ElementRef, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NbComponentStatus, NbWindowService,NbWindowRef,NbToastrService } from '@nebular/theme';\r\nimport {ApiWindowOrderPopup} from './apiWindowiOrderPopup.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\nimport { MessageService } from '../../dashboard/services/MessageService';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n// import { ApiGetService } from '../OrderTable/apiGet.services';\r\n// import {HttpClient} from '@angular/common/http'\r\n// import { WindowFormComponent } from '../..window-form/window-form.component';\r\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\r\n\r\n\r\ninterface Ordenes {\r\n  id?: number;\r\n  order: string;\r\n  name: string;\r\n  description: string;\r\n  reference: string;\r\n  orderLength: number;\r\n  cutsNumber: number;\r\n  cutsWidth: number;\r\n  cutsLength: number;\r\n  origen: string;\r\n  priority: number;\r\n}\r\n\r\ninterface OrdenActualizar {\r\n  id:number;\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n  priority:number;\r\n  PreviousPriority:number;\r\n}\r\n\r\ninterface MaquinasDestino {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface MaquinasOrigen {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\n\r\nlet DESTINOS: MaquinasDestino[] = [\r\n\r\n\r\n];\r\n\r\nlet ORIGENES: MaquinasOrigen[] = [\r\n\r\n\r\n];\r\n\r\nlet ORDENESACTUALIZAR: OrdenActualizar;\r\n{\r\n\r\n}\r\n\r\nlet DESTINO: MaquinasDestino;\r\n{\r\n\r\n}\r\n\r\nlet ORIGEN: MaquinasOrigen;\r\n{\r\n\r\n}\r\n\r\nlet ORDEN: Ordenes;\r\n{\r\n\r\n}\r\n\r\nlet win:NbWindowRef;\r\n@Component({\r\n  providers: [ApiWindowOrderPopup],\r\n  selector: 'ngx-windowOrderPopup',\r\n  templateUrl: './windowsOrderPopup.component.html',\r\n  styleUrls: ['windowsOrderPopup.component.scss'],\r\n})\r\nexport class WindowComponent {\r\n\r\n\r\n  dataPost: OrdenActualizar;\r\n  statuses: NbComponentStatus[] = ['basic'];\r\n\r\n  options = [\r\n    { value: 'STAKER#1', label: 'STAKER#1' },\r\n    { value: 'STAKER#2', label: 'STAKER#2' },\r\n    // { value: 'This is value 3', label: 'Option 3' },\r\n    // { value: 'This is value 4', label: 'Option 4' },\r\n  ];\r\n  option;\r\n\r\n  options2 = [\r\n    { value: 'Martin 1228', label: 'Martin 1228' },\r\n    { value: 'JS', label: 'JS' },\r\n    { value: '924', label: '924' },\r\n    { value: 'S&S', label: 'S&S' },\r\n  ];\r\n  option2;\r\n\r\n  destino = DESTINOS;\r\n  maquinaDestino = DESTINO;\r\n  origen = ORIGENES;\r\n  maquinaOrigen = ORIGEN;\r\n\r\npublic selectedDestino ;\r\npublic selectedOrigen ;\r\n\r\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\r\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\r\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\r\n  @ViewChild('ordenValor') ordenValor: ElementRef;\r\n  @ViewChild('longitudValor') longitudValor: ElementRef;\r\n  @ViewChild('cortesValor') cortesValor: ElementRef;\r\n  @ViewChild('anchoValor') anchoValor: ElementRef;\r\n  @ViewChild('largoValor') largoValor: ElementRef;\r\n  @ViewChild('priorityValue') priorityValue: ElementRef;\r\n  @ViewChild('referenciaValor') referenciaValor: ElementRef;\r\n\r\n\r\n\r\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private windowService: NbWindowService,\r\n    private apiGetComp: ApiWindowOrderPopup,\r\n    private api: HttpService,\r\n    private messageService: MessageService,\r\n    private toasterService: NbToastrService,\r\n    ) {\r\n      this.MaquinasDestinoLista();\r\n      this.MaquinasOrigenLista();\r\n    }\r\n\r\n    data = ORDEN;\r\n    dataOption2;\r\n\r\n\r\n  openWindowForm(nombreWindow: string, texto: string, orden: Ordenes) {\r\n    // this.MaquinasDestinoLista();\r\n    ORDEN = orden;\r\n    this.data = orden;\r\n    DESTINO = {\r\n      value : orden.description,\r\n      label : orden.description,\r\n    };\r\n\r\n    ORIGEN = {\r\n      value : orden.origen,\r\n      label : orden.origen,\r\n    };\r\n    win=this.windowService.open(WindowComponent, { title: nombreWindow});\r\n\r\n  }\r\n\r\n  MaquinasDestinoLista() {\r\n\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res: any) => {\r\n      DESTINOS = res;\r\n      });\r\n  }\r\n\r\n  MaquinasOrigenLista() {\r\n\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res: any) => {\r\n      ORIGENES = res;\r\n      // console.log(ORIGENES);\r\n      });\r\n  }\r\n\r\n\r\nopenWindow(contentTemplate, titleValue: string, textValue: string, numberValue: number, nameValue: string, value: number) {\r\n\r\n    this.windowService.open(\r\n      contentTemplate,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          text: textValue,\r\n          number: numberValue,\r\n          name: nameValue,\r\n          x: value,\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  openWindow2(contentTemplate2, titleValue: string, orderValue: string, nameValue: string, descripcionValue: string, referenciaValue: string, orderLengthValue: number) {\r\n    this.windowService.open(\r\n      contentTemplate2,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          orden: orderValue,\r\n          nombre: nameValue,\r\n          descripcion: descripcionValue,\r\n          referencia: referenciaValue,\r\n          orderLength: orderLengthValue,\r\n\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n\r\n  Refresh(orden: string, nombre: string) {\r\n    // console.log(this._Ordenes$);\r\n    // console.log(this.ordenesMaquina$)\r\n    // console.log(this.ordenesFiltro);\r\n    console.log(orden + ', ' + nombre);\r\n  }\r\n\r\n  Edit() {\r\n\r\n    ORDENESACTUALIZAR = {\r\n      id:this.data.id,\r\n      orden: this.data.order,\r\n      referencia: this.referenciaValor.nativeElement.value,\r\n      origen: this.maquinaOrigen.value,\r\n      destino: this.maquinaDestino.value,\r\n      longitud: Number(this.longitudValor.nativeElement.value),\r\n      cortes: Number(this.cortesValor.nativeElement.value),\r\n      cortesAncho: Number(this.anchoValor.nativeElement.value),\r\n      cortesLargo: Number(this.largoValor.nativeElement.value),\r\n      priority: Number(this.priorityValue.nativeElement.value),\r\n      PreviousPriority: this.data.priority,\r\n    };\r\n\r\n    this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/ActualizarOrden', ORDENESACTUALIZAR).subscribe((res: any) => {\r\n      this.messageService.sendMessage('orderTable');\r\n      this.handleSuccessResponse();\r\n    });\r\n  }\r\n\r\n  handleSuccessResponse() {\r\n    this.toasterService.success('Orden ' + ORDEN.order + ' actualizada con exito' );\r\n    this.back();\r\n  }\r\n\r\n  back() {\r\n    win.close();\r\n    this.router.navigate(['/pages/tables/OrderTable']);\r\n  }\r\n\r\n\r\n  ChangeLocation($event) {\r\n    const selectedValue = this.options2.find(location => location.value === $event.value );\r\n    console.log(selectedValue);\r\n}\r\n\r\n}\r\n","<div class=\"row\">\r\n\r\n  <div class=\"col-md-6\">\r\n    <!-- <nb-card> -->\r\n\r\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\"></p>  -->\r\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" nbInput #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\" disabled=\"true\"></p> -->\r\n    <!-- <p>Orden: {{ data.order }}</p> -->\r\n    <!-- <p>Nombre: {{ data.name }}</p> -->\r\n    <!-- <p>Descripcion: {{ data.description }}</p> -->\r\n    <!-- <p>Referencia: </p>\r\n    <p>{{ data.reference }}</p> -->\r\n    <p>Referencia: <input type=\"text\" id=\"referenciaValue\" name=\"referenciaValue\" nbInput #referenciaValor  value=\"{{ data.reference }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Longitud:   <input type=\"number\" id=\"longitudValue\" name=\"longitudValue\" nbInput #longitudValor  value=\"{{ data.orderLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Cortes:     <input type=\"number\" id=\"cortesValue\" name=\"cortesValue\" nbInput #cortesValor  value=\"{{ data.cutsNumber }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Ancho:      <input type=\"number\" id=\"anchoValue\" name=\"anchoValue\" nbInput #anchoValor  value=\"{{ data.cutsWidth }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Largo:      <input type=\"number\" id=\"largoValue\" name=\"largoValue\" nbInput #largoValor  value=\"{{ data.cutsLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Prioridad:  <input type=\"number\" id=\"priorityValue\" name=\"priorityValue\" nbInput #priorityValue  value=\"{{ data.priority }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n  <!-- </nb-card> -->\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n\r\n\r\n    <!-- <nb-card> -->\r\n      <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\r\n\r\n  <!-- <nb-card-body> -->\r\n    <p><nb-select [(ngModel)]=\"maquinaOrigen.value\"> \r\n  <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\r\n    {{ option.label }}\r\n  </nb-option>             \r\n</nb-select></p>\r\n\r\n\r\n<!-- </nb-card-body> -->\r\n\r\n<p><nb-card-header>Dispositivos Destino</nb-card-header></p>\r\n\r\n<!-- <nb-card-body> -->\r\n<p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \r\n<nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\r\n{{ option2.label }}\r\n</nb-option>             \r\n</nb-select></p>\r\n<!-- </nb-card> -->\r\n\r\n    <!-- <nb-card>\r\n      <nb-card-header>Select</nb-card-header>\r\n      <nb-card-body>\r\n        <nb-select selected=\"1\">\r\n          <nb-option value=\"1\">Option 1</nb-option>\r\n          <nb-option value=\"2\">Option 2</nb-option>\r\n        </nb-select>\r\n      </nb-card-body>\r\n    </nb-card> -->\r\n    \r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n\r\n  <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Edit()\">EDIT</button></p>\r\n</div>\r\n\r\n\r\n</div>\r\n  \r\n\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\r\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { NbAccessChecker } from '@nebular/security';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GridComponent, PageSettingsModel, FilterSettingsModel, CommandClickEventArgs, \r\n  EditService, CommandColumnService, CommandModel, ToolbarService, PageService,\r\n   ToolbarItems } from '@syncfusion/ej2-angular-grids';\r\nimport { UserStore } from '../../../@core/stores/user.store';\r\nimport { Dialog, Tooltip } from '@syncfusion/ej2-popups';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { ClickEventArgs } from '@syncfusion/ej2-navigations';\r\nimport Swal from 'sweetalert2'; \r\n\r\ninterface Alarmas {\r\n  Id: number;\r\n  Message: string;\r\n  Level: string;\r\n  Exception: string;\r\n  UserId: string;\r\n  TimeStamp: string;\r\n  ETD: string;\r\n  UserIdAcknow: string;\r\n  IdDevice: string;\r\n}\r\n\r\nlet ALARMAS: Alarmas[] = [\r\n\r\n\r\n];\r\n\r\n@Component({\r\n  selector: 'ngx-alarms',\r\n  templateUrl: './alarms.component.html',\r\n  providers: [ToolbarService, EditService, PageService, CommandColumnService],\r\n  styleUrls: ['./alarms.component.scss',]\r\n})\r\nexport class AlarmsComponent implements OnDestroy {\r\n\r\n  public select = false;\r\n  private alive = true;\r\n  mostrar: Boolean;\r\n  public pageSettings: PageSettingsModel;\r\n  \r\n\r\n  public editSettings: Object;\r\n    // public toolbar: string[];\r\n    public toolbar: ToolbarItems[] | object;\r\n \r\n  public historyAlarmData: Alarmas[];\r\n  public editparams: Object;\r\n  public commands: CommandModel[];\r\n  public filterOptions: FilterSettingsModel;\r\n\r\n  alarmas = ALARMAS;\r\n\r\n  settings = {\r\n    // actions: false,\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      \r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-checkmark-circle\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    \r\n    columns: {\r\n      Id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n        filter: false,\r\n        hide: true,\r\n\r\n      },\r\n      Message: {\r\n        title: 'Mensaje',\r\n        type: 'string',\r\n        filter: true,\r\n      },\r\n      Level: {\r\n        title: 'Nivel',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      // exception: {\r\n      //   title: 'excepción',\r\n      //   type: 'string',\r\n      //   filter: false,\r\n      // },\r\n      UserId: {\r\n        title: 'Usuario',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      TimeStamp: {\r\n        title: 'Fecha',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n  public Alarm: Alarmas[]=[];\r\n\r\n  constructor(\r\n    public accessChecker: NbAccessChecker,\r\n    private toastrService: NbToastrService,\r\n    public apiGetComp: ApiGetService,\r\n    private api: HttpService,\r\n    private http: HttpClient,\r\n    private userStore: UserStore,\r\n  ) {\r\n    \r\n    this.alive;\r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      if(res){ \r\n        this.select = false;\r\n        this.mostrar = false;\r\n      }else {\r\n        this.select=true;\r\n        this.mostrar=true;\r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editSettings = {\r\n      allowEditing: true,\r\n      allowAdding: true,\r\n      allowDeleting: true,\r\n      mode: 'Normal',\r\n      allowEditOnDblClick: false\r\n    };\r\n    \r\n    this.pageSettings = { pageSizes: true, pageSize: 10 };\r\n    this.filterOptions = {\r\n      type: 'Menu',\r\n   };\r\n  \r\n  this.Chargealarms();\r\n  this.ChargeHistoryData(); \r\n\r\n   this.toolbar = [\r\n      //  {text: 'Delete', prefixIcon: 'fas fa-check'},\r\n     { text: 'Reconocer alarmas', tooltipText: 'Click', prefixIcon: 'fas fa-check-double', id: 'Click' }];\r\n\r\n     this.commands = [\r\n      // { type: 'Edit', buttonOption: { cssClass: 'e-flat', iconCss: 'e-edit e-icons' } },\r\n      { type: 'Delete', buttonOption: { cssClass: 'e-flat', iconCss: 'fas fa-check' } },\r\n      { type: 'Save', buttonOption: { cssClass: 'e-flat', iconCss: 'e-update e-icons' } },\r\n      { type: 'Cancel', buttonOption: { cssClass: 'e-flat', iconCss: 'e-cancel-icon e-icons' } }];\r\n  \r\n  }\r\n \r\n\r\n//   commandClick(args: CommandClickEventArgs): void {\r\n//     debugger\r\n//     alert(JSON.stringify(args.rowData));\r\n    \r\n// }\r\n\r\nclickHandler(args: ClickEventArgs): void {\r\n  if (args.item.id === 'Click') {\r\n    // console.log('click: ', args);\r\n    // debugger\r\n    this.reconocer();\r\n      // alert('Custom Toolbar Click...');\r\n  }\r\n}\r\n\r\n// tooltip(args: QueryCellInfoEventArgs) {\r\n//   const tooltip: Tooltip = new Tooltip({\r\n//       content: args.data[args.column.field].toString()\r\n      \r\n//   }, args.cell as HTMLTableCellElement);\r\n//   // console.log('tool:', tooltip);\r\n// }\r\n\r\nactionBegin(args) {\r\n  if (( args.requestType === 'delete')) {\r\n    // const Id = 'Id';\r\n    // console.log('Type Delete: ', args.data[0].Id);\r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      if(res){ \r\n        const currentUserId = this.userStore.getUser().id;\r\n        var respons = \r\n          {\r\n          IdAlarm: args.data[0].Id,\r\n          UserIdAcknow: currentUserId\r\n          };\r\n        // let alarm = {IdAlarm: event.data.Id};\r\n    this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\r\n    \r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n       console.log(\"alarmId\", res);\r\n       if (res) {\r\n        this.toastrService.success('', '¡Alarma solucionada!'); \r\n        this.Chargealarms();\r\n        this.source.refresh();\r\n      } else {\r\n        this.toastrService.danger('', 'Algo salio mal.');\r\n      }\r\n    });\r\n        // args.rowData.Id.resolve();\r\n        this.select = false;\r\n        this.mostrar = false;\r\n        args.cancel = true;\r\n      }else {\r\n        this.select=true;\r\n        this.mostrar=true;\r\n        args.cancel = true;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nactionComplete(args) {\r\n  if (( args.requestType === 'delete')) {\r\n      // const dialog = args.dialog;\r\n      debugger\r\n      const Id = 'Id';\r\n      // change the header of the dialog\r\n      // console.log('Type: ', args.data[0].Id);\r\n      // console.log('id: ', args.rowData.Id);\r\n      // debugger\r\n    \r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        if(res){ \r\n          const currentUserId = this.userStore.getUser().id;\r\n          var respons = \r\n            {\r\n            IdAlarm: args.data[0].Id,\r\n            UserIdAcknow: currentUserId\r\n            };\r\n          // let alarm = {IdAlarm: event.data.Id};\r\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\r\n      \r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        //  console.log(\"alarmId\", res);\r\n         if (res) {\r\n          this.toastrService.success('', '¡Alarma solucionada!'); \r\n          this.source.refresh();\r\n        } else {\r\n          this.toastrService.danger('', 'Algo salio mal.');\r\n        }\r\n      });\r\n      // args.rowData.Id.resolve();\r\n      //     this.select = false;\r\n      //     this.mostrar = false;\r\n      args.cancel = true;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n          args.cancel = true;\r\n        }\r\n      });\r\n      // dialog.header = args.requestType === 'beginEdit' ? 'Record of ' + args.rowData[CustomerID] : 'New Customer';\r\n  }\r\n}\r\n\r\nDelete(event): void {\r\n    debugger\r\n    \r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        if(res){ \r\n          const currentUserId = this.userStore.getUser().id;\r\n          var respons = \r\n            {\r\n            IdAlarm: event.data.Id,\r\n            UserIdAcknow: currentUserId\r\n            };\r\n          let alarm = {IdAlarm: event.data.Id};\r\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\r\n      \r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        //  console.log(\"alarmId\", res);\r\n         if (res) {\r\n          this.toastrService.success('', '¡Alarma solucionada!'); \r\n          this.source.refresh();\r\n        } else {\r\n          this.toastrService.danger('', 'Algo salio mal.');\r\n        }\r\n      });\r\n      event.confirm.resolve();\r\n          this.select = false;\r\n          this.mostrar = false;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n        }\r\n      });\r\n    //  console.log(\"Evento: \", event);\r\n      \r\n    \r\n  }\r\n\r\n  reconocer() {\r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      if(res){ \r\n      Swal.fire({\r\n      title: 'Desea reconocer alarmas?',\r\n      text: `¡Reconocerá todas las alarmas!`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: '¡Sí, Reconocer!'\r\n    }).then(result => {\r\n      // debugger \r\n      if (result.value) {\r\n      const currentUserId = this.userStore.getUser().id;\r\n          var respons = \r\n            {\r\n              UserIdAcknow: currentUserId\r\n            };\r\n            \r\n       this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmAll', respons)\r\n       .pipe(takeWhile(() => this.alive))\r\n       .subscribe((res: any) => {\r\n        this.source.refresh();\r\n        this.Chargealarms();\r\n       });\r\n    \r\n          Swal.fire('¡Se Reconocieron Exitosamente', 'success');\r\n          this.source.refresh();\r\n      }\r\n    });\r\n          this.source.refresh();   \r\n          this.select = false;\r\n          this.mostrar = false;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  Chargealarms() {\r\n    // debugger\r\n    this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      this.Alarm = res;\r\n      // console.log('test alarm: ', this.Alarm)\r\n      this.source.load(res);\r\n      this.source.refresh();\r\n    });\r\n    const contador = interval(30000)\r\n    contador.subscribe((n) => {\r\n      this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        this.Alarm = res;\r\n        this.source.load(res);\r\n        this.source.refresh();\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  ChargeHistoryData() {\r\n    this.http.get(this.api.apiUrlNode1 + '/historyalarm')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      // tslint:disable-next-line: no-console\r\n      // console.log('HistoryAlarmData: ', res);\r\n      this.historyAlarmData = res;\r\n    });\r\n    const contador = interval(40000)\r\n    contador.subscribe((n) => {\r\n      this.http.get(this.api.apiUrlNode1 + '/historyalarm')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        this.historyAlarmData = res;\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<!-- <h2>Alarmas</h2> -->\r\n<nb-card>\r\n    <nb-tabset>\r\n        <nb-tab tabTitle=\"Alarmas\">\r\n            <nb-card>\r\n                <!-- <nb-card-header>\r\n                    Alarmas\r\n                </nb-card-header>\r\n\r\n                <nb-card-body> -->\r\n                <!-- <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n                    </ng2-smart-table> \r\n                (toolbarClick)='clickHandler($event)' [toolbar]='toolbar' (actionComplete)=\"actionComplete($event)\" allowTextWrap='true'-->\r\n \r\n                <ejs-grid [dataSource]='Alarm' [editSettings]='editSettings' (toolbarClick)='clickHandler($event)' [toolbar]='toolbar'  (actionBegin)=\"actionBegin($event)\"  [allowPaging]=\"true\"\r\n                [pageSettings]=\"pageSettings\" allowSorting='true' [filterSettings]=\"filterOptions\" allowTextWrap=\"true\"\r\n                [allowFiltering]=\"true\" height='350'>\r\n                    <e-columns>\r\n                        <e-column field='Message' headerText='Mensaje' width=180 isPrimaryKey='true'></e-column>\r\n                        <e-column field='Level' headerText='Nivel' width=85></e-column>\r\n                        <e-column field='UserId' headerText='Usuario' width=100></e-column>\r\n                        <e-column field='TimeStamp' headerText='Fecha' width=90 type=\"date\" format=\"dd/MM/yyyy hh:mm:ss a\"></e-column>\r\n                        <e-column headerText='Administrar Alarmas' width='100' textAlign='center' [commands]='commands'></e-column>\r\n                    </e-columns>\r\n                </ejs-grid>\r\n\r\n                <!-- </nb-card-body> -->\r\n                <!-- <nb-card-footer>\r\n                    <button type=\"submit\" nbButton status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"reconocer()\" class=\"btn btn-primary\">Reconocer alarmas</button>\r\n                    (queryCellInfo)='tooltip($event)'\r\n                </nb-card-footer> -->\r\n            </nb-card>\r\n        </nb-tab>\r\n        <nb-tab tabTitle=\"Historico Alarmas\">\r\n            <nb-card>\r\n                <!-- <nb-card-header>\r\n                    Historico Alarmas\r\n                </nb-card-header> -->\r\n                <!-- <nb-card-body> -->\r\n                <ejs-grid [dataSource]='historyAlarmData' [allowPaging]=\"true\" allowTextWrap='true'  \r\n                [pageSettings]='pageSettings' [filterSettings]='filterOptions' [allowFiltering]=\"true\" height='400'>\r\n                    <e-columns>\r\n                        <e-column field='Message' headerText='Mensaje' width=180></e-column>\r\n                        <e-column field='Level' headerText='Nivel' width=75></e-column>\r\n                        <e-column field='UserId' headerText='Usuario' width=75></e-column>\r\n                        <e-column field='TimeStamp' headerText='Fecha' width=85></e-column>\r\n                        <e-column field='EDT' headerText='Fecha fin' width=100></e-column>\r\n                        <e-column field='UserIdAcknow' headerText='Usuario reco' width=85></e-column>\r\n                    </e-columns>\r\n                </ejs-grid>\r\n                <!-- </nb-card-body> -->\r\n            </nb-card>\r\n        </nb-tab>\r\n    </nb-tabset>\r\n</nb-card>","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\r\n\r\n@Component({\r\n  selector: 'ngx-smart-table',\r\n  templateUrl: './smart-table.component.html',\r\n  styleUrls: ['./smart-table.component.scss'],\r\n})\r\nexport class SmartTableComponent {\r\n\r\n  settings = {\r\n    actions: {\r\n      add: true,\r\n      edit: true,\r\n      delete: true,\r\n    },\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmCreate: true\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmSave: true\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      firstName: {\r\n        title: 'First Name',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n        type: 'string',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      login: {\r\n        title: 'Login',\r\n        type: 'string',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      email: {\r\n        title: 'E-mail',\r\n        type: 'string',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      age: {\r\n        title: 'Age',\r\n        type: 'number',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData) {\r\n    const data = this.service.getData();\r\n    this.source.load(data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCreateConfirm(event) {\r\n    // debugger\r\n    console.log('Create Event In Console');\r\n    console.log('insert', event);\r\n    console.log('id', event.newData.id, '&', 'alias', event.newData.firstName);\r\n    event.confirm.resolve();\r\n  }\r\n\r\n  onSaveConfirm(event) {\r\n    // debugger\r\n    console.log('Edit Event In Console');\r\n    console.log('update', event);\r\n    console.log('id', event.newData.id, '&', 'alias', event.newData.firstName);\r\n    event.confirm.resolve();\r\n  }\r\n\r\n}\r\n","<!--\r\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\r\n  ~ Licensed under the Single Application / Multi Application License.\r\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n  -->\r\n\r\n<nb-card>\r\n  <nb-card-header>\r\n    Smart Table\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table class=\"example-smart-table\"\r\n                     [settings]=\"settings\"\r\n                     [source]=\"source\"\r\n                     (deleteConfirm)=\"onDeleteConfirm($event)\" \r\n                     (editConfirm)=\"onSaveConfirm($event)\"\r\n\t\t\t\t\t\t(createConfirm)=\"onCreateConfirm($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\nimport { SmartTableComponent } from './smart-table/smart-table.component';\r\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\r\nimport { OrderTableComponent } from './OrderTable/orderTable.component';\r\nimport { AlarmsComponent } from './alarms/alarms.component';\r\nimport { SmartOrderTableComponent } from './SmartOrderTable/smartOrderTable.component';\r\nimport { AdminGuard } from '../../@auth/admin.guard';\r\nimport { UserGuard } from '../../@auth/user.guard';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [\r\n    {\r\n      path: 'smart-table',\r\n      component: SmartTableComponent,\r\n    },\r\n    {\r\n      path: 'tree-grid',\r\n      component: TreeGridComponent,\r\n    },\r\n    {\r\n      path: 'OrderTable',\r\n      component: OrderTableComponent,\r\n    },\r\n    {\r\n      path: 'alarms',\r\n      component: AlarmsComponent,\r\n    },\r\n    {\r\n      path: 'SmartOrderTable',\r\n      component: SmartOrderTableComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  SmartTableComponent,\r\n  TreeGridComponent,\r\n  OrderTableComponent,\r\n  SmartOrderTableComponent,\r\n];\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n}\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { NbCardModule, NbTabsetModule, NbIconModule, NbInputModule, NbSelectModule, NbTreeGridModule, NbRadioModule, NbCheckboxModule, \r\n  NbActionsModule, NbUserModule, NbDatepickerModule, NbButtonModule, NbToggleModule} from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\r\nimport { FsIconComponent } from './tree-grid/tree-grid.component';\r\nimport {MeasureConverterPipe} from '../../@theme/pipes';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http'\r\nimport {ApiGetService} from './OrderTable/apiGet.services'\r\nimport {ApiWindowOrderPopup} from './WindowOrderPopup/apiWindowiOrderPopup.services'\r\nimport {WindowComponent} from './WindowOrderPopup/windowsOrderPopup.component'\r\nimport {ApiWindowCreateOrderPopup} from './WindowCreateOrderPopup/apiWindowCreateOrderPopup.services'\r\nimport {WindowCreateComponent} from './WindowCreateOrderPopup/windowsCreateOrderPopup.component';\r\nimport { AlarmsComponent } from './alarms/alarms.component'\r\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\r\nimport { PageService, SortService, FilterService, GroupService } from '@syncfusion/ej2-angular-grids';\r\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    NbTreeGridModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    TablesRoutingModule,\r\n    Ng2SmartTableModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NbSelectModule,\r\n    NbInputModule,\r\n    NbCardModule,\r\n    NbActionsModule,\r\n    NbUserModule,\r\n    NbCheckboxModule,\r\n    NbRadioModule,\r\n    NbDatepickerModule,\r\n    NbSelectModule,\r\n    NbIconModule,\r\n    NbButtonModule,\r\n    NbToggleModule,\r\n    NbTabsetModule,\r\n    GridModule,\r\n    DropDownListAllModule,\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n    FsIconComponent,\r\n    WindowComponent,\r\n    WindowCreateComponent,\r\n    AlarmsComponent,\r\n  ],\r\n  providers: [\r\n    MeasureConverterPipe,\r\n    ApiGetService,\r\n    ApiWindowOrderPopup,\r\n    ApiWindowCreateOrderPopup,\r\n    PageService,\r\n    SortService,\r\n    FilterService,\r\n    GroupService,\r\n  ],\r\n})\r\nexport class TablesModule { }\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\r\nimport {MeasureConverterPipe} from '../../../@theme/pipes';\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n  children?: TreeNode<T>[];\r\n  expanded?: boolean;\r\n}\r\n\r\ninterface FSEntry {\r\n  name: string;\r\n  size: number;\r\n  kind: string;\r\n  items?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-tree-grid',\r\n  templateUrl: './tree-grid.component.html',\r\n  styleUrls: ['./tree-grid.component.scss'],\r\n})\r\nexport class TreeGridComponent {\r\n  customColumn = 'name';\r\n  defaultColumns = [ 'size', 'kind', 'items' ];\r\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\r\n\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n\r\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>,\r\n              public measureConverterPipe: MeasureConverterPipe) {\r\n    this.dataSource = this.dataSourceBuilder.create(this.data);\r\n  }\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n  private data: TreeNode<FSEntry>[] = [\r\n    {\r\n      data: { name: 'Projects', size: 1800000, items: 4, kind: 'dir' },\r\n      children: [\r\n        { data: { name: 'project-1.doc', kind: 'doc', size: 240000 } },\r\n        { data: { name: 'project-2.doc', kind: 'doc', size: 290000 } },\r\n        { data: { name: 'project-3', kind: 'txt', size: 466000 } },\r\n        { data: { name: 'project-4.docx', kind: 'docx', size: 900000 } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Reports', kind: 'dir', size: 400000, items: 2 },\r\n      children: [\r\n        { data: { name: 'Report 1', kind: 'doc', size: 100000 } },\r\n        { data: { name: 'Report 2', kind: 'doc', size: 300000 } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Other', kind: 'dir', size: 109000000, items: 2 },\r\n      children: [\r\n        { data: { name: 'backup.bkp', kind: 'bkp', size: 107000000 } },\r\n        { data: { name: 'secret-note.txt', kind: 'txt', size: 2000000 } },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  getCellValue(columnValue: string | number, columnName: string): string | number {\r\n    if (columnName === 'size') {\r\n      return this.measureConverterPipe.transform(columnValue);\r\n    }\r\n    return columnValue || '-';\r\n  }\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-fs-icon',\r\n  template: `\r\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\r\n    </nb-tree-grid-row-toggle>\r\n    <ng-template #fileIcon>\r\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class FsIconComponent {\r\n  @Input() kind: string;\r\n  @Input() expanded: boolean;\r\n\r\n  isDir(): boolean {\r\n    return this.kind === 'dir';\r\n  }\r\n}\r\n","<!--\r\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\r\n  ~ Licensed under the Single Application / Multi Application License.\r\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n  -->\r\n\r\n<nb-card>\r\n  <nb-card-body>\r\n\r\n    <label class=\"search-label\" for=\"search\">Search:</label>\r\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\r\n\r\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n\r\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\r\n          {{customColumn}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\r\n          {{row.data[customColumn]}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\r\n                    [nbTreeGridColumnDef]=\"column\"\r\n                    [showOn]=\"getShowOn(index)\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\r\n          {{column}}\r\n        </th>\r\n\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{getCellValue(row.data[column], column)}}</td>\r\n      </ng-container>\r\n\r\n    </table>\r\n\r\n  </nb-card-body>\r\n</nb-card>\r\n"],"sourceRoot":"webpack:///"}