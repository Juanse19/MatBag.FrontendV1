{"version":3,"sources":["webpack:///src/app/pages/analytics/analytics-routing.module.ts","webpack:///src/app/pages/analytics/analytics.component.ts","webpack:///src/app/pages/analytics/analytics.module.ts","webpack:///src/app/pages/analytics/ocupacion/ocupacion.component.ts","webpack:///src/app/pages/analytics/ocupacion/ocupacion.component.html","webpack:///src/app/pages/analytics/ordenes-no-wips/ordenes-no-wips.component.ts","webpack:///src/app/pages/analytics/ordenes-no-wips/ordenes-no-wips.component.html","webpack:///src/app/pages/analytics/ordenes/ordenes.component.ts","webpack:///src/app/pages/analytics/ordenes/ordenes.component.html","webpack:///src/app/pages/analytics/predictivo/predictivo.component.ts","webpack:///src/app/pages/analytics/predictivo/predictivo.component.html","webpack:///src/app/pages/analytics/reports/reports.component.ts","webpack:///src/app/pages/analytics/reports/reports.component.html"],"names":["routes","path","component","children","AnalyticsRoutingModule","forChild","imports","exports","AnalyticsComponent","selector","template","AnalyticsModule","declarations","OcupacionComponent","apiGetComp","api","settings1","actions","columns","id","title","type","filter","hide","name","totalOcupated","currentOcupated","available","percOcupation","source1","ChargeReportOcupation","GetJson","apiUrlMatbox","subscribe","res","ReportOcupation","load","contador","n","templateUrl","styleUrls","OrdenesNoWipsComponent","settings2","orderId","batch","order","cutsLength","cutsWidth","anchoWip","target","wip","sizeDifference","source2","ChargeOrdersnotwip","ReportOrdersnotwip","OrdenesComponent","settings","cutsNumberTotal","currenCouts","ordenesMachineCount","diference","source","ChargeReportOrdens","console","log","ReportOrdens","PredictivoComponent","settings3","maquina","metrosPor10MinCorrugador","metrosPor10MinMaquina","capacidadWip","ocupacionActual","anchoTotalAruumeOrden","ocupacionPredictiva","tiempoDetencionCorrugador","duracionDetencion","source3","ChargePredictive","GetPredictive","ReportsComponent"],"mappings":"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","file":"analytics-analytics-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnalyticsComponent } from './analytics.component';\nimport { OcupacionComponent } from './ocupacion/ocupacion.component';\nimport { OrdenesComponent } from './ordenes/ordenes.component';\nimport { OrdenesNoWipsComponent } from './ordenes-no-wips/ordenes-no-wips.component';\nimport { PredictivoComponent } from './predictivo/predictivo.component';\nimport { ReportsComponent } from './reports/reports.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: AnalyticsComponent,\n  children: [\n    {\n      path: 'ocupacion',\n      component: OcupacionComponent,\n    },\n    {\n      path: 'ordenes',\n      component: OrdenesComponent,\n    },\n    {\n      path: 'ordenesNotWips',\n      component: OrdenesNoWipsComponent,\n    },\n    {\n      path: 'predictivo',\n      component: PredictivoComponent,\n    },\n    {\n      path: 'reportes',\n      component: ReportsComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n}) \nexport class AnalyticsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-analytics',\n  template: `<router-outlet></router-outlet>`, \n})\nexport class AnalyticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {  NbButtonModule,\n  NbCardModule,\n  NbProgressBarModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbIconModule,\n  NbSelectModule,\n  NbListModule,\n  NbSpinnerModule,\n\n} from '@nebular/theme';\nimport { AnalyticsRoutingModule } from './analytics-routing.module';\nimport { PredictivoComponent } from './predictivo/predictivo.component';\nimport { OcupacionComponent } from './ocupacion/ocupacion.component';\nimport { OrdenesNoWipsComponent } from './ordenes-no-wips/ordenes-no-wips.component';\nimport { OrdenesComponent } from './ordenes/ordenes.component';\nimport { AnalyticsComponent } from './analytics.component';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { ThemeModule } from '../../@theme/theme.module'; \nimport { ReportsComponent } from './reports/reports.component';\n\n\n@NgModule({\n  declarations: [PredictivoComponent, OcupacionComponent, OrdenesNoWipsComponent, OrdenesComponent, AnalyticsComponent, ReportsComponent],\n  imports: [\n    CommonModule,\n    AnalyticsRoutingModule,\n    Ng2SmartTableModule,\n    ThemeModule, \n    NbCardModule,\n    NbUserModule,\n    NbButtonModule,\n    NbIconModule,\n    NbTabsetModule,\n  ]\n})\nexport class AnalyticsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\n\ninterface ReportOcupation {\n  id: number;\n  name: string;\n  totalOcupated: number;\n  CurrentOcupated: number;\n  Available: number;\n  PercOcupation: number;\n\n}\n\n@Component({\n  selector: 'ngx-ocupacion',\n  templateUrl: './ocupacion.component.html',\n  styleUrls: ['./ocupacion.component.scss']\n})\nexport class OcupacionComponent implements OnInit {\n\n  /** Table de ocupacion del sistema */\n  settings1 = {\n    actions: false,\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n        filter: false,\n        hide: true,\n\n      },\n      name: {\n        title: 'Nombre',\n        type: 'string',\n        filter: false,\n      },\n      totalOcupated: {\n        title: 'Capacidad Total (mt)',\n        type: 'number',\n        filter: false,\n      },\n      currentOcupated: {\n        title: 'Ocupados (mt)',\n        type: 'number',\n        filter: false,\n      },\n      available: {\n        title: 'Disponible (mt)',\n        type: 'number',\n        filter: false,\n      },\n      percOcupation: {\n        title: '%Ocupacion',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source1: LocalDataSource = new LocalDataSource();\n  public ReportOcupation: ReportOcupation[];\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) {\n    this.ChargeReportOcupation();\n   }\n\n  ngOnInit(): void {\n  }\n\n  ChargeReportOcupation() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GeReportOcupation').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      // console.log(\"Report Ocupacion:\", res);\n      this.ReportOcupation = res;\n      this.source1.load(res);\n    });\n    const contador = interval(60000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GeReportOcupation').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.ReportOcupation = res;\n        this.source1.load(res);\n      });\n    });\n\n  }\n \n}\n","\n<nb-card>\n    <nb-card-header>\n      Ocupación del sistema\n    </nb-card-header>\n\n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings1\" [source]=\"source1\">\n      </ng2-smart-table>\n    </nb-card-body>\n  </nb-card>","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\ninterface Ordersnotwip {\n  orderId: number;\n  batch: number;\n  order: string;\n  cutsLength: number;\n  cutsWidth: number;\n  anchoWip: string;\n  target: string;\n  wIP: string;\n  sizeDifference: number;\n}\n\n@Component({\n  selector: 'ngx-ordenes-no-wips',\n  templateUrl: './ordenes-no-wips.component.html',\n  styleUrls: ['./ordenes-no-wips.component.scss']\n})\nexport class OrdenesNoWipsComponent implements OnInit {\n\n  /** Table de ordenes que no encajan en los wips */\n  settings2 = {\n    actions: false,\n    columns: {\n      // id: {\n      //   title: 'ID',\n      //   type: 'number',\n      //   filter:false,\n      //   hide:true,\n\n      // },\n      orderId: {\n        title: 'OrderId',\n        type: 'number',\n        filter:false,\n        hide:true,\n      },\n      batch: {\n        title: 'Batch',\n        type: 'number',\n        filter: false,\n      },\n      order: {\n        title: 'Orden',\n        type: 'string',\n        filter: false,\n      },\n      cutsLength: {\n        title: 'Longitud cortes',\n        type: 'number',\n        filter: false,\n      },\n      cutsWidth: {\n        title: 'Ancho corte',\n        type: 'number',\n        filter: false,\n      },\n      anchoWip: {\n        title: 'Ancho Wip',\n        type: 'string',\n        filter: false,\n      },\n      target: {\n        title: 'Target',\n        type: 'string',\n        filter: false,\n      },\n      wip: {\n        title: 'Wip',\n        type: 'string',\n        filter: false,\n      },\n      sizeDifference: {\n        title: 'Diferencia tamaño',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source2: LocalDataSource = new LocalDataSource();\n  public ReportOrdersnotwip: Ordersnotwip[];\n\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) {\n    this.ChargeOrdersnotwip();\n   }\n\n  ngOnInit(): void {\n  }\n\n  ChargeOrdersnotwip() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetnotwipList').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      // console.log(\"Report notwipList:\", res);\n      this.ReportOrdersnotwip = res;\n      this.source2.load(res);\n    });\n    const contador = interval(30000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetnotwipList').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.ReportOrdersnotwip = res;\n        this.source2.load(res);\n      });\n    });\n\n  }\n\n}\n","\n<nb-card>\n    <nb-card-header>\n      Ordenes que no se pueden trasportar en el wip\n    </nb-card-header>\n\n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings2\" [source]=\"source2\">\n      </ng2-smart-table>\n    </nb-card-body>\n  </nb-card> ","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\ninterface UspReportOrders {\n  Id: number;\n  Batch: number;\n  Order: string;\n  CutsNumberTotal: number;\n  CurrenCouts: number;\n  OrdenesMachineCount: number;\n  Diference: number;\n }\n\n@Component({\n  selector: 'ngx-ordenes',\n  templateUrl: './ordenes.component.html',\n  styleUrls: ['./ordenes.component.scss']\n})\nexport class OrdenesComponent implements OnInit {\n\n  /** Table de Ordenes */\n  settings = {\n    actions: false,\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n        filter: false,\n        hide: true,\n\n      },\n      batch: {\n        title: 'Batch',\n        type: 'number',\n        filter: false,\n      },\n      order: {\n        title: 'Orden',\n        type: 'string',\n        filter: false,\n      },\n      cutsNumberTotal: {\n        title: 'N° cortes Total',\n        type: 'number',\n        filter: false,\n      },\n      currenCouts: {\n        title: 'Arrumes Salida Corrugador',\n        type: 'number',\n        filter: false,\n      },\n      ordenesMachineCount: {\n        title: 'Arrumes Entrada Maquina',\n        type: 'number',\n        filter: false,\n      },\n      diference: {\n        title: 'Pendientes por Atender',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n  public ReportOrdens: UspReportOrders[];\n\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) { \n    this.ChargeReportOrdens();\n  }\n\n  ngOnInit(): void {\n  }\n \n  ChargeReportOrdens() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetReportOrdersList').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      console.log(\"Report Total Ordenes:\", res);\n      this.ReportOrdens = res;\n      this.source.load(res);\n    });\n    const contador = interval(60000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetReportOrdersList').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.ReportOrdens = res;\n        this.source.load(res);\n      });\n    });\n\n  }\n\n}\n","<!-- <h2>Reporte de ordenes</h2> -->\n\n    <nb-card>\n        <nb-card-header>\n            Ordenes\n        </nb-card-header>\n\n        <nb-card-body>\n            <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"ReportOrdens\">\n            </ng2-smart-table>\n        </nb-card-body>\n    </nb-card>","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\ninterface Predictive {\n  maquina: string;\n  metrosPor10MinCorrugador: number;\n  metrosPor10MinMaquina: number;\n  capacidadWip: number;\n  ocupacionActual: number;\n  anchoTotalAruumeOrden: number; \n  ocupacionPredictiva: number;\n  tiempoDetencionCorrugador: number;\n  duracionDetencion: number;\n}\n\n@Component({\n  selector: 'ngx-predictivo',\n  templateUrl: './predictivo.component.html',\n  styleUrls: ['./predictivo.component.scss']\n})\nexport class PredictivoComponent implements OnInit {\n\n  settings3 = {\n    actions: false,\n    columns: {\n      // Maquina: {\n      //   title: 'Maquina',\n      //   type: 'string',\n      //   filter: false,\n      //   hide: true,\n\n      // },\n      maquina: {\n        title: 'Maquina',\n        type: 'string',\n        filter: false,\n      },\n      metrosPor10MinCorrugador: {\n        title: 'MetrosPor10MinCorrugador',\n        type: 'number',\n        filter: false,\n      },\n      metrosPor10MinMaquina: {\n        title: 'MetrosPor10MinMaquina',\n        type: 'number',\n        filter: false,\n      },\n      capacidadWip: {\n        title: 'CapacidadWip',\n        type: 'number',\n        filter: false,\n      },\n      ocupacionActual: {\n        title: 'OcupacionActual',\n        type: 'number',\n        filter: false,\n      },\n      anchoTotalAruumeOrden: {\n        title: 'AnchoTotalAruumeOrden',\n        type: 'number',\n        filter: false,\n      },\n      ocupacionPredictiva: {\n        title: 'OcupacionPredictiva',\n        type: 'number',\n        filter: false,\n      },\n      tiempoDetencionCorrugador: {\n        title: 'TiempoDetencionCorrugador',\n        type: 'number',\n        filter: false,\n      },\n      duracionDetencion: {\n        title: 'DuracionDetencion',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source3: LocalDataSource = new LocalDataSource();\n  public GetPredictive: Predictive[];\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) {\n    this.ChargePredictive();\n   }\n\n  ngOnInit(): void {\n  }\n \n  ChargePredictive() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetPredictiveList').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      // console.log(\"Report Predictive:\", res);\n      this.GetPredictive = res;\n      this.source3.load(res);\n    });\n    const contador = interval(30000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetPredictiveList').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.GetPredictive = res;\n        this.source3.load(res);\n      });\n    });\n\n  }\n\n}\n","\n<nb-card>\n    <nb-card-header>\n      Predictivo\n    </nb-card-header>\n\n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings3\" [source]=\"GetPredictive\">\n      </ng2-smart-table>\n    </nb-card-body>\n  </nb-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reports works!</p>\n"]}