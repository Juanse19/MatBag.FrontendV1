{"version":3,"sources":["./src/app/pages/analytics/analytics-routing.module.ts","./src/app/pages/analytics/analytics.component.ts","./src/app/pages/analytics/analytics.module.ts","./src/app/pages/analytics/ocupacion/ocupacion.component.ts","./src/app/pages/analytics/ocupacion/ocupacion.component.html","./src/app/pages/analytics/ordenes-no-wips/ordenes-no-wips.component.ts","./src/app/pages/analytics/ordenes-no-wips/ordenes-no-wips.component.html","./src/app/pages/analytics/ordenes/ordenes.component.ts","./src/app/pages/analytics/ordenes/ordenes.component.html","./src/app/pages/analytics/predictivo/predictivo.component.ts","./src/app/pages/analytics/predictivo/predictivo.component.html","./src/app/pages/analytics/reports/reports.component.ts","./src/app/pages/analytics/reports/reports.component.html"],"names":[],"mappings":"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","file":"analytics-analytics-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnalyticsComponent } from './analytics.component';\nimport { OcupacionComponent } from './ocupacion/ocupacion.component';\nimport { OrdenesComponent } from './ordenes/ordenes.component';\nimport { OrdenesNoWipsComponent } from './ordenes-no-wips/ordenes-no-wips.component';\nimport { PredictivoComponent } from './predictivo/predictivo.component';\nimport { ReportsComponent } from './reports/reports.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: AnalyticsComponent,\n  children: [\n    {\n      path: 'ocupacion',\n      component: OcupacionComponent,\n    },\n    {\n      path: 'ordenes',\n      component: OrdenesComponent,\n    },\n    {\n      path: 'ordenesNotWips',\n      component: OrdenesNoWipsComponent,\n    },\n    {\n      path: 'predictivo',\n      component: PredictivoComponent,\n    },\n    {\n      path: 'reportes',\n      component: ReportsComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n}) \nexport class AnalyticsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-analytics',\n  template: `<router-outlet></router-outlet>`, \n})\nexport class AnalyticsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {  NbButtonModule,\n  NbCardModule,\n  NbProgressBarModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbIconModule,\n  NbSelectModule,\n  NbListModule,\n  NbSpinnerModule,\n\n} from '@nebular/theme';\nimport { AnalyticsRoutingModule } from './analytics-routing.module';\nimport { PredictivoComponent } from './predictivo/predictivo.component';\nimport { OcupacionComponent } from './ocupacion/ocupacion.component';\nimport { OrdenesNoWipsComponent } from './ordenes-no-wips/ordenes-no-wips.component';\nimport { OrdenesComponent } from './ordenes/ordenes.component';\nimport { AnalyticsComponent } from './analytics.component';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { ThemeModule } from '../../@theme/theme.module'; \nimport { ReportsComponent } from './reports/reports.component';\n\n\n@NgModule({\n  declarations: [PredictivoComponent, OcupacionComponent, OrdenesNoWipsComponent, OrdenesComponent, AnalyticsComponent, ReportsComponent],\n  imports: [\n    CommonModule,\n    AnalyticsRoutingModule,\n    Ng2SmartTableModule,\n    ThemeModule, \n    NbCardModule,\n    NbUserModule,\n    NbButtonModule,\n    NbIconModule,\n    NbTabsetModule,\n  ]\n})\nexport class AnalyticsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\n\ninterface ReportOcupation {\n  id: number;\n  name: string;\n  totalOcupated: number;\n  CurrentOcupated: number;\n  Available: number;\n  PercOcupation: number;\n\n}\n\n@Component({\n  selector: 'ngx-ocupacion',\n  templateUrl: './ocupacion.component.html',\n  styleUrls: ['./ocupacion.component.scss']\n})\nexport class OcupacionComponent implements OnInit {\n\n  /** Table de ocupacion del sistema */\n  settings1 = {\n    actions: false,\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n        filter: false,\n        hide: true,\n\n      },\n      name: {\n        title: 'Nombre',\n        type: 'string',\n        filter: false,\n      },\n      totalOcupated: {\n        title: 'Capacidad Total (mt)',\n        type: 'number',\n        filter: false,\n      },\n      currentOcupated: {\n        title: 'Ocupados (mt)',\n        type: 'number',\n        filter: false,\n      },\n      available: {\n        title: 'Disponible (mt)',\n        type: 'number',\n        filter: false,\n      },\n      percOcupation: {\n        title: '%Ocupacion',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source1: LocalDataSource = new LocalDataSource();\n  public ReportOcupation: ReportOcupation[];\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) {\n    this.ChargeReportOcupation();\n   }\n\n  ngOnInit(): void {\n  }\n\n  ChargeReportOcupation() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GeReportOcupation').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      // console.log(\"Report Ocupacion:\", res);\n      this.ReportOcupation = res;\n      this.source1.load(res);\n    });\n    const contador = interval(60000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GeReportOcupation').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.ReportOcupation = res;\n        this.source1.load(res);\n      });\n    });\n\n  }\n \n}\n","\n<nb-card>\n    <nb-card-header>\n      Ocupación del sistema\n    </nb-card-header>\n\n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings1\" [source]=\"source1\">\n      </ng2-smart-table>\n    </nb-card-body>\n  </nb-card>","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\ninterface Ordersnotwip {\n  orderId: number;\n  batch: number;\n  order: string;\n  cutsLength: number;\n  cutsWidth: number;\n  anchoWip: string;\n  target: string;\n  wIP: string;\n  sizeDifference: number;\n}\n\n@Component({\n  selector: 'ngx-ordenes-no-wips',\n  templateUrl: './ordenes-no-wips.component.html',\n  styleUrls: ['./ordenes-no-wips.component.scss']\n})\nexport class OrdenesNoWipsComponent implements OnInit {\n\n  /** Table de ordenes que no encajan en los wips */\n  settings2 = {\n    actions: false,\n    columns: {\n      // id: {\n      //   title: 'ID',\n      //   type: 'number',\n      //   filter:false,\n      //   hide:true,\n\n      // },\n      orderId: {\n        title: 'OrderId',\n        type: 'number',\n        filter:false,\n        hide:true,\n      },\n      batch: {\n        title: 'Batch',\n        type: 'number',\n        filter: false,\n      },\n      order: {\n        title: 'Orden',\n        type: 'string',\n        filter: false,\n      },\n      cutsLength: {\n        title: 'Longitud cortes',\n        type: 'number',\n        filter: false,\n      },\n      cutsWidth: {\n        title: 'Ancho corte',\n        type: 'number',\n        filter: false,\n      },\n      anchoWip: {\n        title: 'Ancho Wip',\n        type: 'string',\n        filter: false,\n      },\n      target: {\n        title: 'Target',\n        type: 'string',\n        filter: false,\n      },\n      wip: {\n        title: 'Wip',\n        type: 'string',\n        filter: false,\n      },\n      sizeDifference: {\n        title: 'Diferencia tamaño',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source2: LocalDataSource = new LocalDataSource();\n  public ReportOrdersnotwip: Ordersnotwip[];\n\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) {\n    this.ChargeOrdersnotwip();\n   }\n\n  ngOnInit(): void {\n  }\n\n  ChargeOrdersnotwip() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetnotwipList').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      // console.log(\"Report notwipList:\", res);\n      this.ReportOrdersnotwip = res;\n      this.source2.load(res);\n    });\n    const contador = interval(30000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetnotwipList').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.ReportOrdersnotwip = res;\n        this.source2.load(res);\n      });\n    });\n\n  }\n\n}\n","\n<nb-card>\n    <nb-card-header>\n      Ordenes que no se pueden trasportar en el wip\n    </nb-card-header>\n\n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings2\" [source]=\"source2\">\n      </ng2-smart-table>\n    </nb-card-body>\n  </nb-card> ","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\ninterface UspReportOrders {\n  Id: number;\n  Batch: number;\n  Order: string;\n  CutsNumberTotal: number;\n  CurrenCouts: number;\n  OrdenesMachineCount: number;\n  Diference: number;\n }\n\n@Component({\n  selector: 'ngx-ordenes',\n  templateUrl: './ordenes.component.html',\n  styleUrls: ['./ordenes.component.scss']\n})\nexport class OrdenesComponent implements OnInit {\n\n  /** Table de Ordenes */\n  settings = {\n    actions: false,\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n        filter: false,\n        hide: true,\n\n      },\n      batch: {\n        title: 'Batch',\n        type: 'number',\n        filter: false,\n      },\n      order: {\n        title: 'Orden',\n        type: 'string',\n        filter: false,\n      },\n      cutsNumberTotal: {\n        title: 'N° cortes Total',\n        type: 'number',\n        filter: false,\n      },\n      currenCouts: {\n        title: 'Arrumes Salida Corrugador',\n        type: 'number',\n        filter: false,\n      },\n      ordenesMachineCount: {\n        title: 'Arrumes Entrada Maquina',\n        type: 'number',\n        filter: false,\n      },\n      diference: {\n        title: 'Pendientes por Atender',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n  public ReportOrdens: UspReportOrders[];\n\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) { \n    this.ChargeReportOrdens();\n  }\n\n  ngOnInit(): void {\n  }\n \n  ChargeReportOrdens() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetReportOrdersList').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      console.log(\"Report Total Ordenes:\", res);\n      this.ReportOrdens = res;\n      this.source.load(res);\n    });\n    const contador = interval(60000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetReportOrdersList').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.ReportOrdens = res;\n        this.source.load(res);\n      });\n    });\n\n  }\n\n}\n","<!-- <h2>Reporte de ordenes</h2> -->\n\n    <nb-card>\n        <nb-card-header>\n            Ordenes\n        </nb-card-header>\n\n        <nb-card-body>\n            <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"ReportOrdens\">\n            </ng2-smart-table>\n        </nb-card-body>\n    </nb-card>","import { Component, OnInit } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\n\ninterface Predictive {\n  maquina: string;\n  metrosPor10MinCorrugador: number;\n  metrosPor10MinMaquina: number;\n  capacidadWip: number;\n  ocupacionActual: number;\n  anchoTotalAruumeOrden: number; \n  ocupacionPredictiva: number;\n  tiempoDetencionCorrugador: number;\n  duracionDetencion: number;\n}\n\n@Component({\n  selector: 'ngx-predictivo',\n  templateUrl: './predictivo.component.html',\n  styleUrls: ['./predictivo.component.scss']\n})\nexport class PredictivoComponent implements OnInit {\n\n  settings3 = {\n    actions: false,\n    columns: {\n      // Maquina: {\n      //   title: 'Maquina',\n      //   type: 'string',\n      //   filter: false,\n      //   hide: true,\n\n      // },\n      maquina: {\n        title: 'Maquina',\n        type: 'string',\n        filter: false,\n      },\n      metrosPor10MinCorrugador: {\n        title: 'MetrosPor10MinCorrugador',\n        type: 'number',\n        filter: false,\n      },\n      metrosPor10MinMaquina: {\n        title: 'MetrosPor10MinMaquina',\n        type: 'number',\n        filter: false,\n      },\n      capacidadWip: {\n        title: 'CapacidadWip',\n        type: 'number',\n        filter: false,\n      },\n      ocupacionActual: {\n        title: 'OcupacionActual',\n        type: 'number',\n        filter: false,\n      },\n      anchoTotalAruumeOrden: {\n        title: 'AnchoTotalAruumeOrden',\n        type: 'number',\n        filter: false,\n      },\n      ocupacionPredictiva: {\n        title: 'OcupacionPredictiva',\n        type: 'number',\n        filter: false,\n      },\n      tiempoDetencionCorrugador: {\n        title: 'TiempoDetencionCorrugador',\n        type: 'number',\n        filter: false,\n      },\n      duracionDetencion: {\n        title: 'DuracionDetencion',\n        type: 'number',\n        filter: false,\n      },\n    },\n  };\n\n  source3: LocalDataSource = new LocalDataSource();\n  public GetPredictive: Predictive[];\n\n  constructor(\n    public apiGetComp: ApiGetService,\n    private api: HttpService\n  ) {\n    this.ChargePredictive();\n   }\n\n  ngOnInit(): void {\n  }\n \n  ChargePredictive() {\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetPredictiveList').subscribe((res: any) => {\n      //REPORTOCUPATION=res;\n      // console.log(\"Report Predictive:\", res);\n      this.GetPredictive = res;\n      this.source3.load(res);\n    });\n    const contador = interval(30000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetPredictiveList').subscribe((res: any) => {\n        //REPORTOCUPATION=res;\n        this.GetPredictive = res;\n        this.source3.load(res);\n      });\n    });\n\n  }\n\n}\n","\n<nb-card>\n    <nb-card-header>\n      Predictivo\n    </nb-card-header>\n\n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings3\" [source]=\"GetPredictive\">\n      </ng2-smart-table>\n    </nb-card-body>\n  </nb-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reports works!</p>\n"],"sourceRoot":"webpack:///"}