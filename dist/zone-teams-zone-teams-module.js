(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["zone-teams-zone-teams-module"],{

/***/ "./node_modules/@syncfusion/ej2-angular-buttons/__ivy_ngcc__/@syncfusion/ej2-angular-buttons.es5.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-buttons/__ivy_ngcc__/@syncfusion/ej2-angular-buttons.es5.js ***!
  \**********************************************************************************************************/
/*! exports provided: ButtonComponent, ButtonModule, ButtonAllModule, CheckBoxComponent, CheckBoxModule, CheckBoxAllModule, RadioButtonComponent, RadioButtonModule, RadioButtonAllModule, SwitchComponent, SwitchModule, SwitchAllModule, ChipDirective, ChipsDirective, ChipListComponent, ChipListModule, ChipListAllModule, ɵa, ɵb, ɵc, ɵd, ɵi, ɵj, ɵe, ɵf, ɵg, ɵh, wrapperInitialize, getTextNode, destroy, preRender, createCheckBox, rippleMouseHandler, setHiddenInput, buttonObserver, Button, CheckBox, RadioButton, Switch, classNames, ChipList, Chip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ButtonComponent", function() { return ButtonComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ButtonModule", function() { return ButtonModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ButtonAllModule", function() { return ButtonAllModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckBoxComponent", function() { return CheckBoxComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckBoxModule", function() { return CheckBoxModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckBoxAllModule", function() { return CheckBoxAllModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioButtonComponent", function() { return RadioButtonComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioButtonModule", function() { return RadioButtonModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadioButtonAllModule", function() { return RadioButtonAllModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchComponent", function() { return SwitchComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchModule", function() { return SwitchModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchAllModule", function() { return SwitchAllModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChipDirective", function() { return ChipDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChipsDirective", function() { return ChipsDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChipListComponent", function() { return ChipListComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChipListModule", function() { return ChipListModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChipListAllModule", function() { return ChipListAllModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return inputs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵb", function() { return outputs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵc", function() { return inputs$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵd", function() { return outputs$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi", function() { return inputs$4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵj", function() { return outputs$5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵe", function() { return inputs$2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵf", function() { return outputs$2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵg", function() { return inputs$3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵh", function() { return outputs$3; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-angular-base */ "./node_modules/@syncfusion/ej2-angular-base/index.js");
/* harmony import */ var _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-buttons */ "./node_modules/@syncfusion/ej2-buttons/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm5/forms.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "wrapperInitialize", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["wrapperInitialize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTextNode", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["getTextNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "destroy", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["destroy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "preRender", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["preRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createCheckBox", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["createCheckBox"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rippleMouseHandler", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["rippleMouseHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setHiddenInput", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["setHiddenInput"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "buttonObserver", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["buttonObserver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Button", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["Button"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CheckBox", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["CheckBox"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadioButton", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["RadioButton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Switch", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["Switch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classNames", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["classNames"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChipList", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["ChipList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chip", function() { return _syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["Chip"]; });



var _c0 = ["ejs-button", ""];
var _c1 = ["*"];
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var inputs = ['content', 'cssClass', 'disabled', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'iconCss', 'iconPosition', 'isPrimary', 'isToggle', 'locale'];
var outputs = ['created'];
var twoWays = [];
/**
 * Represents the Angular Button Component.
 * ```html
 * <button ejs-button>Button</button>
 * ```
 */
var ButtonComponent = /** @class */ (function (_super) {
    __extends(ButtonComponent, _super);
    /**
     * @param {?} ngEle
     * @param {?} srenderer
     * @param {?} viewContainerRef
     * @param {?} injector
     */
    function ButtonComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        _this.registerEvents(outputs);
        _this.addTwoWay.call(_this, twoWays);
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.containerContext = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]();
        return _this;
    }
    /**
     * @return {?}
     */
    ButtonComponent.prototype.ngOnInit = function () {
        this.containerContext.ngOnInit(this);
    };
    /**
     * @return {?}
     */
    ButtonComponent.prototype.ngAfterViewInit = function () {
        this.containerContext.ngAfterViewInit(this);
    };
    /**
     * @return {?}
     */
    ButtonComponent.prototype.ngOnDestroy = function () {
        this.containerContext.ngOnDestroy(this);
    };
    /**
     * @return {?}
     */
    ButtonComponent.prototype.ngAfterContentChecked = function () {
        this.containerContext.ngAfterContentChecked(this);
    };
ButtonComponent.ɵfac = function ButtonComponent_Factory(t) { return new (t || ButtonComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
ButtonComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ButtonComponent, selectors: [["", "ejs-button", ""]], inputs: { content: "content", cssClass: "cssClass", disabled: "disabled", enableHtmlSanitizer: "enableHtmlSanitizer", enablePersistence: "enablePersistence", enableRtl: "enableRtl", iconCss: "iconCss", iconPosition: "iconPosition", isPrimary: "isPrimary", isToggle: "isToggle", locale: "locale" }, outputs: { created: "created" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], attrs: _c0, ngContentSelectors: _c1, decls: 1, vars: 0, template: function ButtonComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ButtonComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: '[ejs-button]',
                inputs: inputs,
                outputs: outputs,
                template: "<ng-content ></ng-content>",
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();
    return ButtonComponent;
}(_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["Button"]));
/**
 * @nocollapse
 */
ButtonComponent.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], },
]; };
ButtonComponent = __decorate([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentMixins"])([_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]]),
    __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
], ButtonComponent);
/**
 * NgModule definition for the Button component.
 */
var ButtonModule = /** @class */ (function () {
    function ButtonModule() {
    }
ButtonModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ButtonModule });
ButtonModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function ButtonModule_Factory(t) { return new (t || ButtonModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ButtonModule, { declarations: function () { return [ButtonComponent]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]; }, exports: function () { return [ButtonComponent]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ButtonModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
                declarations: [
                    ButtonComponent
                ],
                exports: [
                    ButtonComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return ButtonModule;
}());
/**
 * @nocollapse
 */
ButtonModule.ctorParameters = function () { return []; };
/**
 * NgModule definition for the Button component with providers.
 */
var ButtonAllModule = /** @class */ (function () {
    function ButtonAllModule() {
    }
ButtonAllModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ButtonAllModule });
ButtonAllModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function ButtonAllModule_Factory(t) { return new (t || ButtonAllModule)(); }, providers: [], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], ButtonModule],
        ButtonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ButtonAllModule, { imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
        ButtonModule]; }, exports: function () { return [ButtonModule]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ButtonAllModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], ButtonModule],
                exports: [
                    ButtonModule
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
    return ButtonAllModule;
}());
/**
 * @nocollapse
 */
ButtonAllModule.ctorParameters = function () { return []; };
var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var inputs$1 = ['checked', 'cssClass', 'disabled', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'htmlAttributes', 'indeterminate', 'label', 'labelPosition', 'locale', 'name', 'value'];
var outputs$1 = ['focus', 'blur', 'change', 'created', 'checkedChange', 'indeterminateChange'];
var twoWays$1 = ['checked', 'indeterminate'];
/**
 * Represents the Angular CheckBox Component.
 * ```html
 * <ejs-checkbox label='Default'></ejs-checkbox>
 * ```
 */
var CheckBoxComponent = CheckBoxComponent_1 = /** @class */ (function (_super) {
    __extends(CheckBoxComponent, _super);
    /**
     * @param {?} ngEle
     * @param {?} srenderer
     * @param {?} viewContainerRef
     * @param {?} injector
     */
    function CheckBoxComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        _this.registerEvents(outputs$1);
        _this.addTwoWay.call(_this, twoWays$1);
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.formContext = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["FormBase"]();
        _this.formCompContext = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]();
        return _this;
    }
    /**
     * @param {?} registerFunction
     * @return {?}
     */
    CheckBoxComponent.prototype.registerOnChange = function (registerFunction) {
    };
    /**
     * @param {?} registerFunction
     * @return {?}
     */
    CheckBoxComponent.prototype.registerOnTouched = function (registerFunction) {
    };
    /**
     * @param {?} value
     * @return {?}
     */
    CheckBoxComponent.prototype.writeValue = function (value) {
    };
    /**
     * @param {?} disabled
     * @return {?}
     */
    CheckBoxComponent.prototype.setDisabledState = function (disabled) {
    };
    /**
     * @return {?}
     */
    CheckBoxComponent.prototype.ngOnInit = function () {
        this.formCompContext.ngOnInit(this);
    };
    /**
     * @return {?}
     */
    CheckBoxComponent.prototype.ngAfterViewInit = function () {
        this.formContext.ngAfterViewInit(this);
    };
    /**
     * @return {?}
     */
    CheckBoxComponent.prototype.ngOnDestroy = function () {
        this.formCompContext.ngOnDestroy(this);
    };
    /**
     * @return {?}
     */
    CheckBoxComponent.prototype.ngAfterContentChecked = function () {
        this.formCompContext.ngAfterContentChecked(this);
    };
CheckBoxComponent.ɵfac = function CheckBoxComponent_Factory(t) { return new (t || CheckBoxComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
CheckBoxComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: CheckBoxComponent, selectors: [["ejs-checkbox"]], inputs: { checked: "checked", cssClass: "cssClass", disabled: "disabled", enableHtmlSanitizer: "enableHtmlSanitizer", enablePersistence: "enablePersistence", enableRtl: "enableRtl", htmlAttributes: "htmlAttributes", indeterminate: "indeterminate", label: "label", labelPosition: "labelPosition", locale: "locale", name: "name", value: "value" }, outputs: { focus: "focus", blur: "blur", change: "change", created: "created", checkedChange: "checkedChange", indeterminateChange: "indeterminateChange" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NG_VALUE_ACCESSOR"],
                useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () { return CheckBoxComponent_1; }),
                multi: true
            }
        ]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function CheckBoxComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CheckBoxComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ejs-checkbox',
                inputs: inputs$1,
                outputs: outputs$1,
                template: '',
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                providers: [
                    {
                        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NG_VALUE_ACCESSOR"],
                        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () { return CheckBoxComponent_1; }),
                        multi: true
                    }
                ],
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();
    return CheckBoxComponent;
}(_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["CheckBox"]));
/**
 * @nocollapse
 */
CheckBoxComponent.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], },
]; };
CheckBoxComponent = CheckBoxComponent_1 = __decorate$1([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentMixins"])([_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"], _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["FormBase"]]),
    __metadata$1("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
], CheckBoxComponent);
var CheckBoxComponent_1;
/**
 * NgModule definition for the CheckBox component.
 */
var CheckBoxModule = /** @class */ (function () {
    function CheckBoxModule() {
    }
CheckBoxModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: CheckBoxModule });
CheckBoxModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function CheckBoxModule_Factory(t) { return new (t || CheckBoxModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](CheckBoxModule, { declarations: function () { return [CheckBoxComponent]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]; }, exports: function () { return [CheckBoxComponent]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CheckBoxModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
                declarations: [
                    CheckBoxComponent
                ],
                exports: [
                    CheckBoxComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return CheckBoxModule;
}());
/**
 * @nocollapse
 */
CheckBoxModule.ctorParameters = function () { return []; };
/**
 * NgModule definition for the CheckBox component with providers.
 */
var CheckBoxAllModule = /** @class */ (function () {
    function CheckBoxAllModule() {
    }
CheckBoxAllModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: CheckBoxAllModule });
CheckBoxAllModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function CheckBoxAllModule_Factory(t) { return new (t || CheckBoxAllModule)(); }, providers: [], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], CheckBoxModule],
        CheckBoxModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](CheckBoxAllModule, { imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
        CheckBoxModule]; }, exports: function () { return [CheckBoxModule]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CheckBoxAllModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], CheckBoxModule],
                exports: [
                    CheckBoxModule
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
    return CheckBoxAllModule;
}());
/**
 * @nocollapse
 */
CheckBoxAllModule.ctorParameters = function () { return []; };
var __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var inputs$2 = ['checked', 'cssClass', 'disabled', 'enableHtmlSanitizer', 'enablePersistence', 'enableRtl', 'htmlAttributes', 'label', 'labelPosition', 'locale', 'name', 'value'];
var outputs$2 = ['focus', 'blur', 'change', 'created', 'valueChange'];
var twoWays$2 = ['value'];
/**
 * Represents the Angular RadioButton Component.
 * ```html
 * <ejs-radiobutton label='Default'></ejs-radiobutton>
 * ```
 */
var RadioButtonComponent = RadioButtonComponent_1 = /** @class */ (function (_super) {
    __extends(RadioButtonComponent, _super);
    /**
     * @param {?} ngEle
     * @param {?} srenderer
     * @param {?} viewContainerRef
     * @param {?} injector
     */
    function RadioButtonComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        _this.registerEvents(outputs$2);
        _this.addTwoWay.call(_this, twoWays$2);
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.formContext = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["FormBase"]();
        _this.formCompContext = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]();
        return _this;
    }
    /**
     * @param {?} registerFunction
     * @return {?}
     */
    RadioButtonComponent.prototype.registerOnChange = function (registerFunction) {
    };
    /**
     * @param {?} registerFunction
     * @return {?}
     */
    RadioButtonComponent.prototype.registerOnTouched = function (registerFunction) {
    };
    /**
     * @param {?} value
     * @return {?}
     */
    RadioButtonComponent.prototype.writeValue = function (value) {
    };
    /**
     * @param {?} disabled
     * @return {?}
     */
    RadioButtonComponent.prototype.setDisabledState = function (disabled) {
    };
    /**
     * @return {?}
     */
    RadioButtonComponent.prototype.ngOnInit = function () {
        this.formCompContext.ngOnInit(this);
    };
    /**
     * @return {?}
     */
    RadioButtonComponent.prototype.ngAfterViewInit = function () {
        this.formContext.ngAfterViewInit(this);
    };
    /**
     * @return {?}
     */
    RadioButtonComponent.prototype.ngOnDestroy = function () {
        this.formCompContext.ngOnDestroy(this);
    };
    /**
     * @return {?}
     */
    RadioButtonComponent.prototype.ngAfterContentChecked = function () {
        this.formCompContext.ngAfterContentChecked(this);
    };
RadioButtonComponent.ɵfac = function RadioButtonComponent_Factory(t) { return new (t || RadioButtonComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
RadioButtonComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: RadioButtonComponent, selectors: [["ejs-radiobutton"]], inputs: { checked: "checked", cssClass: "cssClass", disabled: "disabled", enableHtmlSanitizer: "enableHtmlSanitizer", enablePersistence: "enablePersistence", enableRtl: "enableRtl", htmlAttributes: "htmlAttributes", label: "label", labelPosition: "labelPosition", locale: "locale", name: "name", value: "value" }, outputs: { focus: "focus", blur: "blur", change: "change", created: "created", valueChange: "valueChange" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NG_VALUE_ACCESSOR"],
                useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () { return RadioButtonComponent_1; }),
                multi: true
            }
        ]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function RadioButtonComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RadioButtonComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ejs-radiobutton',
                inputs: inputs$2,
                outputs: outputs$2,
                template: '',
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                providers: [
                    {
                        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NG_VALUE_ACCESSOR"],
                        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () { return RadioButtonComponent_1; }),
                        multi: true
                    }
                ],
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();
    return RadioButtonComponent;
}(_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["RadioButton"]));
/**
 * @nocollapse
 */
RadioButtonComponent.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], },
]; };
RadioButtonComponent = RadioButtonComponent_1 = __decorate$2([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentMixins"])([_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"], _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["FormBase"]]),
    __metadata$2("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
], RadioButtonComponent);
var RadioButtonComponent_1;
/**
 * NgModule definition for the RadioButton component.
 */
var RadioButtonModule = /** @class */ (function () {
    function RadioButtonModule() {
    }
RadioButtonModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: RadioButtonModule });
RadioButtonModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function RadioButtonModule_Factory(t) { return new (t || RadioButtonModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](RadioButtonModule, { declarations: function () { return [RadioButtonComponent]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]; }, exports: function () { return [RadioButtonComponent]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RadioButtonModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
                declarations: [
                    RadioButtonComponent
                ],
                exports: [
                    RadioButtonComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return RadioButtonModule;
}());
/**
 * @nocollapse
 */
RadioButtonModule.ctorParameters = function () { return []; };
/**
 * NgModule definition for the RadioButton component with providers.
 */
var RadioButtonAllModule = /** @class */ (function () {
    function RadioButtonAllModule() {
    }
RadioButtonAllModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: RadioButtonAllModule });
RadioButtonAllModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function RadioButtonAllModule_Factory(t) { return new (t || RadioButtonAllModule)(); }, providers: [], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], RadioButtonModule],
        RadioButtonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](RadioButtonAllModule, { imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
        RadioButtonModule]; }, exports: function () { return [RadioButtonModule]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RadioButtonAllModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], RadioButtonModule],
                exports: [
                    RadioButtonModule
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
    return RadioButtonAllModule;
}());
/**
 * @nocollapse
 */
RadioButtonAllModule.ctorParameters = function () { return []; };
var __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$3 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var inputs$3 = ['checked', 'cssClass', 'disabled', 'enablePersistence', 'enableRtl', 'locale', 'name', 'offLabel', 'onLabel', 'value'];
var outputs$3 = ['focus', 'blur', 'change', 'created', 'checkedChange'];
var twoWays$3 = ['checked'];
/**
 * Represents the Angular Switch Component.
 * ```html
 * <ejs-switch></ejs-switch>
 * ```
 */
var SwitchComponent = SwitchComponent_1 = /** @class */ (function (_super) {
    __extends(SwitchComponent, _super);
    /**
     * @param {?} ngEle
     * @param {?} srenderer
     * @param {?} viewContainerRef
     * @param {?} injector
     */
    function SwitchComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        _this.registerEvents(outputs$3);
        _this.addTwoWay.call(_this, twoWays$3);
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.formContext = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["FormBase"]();
        _this.formCompContext = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]();
        return _this;
    }
    /**
     * @param {?} registerFunction
     * @return {?}
     */
    SwitchComponent.prototype.registerOnChange = function (registerFunction) {
    };
    /**
     * @param {?} registerFunction
     * @return {?}
     */
    SwitchComponent.prototype.registerOnTouched = function (registerFunction) {
    };
    /**
     * @param {?} value
     * @return {?}
     */
    SwitchComponent.prototype.writeValue = function (value) {
    };
    /**
     * @param {?} disabled
     * @return {?}
     */
    SwitchComponent.prototype.setDisabledState = function (disabled) {
    };
    /**
     * @return {?}
     */
    SwitchComponent.prototype.ngOnInit = function () {
        this.formCompContext.ngOnInit(this);
    };
    /**
     * @return {?}
     */
    SwitchComponent.prototype.ngAfterViewInit = function () {
        this.formContext.ngAfterViewInit(this);
    };
    /**
     * @return {?}
     */
    SwitchComponent.prototype.ngOnDestroy = function () {
        this.formCompContext.ngOnDestroy(this);
    };
    /**
     * @return {?}
     */
    SwitchComponent.prototype.ngAfterContentChecked = function () {
        this.formCompContext.ngAfterContentChecked(this);
    };
SwitchComponent.ɵfac = function SwitchComponent_Factory(t) { return new (t || SwitchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
SwitchComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: SwitchComponent, selectors: [["ejs-switch"]], inputs: { checked: "checked", cssClass: "cssClass", disabled: "disabled", enablePersistence: "enablePersistence", enableRtl: "enableRtl", locale: "locale", name: "name", offLabel: "offLabel", onLabel: "onLabel", value: "value" }, outputs: { focus: "focus", blur: "blur", change: "change", created: "created", checkedChange: "checkedChange" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([
            {
                provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NG_VALUE_ACCESSOR"],
                useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () { return SwitchComponent_1; }),
                multi: true
            }
        ]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function SwitchComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SwitchComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ejs-switch',
                inputs: inputs$3,
                outputs: outputs$3,
                template: '',
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                providers: [
                    {
                        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NG_VALUE_ACCESSOR"],
                        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () { return SwitchComponent_1; }),
                        multi: true
                    }
                ],
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();
    return SwitchComponent;
}(_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["Switch"]));
/**
 * @nocollapse
 */
SwitchComponent.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], },
]; };
SwitchComponent = SwitchComponent_1 = __decorate$3([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentMixins"])([_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"], _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["FormBase"]]),
    __metadata$3("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
], SwitchComponent);
var SwitchComponent_1;
/**
 * NgModule definition for the Switch component.
 */
var SwitchModule = /** @class */ (function () {
    function SwitchModule() {
    }
SwitchModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: SwitchModule });
SwitchModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function SwitchModule_Factory(t) { return new (t || SwitchModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](SwitchModule, { declarations: function () { return [SwitchComponent]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]; }, exports: function () { return [SwitchComponent]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SwitchModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
                declarations: [
                    SwitchComponent
                ],
                exports: [
                    SwitchComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return SwitchModule;
}());
/**
 * @nocollapse
 */
SwitchModule.ctorParameters = function () { return []; };
/**
 * NgModule definition for the Switch component with providers.
 */
var SwitchAllModule = /** @class */ (function () {
    function SwitchAllModule() {
    }
SwitchAllModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: SwitchAllModule });
SwitchAllModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function SwitchAllModule_Factory(t) { return new (t || SwitchAllModule)(); }, providers: [], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], SwitchModule],
        SwitchModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](SwitchAllModule, { imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
        SwitchModule]; }, exports: function () { return [SwitchModule]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SwitchAllModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], SwitchModule],
                exports: [
                    SwitchModule
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
    return SwitchAllModule;
}());
/**
 * @nocollapse
 */
SwitchAllModule.ctorParameters = function () { return []; };
var input = ['avatarIconCss', 'avatarText', 'cssClass', 'enabled', 'leadingIconCss', 'leadingIconUrl', 'text', 'trailingIconCss', 'trailingIconUrl', 'value'];
var outputs$4 = [];
/**
 * `e-chip` directive represent a chip of the Angular ChipList.
 * ```html
 * <ejs-chiplist >
 *   <e-chips>
 *    <e-chip text='chip1'></e-chip>
 *    <e-chip text='chip2'></e-chip>
 *   </e-chips>
 * </ejs-chiplist>
 * ```
 */
var ChipDirective = /** @class */ (function (_super) {
    __extends(ChipDirective, _super);
    /**
     * @param {?} viewContainerRef
     */
    function ChipDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.registerEvents(outputs$4);
        _this.directivePropList = input;
        return _this;
    }
ChipDirective.ɵfac = function ChipDirective_Factory(t) { return new (t || ChipDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])); };
ChipDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: ChipDirective, selectors: [["e-chip"]], inputs: { avatarIconCss: "avatarIconCss", avatarText: "avatarText", cssClass: "cssClass", enabled: "enabled", leadingIconCss: "leadingIconCss", leadingIconUrl: "leadingIconUrl", text: "text", trailingIconCss: "trailingIconCss", trailingIconUrl: "trailingIconUrl", value: "value" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ChipDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'e-chips>e-chip',
                inputs: input,
                outputs: outputs$4,
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }]; }, null); })();
    return ChipDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComplexBase"]));
/**
 * @nocollapse
 */
ChipDirective.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
]; };
/**
 * Chip Array Directive
 */
var ChipsDirective = /** @class */ (function (_super) {
    __extends(ChipsDirective, _super);
    function ChipsDirective() {
        return _super.call(this, 'chips') || this;
    }
ChipsDirective.ɵfac = function ChipsDirective_Factory(t) { return new (t || ChipsDirective)(); };
ChipsDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: ChipsDirective, selectors: [["e-chips"]], contentQueries: function ChipsDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, ChipDirective, false);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.children = _t);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ChipsDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'ejs-chiplist>e-chips',
                queries: {
                    children: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](ChipDirective)
                }
            }]
    }], function () { return []; }, null); })();
    return ChipsDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ArrayBase"]));
/**
 * @nocollapse
 */
ChipsDirective.ctorParameters = function () { return []; };
var __decorate$4 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$4 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var inputs$4 = ['avatarIconCss', 'avatarText', 'chips', 'cssClass', 'enableDelete', 'enablePersistence', 'enableRtl', 'enabled', 'leadingIconCss', 'leadingIconUrl', 'locale', 'selectedChips', 'selection', 'text', 'trailingIconCss', 'trailingIconUrl'];
var outputs$5 = ['beforeClick', 'click', 'created', 'delete'];
var twoWays$4 = [''];
/**
 * Represents the Essential JS 2 Angular ChipList Component.
 * ```html
 * <ejs-chiplist></ejs-chiplist>
 * ```
 */
var ChipListComponent = /** @class */ (function (_super) {
    __extends(ChipListComponent, _super);
    /**
     * @param {?} ngEle
     * @param {?} srenderer
     * @param {?} viewContainerRef
     * @param {?} injector
     */
    function ChipListComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.tags = ['chips'];
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        _this.registerEvents(outputs$5);
        _this.addTwoWay.call(_this, twoWays$4);
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.context = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]();
        return _this;
    }
    /**
     * @return {?}
     */
    ChipListComponent.prototype.ngOnInit = function () {
        this.context.ngOnInit(this);
    };
    /**
     * @return {?}
     */
    ChipListComponent.prototype.ngAfterViewInit = function () {
        this.context.ngAfterViewInit(this);
    };
    /**
     * @return {?}
     */
    ChipListComponent.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy(this);
    };
    /**
     * @return {?}
     */
    ChipListComponent.prototype.ngAfterContentChecked = function () {
        this.tagObjects[0].instance = this.childChips;
        this.context.ngAfterContentChecked(this);
    };
ChipListComponent.ɵfac = function ChipListComponent_Factory(t) { return new (t || ChipListComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
ChipListComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ChipListComponent, selectors: [["ejs-chiplist"]], contentQueries: function ChipListComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, ChipsDirective, true);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.childChips = _t.first);
    } }, inputs: { avatarIconCss: "avatarIconCss", avatarText: "avatarText", chips: "chips", cssClass: "cssClass", enableDelete: "enableDelete", enablePersistence: "enablePersistence", enableRtl: "enableRtl", enabled: "enabled", leadingIconCss: "leadingIconCss", leadingIconUrl: "leadingIconUrl", locale: "locale", selectedChips: "selectedChips", selection: "selection", text: "text", trailingIconCss: "trailingIconCss", trailingIconUrl: "trailingIconUrl" }, outputs: { beforeClick: "beforeClick", click: "click", created: "created", delete: "delete" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function ChipListComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ChipListComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ejs-chiplist',
                inputs: inputs$4,
                outputs: outputs$5,
                template: '',
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                queries: {
                    childChips: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"](ChipsDirective)
                }
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();
    return ChipListComponent;
}(_syncfusion_ej2_buttons__WEBPACK_IMPORTED_MODULE_2__["ChipList"]));
/**
 * @nocollapse
 */
ChipListComponent.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], },
]; };
ChipListComponent = __decorate$4([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentMixins"])([_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]]),
    __metadata$4("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
], ChipListComponent);
/**
 * NgModule definition for the ChipList component.
 */
var ChipListModule = /** @class */ (function () {
    function ChipListModule() {
    }
ChipListModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ChipListModule });
ChipListModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function ChipListModule_Factory(t) { return new (t || ChipListModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ChipListModule, { declarations: function () { return [ChipListComponent,
        ChipDirective,
        ChipsDirective]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]; }, exports: function () { return [ChipListComponent,
        ChipDirective,
        ChipsDirective]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ChipListModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
                declarations: [
                    ChipListComponent,
                    ChipDirective,
                    ChipsDirective
                ],
                exports: [
                    ChipListComponent,
                    ChipDirective,
                    ChipsDirective
                ]
            }]
    }], function () { return []; }, null); })();
    return ChipListModule;
}());
/**
 * @nocollapse
 */
ChipListModule.ctorParameters = function () { return []; };
/**
 * NgModule definition for the ChipList component with providers.
 */
var ChipListAllModule = /** @class */ (function () {
    function ChipListAllModule() {
    }
ChipListAllModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ChipListAllModule });
ChipListAllModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function ChipListAllModule_Factory(t) { return new (t || ChipListAllModule)(); }, providers: [], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], ChipListModule],
        ChipListModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ChipListAllModule, { imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
        ChipListModule]; }, exports: function () { return [ChipListModule]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ChipListAllModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], ChipListModule],
                exports: [
                    ChipListModule
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
    return ChipListAllModule;
}());
/**
 * @nocollapse
 */
ChipListAllModule.ctorParameters = function () { return []; };
/**
 * Generated bundle index. Do not edit.
 */



//# sourceMappingURL=ej2-angular-buttons.es5.js.map

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js ***!
  \**********************************************************************************************************************/
/*! exports provided: AnnotationDirective, AnnotationsDirective, RangeDirective, RangesDirective, PointerDirective, PointersDirective, AxisDirective, AxesDirective, CircularGaugeComponent, CircularGaugeModule, CircularGaugeAllModule, GaugeTooltipService, AnnotationsService, LegendService, PrintService, PdfExportService, ImageExportService, GradientService, ɵa, ɵb, CircularGauge, Annotations, Line, Label, Range, Tick, Cap, NeedleTail, Animation, Annotation, Pointer, Axis, Border, Font, RangeTooltip, AnnotationTooltip, Margin, TooltipSettings, GaugeTooltip, measureText, toPixel, getFontStyle, textElement, appendPath, isCompleteAngle, getDegree, getAngleFromValue, getAngleFromLocation, getLocationFromAngle, getPathArc, arcPath, arcRoundedPath, arcWidthPath, getRangePath, arcWidthPathCalculation, roundedArcWidthPathCalculation, getRoundedPathArc, getCirclePath, getTemplateFunction, removeElement, getElement, stringToNumber, getPointer, getLabelFormat, calculateShapes, CustomizeOption, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption, VisibleLabels, getRangeColor, calculateSum, setStyles, getValueFromAngle, getRange, textTrim, showTooltip, linear, getCompleteArc, getCompletePath, getMousePosition, getElementSize, Location, LegendSettings, Legend, Index, LegendOptions, ImageExport, PdfExport, Print, ColorStop, GradientPosition, LinearGradient, RadialGradient, Gradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnnotationDirective", function() { return AnnotationDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnnotationsDirective", function() { return AnnotationsDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeDirective", function() { return RangeDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangesDirective", function() { return RangesDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointerDirective", function() { return PointerDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointersDirective", function() { return PointersDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisDirective", function() { return AxisDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxesDirective", function() { return AxesDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircularGaugeComponent", function() { return CircularGaugeComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircularGaugeModule", function() { return CircularGaugeModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircularGaugeAllModule", function() { return CircularGaugeAllModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeTooltipService", function() { return GaugeTooltipService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnnotationsService", function() { return AnnotationsService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendService", function() { return LegendService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrintService", function() { return PrintService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfExportService", function() { return PdfExportService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageExportService", function() { return ImageExportService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GradientService", function() { return GradientService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return inputs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵb", function() { return outputs$4; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-angular-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/index.js");
/* harmony import */ var _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CircularGauge", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["CircularGauge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotations", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Annotations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Line"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Label"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Tick"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Cap", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Cap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NeedleTail", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["NeedleTail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotation", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Annotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pointer", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Pointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Axis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Border", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Border"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Font", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeTooltip", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["RangeTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnnotationTooltip", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["AnnotationTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Margin", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Margin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipSettings", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["TooltipSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeTooltip", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["GaugeTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["measureText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPixel", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["toPixel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFontStyle", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getFontStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["textElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "appendPath", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["appendPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCompleteAngle", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["isCompleteAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDegree", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getDegree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromValue", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getAngleFromValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromLocation", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getAngleFromLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLocationFromAngle", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getLocationFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPathArc", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcPath", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["arcPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcRoundedPath", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["arcRoundedPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPath", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["arcWidthPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangePath", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getRangePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPathCalculation", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["arcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundedArcWidthPathCalculation", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["roundedArcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRoundedPathArc", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getRoundedPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCirclePath", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getCirclePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTemplateFunction", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getTemplateFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["removeElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringToNumber", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["stringToNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPointer", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getPointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLabelFormat", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getLabelFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["calculateShapes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["CustomizeOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["PathOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectOption", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["RectOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeLocation", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["GaugeLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Rect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["TextOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisibleLabels", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["VisibleLabels"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangeColor", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getRangeColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateSum", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["calculateSum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setStyles", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["setStyles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getValueFromAngle", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getValueFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRange", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textTrim", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["textTrim"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "showTooltip", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["showTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["linear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompleteArc", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getCompleteArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompletePath", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getCompletePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMousePosition", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getMousePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElementSize", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["getElementSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Location"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["LegendSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Legend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendOptions", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["LegendOptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageExport", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["ImageExport"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfExport", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["PdfExport"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Print", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Print"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorStop", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["ColorStop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GradientPosition", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["GradientPosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinearGradient", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["LinearGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadialGradient", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["RadialGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Gradient"]; });



var _c0 = ["content"];
var _c1 = ["tooltipTemplate"];
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var input = ['angle', 'autoAngle', 'content', 'description', 'radius', 'textStyle', 'zIndex'];
var outputs = [];
/**
 * Annotation directive
 * ```html
 * <e-annotations><e-annotation></e-annotation></e-annotations>
 * ```
 */
var AnnotationDirective = /** @class */ (function (_super) {
    __extends(AnnotationDirective, _super);
    /**
     * @param {?} viewContainerRef
     */
    function AnnotationDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.registerEvents(outputs);
        _this.directivePropList = input;
        return _this;
    }
AnnotationDirective.ɵfac = function AnnotationDirective_Factory(t) { return new (t || AnnotationDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])); };
AnnotationDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: AnnotationDirective, selectors: [["e-annotation"]], contentQueries: function AnnotationDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c0, true);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    } }, inputs: { angle: "angle", autoAngle: "autoAngle", content: "content", description: "description", radius: "radius", textStyle: "textStyle", zIndex: "zIndex" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AnnotationDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'e-annotations>e-annotation',
                inputs: input,
                outputs: outputs,
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }]; }, { content: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"],
            args: ['content']
        }] }); })();
    return AnnotationDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComplexBase"]));
/**
 * @nocollapse
 */
AnnotationDirective.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
]; };
AnnotationDirective.propDecorators = {
    'content': [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"], args: ['content',] },],
};
__decorate([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["Template"])(),
    __metadata("design:type", Object)
], AnnotationDirective.prototype, "content", void 0);
/**
 * Annotation Array Directive
 */
var AnnotationsDirective = /** @class */ (function (_super) {
    __extends(AnnotationsDirective, _super);
    function AnnotationsDirective() {
        return _super.call(this, 'annotations') || this;
    }
AnnotationsDirective.ɵfac = function AnnotationsDirective_Factory(t) { return new (t || AnnotationsDirective)(); };
AnnotationsDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: AnnotationsDirective, selectors: [["e-annotations"]], contentQueries: function AnnotationsDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, AnnotationDirective, false);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.children = _t);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AnnotationsDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'ej-circulargauge>e-axes>e-axis>e-annotations',
                queries: {
                    children: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](AnnotationDirective)
                }
            }]
    }], function () { return []; }, null); })();
    return AnnotationsDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ArrayBase"]));
/**
 * @nocollapse
 */
AnnotationsDirective.ctorParameters = function () { return []; };
var input$1 = ['color', 'end', 'endWidth', 'legendText', 'linearGradient', 'offset', 'opacity', 'position', 'radialGradient', 'radius', 'roundedCornerRadius', 'start', 'startWidth'];
var outputs$1 = [];
/**
 * Ranges directive
 * ```html
 * <e-ranges><e-range></e-range></e-ranges>
 * ```
 */
var RangeDirective = /** @class */ (function (_super) {
    __extends(RangeDirective, _super);
    /**
     * @param {?} viewContainerRef
     */
    function RangeDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.registerEvents(outputs$1);
        _this.directivePropList = input$1;
        return _this;
    }
RangeDirective.ɵfac = function RangeDirective_Factory(t) { return new (t || RangeDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])); };
RangeDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: RangeDirective, selectors: [["e-range"]], inputs: { color: "color", end: "end", endWidth: "endWidth", legendText: "legendText", linearGradient: "linearGradient", offset: "offset", opacity: "opacity", position: "position", radialGradient: "radialGradient", radius: "radius", roundedCornerRadius: "roundedCornerRadius", start: "start", startWidth: "startWidth" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RangeDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'e-ranges>e-range',
                inputs: input$1,
                outputs: outputs$1,
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }]; }, null); })();
    return RangeDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComplexBase"]));
/**
 * @nocollapse
 */
RangeDirective.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
]; };
/**
 * Range Array Directive
 */
var RangesDirective = /** @class */ (function (_super) {
    __extends(RangesDirective, _super);
    function RangesDirective() {
        return _super.call(this, 'ranges') || this;
    }
RangesDirective.ɵfac = function RangesDirective_Factory(t) { return new (t || RangesDirective)(); };
RangesDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: RangesDirective, selectors: [["e-ranges"]], contentQueries: function RangesDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, RangeDirective, false);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.children = _t);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RangesDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'ej-circulargauge>e-axes>e-axis>e-ranges',
                queries: {
                    children: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](RangeDirective)
                }
            }]
    }], function () { return []; }, null); })();
    return RangesDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ArrayBase"]));
/**
 * @nocollapse
 */
RangesDirective.ctorParameters = function () { return []; };
var input$2 = ['animation', 'border', 'cap', 'color', 'description', 'imageUrl', 'linearGradient', 'markerHeight', 'markerShape', 'markerWidth', 'needleEndWidth', 'needleStartWidth', 'needleTail', 'offset', 'pointerWidth', 'position', 'radialGradient', 'radius', 'roundedCornerRadius', 'text', 'textStyle', 'type', 'value'];
var outputs$2 = [];
/**
 * Pointers directive
 * ```html
 * <e-pointers><e-pointer></e-pointer></e-pointers>
 * ```
 */
var PointerDirective = /** @class */ (function (_super) {
    __extends(PointerDirective, _super);
    /**
     * @param {?} viewContainerRef
     */
    function PointerDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.registerEvents(outputs$2);
        _this.directivePropList = input$2;
        return _this;
    }
PointerDirective.ɵfac = function PointerDirective_Factory(t) { return new (t || PointerDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])); };
PointerDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: PointerDirective, selectors: [["e-pointer"]], inputs: { animation: "animation", border: "border", cap: "cap", color: "color", description: "description", imageUrl: "imageUrl", linearGradient: "linearGradient", markerHeight: "markerHeight", markerShape: "markerShape", markerWidth: "markerWidth", needleEndWidth: "needleEndWidth", needleStartWidth: "needleStartWidth", needleTail: "needleTail", offset: "offset", pointerWidth: "pointerWidth", position: "position", radialGradient: "radialGradient", radius: "radius", roundedCornerRadius: "roundedCornerRadius", text: "text", textStyle: "textStyle", type: "type", value: "value" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PointerDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'e-pointers>e-pointer',
                inputs: input$2,
                outputs: outputs$2,
                queries: {}
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }]; }, null); })();
    return PointerDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComplexBase"]));
/**
 * @nocollapse
 */
PointerDirective.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
]; };
/**
 * Pointer Array Directive
 */
var PointersDirective = /** @class */ (function (_super) {
    __extends(PointersDirective, _super);
    function PointersDirective() {
        return _super.call(this, 'pointers') || this;
    }
PointersDirective.ɵfac = function PointersDirective_Factory(t) { return new (t || PointersDirective)(); };
PointersDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: PointersDirective, selectors: [["e-pointers"]], contentQueries: function PointersDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, PointerDirective, false);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.children = _t);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PointersDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'ej-circulargauge>e-axes>e-axis>e-pointers',
                queries: {
                    children: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](PointerDirective)
                }
            }]
    }], function () { return []; }, null); })();
    return PointersDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ArrayBase"]));
/**
 * @nocollapse
 */
PointersDirective.ctorParameters = function () { return []; };
var input$3 = ['annotations', 'background', 'direction', 'endAngle', 'hideIntersectingLabel', 'labelStyle', 'lineStyle', 'majorTicks', 'maximum', 'minimum', 'minorTicks', 'pointers', 'radius', 'rangeGap', 'ranges', 'roundingPlaces', 'showLastLabel', 'startAndEndRangeGap', 'startAngle'];
var outputs$3 = [];
/**
 * Axes directive
 * ```html
 * <e-axes><e-axis></e-axis></e-axes>
 * ```
 */
var AxisDirective = /** @class */ (function (_super) {
    __extends(AxisDirective, _super);
    /**
     * @param {?} viewContainerRef
     */
    function AxisDirective(viewContainerRef) {
        var _this = _super.call(this) || this;
        _this.viewContainerRef = viewContainerRef;
        _this.tags = ['annotations', 'ranges', 'pointers'];
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.registerEvents(outputs$3);
        _this.directivePropList = input$3;
        return _this;
    }
AxisDirective.ɵfac = function AxisDirective_Factory(t) { return new (t || AxisDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])); };
AxisDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: AxisDirective, selectors: [["e-axis"]], contentQueries: function AxisDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, AnnotationsDirective, true);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, RangesDirective, true);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, PointersDirective, true);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.childAnnotations = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.childRanges = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.childPointers = _t.first);
    } }, inputs: { annotations: "annotations", background: "background", direction: "direction", endAngle: "endAngle", hideIntersectingLabel: "hideIntersectingLabel", labelStyle: "labelStyle", lineStyle: "lineStyle", majorTicks: "majorTicks", maximum: "maximum", minimum: "minimum", minorTicks: "minorTicks", pointers: "pointers", radius: "radius", rangeGap: "rangeGap", ranges: "ranges", roundingPlaces: "roundingPlaces", showLastLabel: "showLastLabel", startAndEndRangeGap: "startAndEndRangeGap", startAngle: "startAngle" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AxisDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'e-axes>e-axis',
                inputs: input$3,
                outputs: outputs$3,
                queries: {
                    childAnnotations: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"](AnnotationsDirective),
                    childRanges: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"](RangesDirective),
                    childPointers: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"](PointersDirective)
                }
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }]; }, null); })();
    return AxisDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComplexBase"]));
/**
 * @nocollapse
 */
AxisDirective.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
]; };
/**
 * Axis Array Directive
 */
var AxesDirective = /** @class */ (function (_super) {
    __extends(AxesDirective, _super);
    function AxesDirective() {
        return _super.call(this, 'axes') || this;
    }
AxesDirective.ɵfac = function AxesDirective_Factory(t) { return new (t || AxesDirective)(); };
AxesDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({ type: AxesDirective, selectors: [["e-axes"]], contentQueries: function AxesDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, AxisDirective, false);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.children = _t);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]] });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AxesDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
        args: [{
                selector: 'ej-circulargauge>e-axes',
                queries: {
                    children: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](AxisDirective)
                }
            }]
    }], function () { return []; }, null); })();
    return AxesDirective;
}(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ArrayBase"]));
/**
 * @nocollapse
 */
AxesDirective.ctorParameters = function () { return []; };
var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
var inputs = ['allowImageExport', 'allowMargin', 'allowPdfExport', 'allowPrint', 'axes', 'background', 'border', 'centerX', 'centerY', 'description', 'enablePersistence', 'enablePointerDrag', 'enableRangeDrag', 'enableRtl', 'height', 'legendSettings', 'locale', 'margin', 'moveToCenter', 'tabIndex', 'theme', 'title', 'titleStyle', 'tooltip', 'useGroupingSeparator', 'width'];
var outputs$4 = ['animationComplete', 'annotationRender', 'axisLabelRender', 'beforePrint', 'dragEnd', 'dragMove', 'dragStart', 'gaugeMouseDown', 'gaugeMouseLeave', 'gaugeMouseMove', 'gaugeMouseUp', 'legendRender', 'load', 'loaded', 'radiusCalculate', 'resized', 'tooltipRender'];
var twoWays = [''];
/**
 * Circular Gauge Component
 * ```html
 * <ej-circulargauge></ej-circulargauge>
 * ```
 */
var CircularGaugeComponent = /** @class */ (function (_super) {
    __extends(CircularGaugeComponent, _super);
    /**
     * @param {?} ngEle
     * @param {?} srenderer
     * @param {?} viewContainerRef
     * @param {?} injector
     */
    function CircularGaugeComponent(ngEle, srenderer, viewContainerRef, injector) {
        var _this = _super.call(this) || this;
        _this.ngEle = ngEle;
        _this.srenderer = srenderer;
        _this.viewContainerRef = viewContainerRef;
        _this.injector = injector;
        _this.tags = ['axes'];
        _this.element = _this.ngEle.nativeElement;
        _this.injectedModules = _this.injectedModules || [];
        try {
            var mod = _this.injector.get('CircularGaugeGaugeTooltip');
            if (_this.injectedModules.indexOf(mod) === -1) {
                _this.injectedModules.push(mod);
            }
        }
        catch (_a) { }
        try {
            var mod = _this.injector.get('CircularGaugeAnnotations');
            if (_this.injectedModules.indexOf(mod) === -1) {
                _this.injectedModules.push(mod);
            }
        }
        catch (_b) { }
        try {
            var mod = _this.injector.get('CircularGaugeLegend');
            if (_this.injectedModules.indexOf(mod) === -1) {
                _this.injectedModules.push(mod);
            }
        }
        catch (_c) { }
        try {
            var mod = _this.injector.get('CircularGaugePrint');
            if (_this.injectedModules.indexOf(mod) === -1) {
                _this.injectedModules.push(mod);
            }
        }
        catch (_d) { }
        try {
            var mod = _this.injector.get('CircularGaugePdfExport');
            if (_this.injectedModules.indexOf(mod) === -1) {
                _this.injectedModules.push(mod);
            }
        }
        catch (_e) { }
        try {
            var mod = _this.injector.get('CircularGaugeImageExport');
            if (_this.injectedModules.indexOf(mod) === -1) {
                _this.injectedModules.push(mod);
            }
        }
        catch (_f) { }
        try {
            var mod = _this.injector.get('CircularGaugeGradient');
            if (_this.injectedModules.indexOf(mod) === -1) {
                _this.injectedModules.push(mod);
            }
        }
        catch (_g) { }
        _this.registerEvents(outputs$4);
        _this.addTwoWay.call(_this, twoWays);
        Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["setValue"])('currentInstance', _this, _this.viewContainerRef);
        _this.context = new _syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]();
        return _this;
    }
    /**
     * @return {?}
     */
    CircularGaugeComponent.prototype.ngOnInit = function () {
        this.context.ngOnInit(this);
    };
    /**
     * @return {?}
     */
    CircularGaugeComponent.prototype.ngAfterViewInit = function () {
        this.context.ngAfterViewInit(this);
    };
    /**
     * @return {?}
     */
    CircularGaugeComponent.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy(this);
    };
    /**
     * @return {?}
     */
    CircularGaugeComponent.prototype.ngAfterContentChecked = function () {
        this.tagObjects[0].instance = this.childAxes;
        this.context.ngAfterContentChecked(this);
    };
CircularGaugeComponent.ɵfac = function CircularGaugeComponent_Factory(t) { return new (t || CircularGaugeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
CircularGaugeComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: CircularGaugeComponent, selectors: [["ejs-circulargauge"]], contentQueries: function CircularGaugeComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c1, true);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, AxesDirective, true);
    } if (rf & 2) {
        var _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.tooltip_template = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.childAxes = _t.first);
    } }, inputs: { allowImageExport: "allowImageExport", allowMargin: "allowMargin", allowPdfExport: "allowPdfExport", allowPrint: "allowPrint", axes: "axes", background: "background", border: "border", centerX: "centerX", centerY: "centerY", description: "description", enablePersistence: "enablePersistence", enablePointerDrag: "enablePointerDrag", enableRangeDrag: "enableRangeDrag", enableRtl: "enableRtl", height: "height", legendSettings: "legendSettings", locale: "locale", margin: "margin", moveToCenter: "moveToCenter", tabIndex: "tabIndex", theme: "theme", title: "title", titleStyle: "titleStyle", tooltip: "tooltip", useGroupingSeparator: "useGroupingSeparator", width: "width" }, outputs: { animationComplete: "animationComplete", annotationRender: "annotationRender", axisLabelRender: "axisLabelRender", beforePrint: "beforePrint", dragEnd: "dragEnd", dragMove: "dragMove", dragStart: "dragStart", gaugeMouseDown: "gaugeMouseDown", gaugeMouseLeave: "gaugeMouseLeave", gaugeMouseMove: "gaugeMouseMove", gaugeMouseUp: "gaugeMouseUp", legendRender: "legendRender", load: "load", loaded: "loaded", radiusCalculate: "radiusCalculate", resized: "resized", tooltipRender: "tooltipRender" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function CircularGaugeComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CircularGaugeComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ejs-circulargauge',
                inputs: inputs,
                outputs: outputs$4,
                template: '',
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
                queries: {
                    childAxes: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"](AxesDirective)
                }
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, { tooltip_template: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"],
            args: ['tooltipTemplate']
        }] }); })();
    return CircularGaugeComponent;
}(_syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["CircularGauge"]));
/**
 * @nocollapse
 */
CircularGaugeComponent.ctorParameters = function () { return [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"], },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"], },
]; };
CircularGaugeComponent.propDecorators = {
    'tooltip_template': [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"], args: ['tooltipTemplate',] },],
};
__decorate$1([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["Template"])(),
    __metadata$1("design:type", Object)
], CircularGaugeComponent.prototype, "tooltip_template", void 0);
CircularGaugeComponent = __decorate$1([
    Object(_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentMixins"])([_syncfusion_ej2_angular_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]]),
    __metadata$1("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"],
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
], CircularGaugeComponent);
/**
 * NgModule definition for the CircularGauge component.
 */
var CircularGaugeModule = /** @class */ (function () {
    function CircularGaugeModule() {
    }
CircularGaugeModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: CircularGaugeModule });
CircularGaugeModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function CircularGaugeModule_Factory(t) { return new (t || CircularGaugeModule)(); }, imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](CircularGaugeModule, { declarations: function () { return [CircularGaugeComponent,
        AnnotationDirective,
        AnnotationsDirective,
        RangeDirective,
        RangesDirective,
        PointerDirective,
        PointersDirective,
        AxisDirective,
        AxesDirective]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]; }, exports: function () { return [CircularGaugeComponent,
        AnnotationDirective,
        AnnotationsDirective,
        RangeDirective,
        RangesDirective,
        PointerDirective,
        PointersDirective,
        AxisDirective,
        AxesDirective]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CircularGaugeModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
                declarations: [
                    CircularGaugeComponent,
                    AnnotationDirective,
                    AnnotationsDirective,
                    RangeDirective,
                    RangesDirective,
                    PointerDirective,
                    PointersDirective,
                    AxisDirective,
                    AxesDirective
                ],
                exports: [
                    CircularGaugeComponent,
                    AnnotationDirective,
                    AnnotationsDirective,
                    RangeDirective,
                    RangesDirective,
                    PointerDirective,
                    PointersDirective,
                    AxisDirective,
                    AxesDirective
                ]
            }]
    }], function () { return []; }, null); })();
    return CircularGaugeModule;
}());
/**
 * @nocollapse
 */
CircularGaugeModule.ctorParameters = function () { return []; };
var GaugeTooltipService = { provide: 'CircularGaugeGaugeTooltip', useValue: _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["GaugeTooltip"] };
var AnnotationsService = { provide: 'CircularGaugeAnnotations', useValue: _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Annotations"] };
var LegendService = { provide: 'CircularGaugeLegend', useValue: _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Legend"] };
var PrintService = { provide: 'CircularGaugePrint', useValue: _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Print"] };
var PdfExportService = { provide: 'CircularGaugePdfExport', useValue: _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["PdfExport"] };
var ImageExportService = { provide: 'CircularGaugeImageExport', useValue: _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["ImageExport"] };
var GradientService = { provide: 'CircularGaugeGradient', useValue: _syncfusion_ej2_circulargauge__WEBPACK_IMPORTED_MODULE_2__["Gradient"] };
/**
 * NgModule definition for the CircularGauge component with providers.
 */
var CircularGaugeAllModule = /** @class */ (function () {
    function CircularGaugeAllModule() {
    }
CircularGaugeAllModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: CircularGaugeAllModule });
CircularGaugeAllModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function CircularGaugeAllModule_Factory(t) { return new (t || CircularGaugeAllModule)(); }, providers: [
        GaugeTooltipService,
        AnnotationsService,
        LegendService,
        PrintService,
        PdfExportService,
        ImageExportService,
        GradientService
    ], imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], CircularGaugeModule],
        CircularGaugeModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](CircularGaugeAllModule, { imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
        CircularGaugeModule]; }, exports: function () { return [CircularGaugeModule]; } }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CircularGaugeAllModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], CircularGaugeModule],
                exports: [
                    CircularGaugeModule
                ],
                providers: [
                    GaugeTooltipService,
                    AnnotationsService,
                    LegendService,
                    PrintService,
                    PdfExportService,
                    ImageExportService,
                    GradientService
                ]
            }]
    }], function () { return []; }, null); })();
    return CircularGaugeAllModule;
}());
/**
 * @nocollapse
 */
CircularGaugeAllModule.ctorParameters = function () { return []; };
/**
 * Generated bundle index. Do not edit.
 */



//# sourceMappingURL=ej2-angular-circulargauge.es5.js.map

/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/index.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/index.js ***!
  \***************************************************************************************************************/
/*! exports provided: ComplexBase, ArrayBase, ComponentBase, FormBase, applyMixins, ComponentMixins, registerEvents, clearTemplate, setValue, compile, Template */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComplexBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ComplexBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ArrayBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ComponentBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FormBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["FormBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyMixins", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["applyMixins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentMixins", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ComponentMixins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "registerEvents", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["registerEvents"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clearTemplate", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["clearTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["compile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Template", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Template"]; });

/**
 * index
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/complex-array-base.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/complex-array-base.js ***!
  \********************************************************************************************************************************/
/*! exports provided: ComplexBase, ArrayBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexBase", function() { return ComplexBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayBase", function() { return ArrayBase; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/util.js");


var refRegex = /Ref$/;
var ComplexBase = /** @class */ (function () {
    function ComplexBase() {
        this.hasChanges = false;
        this.propCollection = {};
        this.dataSource = {};
        this.tags = [];
        this.tagObjects = [];
    }
    ComplexBase.prototype.ngOnInit = function () {
        this.registeredTemplate = {};
        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {
            var tag = _a[_i];
            var objInstance = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);
            if (objInstance) {
                this.tagObjects.push({ instance: objInstance, name: tag });
            }
        }
        var templateProperties = Object.keys(this);
        for (var i = 0; i < templateProperties.length; i++) {
            var tempProp = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(templateProperties[i], this);
            if (typeof tempProp === 'object' && tempProp && tempProp.elementRef && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(templateProperties[i].indexOf('Ref') !== -1 ? templateProperties[i] : templateProperties[i] + 'Ref', this)) {
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(templateProperties[i].indexOf('Ref') !== -1 ? templateProperties[i] : templateProperties[i] + 'Ref', tempProp, this);
            }
        }
        templateProperties = Object.keys(this);
        templateProperties = templateProperties.filter(function (val) {
            return /Ref$/i.test(val);
        });
        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {
            var tempName = templateProperties_1[_b];
            var propName = tempName.replace('Ref', '');
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(propName.replace('_', '.'), Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(propName, this), this.propCollection);
        }
        // Angular 9 compatibility to overcome ngOnchange not get triggered issue
        // To Update properties to "this.propCollection"
        var propList = Object.keys(this);
        /* istanbul ignore next */
        if (this.directivePropList) {
            for (var k = 0; k < this.directivePropList.length; k++) {
                var dirPropName = this.directivePropList[k];
                if (propList.indexOf(dirPropName) !== -1 && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(dirPropName, this)) {
                    Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(dirPropName, Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(dirPropName, this), this.propCollection);
                }
            }
            this.hasChanges = true;
        }
        this.isInitChanges = true;
    };
    ComplexBase.prototype.registerEvents = function (eventList) {
        Object(_util__WEBPACK_IMPORTED_MODULE_1__["registerEvents"])(eventList, this, true);
    };
    ComplexBase.prototype.ngOnChanges = function (changes) {
        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {
            var propName = _a[_i];
            var changedVal = changes[propName];
            this.propCollection[propName] = changedVal.currentValue;
        }
        this.isUpdated = false;
        this.hasChanges = true;
    };
    /* istanbul ignore next */
    ComplexBase.prototype.clearTemplate = function (templateNames) {
        Object(_util__WEBPACK_IMPORTED_MODULE_1__["clearTemplate"])(this, templateNames);
    };
    ComplexBase.prototype.getProperties = function () {
        /* istanbul ignore next */
        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {
            var tagObject = _a[_i];
            this.propCollection[tagObject.name] = tagObject.instance.getProperties();
        }
        return this.propCollection;
    };
    ComplexBase.prototype.isChanged = function () {
        var result = this.hasChanges;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.propCollection[this.property])) {
            var tempProps = this.propCollection[this.property];
            var props = Object.keys(tempProps[0]);
            for (var d = 0; d < props.length; d++) {
                if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.propCollection[props[d]])) {
                    var val = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(props[d], this);
                    var propVal = this.propCollection[this.property][0][props[d]];
                    if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(val) && this.propCollection[props[d]] !== val
                        && propVal !== val) {
                        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(props[d], val, this.propCollection[this.property][0]);
                        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(props[d], val, this.propCollection);
                        this.hasChanges = true;
                        this.isUpdated = false;
                    }
                }
            }
        }
        /* istanbul ignore next */
        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {
            var item = _a[_i];
            result = result || item.instance.hasChanges;
        }
        return result || this.hasChanges;
    };
    ComplexBase.prototype.ngAfterContentChecked = function () {
        this.hasChanges = this.isChanged();
        if (this.isInitChanges || this.hasChanges) {
            var templateProperties = Object.keys(this);
            templateProperties = templateProperties.filter(function (val) {
                return refRegex.test(val);
            });
            for (var _i = 0, templateProperties_2 = templateProperties; _i < templateProperties_2.length; _i++) {
                var tempName = templateProperties_2[_i];
                var propName = tempName.replace('Ref', '');
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(propName.replace('_', '.'), Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(propName, this), this.propCollection);
            }
        }
    };
    ComplexBase.prototype.ngAfterViewChecked = function () {
        /* istanbul ignore next */
        if (this.isUpdated) {
            this.hasChanges = false;
        }
    };
    ComplexBase.prototype.ngAfterViewInit = function () {
        /* istanbul ignore next */
        this.isInitChanges = false;
    };
    ComplexBase.prototype.ngOnDestroy = function () {
        /* istanbul ignore next */
        this.directivePropList = [];
    };
    return ComplexBase;
}());

var ArrayBase = /** @class */ (function () {
    function ArrayBase(propertyName) {
        this.list = [];
        this.hasChanges = false;
        this.propertyName = propertyName;
    }
    ArrayBase.prototype.ngOnInit = function () {
        this.isInitChanges = true;
    };
    ArrayBase.prototype.ngAfterContentInit = function () {
        var _this = this;
        var index = 0;
        /* istanbul ignore next */
        this.list = this.children.map(function (child) {
            child.dirIndex = index++;
            child.property = _this.propertyName;
            return child;
        });
        this.hasChanges = true;
    };
    ArrayBase.prototype.getProperties = function () {
        var onlyProp = [];
        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
            var item = _a[_i];
            onlyProp.push(item.getProperties());
        }
        return onlyProp;
    };
    ArrayBase.prototype.isChanged = function () {
        var _this = this;
        var result = false;
        var index = 0;
        var isSourceChanged = false;
        // tslint:disable-next-line
        var childrenDataSource = this.children.map(function (child) {
            return child;
        });
        /* istanbul ignore next */
        if (this.list.length === this.children.length) {
            for (var i = 0; i < this.list.length; i++) {
                if (this.list[i].propCollection.dataSource) {
                    if (this.list[i].dataSource && this.list[i].propCollection.dataSource !== this.list[i].dataSource) {
                        this.list[i].propCollection.dataSource = this.list[i].dataSource;
                        this.list[i].hasChanges = true;
                    }
                }
                if (this.list[i].hasChanges !== childrenDataSource[i].hasChanges) {
                    isSourceChanged = true;
                }
            }
        }
        this.hasNewChildren = (this.list.length !== this.children.length || isSourceChanged) ? true : null;
        if (this.hasNewChildren) {
            this.list = this.children.map(function (child) {
                child.dirIndex = index++;
                child.property = _this.propertyName;
                return child;
            });
        }
        /* istanbul ignore end */
        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
            var item = _a[_i];
            result = result || item.hasChanges;
        }
        return !!this.list.length && result;
    };
    ArrayBase.prototype.clearTemplate = function (templateNames) {
        var _this = this;
        /* istanbul ignore next */
        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {
            var item = _a[_i];
            item.clearTemplate(templateNames && templateNames.map(function (val) {
                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;
            }));
        }
    };
    ArrayBase.prototype.ngAfterContentChecked = function () {
        this.hasChanges = this.isChanged();
        for (var i = 0; i < this.list.length; i++) {
            if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('childColumns', this.list[i]) && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('property', this.list[i]) === 'columns') {
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])('columns', Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('childColumns', this.list[i]).getProperties(), this.list[i].propCollection);
            }
            this.list[i].isUpdated = true;
        }
    };
    ArrayBase.prototype.ngAfterViewInit = function () {
        this.isInitChanges = false;
    };
    ArrayBase.prototype.ngOnDestroy = function () {
        this.list = [];
    };
    return ArrayBase;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/component-base.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/component-base.js ***!
  \****************************************************************************************************************************/
/*! exports provided: ComponentBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentBase", function() { return ComponentBase; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/util.js");
/**
 * Angular Component Base Module
 */



var SVG_REG = /^svg|^path|^g/;
var ComponentBase = /** @class */ (function () {
    function ComponentBase() {
        this.isProtectedOnChange = true;
        this.isFormInit = true;
    }
    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {
        if (this.isProtectedOnChange) {
            return;
        }
        this.oldProperties[key] = oldValue;
        this.changedProperties[key] = newValue;
        this.finalUpdate();
        // tslint:disable-next-line:no-any
        var changeTime = setTimeout(this.dataBind.bind(this));
        var clearUpdate = function () {
            clearTimeout(changeTime);
        };
        this.finalUpdate = clearUpdate;
    };
    ;
    // tslint:disable-next-line:no-any
    ComponentBase.prototype.ngOnInit = function (isTempRef) {
        // tslint:disable-next-line:no-any
        var tempOnThis = isTempRef || this;
        tempOnThis.registeredTemplate = {};
        tempOnThis.ngBoundedEvents = {};
        tempOnThis.isAngular = true;
        tempOnThis.isFormInit = true;
        /* istanbul ignore next */
        if (isTempRef) {
            this.tags = isTempRef.tags;
        }
        tempOnThis.tags = this.tags || [];
        tempOnThis.complexTemplate = this.complexTemplate || [];
        tempOnThis.tagObjects = [];
        tempOnThis.ngAttr = this.getAngularAttr(tempOnThis.element);
        /* istanbul ignore next */
        tempOnThis.createElement = function (tagName, prop) {
            //tslint:disable-next-line
            var ele = tempOnThis.srenderer ? tempOnThis.srenderer.createElement(tagName) : Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])(tagName);
            if (typeof (prop) === 'undefined') {
                return ele;
            }
            ele.innerHTML = (prop.innerHTML ? prop.innerHTML : '');
            if (prop.className !== undefined) {
                ele.className = prop.className;
            }
            if (prop.id !== undefined) {
                ele.id = prop.id;
            }
            if (prop.styles !== undefined) {
                ele.setAttribute('style', prop.styles);
            }
            if (tempOnThis.ngAttr !== undefined) {
                ele.setAttribute(tempOnThis.ngAttr, '');
            }
            if (prop.attrs !== undefined) {
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["attributes"])(ele, prop.attrs);
            }
            return ele;
        };
        for (var _i = 0, _a = tempOnThis.tags; _i < _a.length; _i++) {
            var tag = _a[_i];
            var tagObject = {
                instance: Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tempOnThis),
                name: tag
            };
            tempOnThis.tagObjects.push(tagObject);
        }
        var complexTemplates = Object.keys(tempOnThis);
        for (var i = 0; i < complexTemplates.length; i++) {
            var compProp = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(complexTemplates[i], tempOnThis);
            if (typeof compProp === 'object' && compProp && compProp.elementRef && complexTemplates[i].indexOf('_') !== -1 && complexTemplates[i].indexOf('Ref') === -1) {
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(complexTemplates[i] + 'Ref', compProp, tempOnThis);
            }
        }
        complexTemplates = Object.keys(tempOnThis);
        complexTemplates = complexTemplates.filter(function (val) {
            return /Ref$/i.test(val) && /\_/i.test(val);
        });
        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {
            var tempName = complexTemplates_1[_b];
            var propName = tempName.replace('Ref', '');
            var val = {};
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(propName.replace('_', '.'), Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(propName, tempOnThis), val);
            tempOnThis.setProperties(val, true);
        }
    };
    ComponentBase.prototype.getAngularAttr = function (ele) {
        var attributes = ele.attributes;
        var length = attributes.length;
        var ngAr;
        for (var i = 0; i < length; i++) {
            /* istanbul ignore next */
            if (/_ngcontent/g.test(attributes[i].name)) {
                ngAr = attributes[i].name;
            }
        }
        return ngAr;
    };
    ;
    // tslint:disable-next-line:no-any
    ComponentBase.prototype.ngAfterViewInit = function (isTempRef) {
        // tslint:disable-next-line:no-any
        var tempAfterViewThis = isTempRef || this;
        var regExp = /ejs-tab|ejs-accordion/g;
        /* istanbul ignore next */
        if (regExp.test(tempAfterViewThis.ngEle.nativeElement.outerHTML)) {
            tempAfterViewThis.ngEle.nativeElement.style.visibility = 'hidden';
        }
        /**
         * Root level template properties are not getting rendered,
         * Due to ngonchanges not get triggered.
         * so that we have set template value for root level template properties,
         * for example: refer below syntax
         * ```html
         * <ejs-grid>
         * <e-column></e-column>
         * <ng-template #editSettingsTemplate></ng-template>
         * </ejs-grid>
         * ```
         */
        var templateProperties = Object.keys(tempAfterViewThis);
        templateProperties = templateProperties.filter(function (val) {
            return /Ref$/i.test(val);
        });
        for (var _i = 0, templateProperties_1 = templateProperties; _i < templateProperties_1.length; _i++) {
            var tempName = templateProperties_1[_i];
            var propName = tempName.replace('Ref', '');
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(propName.replace('_', '.'), Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(propName + 'Ref', tempAfterViewThis), tempAfterViewThis);
        }
        // Used setTimeout for template binding
        // Refer Link: https://github.com/angular/angular/issues/6005
        setTimeout(function () {
            /* istanbul ignore else  */
            if (typeof window !== 'undefined' && document.body.contains(tempAfterViewThis.element) || tempAfterViewThis.getModuleName().includes('btn')) {
                tempAfterViewThis.appendTo(tempAfterViewThis.element);
                tempAfterViewThis.ngEle.nativeElement.style.visibility = '';
            }
        });
    };
    // tslint:disable-next-line:no-any
    ComponentBase.prototype.ngOnDestroy = function (isTempRef) {
        // tslint:disable-next-line:no-any
        var tempOnDestroyThis = isTempRef || this;
        /* istanbul ignore else  */
        setTimeout(function () {
            if (typeof window !== 'undefined' && (tempOnDestroyThis.element.classList.contains('e-control'))) {
                tempOnDestroyThis.destroy();
                tempOnDestroyThis.clearTemplate(null);
                // removing bounded events and tagobjects from component after destroy
                tempOnDestroyThis.ngBoundedEvents = {};
                tempOnDestroyThis.tagObjects = {};
                tempOnDestroyThis.ngEle = null;
            }
        });
    };
    //tslint:disable-next-line
    ComponentBase.prototype.clearTemplate = function (templateNames, index) {
        Object(_util__WEBPACK_IMPORTED_MODULE_2__["clearTemplate"])(this, templateNames, index);
    };
    ;
    // tslint:disable-next-line:no-any
    ComponentBase.prototype.ngAfterContentChecked = function (isTempRef) {
        // tslint:disable-next-line:no-any
        var tempAfterContentThis = isTempRef || this;
        for (var _i = 0, _a = tempAfterContentThis.tagObjects; _i < _a.length; _i++) {
            var tagObject = _a[_i];
            if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(tagObject.instance) &&
                (tagObject.instance.isInitChanges || tagObject.instance.hasChanges || tagObject.instance.hasNewChildren)) {
                if (tagObject.instance.isInitChanges) {
                    var propObj = {};
                    // For angular 9 compatibility
                    // Not able to get complex directive properties reference ni Onint hook
                    // So we have constructed property here and used
                    var complexDirProps = void 0;
                    var list = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('instance.list', tagObject);
                    if (list && list.length) {
                        complexDirProps = list[0].directivePropList;
                    }
                    var skip = true;
                    if (tempAfterContentThis.getModuleName && tempAfterContentThis.getModuleName() === 'gantt') {
                        skip = false;
                    }
                    if (complexDirProps && skip && complexDirProps.indexOf(tagObject.instance.propertyName) === -1) {
                        var compDirPropList = Object.keys(tagObject.instance.list[0].propCollection);
                        for (var h = 0; h < tagObject.instance.list.length; h++) {
                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName] = [];
                            var obj = {};
                            for (var k = 0; k < compDirPropList.length; k++) {
                                var complexPropName = compDirPropList[k];
                                obj[complexPropName] = tagObject.instance.list[h].propCollection[complexPropName];
                            }
                            for (var i = 0; i < tagObject.instance.list[h].tags.length; i++) {
                                var tag = tagObject.instance.list[h].tags[i];
                                var childObj = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tagObject.instance.list[h]);
                                if (childObj) {
                                    var innerchildObj = tagObject.instance.list[h]['child' + tag.substring(0, 1).toUpperCase() + tag.substring(1)];
                                    if (innerchildObj) {
                                        for (var j = 0; j < innerchildObj.list.length; j++) {
                                            var innerTag = innerchildObj.list[0].tags[0];
                                            if (innerTag) {
                                                var innerchildTag = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('child' + innerTag.substring(0, 1).toUpperCase() + innerTag.substring(1), innerchildObj.list[j]);
                                                if (innerchildTag) {
                                                    innerchildObj.list[j].tagObjects.push({ instance: innerchildTag, name: innerTag });
                                                }
                                            }
                                        }
                                    }
                                    tagObject.instance.list[h].tagObjects.push({ instance: childObj, name: tag });
                                }
                            }
                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName].push(obj);
                        }
                    }
                    // End angular 9 compatibility
                    propObj[tagObject.name] = tagObject.instance.getProperties();
                    tempAfterContentThis.setProperties(propObj, tagObject.instance.isInitChanges);
                }
                else {
                    /* istanbul ignore next */
                    if ((tempAfterContentThis[tagObject.name].length !== tagObject.instance.list.length) || (/diagram|tab/.test(tempAfterContentThis.getModuleName()))) {
                        tempAfterContentThis[tagObject.name] = tagObject.instance.list;
                    }
                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {
                        var list = _c[_b];
                        var curIndex = tagObject.instance.list.indexOf(list);
                        var curChild = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(tagObject.name, tempAfterContentThis)[curIndex];
                        var complexTemplates = Object.keys(curChild);
                        complexTemplates = complexTemplates.filter(function (val) {
                            return /Ref$/i.test(val);
                        });
                        if (curChild.properties && Object.keys(curChild.properties).length !== 0 && /chart/.test(tempAfterContentThis.getModuleName())) {
                            for (var _d = 0, complexTemplates_2 = complexTemplates; _d < complexTemplates_2.length; _d++) {
                                var complexPropName = complexTemplates_2[_d];
                                complexPropName = complexPropName.replace(/Ref/, '');
                                curChild.properties[complexPropName] = !curChild.properties[complexPropName] ?
                                    curChild.propCollection[complexPropName] : curChild.properties[complexPropName];
                            }
                        }
                        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(curChild) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(curChild.setProperties)) {
                            if (/diagram|DashboardLayout/.test(tempAfterContentThis.getModuleName())) {
                                curChild.setProperties(list.getProperties(), true);
                            }
                            else {
                                curChild.setProperties(list.getProperties());
                            }
                        }
                        list.isUpdated = true;
                    }
                }
            }
        }
    };
    ComponentBase.prototype.registerEvents = function (eventList) {
        Object(_util__WEBPACK_IMPORTED_MODULE_2__["registerEvents"])(eventList, this);
    };
    ComponentBase.prototype.twoWaySetter = function (newVal, prop) {
        var oldVal = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(prop, this.properties);
        if (oldVal === newVal) {
            return;
        }
        this.saveChanges(prop, newVal, oldVal);
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(prop, (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(newVal) ? null : newVal), this.properties);
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(prop + 'Change', this).emit(newVal);
    };
    ComponentBase.prototype.addTwoWay = function (propList) {
        var _this = this;
        var _loop_1 = function (prop) {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(prop, this_1);
            Object.defineProperty(this_1, prop, {
                get: function () {
                    return Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(prop, _this.properties);
                },
                set: function (newVal) { return _this.twoWaySetter(newVal, prop); }
            });
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(prop + 'Change', new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"](), this_1);
        };
        var this_1 = this;
        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {
            var prop = propList_1[_i];
            _loop_1(prop);
        }
    };
    ComponentBase.prototype.addEventListener = function (eventName, handler) {
        var eventObj = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(eventName, this);
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(eventObj)) {
            if (!this.ngBoundedEvents[eventName]) {
                this.ngBoundedEvents[eventName] = new Map();
            }
            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));
        }
    };
    ComponentBase.prototype.removeEventListener = function (eventName, handler) {
        var eventObj = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(eventName, this);
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(eventObj)) {
            this.ngBoundedEvents[eventName].get(handler).unsubscribe();
        }
    };
    ComponentBase.prototype.trigger = function (eventName, eventArgs, success) {
        var eventObj = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(eventName, this);
        var prevDetection = this.isProtectedOnChange;
        this.isProtectedOnChange = false;
        if (eventArgs) {
            eventArgs.name = eventName;
        }
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(eventObj)) {
            eventObj.next(eventArgs);
        }
        var localEventObj = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(localEventObj)) {
            localEventObj.call(this, eventArgs);
        }
        this.isProtectedOnChange = prevDetection;
        /* istanbul ignore else  */
        if (success) {
            this.preventChange = this.isPreventChange;
            success.call(this, eventArgs);
        }
        this.isPreventChange = false;
    };
    return ComponentBase;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/form-base.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/form-base.js ***!
  \***********************************************************************************************************************/
/*! exports provided: FormBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormBase", function() { return FormBase; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");

/**
 * Angular Form Base Module
 */
var FormBase = /** @class */ (function () {
    function FormBase() {
    }
    FormBase.prototype.propagateChange = function (_) { return; };
    FormBase.prototype.propagateTouch = function () { return; };
    FormBase.prototype.localChange = function (e) {
        //tslint:disable-next-line
        var value = (e.checked === undefined ? e.value : e.checked);
        this.objCheck = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isObject"])(value);
        if (this.isUpdated === true) {
            this.angularValue = this.oldValue;
        }
        if (this.objCheck === true) {
            this.duplicateValue = JSON.stringify(value);
            this.duplicateAngularValue = JSON.stringify(this.angularValue);
            if (this.duplicateValue !== this.duplicateAngularValue && this.propagateChange !== undefined && value !== undefined) {
                // Update angular from our control
                this.propagateChange(value);
                this.angularValue = value;
            }
        }
        else {
            if (value !== this.angularValue && this.propagateChange !== undefined && value !== undefined) {
                // While reset form using reset() method ng-dirty not get updated, so while value is empty just update angularValue only
                if (value !== '' && value !== null) {
                    // Update angular from our control
                    this.propagateChange(value);
                    this.angularValue = value;
                }
                else {
                    //tslint:disable-next-line
                    var optionalValue = value;
                    this.propagateChange(optionalValue);
                    this.angularValue = value;
                }
            }
        }
    };
    FormBase.prototype.registerOnChange = function (registerFunction) {
        this.propagateChange = registerFunction;
    };
    FormBase.prototype.registerOnTouched = function (registerFunction) {
        this.propagateTouch = registerFunction;
    };
    FormBase.prototype.twoWaySetter = function (newVal, prop) {
        var oldVal = this.oldValue || Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(prop, this.properties);
        var ele = this.inputElement || this.element;
        if (ele && oldVal === newVal && this.value === newVal &&
            (ele.value === undefined || ele.value === '')) {
            return;
        }
        this.saveChanges(prop, newVal, oldVal);
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(prop, (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(newVal) ? null : newVal), this.properties);
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(prop + 'Change', this).emit(newVal);
    };
    // tslint:disable-next-line:no-any
    FormBase.prototype.ngAfterViewInit = function (isTempRef) {
        // tslint:disable-next-line:no-any
        var tempFormAfterViewThis = isTempRef || this;
        // Used setTimeout for template binding
        // Refer Link: https://github.com/angular/angular/issues/6005
        // Removed setTimeout, Because we have called markForCheck() method in Angular Template Compiler
        // setTimeout(() => {
        /* istanbul ignore else */
        if (typeof window !== 'undefined') {
            tempFormAfterViewThis.appendTo(tempFormAfterViewThis.element);
            var ele = tempFormAfterViewThis.inputElement || tempFormAfterViewThis.element;
            ele.addEventListener('focus', tempFormAfterViewThis.ngOnFocus.bind(tempFormAfterViewThis));
            ele.addEventListener('blur', tempFormAfterViewThis.ngOnBlur.bind(tempFormAfterViewThis));
        }
        this.isFormInit = false;
        // });
    };
    FormBase.prototype.setDisabledState = function (disabled) {
        this.enabled = !disabled;
        this.disabled = disabled;
    };
    FormBase.prototype.writeValue = function (value) {
        var regExp = /ejs-radiobutton/g;
        //update control value from angular
        if (this.checked === undefined) {
            this.value = value;
        }
        else {
            // To resolve boolean type formControl value is not working for radio button control.
            /* istanbul ignore next */
            if (this.ngEle) {
                if (typeof value === 'boolean') {
                    if (regExp.test(this.ngEle.nativeElement.outerHTML)) {
                        this.checked = value === this.value;
                    }
                    else {
                        this.checked = value;
                    }
                }
                else {
                    this.checked = value === this.value;
                }
            }
        }
        this.angularValue = value;
        this.isUpdated = true;
        // When binding Html textbox value to syncfusion textbox, change event triggered dynamically.
        // To prevent change event, trigger change in component side based on `preventChange` value
        this.preventChange = this.isFormInit ? false : true;
        if (value === null) {
            return;
        }
    };
    FormBase.prototype.ngOnFocus = function (e) {
        /* istanbul ignore else */
        if (this.skipFromEvent !== true) {
            this.focus.emit(e);
        }
    };
    FormBase.prototype.ngOnBlur = function (e) {
        this.propagateTouch();
        /* istanbul ignore else */
        if (this.skipFromEvent !== true) {
            this.blur.emit(e);
        }
    };
    FormBase.isFormBase = true;
    return FormBase;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/index.js ***!
  \*******************************************************************************************************************/
/*! exports provided: ComplexBase, ArrayBase, ComponentBase, FormBase, applyMixins, ComponentMixins, registerEvents, clearTemplate, setValue, compile, Template */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _complex_array_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./complex-array-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/complex-array-base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComplexBase", function() { return _complex_array_base__WEBPACK_IMPORTED_MODULE_0__["ComplexBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArrayBase", function() { return _complex_array_base__WEBPACK_IMPORTED_MODULE_0__["ArrayBase"]; });

/* harmony import */ var _component_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./component-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/component-base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentBase", function() { return _component_base__WEBPACK_IMPORTED_MODULE_1__["ComponentBase"]; });

/* harmony import */ var _form_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./form-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/form-base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FormBase", function() { return _form_base__WEBPACK_IMPORTED_MODULE_2__["FormBase"]; });

/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/util.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "applyMixins", function() { return _util__WEBPACK_IMPORTED_MODULE_3__["applyMixins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComponentMixins", function() { return _util__WEBPACK_IMPORTED_MODULE_3__["ComponentMixins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "registerEvents", function() { return _util__WEBPACK_IMPORTED_MODULE_3__["registerEvents"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "clearTemplate", function() { return _util__WEBPACK_IMPORTED_MODULE_3__["clearTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return _util__WEBPACK_IMPORTED_MODULE_3__["setValue"]; });

/* harmony import */ var _template__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/template.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _template__WEBPACK_IMPORTED_MODULE_4__["compile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Template", function() { return _template__WEBPACK_IMPORTED_MODULE_4__["Template"]; });

/**
 * Index
 */







/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/template.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/template.js ***!
  \**********************************************************************************************************************/
/*! exports provided: compile, Template */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return compile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Template", function() { return Template; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");


var stringCompiler = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getTemplateEngine"])();
/**
 * Angular Template Compiler
 */
function compile(templateEle, helper) {
    if (typeof templateEle === 'string') {
        return stringCompiler(templateEle, helper);
    }
    else {
        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;
        var pName_1 = templateEle.elementRef.nativeElement.propName;
        //tslint:disable-next-line        
        return function (data, component, propName) {
            var context = { $implicit: data };
            /* istanbul ignore next */
            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;
            var viewRef = conRef.createEmbeddedView(templateEle, context);
            viewRef.markForCheck();
            /* istanbul ignore next */
            var viewCollection = (component && component.registeredTemplate) ?
                component.registeredTemplate : Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])('currentInstance.registeredTemplate', conRef);
            propName = (propName && component.registeredTemplate) ? propName : pName_1;
            if (typeof viewCollection[propName] === 'undefined') {
                viewCollection[propName] = [];
            }
            viewCollection[propName].push(viewRef);
            return viewRef.rootNodes;
        };
    }
}
/**
 * Property decorator for angular.
 */
function Template(defaultValue) {
    return function (target, key) {
        var propertyDescriptor = {
            set: setter(key),
            get: getter(key, defaultValue),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, propertyDescriptor);
    };
}
function setter(key) {
    return function (val) {
        if (val === undefined) {
            return;
        }
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setValue"])(key + 'Ref', val, this);
        if (typeof val !== 'string') {
            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;
            val.elementRef.nativeElement.propName = key;
        }
        else {
            if (this.saveChanges) {
                this.saveChanges(key, val, undefined);
                this.dataBind();
            }
        }
    };
}
function getter(key, defaultValue) {
    return function () {
        /* istanbul ignore next */
        return Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["getValue"])(key + 'Ref', this) || defaultValue;
    };
}
//tslint:disable-next-line
Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setTemplateEngine"])({ compile: compile });


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/util.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-angular-base/src/util.js ***!
  \******************************************************************************************************************/
/*! exports provided: applyMixins, ComponentMixins, registerEvents, clearTemplate, setValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyMixins", function() { return applyMixins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentMixins", function() { return ComponentMixins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerEvents", function() { return registerEvents; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearTemplate", function() { return clearTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return setValue; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");


/**
 * Angular Utility Module
 */
/* tslint:disable */
function applyMixins(derivedClass, baseClass) {
    baseClass.forEach(function (baseClass) {
        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {
            if (!derivedClass.prototype.hasOwnProperty(name) || baseClass.isFormBase) {
                derivedClass.prototype[name] = baseClass.prototype[name];
            }
        });
    });
}
/* tslint:disable */
function ComponentMixins(baseClass) {
    return function (derivedClass) {
        applyMixins(derivedClass, baseClass);
    };
}
/**
 * @private
 */
function registerEvents(eventList, obj, direct) {
    var ngEventsEmitter = {};
    if (eventList && eventList.length) {
        for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {
            var event_1 = eventList_1[_i];
            if (direct === true) {
                obj.propCollection[event_1] = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"](false);
                obj[event_1] = obj.propCollection[event_1];
            }
            else {
                ngEventsEmitter[event_1] = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"](false);
            }
        }
        if (direct !== true) {
            obj.setProperties(ngEventsEmitter, true);
        }
    }
}
/**
 * @private
 */
function clearTemplate(_this, templateNames, index) {
    var regTemplates = Object.keys(_this.registeredTemplate);
    if (regTemplates.length) {
        /* istanbul ignore next */
        var regProperties = templateNames && templateNames.filter(function (val) {
            return (/\./g.test(val) ? false : true);
        });
        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {
            var registeredTemplate = _a[_i];
            /* istanbul ignore next */
            if (index && index.length) {
                for (var e = 0; e < index.length; e++) {
                    for (var m = 0; m < _this.registeredTemplate.template.length; m++) {
                        var value = _this.registeredTemplate.template[m].rootNodes[0];
                        if (value === index[e]) {
                            var rt = _this.registeredTemplate[registeredTemplate];
                            rt[m].destroy();
                        }
                    }
                }
            }
            else {
                if (_this.registeredTemplate[registeredTemplate]) {
                    for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {
                        var rt = _c[_b];
                        if (!rt.destroyed) {
                            if (rt._view) {
                                var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);
                                if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(pNode)) {
                                    for (var m = 0; m < rt.rootNodes.length; m++) {
                                        pNode.appendChild(rt.rootNodes[m]);
                                    }
                                }
                            }
                            rt.destroy();
                        }
                    }
                }
            }
            delete _this.registeredTemplate[registeredTemplate];
        }
    }
    var _loop_1 = function (tagObject) {
        if (tagObject.instance) {
            /* istanbul ignore next */
            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {
                return (new RegExp(tagObject.name).test(val) ? true : false);
            })));
        }
    };
    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {
        var tagObject = _e[_d];
        _loop_1(tagObject);
    }
}
/**
 * To set value for the nameSpace in desired object.
 * @param {string} nameSpace - String value to the get the inner object
 * @param {any} value - Value that you need to set.
 * @param {any} obj - Object to get the inner object value.
 * @return {void}
 * @private
 */
function setValue(nameSpace, value, object) {
    var keys = nameSpace.replace(/\[/g, '.').replace(/\]/g, '').split('.');
    /* istanbul ignore next */
    var fromObj = object || {};
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (i + 1 === keys.length) {
            fromObj[key] = value === undefined ? {} : value;
        }
        else if (fromObj[key] === undefined) {
            fromObj[key] = {};
        }
        fromObj = fromObj[key];
    }
    return fromObj;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js ***!
  \*******************************************************************************************************/
/*! exports provided: blazorCultureFormats, IntlBase, Ajax, Animation, rippleEffect, isRippleEnabled, enableRipple, Base, getComponent, removeChildInstance, Browser, versionBasedStatePersistence, enableVersionBasedPersistence, Component, ChildProperty, Position, Draggable, Droppable, EventHandler, onIntlChange, rightToLeft, cldrData, defaultCulture, defaultCurrencyCode, Internationalization, setCulture, setCurrencyCode, loadCldr, enableRtl, getNumericObject, getNumberDependable, getDefaultDateObject, KeyboardEvents, L10n, ModuleLoader, Property, Complex, ComplexFactory, Collection, CollectionFactory, Event, NotifyPropertyChanges, CreateBuilder, SwipeSettings, Touch, HijriParser, blazorTemplates, getRandomId, compile, updateBlazorTemplate, resetBlazorTemplate, setTemplateEngine, getTemplateEngine, disableBlazorMode, createInstance, setImmediate, getValue, setValue, deleteObject, isObject, getEnumValue, merge, extend, isNullOrUndefined, isUndefined, getUniqueID, debounce, queryParams, isObjectArray, compareElementParent, throwError, print, formatUnit, enableBlazorMode, isBlazor, getElement, getInstance, addInstance, uniqueID, createElement, addClass, removeClass, isVisible, prepend, append, detach, remove, attributes, select, selectAll, closest, siblings, getAttributeOrDefault, setStyleAttribute, classList, matches, includeInnerHTML, containsClass, cloneNode, Observer, SanitizeHtmlHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blazorCultureFormats", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["blazorCultureFormats"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IntlBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["IntlBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ajax", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Ajax"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rippleEffect", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["rippleEffect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRippleEnabled", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isRippleEnabled"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableRipple", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["enableRipple"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Base", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Base"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getComponent", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeChildInstance", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["removeChildInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Browser", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Browser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "versionBasedStatePersistence", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["versionBasedStatePersistence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableVersionBasedPersistence", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["enableVersionBasedPersistence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Component"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildProperty", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Position"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Draggable", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Draggable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Droppable", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Droppable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["EventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onIntlChange", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["onIntlChange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightToLeft", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["rightToLeft"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cldrData", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["cldrData"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultCulture", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["defaultCulture"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultCurrencyCode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["defaultCurrencyCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Internationalization", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Internationalization"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCulture", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setCulture"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCurrencyCode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setCurrencyCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loadCldr", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["loadCldr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableRtl", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["enableRtl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNumericObject", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getNumericObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNumberDependable", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getNumberDependable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDefaultDateObject", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getDefaultDateObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyboardEvents", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["KeyboardEvents"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "L10n", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["L10n"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModuleLoader", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ModuleLoader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Property", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Property"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Complex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComplexFactory", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ComplexFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Collection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CollectionFactory", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CollectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Event"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NotifyPropertyChanges", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["NotifyPropertyChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateBuilder", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CreateBuilder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwipeSettings", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SwipeSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Touch", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Touch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HijriParser", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["HijriParser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blazorTemplates", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["blazorTemplates"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRandomId", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getRandomId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["compile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "updateBlazorTemplate", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["updateBlazorTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resetBlazorTemplate", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["resetBlazorTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setTemplateEngine", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setTemplateEngine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTemplateEngine", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getTemplateEngine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disableBlazorMode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["disableBlazorMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInstance", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["createInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setImmediate", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setImmediate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getValue", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deleteObject", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["deleteObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getEnumValue", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getEnumValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["extend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getUniqueID", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getUniqueID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["debounce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queryParams", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["queryParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectArray", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isObjectArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareElementParent", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["compareElementParent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["throwError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "print", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["print"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatUnit", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["formatUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableBlazorMode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["enableBlazorMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBlazor", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isBlazor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getInstance", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addInstance", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["addInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqueID", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["uniqueID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["createElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["addClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["removeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVisible", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isVisible"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prepend", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["prepend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "append", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["append"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detach", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["detach"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["remove"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "attributes", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["attributes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["select"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["selectAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closest", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["closest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "siblings", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["siblings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAttributeOrDefault", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getAttributeOrDefault"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setStyleAttribute", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setStyleAttribute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classList", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["classList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["matches"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "includeInnerHTML", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["includeInnerHTML"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "containsClass", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["containsClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneNode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["cloneNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Observer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Observer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SanitizeHtmlHelper", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SanitizeHtmlHelper"]; });

/**
 * index
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/ajax.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/ajax.js ***!
  \**********************************************************************************************************/
/*! exports provided: Ajax */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ajax", function() { return Ajax; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");

var headerRegex = /^(.*?):[ \t]*([^\r\n]*)$/gm;
var defaultType = 'GET';
/**
 * Ajax class provides ability to make asynchronous HTTP request to the server
 * ```typescript
 *   var ajax = new Ajax("index.html", "GET", true);
 *   ajax.send().then(
 *               function (value) {
 *                   console.log(value);
 *               },
 *               function (reason) {
 *                   console.log(reason);
 *               });
 * ```
 */
var Ajax = /** @class */ (function () {
    /**
     * Constructor for Ajax class
     *
     * @param  {string|Object} options ?
     * @param  {string} type ?
     * @param  {boolean} async ?
     * @returns defaultType any
     */
    function Ajax(options, type, async, contentType) {
        /**
         * A boolean value indicating whether the request should be sent asynchronous or not.
         *
         * @default true
         */
        this.mode = true;
        /**
         * A boolean value indicating whether to ignore the promise reject.
         *
         * @private
         * @default true
         */
        this.emitError = true;
        this.options = {};
        if (typeof options === 'string') {
            this.url = options;
            this.type = type ? type.toUpperCase() : defaultType;
            this.mode = !Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(async) ? async : true;
        }
        else if (typeof options === 'object') {
            this.options = options;
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(this, this.options);
        }
        this.type = this.type ? this.type.toUpperCase() : defaultType;
        this.contentType = (this.contentType !== undefined) ? this.contentType : contentType;
    }
    /**
     *
     * Send the request to server.
     *
     * @param {any} data - To send the user data
     * @return {Promise} ?
     */
    Ajax.prototype.send = function (data) {
        var _this = this;
        this.data = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(data) ? this.data : data;
        var eventArgs = {
            cancel: false,
            httpRequest: null
        };
        var promise = new Promise(function (resolve, reject) {
            _this.httpRequest = new XMLHttpRequest();
            _this.httpRequest.onreadystatechange = function () { _this.stateChange(resolve, reject); };
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.onLoad)) {
                _this.httpRequest.onload = _this.onLoad;
            }
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.onProgress)) {
                _this.httpRequest.onprogress = _this.onProgress;
            }
            /* istanbul ignore next */
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.onAbort)) {
                _this.httpRequest.onabort = _this.onAbort;
            }
            /* istanbul ignore next */
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.onError)) {
                _this.httpRequest.onerror = _this.onError;
            }
            //** Upload Events **/
            /* istanbul ignore next */
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.onUploadProgress)) {
                _this.httpRequest.upload.onprogress = _this.onUploadProgress;
            }
            _this.httpRequest.open(_this.type, _this.url, _this.mode);
            // Set default headers
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.data) && _this.contentType !== null) {
                _this.httpRequest.setRequestHeader('Content-Type', _this.contentType || 'application/json; charset=utf-8');
            }
            if (_this.beforeSend) {
                eventArgs.httpRequest = _this.httpRequest;
                _this.beforeSend(eventArgs);
            }
            if (!eventArgs.cancel) {
                _this.httpRequest.send(!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.data) ? _this.data : null);
            }
        });
        return promise;
    };
    Ajax.prototype.successHandler = function (data) {
        if (this.onSuccess) {
            this.onSuccess(data, this);
        }
        return data;
    };
    Ajax.prototype.failureHandler = function (reason) {
        if (this.onFailure) {
            this.onFailure(this.httpRequest);
        }
        return reason;
    };
    Ajax.prototype.stateChange = function (resolve, reject) {
        var data = this.httpRequest.responseText;
        if (this.dataType && this.dataType.toLowerCase() === 'json') {
            if (data === '') {
                data = undefined;
            }
            else {
                try {
                    data = JSON.parse(data);
                }
                catch (error) {
                    // no exception handle
                }
            }
        }
        if (this.httpRequest.readyState === 4) {
            //success range should be 200 to 299
            if ((this.httpRequest.status >= 200 && this.httpRequest.status <= 299) || this.httpRequest.status === 304) {
                resolve(this.successHandler(data));
            }
            else {
                if (this.emitError) {
                    reject(new Error(this.failureHandler(this.httpRequest.statusText)));
                }
                else {
                    resolve();
                }
            }
        }
    };
    /**
     * To get the response header from XMLHttpRequest
     *
     * @param  {string} key Key to search in the response header
     * @returns {string} ?
     */
    Ajax.prototype.getResponseHeader = function (key) {
        var responseHeaders;
        var header;
        // eslint-disable-next-line
        responseHeaders = {};
        var headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());
        while (headers) {
            responseHeaders[headers[1].toLowerCase()] = headers[2];
            headers = headerRegex.exec(this.httpRequest.getAllResponseHeaders());
        }
        // eslint-disable-next-line
        header = responseHeaders[key.toLowerCase()];
        return Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(header) ? null : header;
    };
    return Ajax;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/animation.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/animation.js ***!
  \***************************************************************************************************************/
/*! exports provided: Animation, rippleEffect, isRippleEnabled, enableRipple */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return Animation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rippleEffect", function() { return rippleEffect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRippleEnabled", function() { return isRippleEnabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableRipple", function() { return enableRipple; });
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js");
/* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./event-handler */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js");
/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notify-property-change */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





/**
 * The Animation framework provide options to animate the html DOM elements
 * ```typescript
 *   let animeObject = new Animation({
 *      name: 'SlideLeftIn',
 *      duration: 1000
 *   });
 *   animeObject.animate('#anime1');
 *   animeObject.animate('#anime2', { duration: 500 });
 * ```
 */
var Animation = /** @class */ (function (_super) {
    __extends(Animation, _super);
    function Animation(options) {
        var _this = _super.call(this, options, undefined) || this;
        /**
         * @private
         */
        _this.easing = {
            ease: 'cubic-bezier(0.250, 0.100, 0.250, 1.000)',
            linear: 'cubic-bezier(0.250, 0.250, 0.750, 0.750)',
            easeIn: 'cubic-bezier(0.420, 0.000, 1.000, 1.000)',
            easeOut: 'cubic-bezier(0.000, 0.000, 0.580, 1.000)',
            easeInOut: 'cubic-bezier(0.420, 0.000, 0.580, 1.000)',
            elasticInOut: 'cubic-bezier(0.5,-0.58,0.38,1.81)',
            elasticIn: 'cubic-bezier(0.17,0.67,0.59,1.81)',
            elasticOut: 'cubic-bezier(0.7,-0.75,0.99,1.01)'
        };
        return _this;
    }
    Animation_1 = Animation;
    /**
     * Applies animation to the current element.
     *
     * @param {string | HTMLElement} element - Element which needs to be animated.
     * @param {AnimationModel} options - Overriding default animation settings.
     * @returns {void} ?
     */
    Animation.prototype.animate = function (element, options) {
        options = !options ? {} : options;
        var model = this.getModel(options);
        if (typeof element === 'string') {
            var elements = Array.prototype.slice.call(Object(_dom__WEBPACK_IMPORTED_MODULE_0__["selectAll"])(element, document));
            for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
                var element_1 = elements_1[_i];
                model.element = element_1;
                Animation_1.delayAnimation(model);
            }
        }
        else {
            model.element = element;
            Animation_1.delayAnimation(model);
        }
    };
    /**
     * Stop the animation effect on animated element.
     *
     * @param {HTMLElement} element - Element which needs to be stop the animation.
     * @param {AnimationOptions} model - Handling the animation model at stop function.
     * @return {void}
     */
    Animation.stop = function (element, model) {
        element.style.animation = '';
        element.removeAttribute('e-animate');
        var animationId = element.getAttribute('e-animation-id');
        if (animationId) {
            var frameId = parseInt(animationId, 10);
            cancelAnimationFrame(frameId);
            element.removeAttribute('e-animation-id');
        }
        if (model && model.end) {
            model.end.call(this, model);
        }
    };
    /**
     * Set delay to animation element
     *
     * @param {AnimationModel} model ?
     * @returns {void}
     */
    Animation.delayAnimation = function (model) {
        if (model.delay) {
            setTimeout(function () { Animation_1.applyAnimation(model); }, model.delay);
        }
        else {
            Animation_1.applyAnimation(model);
        }
    };
    /**
     * Triggers animation
     *
     * @param {AnimationModel} model ?
     * @returns {void}
     */
    Animation.applyAnimation = function (model) {
        var _this = this;
        model.timeStamp = 0;
        var step = 0;
        var timerId = 0;
        var prevTimeStamp = 0;
        var duration = model.duration;
        model.element.setAttribute('e-animate', 'true');
        var startAnimation = function (timeStamp) {
            try {
                if (timeStamp) {
                    // let step: number = model.timeStamp = timeStamp - startTime;
                    /** phantomjs workaround for timestamp fix */
                    prevTimeStamp = prevTimeStamp === 0 ? timeStamp : prevTimeStamp;
                    model.timeStamp = (timeStamp + model.timeStamp) - prevTimeStamp;
                    prevTimeStamp = timeStamp;
                    /** phantomjs workaround end */
                    // trigger animation begin event
                    if (!step && model.begin) {
                        model.begin.call(_this, model);
                    }
                    step = step + 1;
                    var avg = model.timeStamp / step;
                    if (model.timeStamp < duration && model.timeStamp + avg < duration && model.element.getAttribute('e-animate')) {
                        // apply animation effect to the current element
                        model.element.style.animation = model.name + ' ' + model.duration + 'ms ' + model.timingFunction;
                        if (model.progress) {
                            model.progress.call(_this, model);
                        }
                        // repeat requestAnimationFrame
                        requestAnimationFrame(startAnimation);
                    }
                    else {
                        // clear requestAnimationFrame
                        cancelAnimationFrame(timerId);
                        model.element.removeAttribute('e-animation-id');
                        model.element.removeAttribute('e-animate');
                        model.element.style.animation = '';
                        if (model.end) {
                            model.end.call(_this, model);
                        }
                    }
                }
                else {
                    //startTime = performance.now();
                    // set initial requestAnimationFrame
                    timerId = requestAnimationFrame(startAnimation);
                    model.element.setAttribute('e-animation-id', timerId.toString());
                }
            }
            catch (e) {
                cancelAnimationFrame(timerId);
                model.element.removeAttribute('e-animation-id');
                if (model.fail) {
                    model.fail.call(_this, e);
                }
            }
        };
        startAnimation();
    };
    /**
     * Returns Animation Model
     *
     * @param {AnimationModel} options ?
     * @returns {AnimationModel} ?
     */
    Animation.prototype.getModel = function (options) {
        return {
            name: options.name || this.name,
            delay: options.delay || this.delay,
            duration: (options.duration !== undefined ? options.duration : this.duration),
            begin: options.begin || this.begin,
            end: options.end || this.end,
            fail: options.fail || this.fail,
            progress: options.progress || this.progress,
            timingFunction: this.easing[options.timingFunction] ? this.easing[options.timingFunction] :
                (options.timingFunction || this.easing[this.timingFunction])
        };
    };
    /**
     * @private
     * @param {AnimationModel} newProp ?
     * @param {AnimationModel} oldProp ?
     * @returns {void} ?
     */
    // eslint-disable-next-line
    Animation.prototype.onPropertyChanged = function (newProp, oldProp) {
        // no code needed
    };
    /**
     * Returns module name as animation
     *
     * @private
     * @returns {void} ?
     */
    Animation.prototype.getModuleName = function () {
        return 'animation';
    };
    /**
     *
     * @private
     * @returns {void} ?
     */
    Animation.prototype.destroy = function () {
        //Override base destroy;
    };
    var Animation_1;
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Property"])('FadeIn')
    ], Animation.prototype, "name", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Property"])(400)
    ], Animation.prototype, "duration", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Property"])('ease')
    ], Animation.prototype, "timingFunction", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Property"])(0)
    ], Animation.prototype, "delay", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Event"])()
    ], Animation.prototype, "progress", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Event"])()
    ], Animation.prototype, "begin", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Event"])()
    ], Animation.prototype, "end", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_4__["Event"])()
    ], Animation.prototype, "fail", void 0);
    Animation = Animation_1 = __decorate([
        _notify_property_change__WEBPACK_IMPORTED_MODULE_4__["NotifyPropertyChanges"]
    ], Animation);
    return Animation;
}(_base__WEBPACK_IMPORTED_MODULE_1__["Base"]));

/**
 * Ripple provides material theme's wave effect when an element is clicked
 * ```html
 * <div id='ripple'></div>
 * <script>
 *   rippleEffect(document.getElementById('ripple'));
 * </script>
 * ```
 *
 * @private
 * @param {HTMLElement} element - Target element
 * @param {RippleOptions} rippleOptions - Ripple options .
 * @param {Function} done .
 * @returns {void} .
 */
function rippleEffect(element, rippleOptions, done) {
    var rippleModel = getRippleModel(rippleOptions);
    if (rippleModel.rippleFlag === false || (rippleModel.rippleFlag === undefined && !isRippleEnabled)) {
        return (function () { });
    }
    element.setAttribute('data-ripple', 'true');
    _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].add(element, 'mousedown', rippleHandler, { parent: element, rippleOptions: rippleModel });
    _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].add(element, 'mouseup', rippleUpHandler, { parent: element, rippleOptions: rippleModel, done: done });
    _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].add(element, 'mouseleave', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });
    if (_browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].isPointer) {
        _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].add(element, 'transitionend', rippleLeaveHandler, { parent: element, rippleOptions: rippleModel });
    }
    return (function () {
        element.removeAttribute('data-ripple');
        _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].remove(element, 'mousedown', rippleHandler);
        _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].remove(element, 'mouseup', rippleUpHandler);
        _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].remove(element, 'mouseleave', rippleLeaveHandler);
        _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].remove(element, 'transitionend', rippleLeaveHandler);
    });
}
/**
 * Handler for ripple model
 *
 * @param {RippleOptions} rippleOptions ?
 * @returns {RippleOptions} ?
 */
function getRippleModel(rippleOptions) {
    var rippleModel = {
        selector: rippleOptions && rippleOptions.selector ? rippleOptions.selector : null,
        ignore: rippleOptions && rippleOptions.ignore ? rippleOptions.ignore : null,
        rippleFlag: rippleOptions && rippleOptions.rippleFlag,
        isCenterRipple: rippleOptions && rippleOptions.isCenterRipple,
        duration: rippleOptions && rippleOptions.duration ? rippleOptions.duration : 350
    };
    return rippleModel;
}
/**
 * Handler for ripple event
 *
 * @param {MouseEvent} e ?
 * @returns {void} ?
 * @private
 */
function rippleHandler(e) {
    var target = (e.target);
    var selector = this.rippleOptions.selector;
    var element = selector ? Object(_dom__WEBPACK_IMPORTED_MODULE_0__["closest"])(target, selector) : target;
    if (!element || (this.rippleOptions && Object(_dom__WEBPACK_IMPORTED_MODULE_0__["closest"])(target, this.rippleOptions.ignore))) {
        return;
    }
    var offset = element.getBoundingClientRect();
    var offsetX = e.pageX - document.body.scrollLeft;
    var offsetY = e.pageY - ((!document.body.scrollTop && document.documentElement) ?
        document.documentElement.scrollTop : document.body.scrollTop);
    var pageX = Math.max(Math.abs(offsetX - offset.left), Math.abs(offsetX - offset.right));
    var pageY = Math.max(Math.abs(offsetY - offset.top), Math.abs(offsetY - offset.bottom));
    var radius = Math.sqrt(pageX * pageX + pageY * pageY);
    var diameter = radius * 2 + 'px';
    var x = offsetX - offset.left - radius;
    var y = offsetY - offset.top - radius;
    if (this.rippleOptions && this.rippleOptions.isCenterRipple) {
        x = 0;
        y = 0;
        diameter = '100%';
    }
    element.classList.add('e-ripple');
    var duration = this.rippleOptions.duration.toString();
    var styles = 'width: ' + diameter + ';height: ' + diameter + ';left: ' + x + 'px;top: ' + y + 'px;' +
        'transition-duration: ' + duration + 'ms;';
    var rippleElement = Object(_dom__WEBPACK_IMPORTED_MODULE_0__["createElement"])('div', { className: 'e-ripple-element', styles: styles });
    element.appendChild(rippleElement);
    window.getComputedStyle(rippleElement).getPropertyValue('opacity');
    rippleElement.style.transform = 'scale(1)';
    if (element !== this.parent) {
        _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].add(element, 'mouseleave', rippleLeaveHandler, { parent: this.parent, rippleOptions: this.rippleOptions });
    }
}
/**
 * Handler for ripple element mouse up event
 *
 * @param {MouseEvent} e ?
 * @returns {void} ?
 * @private
 */
function rippleUpHandler(e) {
    removeRipple(e, this);
}
/**
 * Handler for ripple element mouse move event
 *
 * @param {MouseEvent} e ?
 * @returns {void} ?
 * @private
 */
function rippleLeaveHandler(e) {
    removeRipple(e, this);
}
/**
 * Handler for removing ripple element
 *
 * @param {MouseEvent} e ?
 * @param {RippleArgs} eventArgs ?
 * @returns {void} ?
 * @private
 */
function removeRipple(e, eventArgs) {
    var duration = eventArgs.rippleOptions.duration;
    var target = (e.target);
    var selector = eventArgs.rippleOptions.selector;
    var element = selector ? Object(_dom__WEBPACK_IMPORTED_MODULE_0__["closest"])(target, selector) : target;
    if (!element || (element && element.className.indexOf('e-ripple') === -1)) {
        return;
    }
    var rippleElements = Object(_dom__WEBPACK_IMPORTED_MODULE_0__["selectAll"])('.e-ripple-element', element);
    var rippleElement = rippleElements[rippleElements.length - 1];
    if (rippleElement) {
        rippleElement.style.opacity = '0.5';
    }
    if (eventArgs.parent !== element) {
        _event_handler__WEBPACK_IMPORTED_MODULE_3__["EventHandler"].remove(element, 'mouseleave', rippleLeaveHandler);
    }
    /* tslint:disable:align */
    setTimeout(function () {
        if (rippleElement && rippleElement.parentNode) {
            rippleElement.parentNode.removeChild(rippleElement);
        }
        if (!element.getElementsByClassName('e-ripple-element').length) {
            element.classList.remove('e-ripple');
        }
        if (eventArgs.done) {
            eventArgs.done(e);
        }
    }, duration);
}
var isRippleEnabled = false;
/**
 * Animation Module provides support to enable ripple effect functionality to Essential JS 2 components.
 *
 * @param {boolean} isRipple Specifies the boolean value to enable or disable ripple effect.
 * @returns {boolean} ?
 */
function enableRipple(isRipple) {
    isRippleEnabled = isRipple;
    return isRippleEnabled;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js ***!
  \**********************************************************************************************************/
/*! exports provided: Base, getComponent, removeChildInstance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Base", function() { return Base; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getComponent", function() { return getComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeChildInstance", function() { return removeChildInstance; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/observer.js");



var isColEName = new RegExp(']');
/* tslint:enable:no-any */
/**
 * Base library module is common module for Framework modules like touch,keyboard and etc.,
 *
 * @private
 */
var Base = /** @class */ (function () {
    /**
     * Base constructor accept options and element
     *
     * @param {Object} options ?
     * @param {string} element ?
     */
    function Base(options, element) {
        this.isRendered = false;
        this.isComplexArraySetter = false;
        this.isServerRendered = false;
        this.allowServerDataBinding = true;
        this.isProtectedOnChange = true;
        this.properties = {};
        this.changedProperties = {};
        this.oldProperties = {};
        this.bulkChanges = {};
        this.refreshing = false;
        this.ignoreCollectionWatch = false;
        // eslint-disable-next-line
        this.finalUpdate = function () { };
        this.childChangedProperties = {};
        this.modelObserver = new _observer__WEBPACK_IMPORTED_MODULE_2__["Observer"](this);
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(element)) {
            if ('string' === typeof (element)) {
                this.element = document.querySelector(element);
            }
            else {
                this.element = element;
            }
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.element)) {
                this.isProtectedOnChange = false;
                this.addInstance();
            }
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(options)) {
            this.setProperties(options, true);
        }
        this.isDestroyed = false;
    }
    /** Property base section */
    /**
     * Function used to set bunch of property at a time.
     *
     * @private
     * @param  {Object} prop - JSON object which holds components properties.
     * @param  {boolean} muteOnChange ? - Specifies to true when we set properties.
     * @returns {void} ?
     */
    Base.prototype.setProperties = function (prop, muteOnChange) {
        var prevDetection = this.isProtectedOnChange;
        this.isProtectedOnChange = !!muteOnChange;
        Object(_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(this, prop);
        if (muteOnChange !== true) {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(this.changedProperties, prop);
            this.dataBind();
        }
        else if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() && this.isRendered) {
            this.serverDataBind(prop);
        }
        this.finalUpdate();
        this.changedProperties = {};
        this.oldProperties = {};
        this.isProtectedOnChange = prevDetection;
    };
    /**
     * Calls for child element data bind
     *
     * @param {Object} obj ?
     * @param {Object} parent ?
     * @returns {void} ?
     */
    // tslint:disable-next-line:no-any
    Base.callChildDataBind = function (obj, parent) {
        var keys = Object.keys(obj);
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            if (parent[key] instanceof Array) {
                for (var _a = 0, _b = parent[key]; _a < _b.length; _a++) {
                    var obj_1 = _b[_a];
                    if (obj_1.dataBind !== undefined) {
                        obj_1.dataBind();
                    }
                }
            }
            else {
                parent[key].dataBind();
            }
        }
    };
    Base.prototype.clearChanges = function () {
        this.finalUpdate();
        this.changedProperties = {};
        this.oldProperties = {};
        this.childChangedProperties = {};
    };
    /**
     * Bind property changes immediately to components
     *
     * @returns {void} ?
     */
    Base.prototype.dataBind = function () {
        Base.callChildDataBind(this.childChangedProperties, this);
        if (Object.getOwnPropertyNames(this.changedProperties).length) {
            var prevDetection = this.isProtectedOnChange;
            var newChanges = this.changedProperties;
            var oldChanges = this.oldProperties;
            this.clearChanges();
            this.isProtectedOnChange = true;
            this.onPropertyChanged(newChanges, oldChanges);
            this.isProtectedOnChange = prevDetection;
        }
    };
    /* tslint:disable:no-any */
    Base.prototype.serverDataBind = function (newChanges) {
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])()) {
            return;
        }
        newChanges = newChanges ? newChanges : {};
        Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(this.bulkChanges, {}, newChanges, true);
        var sfBlazor = 'sfBlazor';
        if (this.allowServerDataBinding && window[sfBlazor].updateModel) {
            window[sfBlazor].updateModel(this);
            this.bulkChanges = {};
        }
    };
    /* tslint:enable:no-any */
    Base.prototype.saveChanges = function (key, newValue, oldValue) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])()) {
            // tslint:disable-next-line:no-any
            var newChanges = {};
            newChanges[key] = newValue;
            this.serverDataBind(newChanges);
        }
        if (this.isProtectedOnChange) {
            return;
        }
        this.oldProperties[key] = oldValue;
        this.changedProperties[key] = newValue;
        this.finalUpdate();
        this.finalUpdate = Object(_util__WEBPACK_IMPORTED_MODULE_0__["setImmediate"])(this.dataBind.bind(this));
    };
    /** Event Base Section */
    /**
     * Adds the handler to the given event listener.
     *
     * @param {string} eventName - A String that specifies the name of the event
     * @param {Function} handler - Specifies the call to run when the event occurs.
     * @returns {void} ?
     */
    Base.prototype.addEventListener = function (eventName, handler) {
        this.modelObserver.on(eventName, handler);
    };
    /**
     * Removes the handler from the given event listener.
     *
     * @param {string} eventName - A String that specifies the name of the event to remove
     * @param {Function} handler - Specifies the function to remove
     * @returns {void} ?
     */
    Base.prototype.removeEventListener = function (eventName, handler) {
        this.modelObserver.off(eventName, handler);
    };
    /**
     * Triggers the handlers in the specified event.
     *
     * @private
     * @param {string} eventName - Specifies the event to trigger for the specified component properties.
     * Can be a custom event, or any of the standard events.
     * @param {Event} eventProp - Additional parameters to pass on to the event properties
     * @param {Function} successHandler - this function will invoke after event successfully triggered
     * @param {Function} errorHandler - this function will invoke after event if it failured to call.
     * @returns {void} ?
     */
    Base.prototype.trigger = function (eventName, eventProp, successHandler, errorHandler) {
        var _this = this;
        if (this.isDestroyed !== true) {
            var prevDetection = this.isProtectedOnChange;
            this.isProtectedOnChange = false;
            var data = this.modelObserver.notify(eventName, eventProp, successHandler, errorHandler);
            if (isColEName.test(eventName)) {
                var handler = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(eventName, this);
                if (handler) {
                    var blazor = 'Blazor';
                    if (window[blazor]) {
                        var promise = handler.call(this, eventProp);
                        if (promise && typeof promise.then === 'function') {
                            if (!successHandler) {
                                data = promise;
                            }
                            else {
                                promise.then(function (data) {
                                    if (successHandler) {
                                        data = typeof data === 'string' && _this.modelObserver.isJson(data) ?
                                            JSON.parse(data) : data;
                                        successHandler.call(_this, data);
                                    }
                                }).catch(function (data) {
                                    if (errorHandler) {
                                        data = typeof data === 'string' && _this.modelObserver.isJson(data) ? JSON.parse(data) : data;
                                        errorHandler.call(_this, data);
                                    }
                                });
                            }
                        }
                        else if (successHandler) {
                            successHandler.call(this, eventProp);
                        }
                    }
                    else {
                        handler.call(this, eventProp);
                        if (successHandler) {
                            successHandler.call(this, eventProp);
                        }
                    }
                }
                else if (successHandler) {
                    successHandler.call(this, eventProp);
                }
            }
            this.isProtectedOnChange = prevDetection;
            return data;
        }
    };
    /**
     * To maintain instance in base class
     *
     * @returns {void} ?
     */
    Base.prototype.addInstance = function () {
        // Add module class to the root element
        var moduleClass = 'e-' + this.getModuleName().toLowerCase();
        Object(_dom__WEBPACK_IMPORTED_MODULE_1__["addClass"])([this.element], ['e-lib', moduleClass]);
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.element.ej2_instances)) {
            this.element.ej2_instances.push(this);
        }
        else {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["setValue"])('ej2_instances', [this], this.element);
        }
    };
    /**
     * To remove the instance from the element
     *
     * @returns {void} ?
     */
    Base.prototype.destroy = function () {
        var _this = this;
        // eslint-disable-next-line
        this.element.ej2_instances =
            this.element.ej2_instances.filter(function (i) { return i !== _this; });
        Object(_dom__WEBPACK_IMPORTED_MODULE_1__["removeClass"])([this.element], ['e-' + this.getModuleName()]);
        if (this.element.ej2_instances.length === 0) {
            // Remove module class from the root element
            Object(_dom__WEBPACK_IMPORTED_MODULE_1__["removeClass"])([this.element], ['e-lib']);
        }
        this.clearChanges();
        this.modelObserver.destroy();
        this.isDestroyed = true;
    };
    return Base;
}());

/**
 * Global function to get the component instance from the rendered element.
 *
 * @param {HTMLElement} elem Specifies the HTMLElement or element id string.
 * @param {string} comp Specifies the component module name or Component.
 * @returns {any} ?
 */
// tslint:disable-next-line:no-any
function getComponent(elem, comp) {
    var instance;
    var i;
    var ele = typeof elem === 'string' ? document.getElementById(elem) : elem;
    for (i = 0; i < ele.ej2_instances.length; i++) {
        instance = ele.ej2_instances[i];
        if (typeof comp === 'string') {
            var compName = instance.getModuleName();
            if (comp === compName) {
                return instance;
            }
        }
        else {
            // tslint:disable-next-line:no-any
            if (instance instanceof comp) {
                return instance;
            }
        }
    }
    return undefined;
}
/**
 * Function to remove the child instances.
 *
 * @param {HTMLElement} element ?
 * @return {void}
 * @private
 */
// tslint:disable-next-line:no-any
function removeChildInstance(element) {
    // tslint:disable-next-line:no-any
    var childEle = [].slice.call(element.getElementsByClassName('e-control'));
    for (var i = 0; i < childEle.length; i++) {
        var compName = childEle[i].classList[1].split('e-')[1];
        // tslint:disable-next-line:no-any
        var compInstance = getComponent(childEle[i], compName);
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(compInstance)) {
            compInstance.destroy();
        }
    }
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js ***!
  \*************************************************************************************************************/
/*! exports provided: Browser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Browser", function() { return Browser; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");

var REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;
var REGX_IE = /msie|trident/i;
var REGX_IE11 = /Trident\/7\./;
var REGX_IOS = /(ipad|iphone|ipod touch)/i;
var REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\d|(ipad|iphone|ipod touch);.*os 8_\d/i;
var REGX_ANDROID = /android/i;
var REGX_WINDOWS = /trident|windows phone|edge/i;
var REGX_VERSION = /(version)[ /]([\w.]+)/i;
var REGX_BROWSER = {
    OPERA: /(opera|opr)(?:.*version|)[ /]([\w.]+)/i,
    EDGE: /(edge)(?:.*version|)[ /]([\w.]+)/i,
    CHROME: /(chrome|crios)[ /]([\w.]+)/i,
    PANTHOMEJS: /(phantomjs)[ /]([\w.]+)/i,
    SAFARI: /(safari)[ /]([\w.]+)/i,
    WEBKIT: /(webkit)[ /]([\w.]+)/i,
    MSIE: /(msie|trident) ([\w.]+)/i,
    MOZILLA: /(mozilla)(?:.*? rv:([\w.]+)|)/i
};
/* istanbul ignore else  */
if (typeof window !== 'undefined') {
    window.browserDetails = window.browserDetails || {};
}
/**
 * Get configuration details for Browser
 *
 * @private
 */
var Browser = /** @class */ (function () {
    function Browser() {
    }
    Browser.extractBrowserDetail = function () {
        var browserInfo = { culture: {} };
        var keys = Object.keys(REGX_BROWSER);
        var clientInfo = [];
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);
            if (clientInfo) {
                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());
                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);
                browserInfo.version = clientInfo[2];
                browserInfo.culture.name = browserInfo.culture.language = navigator.language;
                // eslint-disable-next-line
                if (!!Browser.userAgent.match(REGX_IE11)) {
                    browserInfo.name = 'msie';
                    break;
                }
                var version = Browser.userAgent.match(REGX_VERSION);
                if (browserInfo.name === 'safari' && version) {
                    browserInfo.version = version[2];
                }
                break;
            }
        }
        return browserInfo;
    };
    /**
     * To get events from the browser
     *
     * @param {string} event - type of event triggered.
     * @returns {boolean}
     */
    Browser.getEvent = function (event) {
        // eslint-disable-next-line
        var events = {
            start: {
                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'
            },
            move: {
                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'
            },
            end: {
                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'
            },
            cancel: {
                isPointer: 'pointercancel', isTouch: 'touchcancel', isDevice: 'mouseleave'
            }
        };
        return (Browser.isPointer ? events[event].isPointer :
            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')
                : events[event].isDevice));
    };
    /**
     * To get the Touch start event from browser
     *
     * @returns {string}
     */
    Browser.getTouchStartEvent = function () {
        return Browser.getEvent('start');
    };
    /**
     * To get the Touch end event from browser
     *
     * @returns {string}
     */
    Browser.getTouchEndEvent = function () {
        return Browser.getEvent('end');
    };
    /**
     * To get the Touch move event from browser
     *
     * @returns {string}
     */
    Browser.getTouchMoveEvent = function () {
        return Browser.getEvent('move');
    };
    /**
     * To cancel the touch event from browser
     *
     * @returns {string}
     */
    Browser.getTouchCancelEvent = function () {
        return Browser.getEvent('cancel');
    };
    /**
     * To get the value based on provided key and regX
     *
     * @param {string} key ?
     * @param {RegExp} regX ?
     * @returns {Object} ?
     */
    Browser.getValue = function (key, regX) {
        var browserDetails = window.browserDetails;
        if ('undefined' === typeof browserDetails[key]) {
            return browserDetails[key] = regX.test(Browser.userAgent);
        }
        if (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 && Browser.isTouch === true) {
            browserDetails['isIos'] = true;
            browserDetails['isDevice'] = true;
            browserDetails['isTouch'] = true;
            browserDetails['isPointer'] = true;
        }
        return browserDetails[key];
    };
    Object.defineProperty(Browser, "userAgent", {
        get: function () {
            return Browser.uA;
        },
        //Properties
        /**
         * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.
         * Also we can set our own userAgent.
         *
         * @param {string} uA ?
         */
        set: function (uA) {
            Browser.uA = uA;
            window.browserDetails = {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "info", {
        //Read Only Properties
        /**
         * Property is to get the browser information like Name, Version and Language
         *
         * @returns {BrowserInfo} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.info)) {
                return window.browserDetails.info = Browser.extractBrowserDetail();
            }
            return window.browserDetails.info;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIE", {
        /**
         * Property is to get whether the userAgent is based IE.
         *
         * @returns {boolean} ?
         */
        get: function () {
            return Browser.getValue('isIE', REGX_IE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isTouch", {
        /**
         * Property is to get whether the browser has touch support.
         *
         * @returns {boolean} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.isTouch)) {
                return (window.browserDetails.isTouch =
                    ('ontouchstart' in window.navigator) ||
                        (window &&
                            window.navigator &&
                            (window.navigator.maxTouchPoints > 0)) || ('ontouchstart' in window));
            }
            return window.browserDetails.isTouch;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isPointer", {
        /**
         * Property is to get whether the browser has Pointer support.
         *
         * @returns {boolean} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.isPointer)) {
                return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);
            }
            return window.browserDetails.isPointer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isMSPointer", {
        /**
         * Property is to get whether the browser has MSPointer support.
         *
         * @returns {boolean} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.isMSPointer)) {
                return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);
            }
            return window.browserDetails.isMSPointer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isDevice", {
        /**
         * Property is to get whether the userAgent is device based.
         *
         * @returns {boolean} ?
         */
        get: function () {
            return Browser.getValue('isDevice', REGX_MOBILE);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIos", {
        /**
         * Property is to get whether the userAgent is IOS.
         *
         * @returns {boolean} ?
         */
        get: function () {
            return Browser.getValue('isIos', REGX_IOS);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isIos7", {
        /**
         * Property is to get whether the userAgent is Ios7.
         *
         * @returns {boolean} ?
         */
        get: function () {
            return Browser.getValue('isIos7', REGX_IOS7);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isAndroid", {
        /**
         * Property is to get whether the userAgent is Android.
         *
         * @returns {boolean} ?
         */
        get: function () {
            return Browser.getValue('isAndroid', REGX_ANDROID);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isWebView", {
        /**
         * Property is to identify whether application ran in web view.
         *
         * @returns {boolean} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.isWebView)) {
                window.browserDetails.isWebView = !(Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.cordova) && Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.PhoneGap)
                    && Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.phonegap) && window.forge !== 'object');
                return window.browserDetails.isWebView;
            }
            return window.browserDetails.isWebView;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "isWindows", {
        /**
         * Property is to get whether the userAgent is Windows.
         *
         * @returns {boolean} ?
         */
        get: function () {
            return Browser.getValue('isWindows', REGX_WINDOWS);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchStartEvent", {
        /**
         * Property is to get the touch start event. It returns event name based on browser.
         *
         * @returns {string} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.touchStartEvent)) {
                return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();
            }
            return window.browserDetails.touchStartEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchMoveEvent", {
        /**
         * Property is to get the touch move event. It returns event name based on browser.
         *
         * @returns {string} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.touchMoveEvent)) {
                return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();
            }
            return window.browserDetails.touchMoveEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchEndEvent", {
        /**
         * Property is to get the touch end event. It returns event name based on browser.
         *
         * @returns {string} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.touchEndEvent)) {
                return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();
            }
            return window.browserDetails.touchEndEvent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Browser, "touchCancelEvent", {
        /**
         * Property is to cancel the touch end event.
         *
         * @returns {string} ?
         */
        get: function () {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(window.browserDetails.touchCancelEvent)) {
                return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();
            }
            return window.browserDetails.touchCancelEvent;
        },
        enumerable: true,
        configurable: true
    });
    /* istanbul ignore next */
    Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';
    return Browser;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/child-property.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/child-property.js ***!
  \********************************************************************************************************************/
/*! exports provided: ChildProperty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChildProperty", function() { return ChildProperty; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");


/**
 * To detect the changes for inner properties.
 *
 * @private
 */
var ChildProperty = /** @class */ (function () {
    function ChildProperty(parent, propName, defaultValue, isArray) {
        this.isComplexArraySetter = false;
        this.properties = {};
        this.changedProperties = {};
        this.childChangedProperties = {};
        this.oldProperties = {};
        // eslint-disable-next-line
        this.finalUpdate = function () { };
        this.callChildDataBind = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('callChildDataBind', _base__WEBPACK_IMPORTED_MODULE_1__["Base"]);
        this.parentObj = parent;
        this.controlParent = this.parentObj.controlParent || this.parentObj;
        this.propName = propName;
        this.isParentArray = isArray;
        this.setProperties(defaultValue, true);
    }
    /**
     * Updates the property changes
     *
     * @param {boolean} val ?
     * @param {string} propName ?
     * @returns {void} ?
     */
    ChildProperty.prototype.updateChange = function (val, propName) {
        if (val === true) {
            this.parentObj.childChangedProperties[propName] = val;
        }
        else {
            delete this.parentObj.childChangedProperties[propName];
        }
        if (this.parentObj.updateChange) {
            this.parentObj.updateChange(val, this.parentObj.propName);
        }
    };
    /**
     * Updates time out duration
     *
     * @returns {void} ?
     */
    ChildProperty.prototype.updateTimeOut = function () {
        if (this.parentObj.updateTimeOut) {
            this.parentObj.finalUpdate();
            this.parentObj.updateTimeOut();
        }
        else {
            var changeTime_1 = setTimeout(this.parentObj.dataBind.bind(this.parentObj));
            var clearUpdate = function () {
                clearTimeout(changeTime_1);
            };
            this.finalUpdate = clearUpdate;
        }
    };
    /**
     * Clears changed properties
     *
     * @returns {void} ?
     */
    ChildProperty.prototype.clearChanges = function () {
        this.finalUpdate();
        this.updateChange(false, this.propName);
        this.oldProperties = {};
        this.changedProperties = {};
    };
    /**
     * Set property changes
     *
     * @param {Object} prop ?
     * @param {boolean} muteOnChange ?
     * @returns {void} ?
     */
    ChildProperty.prototype.setProperties = function (prop, muteOnChange) {
        if (muteOnChange === true) {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(this, prop);
            this.updateChange(false, this.propName);
            this.clearChanges();
        }
        else {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(this, prop);
        }
    };
    /**
     * Binds data
     *
     * @returns {void} ?
     */
    ChildProperty.prototype.dataBind = function () {
        this.callChildDataBind(this.childChangedProperties, this);
        if (this.isParentArray) {
            var curIndex = this.parentObj[this.propName].indexOf(this);
            if (Object.keys(this.changedProperties).length) {
                Object(_util__WEBPACK_IMPORTED_MODULE_0__["setValue"])(this.propName + '.' + curIndex, this.changedProperties, this.parentObj.changedProperties);
                Object(_util__WEBPACK_IMPORTED_MODULE_0__["setValue"])(this.propName + '.' + curIndex, this.oldProperties, this.parentObj.oldProperties);
            }
        }
        else {
            this.parentObj.changedProperties[this.propName] = this.changedProperties;
            this.parentObj.oldProperties[this.propName] = this.oldProperties;
        }
        this.clearChanges();
    };
    /**
     * Saves changes to newer values
     *
     * @param {string} key ?
     * @param {Object} newValue ?
     * @param {Object} oldValue ?
     * @param {boolean} restrictServerDataBind ?
     * @returns {void} ?
     */
    ChildProperty.prototype.saveChanges = function (key, newValue, oldValue, restrictServerDataBind) {
        if (this.controlParent.isProtectedOnChange) {
            return;
        }
        if (!restrictServerDataBind) {
            this.serverDataBind(key, newValue, true);
        }
        this.oldProperties[key] = oldValue;
        this.changedProperties[key] = newValue;
        this.updateChange(true, this.propName);
        this.finalUpdate();
        this.updateTimeOut();
    };
    ChildProperty.prototype.serverDataBind = function (key, value, isSaveChanges, action) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() && !this.parentObj.isComplexArraySetter) {
            var parent_1;
            var newChanges = {};
            var parentKey = isSaveChanges ? this.getParentKey(true) + '.' + key : key;
            /* istanbul ignore else  */
            if (parentKey.indexOf('.') !== -1) {
                var complexKeys = parentKey.split('.');
                parent_1 = newChanges;
                for (var i = 0; i < complexKeys.length; i++) {
                    var isFinal = i === complexKeys.length - 1;
                    parent_1[complexKeys[i]] = isFinal ? value : {};
                    parent_1 = isFinal ? parent_1 : parent_1[complexKeys[i]];
                }
            }
            else {
                newChanges[parentKey] = {};
                parent_1 = newChanges[parentKey];
                newChanges[parentKey][key] = value;
            }
            /* istanbul ignore next */
            if (this.isParentArray) {
                var actionProperty = 'ejsAction';
                parent_1[actionProperty] = action ? action : 'none';
            }
            this.controlParent.serverDataBind(newChanges);
        }
    };
    ChildProperty.prototype.getParentKey = function (isSaveChanges) {
        // eslint-disable-next-line
        var index = '';
        var propName = this.propName;
        /* istanbul ignore next */
        if (this.isParentArray) {
            index = this.parentObj[this.propName].indexOf(this);
            var valueLength = this.parentObj[this.propName].length;
            valueLength = isSaveChanges ? valueLength : (valueLength > 0 ? valueLength - 1 : 0);
            index = index !== -1 ? '-' + index : '-' + valueLength;
            propName = propName + index;
        }
        if (this.controlParent !== this.parentObj) {
            propName = this.parentObj.getParentKey() + '.' + this.propName + index;
        }
        return propName;
    };
    return ChildProperty;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/component.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/component.js ***!
  \***************************************************************************************************************/
/*! exports provided: versionBasedStatePersistence, enableVersionBasedPersistence, Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "versionBasedStatePersistence", function() { return versionBasedStatePersistence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableVersionBasedPersistence", function() { return enableVersionBasedPersistence; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return Component; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _module_loader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./module-loader */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/module-loader.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");
/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/observer.js");
/* harmony import */ var _child_property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./child-property */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/child-property.js");
/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notify-property-change */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js");
/* harmony import */ var _internationalization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internationalization */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/internationalization.js");
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var componentCount = 0;
var lastPageID;
var lastHistoryLen = 0;
var versionBasedStatePersistence = false;
/**
 * To enable or disable version based statePersistence functionality for all components globally.
 *
 * @param {boolean} status - Optional argument Specifies the status value to enable or disable versionBasedStatePersistence option.
 * @returns {void}
 */
function enableVersionBasedPersistence(status) {
    versionBasedStatePersistence = status;
}
/**
 * Base class for all Essential JavaScript components
 */
var Component = /** @class */ (function (_super) {
    __extends(Component, _super);
    /**
     * Initialize the constructor for component base
     *
     * @param {Object} options ?
     * @param {string} selector ?
     */
    function Component(options, selector) {
        var _this = _super.call(this, options, selector) || this;
        _this.randomId = Object(_util__WEBPACK_IMPORTED_MODULE_0__["uniqueID"])();
        /**
         * string template option for Blazor template rendering
         *
         * @private
         */
        _this.isStringTemplate = false;
        _this.needsID = false;
        _this.isReactHybrid = false;
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.enableRtl)) {
            _this.setProperties({ 'enableRtl': _internationalization__WEBPACK_IMPORTED_MODULE_6__["rightToLeft"] }, true);
        }
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.locale)) {
            _this.setProperties({ 'locale': _internationalization__WEBPACK_IMPORTED_MODULE_6__["defaultCulture"] }, true);
        }
        _this.moduleLoader = new _module_loader__WEBPACK_IMPORTED_MODULE_1__["ModuleLoader"](_this);
        _this.localObserver = new _observer__WEBPACK_IMPORTED_MODULE_3__["Observer"](_this);
        // tslint:disable-next-line:no-function-constructor-with-string-args
        _internationalization__WEBPACK_IMPORTED_MODULE_6__["onIntlChange"].on('notifyExternalChange', _this.detectFunction, _this, _this.randomId);
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(selector)) {
            _this.appendTo();
        }
        return _this;
    }
    Component.prototype.requiredModules = function () {
        return [];
    };
    /**
     * Destroys the sub modules while destroying the widget
     *
     * @returns {void} ?
     */
    Component.prototype.destroy = function () {
        if (this.isDestroyed) {
            return;
        }
        if (this.enablePersistence) {
            this.setPersistData();
        }
        this.localObserver.destroy();
        if (this.refreshing) {
            return;
        }
        Object(_dom__WEBPACK_IMPORTED_MODULE_7__["removeClass"])([this.element], ['e-control']);
        this.trigger('destroyed', { cancel: false });
        _super.prototype.destroy.call(this);
        this.moduleLoader.clean();
        _internationalization__WEBPACK_IMPORTED_MODULE_6__["onIntlChange"].off('notifyExternalChange', this.detectFunction, this.randomId);
    };
    /**
     * Applies all the pending property changes and render the component again.
     *
     * @returns {void} ?
     */
    Component.prototype.refresh = function () {
        this.refreshing = true;
        this.moduleLoader.clean();
        this.destroy();
        this.clearChanges();
        this.localObserver = new _observer__WEBPACK_IMPORTED_MODULE_3__["Observer"](this);
        this.preRender();
        this.injectModules();
        this.render();
        this.refreshing = false;
    };
    Component.prototype.accessMount = function () {
        if (this.mount && !this.isReactHybrid) {
            this.mount();
        }
    };
    /**
     * Returns the route element of the component
     *
     * @returns {HTMLElement} ?
     */
    Component.prototype.getRootElement = function () {
        if (this.isReactHybrid) {
            // eslint-disable-next-line
            return this.actualElement;
        }
        else {
            return this.element;
        }
    };
    /**
     * Returns the persistence data for component
     *
     * @returns {any} ?
     */
    // eslint-disable-next-line
    Component.prototype.getLocalData = function () {
        var eleId = this.getModuleName() + this.element.id;
        if (versionBasedStatePersistence) {
            return window.localStorage.getItem(eleId + this.ej2StatePersistenceVersion);
        }
        else {
            return window.localStorage.getItem(eleId);
        }
    };
    /**
     * Appends the control within the given HTML element
     *
     * @param {string | HTMLElement} selector - Target element where control needs to be appended
     * @returns {void} ?
     */
    Component.prototype.appendTo = function (selector) {
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(selector) && typeof (selector) === 'string') {
            this.element = Object(_dom__WEBPACK_IMPORTED_MODULE_7__["select"])(selector, document);
        }
        else if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(selector)) {
            this.element = selector;
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.element)) {
            var moduleClass = 'e-' + this.getModuleName().toLowerCase();
            Object(_dom__WEBPACK_IMPORTED_MODULE_7__["addClass"])([this.element], ['e-control', moduleClass]);
            this.isProtectedOnChange = false;
            if (this.needsID && !this.element.id) {
                this.element.id = this.getUniqueID(this.getModuleName());
            }
            if (this.enablePersistence) {
                this.mergePersistData();
                window.addEventListener('unload', this.setPersistData.bind(this));
            }
            var inst = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('ej2_instances', this.element);
            if (!inst || inst.indexOf(this) === -1) {
                _super.prototype.addInstance.call(this);
            }
            this.preRender();
            this.injectModules();
            this.render();
            if (!this.mount) {
                this.trigger('created');
            }
            else {
                this.accessMount();
            }
        }
    };
    /**
     * It is used to process the post rendering functionalities to a component.
     *
     * @param {Node} wrapperElement ?
     * @returns {void} ?
     */
    Component.prototype.renderComplete = function (wrapperElement) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])()) {
            var sfBlazor = 'sfBlazor';
            // eslint-disable-next-line
            window[sfBlazor].renderComplete(this.element, wrapperElement);
        }
        this.isRendered = true;
    };
    /**
     * When invoked, applies the pending property changes immediately to the component.
     *
     * @returns {void} ?
     */
    Component.prototype.dataBind = function () {
        this.injectModules();
        _super.prototype.dataBind.call(this);
    };
    /**
     * Attach one or more  event handler to the current component context.
     * It is used for internal handling event internally within the component only.
     *
     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.
     * @param {Function} handler - optional parameter Specifies the handler to run when the event occurs
     * @param {Object} context - optional parameter Specifies the context to be bind in the handler.
     * @returns {void} ?
     * @private
     */
    Component.prototype.on = function (event, handler, context) {
        if (typeof event === 'string') {
            this.localObserver.on(event, handler, context);
        }
        else {
            for (var _i = 0, event_1 = event; _i < event_1.length; _i++) {
                var arg = event_1[_i];
                this.localObserver.on(arg.event, arg.handler, arg.context);
            }
        }
    };
    /**
     * To remove one or more event handler that has been attached with the on() method.
     *
     * @param {BoundOptions[]| string} event - It is  optional type either to  Set the collection of event list or the eventName.
     * @param {Function} handler - optional parameter Specifies the function to run when the event occurs
     * @returns {void} ?
     * @private
     */
    Component.prototype.off = function (event, handler) {
        if (typeof event === 'string') {
            this.localObserver.off(event, handler);
        }
        else {
            for (var _i = 0, event_2 = event; _i < event_2.length; _i++) {
                var arg = event_2[_i];
                this.localObserver.off(arg.event, arg.handler);
            }
        }
    };
    /**
     * To notify the handlers in the specified event.
     *
     * @param {string} property - Specifies the event to be notify.
     * @param {Object} argument - Additional parameters to pass while calling the handler.
     * @returns {void} ?
     * @private
     */
    Component.prototype.notify = function (property, argument) {
        if (this.isDestroyed !== true) {
            this.localObserver.notify(property, argument);
        }
    };
    /**
     * Get injected modules
     *
     * @returns {Function} ?
     * @private
     */
    Component.prototype.getInjectedModules = function () {
        return this.injectedModules;
    };
    /**
     * Dynamically injects the required modules to the component.
     *
     * @param {Function} moduleList ?
     * @returns {void} ?
     */
    Component.Inject = function () {
        var moduleList = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            moduleList[_i] = arguments[_i];
        }
        if (!this.prototype.injectedModules) {
            this.prototype.injectedModules = [];
        }
        for (var i = 0; i < moduleList.length; i++) {
            if (this.prototype.injectedModules.indexOf(moduleList[i]) === -1) {
                this.prototype.injectedModules.push(moduleList[i]);
            }
        }
    };
    /**
     * This is a instance method to create an element.
     *
     * @param {string} tagName ?
     * @param {ElementProperties} prop ?
     * @param {boolean} isVDOM ?
     * @returns {any} ?
     * @private
     */
    // eslint-disable-next-line
    Component.prototype.createElement = function (tagName, prop, isVDOM) {
        return Object(_dom__WEBPACK_IMPORTED_MODULE_7__["createElement"])(tagName, prop);
    };
    /**
     *
     * @param {Function} handler - handler to be triggered after state Updated.
     * @param {any} argument - Arguments to be passed to caller.
     * @returns {void} .
     * @private
     */
    // eslint-disable-next-line
    Component.prototype.triggerStateChange = function (handler, argument) {
        if (this.isReactHybrid) {
            // eslint-disable-next-line
            this.setState();
            this.currentContext = { calls: handler, args: argument };
        }
    };
    // tslint: enable: no-any
    Component.prototype.injectModules = function () {
        if (this.injectedModules && this.injectedModules.length) {
            this.moduleLoader.inject(this.requiredModules(), this.injectedModules);
        }
    };
    Component.prototype.detectFunction = function (args) {
        var prop = Object.keys(args);
        if (prop.length) {
            this[prop[0]] = args[prop[0]];
        }
    };
    Component.prototype.mergePersistData = function () {
        var data;
        if (versionBasedStatePersistence) {
            data = window.localStorage.getItem(this.getModuleName() + this.element.id + this.ej2StatePersistenceVersion);
        }
        else {
            data = window.localStorage.getItem(this.getModuleName() + this.element.id);
        }
        if (!(Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(data) || (data === ''))) {
            this.setProperties(JSON.parse(data), true);
        }
    };
    Component.prototype.setPersistData = function () {
        if (!this.isDestroyed) {
            if (versionBasedStatePersistence) {
                window.localStorage.setItem(this.getModuleName() +
                    this.element.id + this.ej2StatePersistenceVersion, this.getPersistData());
            }
            else {
                window.localStorage.setItem(this.getModuleName() + this.element.id, this.getPersistData());
            }
        }
    };
    //tslint:disable-next-line
    Component.prototype.renderReactTemplates = function () {
        //No Code
    };
    // eslint-disable-next-line
    Component.prototype.clearTemplate = function (templateName, index) {
        //No Code
    };
    Component.prototype.getUniqueID = function (definedName) {
        if (this.isHistoryChanged()) {
            componentCount = 0;
        }
        lastPageID = this.pageID(location.href);
        lastHistoryLen = history.length;
        return definedName + '_' + lastPageID + '_' + componentCount++;
    };
    Component.prototype.pageID = function (url) {
        var hash = 0;
        if (url.length === 0) {
            return hash;
        }
        for (var i = 0; i < url.length; i++) {
            var char = url.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash; // Convert to 32bit integer
        }
        return Math.abs(hash);
    };
    Component.prototype.isHistoryChanged = function () {
        return lastPageID !== this.pageID(location.href) || lastHistoryLen !== history.length;
    };
    Component.prototype.addOnPersist = function (options) {
        var _this = this;
        var persistObj = {};
        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
            var key = options_1[_i];
            var objValue = void 0;
            // eslint-disable-next-line
            objValue = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(key, this);
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(objValue)) {
                Object(_util__WEBPACK_IMPORTED_MODULE_0__["setValue"])(key, this.getActualProperties(objValue), persistObj);
            }
        }
        return JSON.stringify(persistObj, function (key, value) {
            return _this.getActualProperties(value);
        });
    };
    Component.prototype.getActualProperties = function (obj) {
        if (obj instanceof _child_property__WEBPACK_IMPORTED_MODULE_4__["ChildProperty"]) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('properties', obj);
        }
        else {
            return obj;
        }
    };
    Component.prototype.ignoreOnPersist = function (options) {
        return JSON.stringify(this.iterateJsonProperties(this.properties, options));
    };
    Component.prototype.iterateJsonProperties = function (obj, ignoreList) {
        var newObj = {};
        var _loop_1 = function (key) {
            if (ignoreList.indexOf(key) === -1) {
                // eslint-disable-next-line
                var value = obj[key];
                if (typeof value === 'object' && !(value instanceof Array)) {
                    var newList = ignoreList.filter(function (str) {
                        return new RegExp(key + '.').test(str);
                    }).map(function (str) {
                        return str.replace(key + '.', '');
                    });
                    newObj[key] = this_1.iterateJsonProperties(this_1.getActualProperties(value), newList);
                }
                else {
                    newObj[key] = value;
                }
            }
        };
        var this_1 = this;
        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {
            var key = _a[_i];
            _loop_1(key);
        }
        return newObj;
    };
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_5__["Property"])(false)
    ], Component.prototype, "enablePersistence", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_5__["Property"])()
    ], Component.prototype, "enableRtl", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_5__["Property"])()
    ], Component.prototype, "locale", void 0);
    Component = __decorate([
        _notify_property_change__WEBPACK_IMPORTED_MODULE_5__["NotifyPropertyChanges"]
    ], Component);
    return Component;
}(_base__WEBPACK_IMPORTED_MODULE_2__["Base"]));

//Function handling for page navigation detection
/* istanbul ignore next */
(function () {
    if (typeof window !== 'undefined') {
        window.addEventListener('popstate', 
        /* istanbul ignore next */
        function () {
            componentCount = 0;
        });
    }
})();


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js ***!
  \*********************************************************************************************************/
/*! exports provided: createElement, addClass, removeClass, isVisible, prepend, append, detach, remove, attributes, select, selectAll, closest, siblings, getAttributeOrDefault, setStyleAttribute, classList, matches, includeInnerHTML, containsClass, cloneNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return createElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return addClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return removeClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isVisible", function() { return isVisible; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prepend", function() { return prepend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "append", function() { return append; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detach", function() { return detach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return remove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attributes", function() { return attributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "select", function() { return select; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return selectAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closest", function() { return closest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "siblings", function() { return siblings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAttributeOrDefault", function() { return getAttributeOrDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setStyleAttribute", function() { return setStyleAttribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "classList", function() { return classList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return matches; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "includeInnerHTML", function() { return includeInnerHTML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "containsClass", function() { return containsClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneNode", function() { return cloneNode; });
/* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event-handler */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/**
 * Functions related to dom operations.
 */


var SVG_REG = /^svg|^path|^g/;
/**
 * Function to create Html element.
 *
 * @param {string} tagName - Name of the tag, id and class names.
 * @param {ElementProperties} properties - Object to set properties in the element.
 * @param {ElementProperties} properties.id - To set the id to the created element.
 * @param {ElementProperties} properties.className - To add classes to the element.
 * @param {ElementProperties} properties.innerHTML - To set the innerHTML to element.
 * @param {ElementProperties} properties.styles - To set the some custom styles to element.
 * @param {ElementProperties} properties.attrs - To set the attributes to element.
 * @returns {any} ?
 * @private
 */
function createElement(tagName, properties) {
    var element = (SVG_REG.test(tagName) ? document.createElementNS('http://www.w3.org/2000/svg', tagName) : document.createElement(tagName));
    if (typeof (properties) === 'undefined') {
        return element;
    }
    element.innerHTML = (properties.innerHTML ? properties.innerHTML : '');
    if (properties.className !== undefined) {
        element.className = properties.className;
    }
    if (properties.id !== undefined) {
        element.id = properties.id;
    }
    if (properties.styles !== undefined) {
        element.setAttribute('style', properties.styles);
    }
    if (properties.attrs !== undefined) {
        attributes(element, properties.attrs);
    }
    return element;
}
/**
 * The function used to add the classes to array of elements
 *
 * @param  {Element[]|NodeList} elements - An array of elements that need to add a list of classes
 * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class
 * @returns {any} .
 * @private
 */
function addClass(elements, classes) {
    var classList = getClassList(classes);
    for (var _i = 0, _a = elements; _i < _a.length; _i++) {
        var ele = _a[_i];
        for (var _b = 0, classList_1 = classList; _b < classList_1.length; _b++) {
            var className = classList_1[_b];
            if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(ele)) {
                var curClass = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('attributes.className', ele);
                if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(curClass)) {
                    Object(_util__WEBPACK_IMPORTED_MODULE_1__["setValue"])('attributes.className', className, ele);
                }
                else if (!new RegExp('\\b' + className + '\\b', 'i').test(curClass)) {
                    Object(_util__WEBPACK_IMPORTED_MODULE_1__["setValue"])('attributes.className', curClass + ' ' + className, ele);
                }
            }
            else {
                if (!ele.classList.contains(className)) {
                    ele.classList.add(className);
                }
            }
        }
    }
    return elements;
}
/**
 * The function used to add the classes to array of elements
 *
 * @param  {Element[]|NodeList} elements - An array of elements that need to remove a list of classes
 * @param  {string|string[]} classes - String or array of string that need to add an individual element as a class
 * @returns {any} .
 * @private
 */
function removeClass(elements, classes) {
    var classList = getClassList(classes);
    for (var _i = 0, _a = elements; _i < _a.length; _i++) {
        var ele = _a[_i];
        var flag = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(ele);
        var canRemove = flag ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('attributes.className', ele) : ele.className !== '';
        if (canRemove) {
            for (var _b = 0, classList_2 = classList; _b < classList_2.length; _b++) {
                var className = classList_2[_b];
                if (flag) {
                    var classes_1 = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('attributes.className', ele);
                    var classArr = classes_1.split(' ');
                    var index = classArr.indexOf(className);
                    if (index !== -1) {
                        classArr.splice(index, 1);
                    }
                    Object(_util__WEBPACK_IMPORTED_MODULE_1__["setValue"])('attributes.className', classArr.join(' '), ele);
                }
                else {
                    ele.classList.remove(className);
                }
            }
        }
    }
    return elements;
}
/**
 * The function used to get classlist.
 *
 * @param  {string | string[]} classes - An element the need to check visibility
 * @returns {string[]} ?
 * @private
 */
function getClassList(classes) {
    var classList = [];
    if (typeof classes === 'string') {
        classList.push(classes);
    }
    else {
        classList = classes;
    }
    return classList;
}
/**
 * The function used to check element is visible or not.
 *
 * @param  {Element|Node} element - An element the need to check visibility
 * @returns {boolean} ?
 * @private
 */
function isVisible(element) {
    var ele = element;
    return (ele.style.visibility === '' && ele.offsetWidth > 0);
}
/**
 * The function used to insert an array of elements into a first of the element.
 *
 * @param  {Element[]|NodeList} fromElements - An array of elements that need to prepend.
 * @param  {Element} toElement - An element that is going to prepend.
 * @param {boolean} isEval - ?
 * @returns {Element[] | NodeList} ?
 * @private
 */
function prepend(fromElements, toElement, isEval) {
    var docFrag = document.createDocumentFragment();
    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
        var ele = _a[_i];
        docFrag.appendChild(ele);
    }
    toElement.insertBefore(docFrag, toElement.firstElementChild);
    if (isEval) {
        executeScript(toElement);
    }
    return fromElements;
}
/**
 * The function used to insert an array of elements into last of the element.
 *
 * @param  {Element[]|NodeList} fromElements - An array of elements that need to append.
 * @param  {Element} toElement - An element that is going to prepend.
 * @param {boolean} isEval - ?
 * @returns {Element[] | NodeList} ?
 * @private
 */
function append(fromElements, toElement, isEval) {
    var docFrag = document.createDocumentFragment();
    for (var _i = 0, _a = fromElements; _i < _a.length; _i++) {
        var ele = _a[_i];
        docFrag.appendChild(ele);
    }
    toElement.appendChild(docFrag);
    if (isEval) {
        executeScript(toElement);
    }
    return fromElements;
}
/**
 * The function is used to evaluate script from Ajax request
 *
 * @param {Element} ele - An element is going to evaluate the script
 * @returns {void} ?
 */
function executeScript(ele) {
    var eleArray = ele.querySelectorAll('script');
    eleArray.forEach(function (element) {
        var script = document.createElement('script');
        script.text = element.innerHTML;
        document.head.appendChild(script);
        detach(script);
    });
}
/**
 * The function used to remove the element from parentnode
 *
 * @param  {Element|Node|HTMLElement} element - An element that is going to detach from the Dom
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function detach(element) {
    var parentNode = element.parentNode;
    if (parentNode) {
        return parentNode.removeChild(element);
    }
}
/**
 * The function used to remove the element from Dom also clear the bounded events
 *
 * @param  {Element|Node|HTMLElement} element - An element remove from the Dom
 * @returns {void} ?
 * @private
 */
function remove(element) {
    var parentNode = element.parentNode;
    _event_handler__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].clearEvents(element);
    parentNode.removeChild(element);
}
/**
 * The function helps to set multiple attributes to an element
 *
 * @param  {Element|Node} element - An element that need to set attributes.
 * @param  {string} attributes - JSON Object that is going to as attributes.
 * @returns {Element} ?
 * @private
 */
// eslint-disable-next-line
function attributes(element, attributes) {
    var keys = Object.keys(attributes);
    var ele = element;
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(ele)) {
            var iKey = key;
            if (key === 'tabindex') {
                iKey = 'tabIndex';
            }
            ele.attributes[iKey] = attributes[key];
        }
        else {
            ele.setAttribute(key, attributes[key]);
        }
    }
    return ele;
}
/**
 * The function selects the element from giving context.
 *
 * @param  {string} selector - Selector string need fetch element
 * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.
 * @param {boolean} needsVDOM ?
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function select(selector, context, needsVDOM) {
    if (context === void 0) { context = document; }
    selector = querySelectId(selector);
    return context.querySelector(selector);
}
/**
 * The function selects an array of element from the given context.
 *
 * @param  {string} selector - Selector string need fetch element
 * @param  {Document|Element} context - It is an optional type, That specifies a Dom context.
 * @param {boolean} needsVDOM ?
 * @returns {HTMLElement[]} ?
 * @private
 */
// eslint-disable-next-line
function selectAll(selector, context, needsVDOM) {
    if (context === void 0) { context = document; }
    selector = querySelectId(selector);
    var nodeList = context.querySelectorAll(selector);
    return nodeList;
}
/**
 * The function selects an id of element from the given context.
 *
 * @param  {string} selector - Selector string need fetch element
 * @returns {string} ?
 * @private
 */
function querySelectId(selector) {
    var charRegex = /(!|"|\$|%|&|'|\(|\)|\*|\/|:|;|<|=|\?|@|\]|\^|`|{|}|\||\+|~)/g;
    if (selector.match(/#[0-9]/g) || selector.match(charRegex)) {
        var idList = selector.split(',');
        for (var i = 0; i < idList.length; i++) {
            var list = idList[i].split(' ');
            for (var j = 0; j < list.length; j++) {
                if (list[j].indexOf('#') > -1) {
                    if (!list[j].match(/\[.*\]/)) {
                        var splitId = list[j].split('#');
                        if (splitId[1].match(/^\d/) || splitId[1].match(charRegex)) {
                            var setId = list[j].split('.');
                            setId[0] = setId[0].replace(/#/, '[id=\'') + '\']';
                            list[j] = setId.join('.');
                        }
                    }
                }
            }
            idList[i] = list.join(' ');
        }
        return idList.join(',');
    }
    return selector;
}
/**
 * Returns single closest parent element based on class selector.
 *
 * @param  {Element} element - An element that need to find the closest element.
 * @param  {string} selector - A classSelector of closest element.
 * @returns {Element} ?
 * @private
 */
function closest(element, selector) {
    var el = element;
    if (typeof el.closest === 'function') {
        return el.closest(selector);
    }
    while (el && el.nodeType === 1) {
        if (matches(el, selector)) {
            return el;
        }
        el = el.parentNode;
    }
    return null;
}
/**
 * Returns all sibling elements of the given element.
 *
 * @param  {Element|Node} element - An element that need to get siblings.
 * @returns {Element[]} ?
 * @private
 */
function siblings(element) {
    var siblings = [];
    var childNodes = Array.prototype.slice.call(element.parentNode.childNodes);
    for (var _i = 0, childNodes_1 = childNodes; _i < childNodes_1.length; _i++) {
        var curNode = childNodes_1[_i];
        if (curNode.nodeType === Node.ELEMENT_NODE && element !== curNode) {
            siblings.push(curNode);
        }
    }
    return siblings;
}
/**
 * set the value if not exist. Otherwise set the existing value
 *
 * @param  {HTMLElement} element - An element to which we need to set value.
 * @param  {string} property - Property need to get or set.
 * @param  {string} value - value need to set.
 * @returns {string} ?
 * @private
 */
function getAttributeOrDefault(element, property, value) {
    var attrVal;
    var isObj = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(element);
    if (isObj) {
        attrVal = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('attributes.' + property, element);
    }
    else {
        attrVal = element.getAttribute(property);
    }
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(attrVal) && value) {
        if (!isObj) {
            element.setAttribute(property, value.toString());
        }
        else {
            element.attributes[property] = value;
        }
        attrVal = value;
    }
    return attrVal;
}
/**
 * Set the style attributes to Html element.
 *
 * @param {HTMLElement} element - Element which we want to set attributes
 * @param {any} attrs - Set the given attributes to element
 * @returns {void} ?
 * @private
 */
function setStyleAttribute(element, attrs) {
    if (attrs !== undefined) {
        Object.keys(attrs).forEach(function (key) {
            // eslint-disable-next-line
            element.style[key] = attrs[key];
        });
    }
}
/**
 * Method for add and remove classes to a dom element.
 *
 * @param {Element} element - Element for add and remove classes
 * @param {string[]} addClasses - List of classes need to be add to the element
 * @param {string[]} removeClasses - List of classes need to be remove from the element
 * @returns {void} ?
 * @private
 */
function classList(element, addClasses, removeClasses) {
    addClass([element], addClasses);
    removeClass([element], removeClasses);
}
/**
 * Method to check whether the element matches the given selector.
 *
 * @param {Element} element - Element to compare with the selector.
 * @param {string} selector - String selector which element will satisfy.
 * @returns {void} ?
 * @private
 */
function matches(element, selector) {
    // eslint-disable-next-line
    var matches = element.matches || element.msMatchesSelector || element.webkitMatchesSelector;
    if (matches) {
        return matches.call(element, selector);
    }
    else {
        return [].indexOf.call(document.querySelectorAll(selector), element) !== -1;
    }
}
/**
 * Method to get the html text from DOM.
 *
 * @param {HTMLElement} ele - Element to compare with the selector.
 * @param {string} innerHTML - String selector which element will satisfy.
 * @returns {void} ?
 * @private
 */
function includeInnerHTML(ele, innerHTML) {
    ele.innerHTML = innerHTML;
}
/**
 * Method to get the containsclass.
 *
 * @param {HTMLElement} ele - Element to compare with the selector.
 * @param {string} className - String selector which element will satisfy.
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function containsClass(ele, className) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(ele)) {
        // eslint-disable-next-line
        return new RegExp('\\b' + className + '\\b', 'i').test(ele.attributes.className);
    }
    else {
        return ele.classList.contains(className);
    }
}
/**
 * Method to check whether the element matches the given selector.
 *
 * @param {Object} element - Element to compare with the selector.
 * @param {boolean} deep ?
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function cloneNode(element, deep) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isObject"])(element)) {
        if (deep) {
            return Object(_util__WEBPACK_IMPORTED_MODULE_1__["extend"])({}, {}, element, true);
        }
    }
    else {
        return element.cloneNode(deep);
    }
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/draggable.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/draggable.js ***!
  \***************************************************************************************************************/
/*! exports provided: Position, Draggable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return Position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Draggable", function() { return Draggable; });
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js");
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notify-property-change */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js");
/* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./event-handler */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js");
/* harmony import */ var _child_property__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./child-property */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/child-property.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};








var defaultPosition = { left: 0, top: 0, bottom: 0, right: 0 };
var positionProp = ['offsetLeft', 'offsetTop'];
var axisMapper = ['x', 'y'];
var axisValueMapper = ['left', 'top'];
var isDraggedObject = { isDragged: false };
/**
 * Specifies the position coordinates
 */
var Position = /** @class */ (function (_super) {
    __extends(Position, _super);
    function Position() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(0)
    ], Position.prototype, "left", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(0)
    ], Position.prototype, "top", void 0);
    return Position;
}(_child_property__WEBPACK_IMPORTED_MODULE_5__["ChildProperty"]));

/**
 * Draggable Module provides support to enable draggable functionality in Dom Elements.
 * ```html
 * <div id='drag'>Draggable</div>
 * <script>
 * var ele = document.getElementById('drag');
 * var drag:Draggable = new Draggable(ele,{
 *     clone:false,
 *     drag: function(e) {
 *      //drag handler code.
 *      },
 *     handle:'.class'
 * });
 * </script>
 * ```
 */
var Draggable = /** @class */ (function (_super) {
    __extends(Draggable, _super);
    function Draggable(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.dragLimit = Draggable_1.getDefaultPosition();
        _this.borderWidth = Draggable_1.getDefaultPosition();
        _this.padding = Draggable_1.getDefaultPosition();
        _this.diffX = 0;
        _this.prevLeft = 0;
        _this.prevTop = 0;
        _this.dragProcessStarted = false;
        /* tslint:disable no-any */
        _this.eleTop = 0;
        _this.tapHoldTimer = 0;
        _this.externalInitialize = false;
        _this.diffY = 0;
        _this.parentScrollX = 0;
        _this.parentScrollY = 0;
        _this.droppables = {};
        _this.bind();
        return _this;
    }
    Draggable_1 = Draggable;
    Draggable.prototype.bind = function () {
        this.toggleEvents();
        if (_browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].isIE) {
            Object(_dom__WEBPACK_IMPORTED_MODULE_2__["addClass"])([this.element], 'e-block-touch');
        }
        this.droppables[this.scope] = {};
    };
    Draggable.getDefaultPosition = function () {
        return Object(_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, defaultPosition);
    };
    Draggable.prototype.toggleEvents = function (isUnWire) {
        var ele;
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isUndefined"])(this.handle)) {
            ele = Object(_dom__WEBPACK_IMPORTED_MODULE_2__["select"])(this.handle, this.element);
        }
        var handler = (this.enableTapHold && _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].isDevice && _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].isTouch) ? this.mobileInitialize : this.initialize;
        if (isUnWire) {
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(ele || this.element, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchStartEvent, handler);
        }
        else {
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(ele || this.element, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchStartEvent, handler, this);
        }
    };
    /* istanbul ignore next */
    Draggable.prototype.mobileInitialize = function (evt) {
        var _this = this;
        var target = evt.currentTarget;
        this.tapHoldTimer = setTimeout(function () {
            _this.externalInitialize = true;
            _this.removeTapholdTimer();
            _this.initialize(evt, target);
        }, this.tapHoldThreshold);
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchMoveEvent, this.removeTapholdTimer, this);
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.removeTapholdTimer, this);
    };
    /* istanbul ignore next */
    Draggable.prototype.removeTapholdTimer = function () {
        clearTimeout(this.tapHoldTimer);
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchMoveEvent, this.removeTapholdTimer);
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.removeTapholdTimer);
    };
    /* istanbul ignore next */
    Draggable.prototype.getScrollableParent = function (element, axis) {
        var scroll = { 'vertical': 'scrollHeight', 'horizontal': 'scrollWidth' };
        var client = { 'vertical': 'clientHeight', 'horizontal': 'clientWidth' };
        if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(element)) {
            return null;
        }
        if (element[scroll[axis]] > element[client[axis]]) {
            if (axis === 'vertical' ? element.scrollTop > 0 : element.scrollLeft > 0) {
                if (axis === 'vertical') {
                    this.parentScrollY = this.parentScrollY +
                        (this.parentScrollY === 0 ? element.scrollTop : element.scrollTop - this.parentScrollY);
                    this.tempScrollHeight = element.scrollHeight;
                }
                else {
                    this.parentScrollX = this.parentScrollX +
                        (this.parentScrollX === 0 ? element.scrollLeft : element.scrollLeft - this.parentScrollX);
                    this.tempScrollWidth = element.scrollWidth;
                }
                if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(element)) {
                    return this.getScrollableParent(element.parentNode, axis);
                }
                else {
                    return element;
                }
            }
            else {
                return this.getScrollableParent(element.parentNode, axis);
            }
        }
        else {
            return this.getScrollableParent(element.parentNode, axis);
        }
    };
    Draggable.prototype.getScrollableValues = function () {
        this.parentScrollX = 0;
        this.parentScrollY = 0;
        var isModalDialog = this.element.classList.contains('e-dialog') && this.element.classList.contains('e-dlg-modal');
        var verticalScrollParent = this.getScrollableParent(this.element.parentNode, 'vertical');
        var horizontalScrollParent = this.getScrollableParent(this.element.parentNode, 'horizontal');
    };
    Draggable.prototype.initialize = function (evt, curTarget) {
        this.currentStateTarget = evt.target;
        if (this.isDragStarted()) {
            return;
        }
        else {
            this.isDragStarted(true);
            this.externalInitialize = false;
        }
        this.target = (evt.currentTarget || curTarget);
        this.dragProcessStarted = false;
        if (this.abort) {
            /* tslint:disable no-any */
            var abortSelectors = this.abort;
            if (typeof abortSelectors === 'string') {
                abortSelectors = [abortSelectors];
            }
            for (var i = 0; i < abortSelectors.length; i++) {
                if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(Object(_dom__WEBPACK_IMPORTED_MODULE_2__["closest"])(evt.target, abortSelectors[i]))) {
                    /* istanbul ignore next */
                    if (this.isDragStarted()) {
                        this.isDragStarted(true);
                    }
                    return;
                }
            }
        }
        if (this.preventDefault && !Object(_util__WEBPACK_IMPORTED_MODULE_6__["isUndefined"])(evt.changedTouches) && evt.type !== 'touchstart') {
            evt.preventDefault();
        }
        this.element.setAttribute('aria-grabbed', 'true');
        var intCoord = this.getCoordinates(evt);
        this.initialPosition = { x: intCoord.pageX, y: intCoord.pageY };
        if (!this.clone) {
            var pos = this.element.getBoundingClientRect();
            this.getScrollableValues();
            if (evt.clientX === evt.pageX) {
                this.parentScrollX = 0;
            }
            if (evt.clientY === evt.pageY) {
                this.parentScrollY = 0;
            }
            this.relativeXPosition = intCoord.pageX - (pos.left + this.parentScrollX);
            this.relativeYPosition = intCoord.pageY - (pos.top + this.parentScrollY);
        }
        if (this.externalInitialize) {
            this.intDragStart(evt);
        }
        else {
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchMoveEvent, this.intDragStart, this);
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.intDestroy, this);
        }
        this.toggleEvents(true);
        if (evt.type !== 'touchstart' && this.isPreventSelect) {
            document.body.classList.add('e-prevent-select');
        }
        this.externalInitialize = false;
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].trigger(document.documentElement, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchStartEvent, evt);
    };
    Draggable.prototype.intDragStart = function (evt) {
        this.removeTapholdTimer();
        var isChangeTouch = !Object(_util__WEBPACK_IMPORTED_MODULE_6__["isUndefined"])(evt.changedTouches);
        if (isChangeTouch && (evt.changedTouches.length !== 1)) {
            return;
        }
        if (isChangeTouch) {
            evt.preventDefault();
        }
        var intCordinate = this.getCoordinates(evt);
        var pos;
        var styleProp = getComputedStyle(this.element);
        this.margin = {
            left: parseInt(styleProp.marginLeft, 10),
            top: parseInt(styleProp.marginTop, 10),
            right: parseInt(styleProp.marginRight, 10),
            bottom: parseInt(styleProp.marginBottom, 10),
        };
        var element = this.element;
        if (this.clone && this.dragTarget) {
            var intClosest = Object(_dom__WEBPACK_IMPORTED_MODULE_2__["closest"])(evt.target, this.dragTarget);
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(intClosest)) {
                element = intClosest;
            }
        }
        /* istanbul ignore next */
        if (this.isReplaceDragEle) {
            element = this.currentStateCheck(evt.target, element);
        }
        this.offset = this.calculateParentPosition(element);
        this.position = this.getMousePosition(evt, this.isDragScroll);
        var x = this.initialPosition.x - intCordinate.pageX;
        var y = this.initialPosition.y - intCordinate.pageY;
        var distance = Math.sqrt((x * x) + (y * y));
        if ((distance >= this.distance || this.externalInitialize)) {
            var ele = this.getHelperElement(evt);
            if (!ele || Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(ele)) {
                return;
            }
            var dragTargetElement = this.helperElement = ele;
            this.parentClientRect = this.calculateParentPosition(dragTargetElement.offsetParent);
            if (this.dragStart) {
                var curTarget = this.getProperTargetElement(evt);
                var args = {
                    event: evt,
                    element: element,
                    target: curTarget,
                    bindEvents: Object(_util__WEBPACK_IMPORTED_MODULE_6__["isBlazor"])() ? this.bindDragEvents.bind(this) : null,
                    dragElement: dragTargetElement
                };
                this.trigger('dragStart', args);
            }
            if (this.dragArea) {
                this.setDragArea();
            }
            else {
                this.dragLimit = { left: 0, right: 0, bottom: 0, top: 0 };
                this.borderWidth = { top: 0, left: 0 };
            }
            pos = { left: this.position.left - this.parentClientRect.left, top: this.position.top - this.parentClientRect.top };
            if (this.clone && !this.enableTailMode) {
                this.diffX = this.position.left - this.offset.left;
                this.diffY = this.position.top - this.offset.top;
            }
            this.getScrollableValues();
            // when drag element has margin-top
            var styles = getComputedStyle(element);
            var marginTop = parseFloat(styles.marginTop);
            /* istanbul ignore next */
            if (this.clone && marginTop !== 0) {
                pos.top += marginTop;
            }
            this.eleTop = !isNaN(parseFloat(styles.top)) ? parseFloat(styles.top) - this.offset.top : 0;
            /* istanbul ignore next */
            // if (this.eleTop > 0) {
            //     pos.top += this.eleTop;
            // }
            if (this.enableScrollHandler && !this.clone) {
                pos.top -= this.parentScrollY;
                pos.left -= this.parentScrollX;
            }
            var posValue = this.getProcessedPositionValue({
                top: (pos.top - this.diffY) + 'px',
                left: (pos.left - this.diffX) + 'px'
            });
            this.dragElePosition = { top: pos.top, left: pos.left };
            Object(_dom__WEBPACK_IMPORTED_MODULE_2__["setStyleAttribute"])(dragTargetElement, this.getDragPosition({ position: 'absolute', left: posValue.left, top: posValue.top }));
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchMoveEvent, this.intDragStart);
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.intDestroy);
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isBlazor"])()) {
                this.bindDragEvents(dragTargetElement);
            }
        }
    };
    Draggable.prototype.bindDragEvents = function (dragTargetElement) {
        if (Object(_dom__WEBPACK_IMPORTED_MODULE_2__["isVisible"])(dragTargetElement)) {
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchMoveEvent, this.intDrag, this);
            _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.intDragStop, this);
            this.setGlobalDroppables(false, this.element, dragTargetElement);
        }
        else {
            this.toggleEvents();
            document.body.classList.remove('e-prevent-select');
        }
    };
    Draggable.prototype.elementInViewport = function (el) {
        this.top = el.offsetTop;
        this.left = el.offsetLeft;
        this.width = el.offsetWidth;
        this.height = el.offsetHeight;
        while (el.offsetParent) {
            el = el.offsetParent;
            this.top += el.offsetTop;
            this.left += el.offsetLeft;
        }
        return (this.top >= window.pageYOffset &&
            this.left >= window.pageXOffset &&
            (this.top + this.height) <= (window.pageYOffset + window.innerHeight) &&
            (this.left + this.width) <= (window.pageXOffset + window.innerWidth));
    };
    Draggable.prototype.getProcessedPositionValue = function (value) {
        if (this.queryPositionInfo) {
            return this.queryPositionInfo(value);
        }
        return value;
    };
    Draggable.prototype.calculateParentPosition = function (ele) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(ele)) {
            return { left: 0, top: 0 };
        }
        var rect = ele.getBoundingClientRect();
        var style = getComputedStyle(ele);
        return {
            left: (rect.left + window.pageXOffset) - parseInt(style.marginLeft, 10),
            top: (rect.top + window.pageYOffset) - parseInt(style.marginTop, 10)
        };
    };
    // tslint:disable-next-line:max-func-body-length
    Draggable.prototype.intDrag = function (evt) {
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isUndefined"])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var left;
        var top;
        this.position = this.getMousePosition(evt, this.isDragScroll);
        var docHeight = this.getDocumentWidthHeight('Height');
        if (docHeight < this.position.top) {
            this.position.top = docHeight;
        }
        var docWidth = this.getDocumentWidthHeight('Width');
        if (docWidth < this.position.left) {
            this.position.left = docWidth;
        }
        if (this.drag) {
            var curTarget = this.getProperTargetElement(evt);
            this.trigger('drag', { event: evt, element: this.element, target: curTarget });
        }
        var eleObj = this.checkTargetElement(evt);
        if (eleObj.target && eleObj.instance) {
            /* tslint:disable no-any */
            var flag = true;
            if (this.hoverObject) {
                if (this.hoverObject.instance !== eleObj.instance) {
                    this.triggerOutFunction(evt, eleObj);
                }
                else {
                    flag = false;
                }
            }
            if (flag) {
                eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
                eleObj.instance.intOver(evt, eleObj.target);
                this.hoverObject = eleObj;
            }
        }
        else if (this.hoverObject) {
            this.triggerOutFunction(evt, eleObj);
        }
        var helperElement = this.droppables[this.scope].helper;
        this.parentClientRect = this.calculateParentPosition(this.helperElement.offsetParent);
        var tLeft = this.parentClientRect.left;
        var tTop = this.parentClientRect.top;
        var intCoord = this.getCoordinates(evt);
        var pagex = intCoord.pageX;
        var pagey = intCoord.pageY;
        var dLeft = this.position.left - this.diffX;
        var dTop = this.position.top - this.diffY;
        var styles = getComputedStyle(helperElement);
        if (this.dragArea) {
            if (this.pageX !== pagex || this.skipDistanceCheck) {
                var helperWidth = helperElement.offsetWidth + (parseFloat(styles.marginLeft)
                    + parseFloat(styles.marginRight));
                if (this.dragLimit.left > dLeft && dLeft > 0) {
                    left = this.dragLimit.left;
                }
                else if (this.dragLimit.right + window.pageXOffset < dLeft + helperWidth && dLeft > 0) {
                    left = dLeft - (dLeft - this.dragLimit.right) + window.pageXOffset - helperWidth;
                }
                else {
                    left = dLeft < 0 ? this.dragLimit.left : dLeft;
                }
            }
            if (this.pageY !== pagey || this.skipDistanceCheck) {
                var helperHeight = helperElement.offsetHeight + (parseFloat(styles.marginTop)
                    + parseFloat(styles.marginBottom));
                if (this.dragLimit.top > dTop && dTop > 0) {
                    top = this.dragLimit.top;
                }
                else if (this.dragLimit.bottom + window.pageYOffset < dTop + helperHeight && dTop > 0) {
                    top = dTop - (dTop - this.dragLimit.bottom) + window.pageYOffset - helperHeight;
                }
                else {
                    top = dTop < 0 ? this.dragLimit.top : dTop;
                }
            }
        }
        else {
            left = dLeft;
            top = dTop;
        }
        var iTop = tTop + this.borderWidth.top;
        var iLeft = tLeft + this.borderWidth.left;
        if (this.dragProcessStarted) {
            if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(top)) {
                top = this.prevTop;
            }
            if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(left)) {
                left = this.prevLeft;
            }
        }
        var draEleTop;
        var draEleLeft;
        if (this.dragArea) {
            this.dragLimit.top = this.clone ? this.dragLimit.top : 0;
            draEleTop = (top - iTop) < 0 ? this.dragLimit.top : (top - iTop);
            draEleLeft = (left - iLeft) < 0 ? this.dragElePosition.left : (left - iLeft);
        }
        else {
            draEleTop = top - iTop;
            draEleLeft = left - iLeft;
        }
        var marginTop = parseFloat(getComputedStyle(this.element).marginTop);
        // when drag-element has margin-top
        /* istanbul ignore next */
        if (marginTop > 0) {
            if (this.clone) {
                draEleTop += marginTop;
                if (dTop < 0) {
                    if ((marginTop + dTop) >= 0) {
                        draEleTop = marginTop + dTop;
                    }
                    else {
                        draEleTop -= marginTop;
                    }
                }
                draEleTop = (this.dragLimit.bottom < draEleTop) ? this.dragLimit.bottom : draEleTop;
            }
            if ((top - iTop) < 0) {
                if (dTop + marginTop + (helperElement.offsetHeight - iTop) >= 0) {
                    var tempDraEleTop = this.dragLimit.top + dTop - iTop;
                    if ((tempDraEleTop + marginTop + iTop) < 0) {
                        draEleTop -= marginTop + iTop;
                    }
                    else {
                        draEleTop = tempDraEleTop;
                    }
                }
                else {
                    draEleTop -= marginTop + iTop;
                }
            }
        }
        /* istanbul ignore next */
        // if(this.eleTop > 0) {
        //      draEleTop += this.eleTop;
        // }
        if (this.enableScrollHandler && !this.clone) {
            draEleTop -= this.parentScrollY;
            draEleLeft -= this.parentScrollX;
        }
        var dragValue = this.getProcessedPositionValue({ top: draEleTop + 'px', left: draEleLeft + 'px' });
        Object(_dom__WEBPACK_IMPORTED_MODULE_2__["setStyleAttribute"])(helperElement, this.getDragPosition(dragValue));
        if (!this.elementInViewport(helperElement) && this.enableAutoScroll) {
            this.helperElement.scrollIntoView();
        }
        this.dragProcessStarted = true;
        this.prevLeft = left;
        this.prevTop = top;
        this.position.left = left;
        this.position.top = top;
        this.pageX = pagex;
        this.pageY = pagey;
    };
    Draggable.prototype.triggerOutFunction = function (evt, eleObj) {
        this.hoverObject.instance.intOut(evt, eleObj.target);
        this.hoverObject.instance.dragData[this.scope] = null;
        this.hoverObject = null;
    };
    Draggable.prototype.getDragPosition = function (dragValue) {
        var temp = Object(_util__WEBPACK_IMPORTED_MODULE_6__["extend"])({}, dragValue);
        if (this.axis) {
            if (this.axis === 'x') {
                delete temp.top;
            }
            else if (this.axis === 'y') {
                delete temp.left;
            }
        }
        return temp;
    };
    Draggable.prototype.getDocumentWidthHeight = function (str) {
        var docBody = document.body;
        var docEle = document.documentElement;
        var returnValue = Math.max(docBody['scroll' + str], docEle['scroll' + str], docBody['offset' + str], docEle['offset' + str], docEle['client' + str]);
        return returnValue;
    };
    Draggable.prototype.intDragStop = function (evt) {
        this.dragProcessStarted = false;
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isUndefined"])(evt.changedTouches) && (evt.changedTouches.length !== 1)) {
            return;
        }
        var type = ['touchend', 'pointerup', 'mouseup'];
        if (type.indexOf(evt.type) !== -1) {
            if (this.dragStop) {
                var curTarget = this.getProperTargetElement(evt);
                this.trigger('dragStop', { event: evt, element: this.element, target: curTarget, helper: this.helperElement });
            }
            this.intDestroy(evt);
        }
        else {
            this.element.setAttribute('aria-grabbed', 'false');
        }
        var eleObj = this.checkTargetElement(evt);
        if (eleObj.target && eleObj.instance) {
            eleObj.instance.dragStopCalled = true;
            eleObj.instance.dragData[this.scope] = this.droppables[this.scope];
            eleObj.instance.intDrop(evt, eleObj.target);
        }
        this.setGlobalDroppables(true);
        document.body.classList.remove('e-prevent-select');
    };
    /**
     * @private
     */
    Draggable.prototype.intDestroy = function (evt) {
        this.dragProcessStarted = false;
        this.toggleEvents();
        document.body.classList.remove('e-prevent-select');
        this.element.setAttribute('aria-grabbed', 'false');
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchMoveEvent, this.intDragStart);
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.intDragStop);
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.intDestroy);
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(document, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchMoveEvent, this.intDrag);
        if (this.isDragStarted()) {
            this.isDragStarted(true);
        }
    };
    // triggers when property changed
    Draggable.prototype.onPropertyChanged = function (newProp, oldProp) {
        //No Code to handle
    };
    Draggable.prototype.getModuleName = function () {
        return 'draggable';
    };
    Draggable.prototype.isDragStarted = function (change) {
        if (change) {
            isDraggedObject.isDragged = !isDraggedObject.isDragged;
        }
        return isDraggedObject.isDragged;
    };
    Draggable.prototype.setDragArea = function () {
        var eleWidthBound;
        var eleHeightBound;
        var top = 0;
        var left = 0;
        var ele;
        var type = typeof this.dragArea;
        if (type === 'string') {
            ele = Object(_dom__WEBPACK_IMPORTED_MODULE_2__["select"])(this.dragArea);
        }
        else {
            ele = this.dragArea;
        }
        if (ele) {
            var elementArea = ele.getBoundingClientRect();
            eleWidthBound = ele.scrollWidth ? ele.scrollWidth : elementArea.right - elementArea.left;
            eleHeightBound = ele.scrollHeight ? ele.scrollHeight : elementArea.bottom - elementArea.top;
            var keys = ['Top', 'Left', 'Bottom', 'Right'];
            var styles = getComputedStyle(ele);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var tborder = styles['border' + key + 'Width'];
                var tpadding = styles['padding' + key];
                var lowerKey = key.toLowerCase();
                this.borderWidth[lowerKey] = isNaN(parseFloat(tborder)) ? 0 : parseFloat(tborder);
                this.padding[lowerKey] = isNaN(parseFloat(tpadding)) ? 0 : parseFloat(tpadding);
            }
            top = elementArea.top;
            left = elementArea.left;
            this.dragLimit.left = left + this.borderWidth.left + this.padding.left;
            this.dragLimit.top = ele.offsetTop + this.borderWidth.top + this.padding.top;
            this.dragLimit.right = left + eleWidthBound - (this.borderWidth.right + this.padding.right);
            this.dragLimit.bottom = top + eleHeightBound - (this.borderWidth.bottom + this.padding.bottom);
        }
    };
    Draggable.prototype.getProperTargetElement = function (evt) {
        var intCoord = this.getCoordinates(evt);
        var ele;
        var prevStyle = this.helperElement.style.pointerEvents || '';
        if (Object(_util__WEBPACK_IMPORTED_MODULE_6__["compareElementParent"])(evt.target, this.helperElement) || evt.type.indexOf('touch') !== -1) {
            this.helperElement.style.pointerEvents = 'none';
            ele = document.elementFromPoint(intCoord.clientX, intCoord.clientY);
            this.helperElement.style.pointerEvents = prevStyle;
        }
        else {
            ele = evt.target;
        }
        return ele;
    };
    /* istanbul ignore next */
    Draggable.prototype.currentStateCheck = function (ele, oldEle) {
        var elem;
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(this.currentStateTarget) && this.currentStateTarget !== ele) {
            elem = this.currentStateTarget;
        }
        else {
            elem = !Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(oldEle) ? oldEle : ele;
        }
        return elem;
    };
    Draggable.prototype.getMousePosition = function (evt, isdragscroll) {
        /* tslint:disable no-any */
        var dragEle = evt.srcElement !== undefined ? evt.srcElement : evt.target;
        var intCoord = this.getCoordinates(evt);
        var pageX;
        var pageY;
        var isOffsetParent = Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(dragEle.offsetParent);
        /* istanbul ignore next */
        if (isdragscroll) {
            pageX = this.clone ? intCoord.pageX :
                (intCoord.pageX + (isOffsetParent ? 0 : dragEle.offsetParent.scrollLeft)) - this.relativeXPosition;
            pageY = this.clone ? intCoord.pageY :
                (intCoord.pageY + (isOffsetParent ? 0 : dragEle.offsetParent.scrollTop)) - this.relativeYPosition;
        }
        else {
            pageX = this.clone ? intCoord.pageX : (intCoord.pageX + window.pageXOffset) - this.relativeXPosition;
            pageY = this.clone ? intCoord.pageY : (intCoord.pageY + window.pageYOffset) - this.relativeYPosition;
        }
        return {
            left: pageX - (this.margin.left + this.cursorAt.left),
            top: pageY - (this.margin.top + this.cursorAt.top)
        };
    };
    Draggable.prototype.getCoordinates = function (evt) {
        if (evt.type.indexOf('touch') > -1) {
            return evt.changedTouches[0];
        }
        return evt;
    };
    Draggable.prototype.getHelperElement = function (evt) {
        var element;
        if (this.clone) {
            if (this.helper) {
                element = this.helper({ sender: evt, element: this.target });
            }
            else {
                element = Object(_dom__WEBPACK_IMPORTED_MODULE_2__["createElement"])('div', { className: 'e-drag-helper e-block-touch', innerHTML: 'Draggable' });
                document.body.appendChild(element);
            }
        }
        else {
            element = this.element;
        }
        return element;
    };
    Draggable.prototype.setGlobalDroppables = function (reset, drag, helper) {
        this.droppables[this.scope] = reset ? null : {
            draggable: drag,
            helper: helper,
            draggedElement: this.element
        };
    };
    Draggable.prototype.checkTargetElement = function (evt) {
        var target = this.getProperTargetElement(evt);
        var dropIns = this.getDropInstance(target);
        if (!dropIns && target && !Object(_util__WEBPACK_IMPORTED_MODULE_6__["isNullOrUndefined"])(target.parentNode)) {
            var parent_1 = Object(_dom__WEBPACK_IMPORTED_MODULE_2__["closest"])(target.parentNode, '.e-droppable') || target.parentElement;
            if (parent_1) {
                dropIns = this.getDropInstance(parent_1);
            }
        }
        return { target: target, instance: dropIns };
    };
    Draggable.prototype.getDropInstance = function (ele) {
        var name = 'getModuleName';
        var drop;
        var eleInst = ele && ele.ej2_instances;
        if (eleInst) {
            for (var _i = 0, eleInst_1 = eleInst; _i < eleInst_1.length; _i++) {
                var inst = eleInst_1[_i];
                if (inst[name]() === 'droppable') {
                    drop = inst;
                    break;
                }
            }
        }
        return drop;
    };
    Draggable.prototype.destroy = function () {
        this.toggleEvents(true);
        _super.prototype.destroy.call(this);
    };
    var Draggable_1;
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Complex"])({}, Position)
    ], Draggable.prototype, "cursorAt", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(true)
    ], Draggable.prototype, "clone", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "dragArea", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "isDragScroll", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "isReplaceDragEle", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(true)
    ], Draggable.prototype, "isPreventSelect", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Event"])()
    ], Draggable.prototype, "drag", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Event"])()
    ], Draggable.prototype, "dragStart", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Event"])()
    ], Draggable.prototype, "dragStop", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(1)
    ], Draggable.prototype, "distance", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "handle", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "abort", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "helper", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])('default')
    ], Draggable.prototype, "scope", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])('')
    ], Draggable.prototype, "dragTarget", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "axis", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Draggable.prototype, "queryPositionInfo", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(false)
    ], Draggable.prototype, "enableTailMode", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(false)
    ], Draggable.prototype, "skipDistanceCheck", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(true)
    ], Draggable.prototype, "preventDefault", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(false)
    ], Draggable.prototype, "enableAutoScroll", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(false)
    ], Draggable.prototype, "enableTapHold", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(750)
    ], Draggable.prototype, "tapHoldThreshold", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])(false)
    ], Draggable.prototype, "enableScrollHandler", void 0);
    Draggable = Draggable_1 = __decorate([
        _notify_property_change__WEBPACK_IMPORTED_MODULE_3__["NotifyPropertyChanges"]
    ], Draggable);
    return Draggable;
}(_base__WEBPACK_IMPORTED_MODULE_0__["Base"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/droppable.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/droppable.js ***!
  \***************************************************************************************************************/
/*! exports provided: Droppable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Droppable", function() { return Droppable; });
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js");
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notify-property-change */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js");
/* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./event-handler */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






/**
 * Droppable Module provides support to enable droppable functionality in Dom Elements.
 * ```html
 * <div id='drop'>Droppable</div>
 * <script>
 * let ele:HTMLElement = document.getElementById('drop');
 * var drag:Droppable = new Droppable(ele,{
 *     accept:'.drop',
 *     drop: function(e) {
 *      //drop handler code.
 *     }
 * });
 * </script>
 * ```
 */
var Droppable = /** @class */ (function (_super) {
    __extends(Droppable, _super);
    function Droppable(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.mouseOver = false;
        _this.dragData = {};
        _this.dragStopCalled = false;
        _this.bind();
        return _this;
    }
    Droppable.prototype.bind = function () {
        this.wireEvents();
    };
    Droppable.prototype.wireEvents = function () {
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].add(this.element, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.intDrop, this);
    };
    // triggers when property changed
    // eslint-disable-next-line
    Droppable.prototype.onPropertyChanged = function (newProp, oldProp) {
        //No Code to handle
    };
    Droppable.prototype.getModuleName = function () {
        return 'droppable';
    };
    Droppable.prototype.intOver = function (event, element) {
        if (!this.mouseOver) {
            var drag = this.dragData[this.scope];
            this.trigger('over', { event: event, target: element, dragData: drag });
            this.mouseOver = true;
        }
    };
    Droppable.prototype.intOut = function (event, element) {
        if (this.mouseOver) {
            this.trigger('out', { evt: event, target: element });
            this.mouseOver = false;
        }
    };
    Droppable.prototype.intDrop = function (evt, element) {
        if (!this.dragStopCalled) {
            return;
        }
        else {
            this.dragStopCalled = false;
        }
        var accept = true;
        var drag = this.dragData[this.scope];
        var isDrag = drag ? (drag.helper && Object(_dom__WEBPACK_IMPORTED_MODULE_2__["isVisible"])(drag.helper)) : false;
        var area;
        if (isDrag) {
            area = this.isDropArea(evt, drag.helper, element);
            if (this.accept) {
                accept = Object(_dom__WEBPACK_IMPORTED_MODULE_2__["matches"])(drag.helper, this.accept);
            }
        }
        if (isDrag && this.drop && area.canDrop && accept) {
            this.trigger('drop', { event: evt, target: area.target, droppedElement: drag.helper, dragData: drag });
        }
        this.mouseOver = false;
    };
    Droppable.prototype.isDropArea = function (evt, helper, element) {
        var area = { canDrop: true, target: element || evt.target };
        var isTouch = evt.type === 'touchend';
        if (isTouch || area.target === helper) {
            helper.style.display = 'none';
            var coord = isTouch ? (evt.changedTouches[0]) : evt;
            var ele = document.elementFromPoint(coord.clientX, coord.clientY);
            area.canDrop = false;
            area.canDrop = Object(_util__WEBPACK_IMPORTED_MODULE_5__["compareElementParent"])(ele, this.element);
            if (area.canDrop) {
                area.target = ele;
            }
            helper.style.display = '';
        }
        return area;
    };
    Droppable.prototype.destroy = function () {
        _event_handler__WEBPACK_IMPORTED_MODULE_4__["EventHandler"].remove(this.element, _browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].touchEndEvent, this.intDrop);
        _super.prototype.destroy.call(this);
    };
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])()
    ], Droppable.prototype, "accept", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Property"])('default')
    ], Droppable.prototype, "scope", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Event"])()
    ], Droppable.prototype, "drop", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Event"])()
    ], Droppable.prototype, "over", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_3__["Event"])()
    ], Droppable.prototype, "out", void 0);
    Droppable = __decorate([
        _notify_property_change__WEBPACK_IMPORTED_MODULE_3__["NotifyPropertyChanges"]
    ], Droppable);
    return Droppable;
}(_base__WEBPACK_IMPORTED_MODULE_0__["Base"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js ***!
  \*******************************************************************************************************************/
/*! exports provided: EventHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventHandler", function() { return EventHandler; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js");


/**
 * EventHandler class provides option to add, remove, clear and trigger events to a HTML DOM element
 * ```html
 * <div id="Eventdiv">  </div>
 * <script>
 *   let node: HTMLElement = document.querySelector("#Eventdiv");
 *   EventHandler.addEventListener(node, "click", function(){
 *       // click handler function code
 *   });
 *   EventHandler.addEventListener(node, "onmouseover", function(){
 *       // mouseover handler function code
 *   });
 *   EventHandler.removeEventListener(node, "click", function(){
 *       // click handler function code
 *   });
 *   eventObj.clearEvents();
 * </script>
 * ```
 */
var EventHandler = /** @class */ (function () {
    function EventHandler() {
    }
    // to get the event data based on element
    EventHandler.addOrGetEventData = function (element) {
        if ('__eventList' in element) {
            return element.__eventList.events;
        }
        else {
            element.__eventList = {};
            return element.__eventList.events = [];
        }
    };
    /**
     * Add an event to the specified DOM element.
     *
     * @param {any} element - Target HTML DOM element
     * @param {string} eventName - A string that specifies the name of the event
     * @param {Function} listener - Specifies the function to run when the event occurs
     * @param {Object} bindTo - A object that binds 'this' variable in the event handler
     * @param {number} intDebounce - Specifies at what interval given event listener should be triggered.
     * @returns {Function} ?
     */
    EventHandler.add = function (element, eventName, listener, bindTo, intDebounce) {
        var eventData = EventHandler.addOrGetEventData(element);
        var debounceListener;
        if (intDebounce) {
            debounceListener = Object(_util__WEBPACK_IMPORTED_MODULE_0__["debounce"])(listener, intDebounce);
        }
        else {
            debounceListener = listener;
        }
        if (bindTo) {
            debounceListener = debounceListener.bind(bindTo);
        }
        var event = eventName.split(' ');
        for (var i = 0; i < event.length; i++) {
            eventData.push({
                name: event[i],
                listener: listener,
                debounce: debounceListener
            });
            if (_browser__WEBPACK_IMPORTED_MODULE_1__["Browser"].isIE) {
                element.addEventListener(event[i], debounceListener);
            }
            else {
                element.addEventListener(event[i], debounceListener, { passive: false });
            }
        }
        return debounceListener;
    };
    /**
     * Remove an event listener that has been attached before.
     *
     * @param {any} element - Specifies the target html element to remove the event
     * @param {string} eventName - A string that specifies the name of the event to remove
     * @param {Function} listener - Specifies the function to remove
     * @returns {void} ?
     */
    EventHandler.remove = function (element, eventName, listener) {
        var eventData = EventHandler.addOrGetEventData(element);
        var event = eventName.split(' ');
        var _loop_1 = function (j) {
            var index = -1;
            var debounceListener;
            if (eventData && eventData.length !== 0) {
                eventData.some(function (x, i) {
                    return x.name === event[j] && x.listener === listener ?
                        (index = i, debounceListener = x.debounce, true) : false;
                });
            }
            if (index !== -1) {
                eventData.splice(index, 1);
            }
            if (debounceListener) {
                element.removeEventListener(event[j], debounceListener);
            }
        };
        for (var j = 0; j < event.length; j++) {
            _loop_1(j);
        }
    };
    /**
     * Clear all the event listeners that has been previously attached to the element.
     *
     * @param {any} element - Specifies the target html element to clear the events
     * @returns {void} ?
     */
    EventHandler.clearEvents = function (element) {
        var eventData;
        var copyData;
        // eslint-disable-next-line
        eventData = EventHandler.addOrGetEventData(element);
        // eslint-disable-next-line
        copyData = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])([], copyData, eventData);
        for (var i = 0; i < copyData.length; i++) {
            element.removeEventListener(copyData[i].name, copyData[i].debounce);
            eventData.shift();
        }
    };
    /**
     * Trigger particular event of the element.
     *
     * @param {any} element - Specifies the target html element to trigger the events
     * @param {string} eventName - Specifies the event to trigger for the specified element.
     * Can be a custom event, or any of the standard events.
     * @param {any} eventProp - Additional parameters to pass on to the event properties
     * @returns {void} ?
     */
    EventHandler.trigger = function (element, eventName, eventProp) {
        var eventData = EventHandler.addOrGetEventData(element);
        for (var _i = 0, eventData_1 = eventData; _i < eventData_1.length; _i++) {
            var event_1 = eventData_1[_i];
            if (event_1.name === eventName) {
                event_1.debounce.call(this, eventProp);
            }
        }
    };
    return EventHandler;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/hijri-parser.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/hijri-parser.js ***!
  \******************************************************************************************************************/
/*! exports provided: HijriParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HijriParser", function() { return HijriParser; });
/***
 * Hijri parser
 */
// eslint-disable-next-line
var HijriParser;
(function (HijriParser) {
    var dateCorrection = [28607, 28636, 28665, 28695, 28724, 28754, 28783, 28813, 28843, 28872, 28901, 28931, 28960, 28990,
        29019, 29049, 29078, 29108, 29137, 29167, 29196, 29226, 29255, 29285, 29315, 29345, 29375, 29404, 29434, 29463, 29492, 29522,
        29551, 29580, 29610, 29640, 29669, 29699, 29729, 29759, 29788, 29818, 29847, 29876, 29906, 29935, 29964, 29994, 30023, 30053,
        30082, 30112, 30141, 30171, 30200, 30230, 30259, 30289, 30318, 30348, 30378, 30408, 30437, 30467, 30496, 30526, 30555, 30585,
        30614, 30644, 30673, 30703, 30732, 30762, 30791, 30821, 30850, 30880, 30909, 30939, 30968, 30998, 31027, 31057, 31086, 31116,
        31145, 31175, 31204, 31234, 31263, 31293, 31322, 31352, 31381, 31411, 31441, 31471, 31500, 31530, 31559, 31589, 31618, 31648,
        31676, 31706, 31736, 31766, 31795, 31825, 31854, 31884, 31913, 31943, 31972, 32002, 32031, 32061, 32090, 32120, 32150, 32180,
        32209, 32239, 32268, 32298, 32327, 32357, 32386, 32416, 32445, 32475, 32504, 32534, 32563, 32593, 32622, 32652, 32681, 32711,
        32740, 32770, 32799, 32829, 32858, 32888, 32917, 32947, 32976, 33006, 33035, 33065, 33094, 33124, 33153, 33183, 33213, 33243,
        33272, 33302, 33331, 33361, 33390, 33420, 33450, 33479, 33509, 33539, 33568, 33598, 33627, 33657, 33686, 33716, 33745, 33775,
        33804, 33834, 33863, 33893, 33922, 33952, 33981, 34011, 34040, 34069, 34099, 34128, 34158, 34187, 34217, 34247, 34277, 34306,
        34336, 34365, 34395, 34424, 34454, 34483, 34512, 34542, 34571, 34601, 34631, 34660, 34690, 34719, 34749, 34778, 34808, 34837,
        34867, 34896, 34926, 34955, 34985, 35015, 35044, 35074, 35103, 35133, 35162, 35192, 35222, 35251, 35280, 35310, 35340, 35370,
        35399, 35429, 35458, 35488, 35517, 35547, 35576, 35605, 35635, 35665, 35694, 35723, 35753, 35782, 35811, 35841, 35871, 35901,
        35930, 35960, 35989, 36019, 36048, 36078, 36107, 36136, 36166, 36195, 36225, 36254, 36284, 36314, 36343, 36373, 36403, 36433,
        36462, 36492, 36521, 36551, 36580, 36610, 36639, 36669, 36698, 36728, 36757, 36786, 36816, 36845, 36875, 36904, 36934, 36963,
        36993, 37022, 37052, 37081, 37111, 37141, 37170, 37200, 37229, 37259, 37288, 37318, 37347, 37377, 37406, 37436, 37465, 37495,
        37524, 37554, 37584, 37613, 37643, 37672, 37701, 37731, 37760, 37790, 37819, 37849, 37878, 37908, 37938, 37967, 37997, 38027,
        38056, 38085, 38115, 38144, 38174, 38203, 38233, 38262, 38292, 38322, 38351, 38381, 38410, 38440, 38469, 38499, 38528, 38558,
        38587, 38617, 38646, 38676, 38705, 38735, 38764, 38794, 38823, 38853, 38882, 38912, 38941, 38971, 39001, 39030, 39059, 39089,
        39118, 39148, 39178, 39208, 39237, 39267, 39297, 39326, 39355, 39385, 39414, 39444, 39473, 39503, 39532, 39562, 39592, 39621,
        39650, 39680, 39709, 39739, 39768, 39798, 39827, 39857, 39886, 39916, 39946, 39975, 40005, 40035, 40064, 40094, 40123, 40153,
        40182, 40212, 40241, 40271, 40300, 40330, 40359, 40389, 40418, 40448, 40477, 40507, 40536, 40566, 40595, 40625, 40655, 40685,
        40714, 40744, 40773, 40803, 40832, 40862, 40892, 40921, 40951, 40980, 41009, 41039, 41068, 41098, 41127, 41157, 41186, 41216,
        41245, 41275, 41304, 41334, 41364, 41393, 41422, 41452, 41481, 41511, 41540, 41570, 41599, 41629, 41658, 41688, 41718, 41748,
        41777, 41807, 41836, 41865, 41894, 41924, 41953, 41983, 42012, 42042, 42072, 42102, 42131, 42161, 42190, 42220, 42249, 42279,
        42308, 42337, 42367, 42397, 42426, 42456, 42485, 42515, 42545, 42574, 42604, 42633, 42662, 42692, 42721, 42751, 42780, 42810,
        42839, 42869, 42899, 42929, 42958, 42988, 43017, 43046, 43076, 43105, 43135, 43164, 43194, 43223, 43253, 43283, 43312, 43342,
        43371, 43401, 43430, 43460, 43489, 43519, 43548, 43578, 43607, 43637, 43666, 43696, 43726, 43755, 43785, 43814, 43844, 43873,
        43903, 43932, 43962, 43991, 44021, 44050, 44080, 44109, 44139, 44169, 44198, 44228, 44258, 44287, 44317, 44346, 44375, 44405,
        44434, 44464, 44493, 44523, 44553, 44582, 44612, 44641, 44671, 44700, 44730, 44759, 44788, 44818, 44847, 44877, 44906, 44936,
        44966, 44996, 45025, 45055, 45084, 45114, 45143, 45172, 45202, 45231, 45261, 45290, 45320, 45350, 45380, 45409, 45439, 45468,
        45498, 45527, 45556, 45586, 45615, 45644, 45674, 45704, 45733, 45763, 45793, 45823, 45852, 45882, 45911, 45940, 45970, 45999,
        46028, 46058, 46088, 46117, 46147, 46177, 46206, 46236, 46265, 46295, 46324, 46354, 46383, 46413, 46442, 46472, 46501, 46531,
        46560, 46590, 46620, 46649, 46679, 46708, 46738, 46767, 46797, 46826, 46856, 46885, 46915, 46944, 46974, 47003, 47033, 47063,
        47092, 47122, 47151, 47181, 47210, 47240, 47269, 47298, 47328, 47357, 47387, 47417, 47446, 47476, 47506, 47535, 47565, 47594,
        47624, 47653, 47682, 47712, 47741, 47771, 47800, 47830, 47860, 47890, 47919, 47949, 47978, 48008, 48037, 48066, 48096, 48125,
        48155, 48184, 48214, 48244, 48273, 48303, 48333, 48362, 48392, 48421, 48450, 48480, 48509, 48538, 48568, 48598, 48627, 48657,
        48687, 48717, 48746, 48776, 48805, 48834, 48864, 48893, 48922, 48952, 48982, 49011, 49041, 49071, 49100, 49130, 49160, 49189,
        49218, 49248, 49277, 49306, 49336, 49365, 49395, 49425, 49455, 49484, 49514, 49543, 49573, 49602, 49632, 49661, 49690, 49720,
        49749, 49779, 49809, 49838, 49868, 49898, 49927, 49957, 49986, 50016, 50045, 50075, 50104, 50133, 50163, 50192, 50222, 50252,
        50281, 50311, 50340, 50370, 50400, 50429, 50459, 50488, 50518, 50547, 50576, 50606, 50635, 50665, 50694, 50724, 50754, 50784,
        50813, 50843, 50872, 50902, 50931, 50960, 50990, 51019, 51049, 51078, 51108, 51138, 51167, 51197, 51227, 51256, 51286, 51315,
        51345, 51374, 51403, 51433, 51462, 51492, 51522, 51552, 51582, 51611, 51641, 51670, 51699, 51729, 51758, 51787, 51816, 51846,
        51876, 51906, 51936, 51965, 51995, 52025, 52054, 52083, 52113, 52142, 52171, 52200, 52230, 52260, 52290, 52319, 52349, 52379,
        52408, 52438, 52467, 52497, 52526, 52555, 52585, 52614, 52644, 52673, 52703, 52733, 52762, 52792, 52822, 52851, 52881, 52910,
        52939, 52969, 52998, 53028, 53057, 53087, 53116, 53146, 53176, 53205, 53235, 53264, 53294, 53324, 53353, 53383, 53412, 53441,
        53471, 53500, 53530, 53559, 53589, 53619, 53648, 53678, 53708, 53737, 53767, 53796, 53825, 53855, 53884, 53913, 53943, 53973,
        54003, 54032, 54062, 54092, 54121, 54151, 54180, 54209, 54239, 54268, 54297, 54327, 54357, 54387, 54416, 54446, 54476, 54505,
        54535, 54564, 54593, 54623, 54652, 54681, 54711, 54741, 54770, 54800, 54830, 54859, 54889, 54919, 54948, 54977, 55007, 55036,
        55066, 55095, 55125, 55154, 55184, 55213, 55243, 55273, 55302, 55332, 55361, 55391, 55420, 55450, 55479, 55508, 55538, 55567,
        55597, 55627, 55657, 55686, 55716, 55745, 55775, 55804, 55834, 55863, 55892, 55922, 55951, 55981, 56011, 56040, 56070, 56100,
        56129, 56159, 56188, 56218, 56247, 56276, 56306, 56335, 56365, 56394, 56424, 56454, 56483, 56513, 56543, 56572, 56601, 56631,
        56660, 56690, 56719, 56749, 56778, 56808, 56837, 56867, 56897, 56926, 56956, 56985, 57015, 57044, 57074, 57103, 57133, 57162,
        57192, 57221, 57251, 57280, 57310, 57340, 57369, 57399, 57429, 57458, 57487, 57517, 57546, 57576, 57605, 57634, 57664, 57694,
        57723, 57753, 57783, 57813, 57842, 57871, 57901, 57930, 57959, 57989, 58018, 58048, 58077, 58107, 58137, 58167, 58196, 58226,
        58255, 58285, 58314, 58343, 58373, 58402, 58432, 58461, 58491, 58521, 58551, 58580, 58610, 58639, 58669, 58698, 58727, 58757,
        58786, 58816, 58845, 58875, 58905, 58934, 58964, 58994, 59023, 59053, 59082, 59111, 59141, 59170, 59200, 59229, 59259, 59288,
        59318, 59348, 59377, 59407, 59436, 59466, 59495, 59525, 59554, 59584, 59613, 59643, 59672, 59702, 59731, 59761, 59791, 59820,
        59850, 59879, 59909, 59939, 59968, 59997, 60027, 60056, 60086, 60115, 60145, 60174, 60204, 60234, 60264, 60293, 60323, 60352,
        60381, 60411, 60440, 60469, 60499, 60528, 60558, 60588, 60618, 60648, 60677, 60707, 60736, 60765, 60795, 60824, 60853, 60883,
        60912, 60942, 60972, 61002, 61031, 61061, 61090, 61120, 61149, 61179, 61208, 61237, 61267, 61296, 61326, 61356, 61385, 61415,
        61445, 61474, 61504, 61533, 61563, 61592, 61621, 61651, 61680, 61710, 61739, 61769, 61799, 61828, 61858, 61888, 61917, 61947,
        61976, 62006, 62035, 62064, 62094, 62123, 62153, 62182, 62212, 62242, 62271, 62301, 62331, 62360, 62390, 62419, 62448, 62478,
        62507, 62537, 62566, 62596, 62625, 62655, 62685, 62715, 62744, 62774, 62803, 62832, 62862, 62891, 62921, 62950, 62980, 63009,
        63039, 63069, 63099, 63128, 63157, 63187, 63216, 63246, 63275, 63305, 63334, 63363, 63393, 63423, 63453, 63482, 63512, 63541,
        63571, 63600, 63630, 63659, 63689, 63718, 63747, 63777, 63807, 63836, 63866, 63895, 63925, 63955, 63984, 64014, 64043, 64073,
        64102, 64131, 64161, 64190, 64220, 64249, 64279, 64309, 64339, 64368, 64398, 64427, 64457, 64486, 64515, 64545, 64574, 64603,
        64633, 64663, 64692, 64722, 64752, 64782, 64811, 64841, 64870, 64899, 64929, 64958, 64987, 65017, 65047, 65076, 65106, 65136,
        65166, 65195, 65225, 65254, 65283, 65313, 65342, 65371, 65401, 65431, 65460, 65490, 65520, 65549, 65579, 65608, 65638, 65667,
        65697, 65726, 65755, 65785, 65815, 65844, 65874, 65903, 65933, 65963, 65992, 66022, 66051, 66081, 66110, 66140, 66169, 66199,
        66228, 66258, 66287, 66317, 66346, 66376, 66405, 66435, 66465, 66494, 66524, 66553, 66583, 66612, 66641, 66671, 66700, 66730,
        66760, 66789, 66819, 66849, 66878, 66908, 66937, 66967, 66996, 67025, 67055, 67084, 67114, 67143, 67173, 67203, 67233, 67262,
        67292, 67321, 67351, 67380, 67409, 67439, 67468, 67497, 67527, 67557, 67587, 67617, 67646, 67676, 67705, 67735, 67764, 67793,
        67823, 67852, 67882, 67911, 67941, 67971, 68000, 68030, 68060, 68089, 68119, 68148, 68177, 68207, 68236, 68266, 68295, 68325,
        68354, 68384, 68414, 68443, 68473, 68502, 68532, 68561, 68591, 68620, 68650, 68679, 68708, 68738, 68768, 68797, 68827, 68857,
        68886, 68916, 68946, 68975, 69004, 69034, 69063, 69092, 69122, 69152, 69181, 69211, 69240, 69270, 69300, 69330, 69359, 69388,
        69418, 69447, 69476, 69506, 69535, 69565, 69595, 69624, 69654, 69684, 69713, 69743, 69772, 69802, 69831, 69861, 69890, 69919,
        69949, 69978, 70008, 70038, 70067, 70097, 70126, 70156, 70186, 70215, 70245, 70274, 70303, 70333, 70362, 70392, 70421, 70451,
        70481, 70510, 70540, 70570, 70599, 70629, 70658, 70687, 70717, 70746, 70776, 70805, 70835, 70864, 70894, 70924, 70954, 70983,
        71013, 71042, 71071, 71101, 71130, 71159, 71189, 71218, 71248, 71278, 71308, 71337, 71367, 71397, 71426, 71455, 71485, 71514,
        71543, 71573, 71602, 71632, 71662, 71691, 71721, 71751, 71781, 71810, 71839, 71869, 71898, 71927, 71957, 71986, 72016, 72046,
        72075, 72105, 72135, 72164, 72194, 72223, 72253, 72282, 72311, 72341, 72370, 72400, 72429, 72459, 72489, 72518, 72548, 72577,
        72607, 72637, 72666, 72695, 72725, 72754, 72784, 72813, 72843, 72872, 72902, 72931, 72961, 72991, 73020, 73050, 73080, 73109,
        73139, 73168, 73197, 73227, 73256, 73286, 73315, 73345, 73375, 73404, 73434, 73464, 73493, 73523, 73552, 73581, 73611, 73640,
        73669, 73699, 73729, 73758, 73788, 73818, 73848, 73877, 73907, 73936, 73965, 73995, 74024, 74053, 74083, 74113, 74142, 74172,
        74202, 74231, 74261, 74291, 74320, 74349, 74379, 74408, 74437, 74467, 74497, 74526, 74556, 74586, 74615, 74645, 74675, 74704,
        74733, 74763, 74792, 74822, 74851, 74881, 74910, 74940, 74969, 74999, 75029, 75058, 75088, 75117, 75147, 75176, 75206, 75235,
        75264, 75294, 75323, 75353, 75383, 75412, 75442, 75472, 75501, 75531, 75560, 75590, 75619, 75648, 75678, 75707, 75737, 75766,
        75796, 75826, 75856, 75885, 75915, 75944, 75974, 76003, 76032, 76062, 76091, 76121, 76150, 76180, 76210, 76239, 76269, 76299,
        76328, 76358, 76387, 76416, 76446, 76475, 76505, 76534, 76564, 76593, 76623, 76653, 76682, 76712, 76741, 76771, 76801, 76830,
        76859, 76889, 76918, 76948, 76977, 77007, 77036, 77066, 77096, 77125, 77155, 77185, 77214, 77243, 77273, 77302, 77332, 77361,
        77390, 77420, 77450, 77479, 77509, 77539, 77569, 77598, 77627, 77657, 77686, 77715, 77745, 77774, 77804, 77833, 77863, 77893,
        77923, 77952, 77982, 78011, 78041, 78070, 78099, 78129, 78158, 78188, 78217, 78247, 78277, 78307, 78336, 78366, 78395, 78425,
        78454, 78483, 78513, 78542, 78572, 78601, 78631, 78661, 78690, 78720, 78750, 78779, 78808, 78838, 78867, 78897, 78926, 78956,
        78985, 79015, 79044, 79074, 79104, 79133, 79163, 79192, 79222, 79251, 79281, 79310, 79340, 79369, 79399, 79428, 79458, 79487,
        79517, 79546, 79576, 79606, 79635, 79665, 79695, 79724, 79753, 79783, 79812, 79841, 79871, 79900, 79930, 79960, 79990
    ];
    /**
     *
     * @param {Date} gDate ?
     * @returns {Object} ?
     */
    function getHijriDate(gDate) {
        var day = gDate.getDate();
        var month = gDate.getMonth();
        var year = gDate.getFullYear();
        var tMonth = month + 1;
        var tYear = year;
        if (tMonth < 3) {
            tYear -= 1;
            tMonth += 12;
        }
        var yPrefix = Math.floor(tYear / 100.);
        var julilanOffset = yPrefix - Math.floor(yPrefix / 4.) - 2;
        var julianNumber = Math.floor(365.25 * (tYear + 4716)) + Math.floor(30.6001 * (tMonth + 1)) + day - julilanOffset - 1524;
        yPrefix = Math.floor((julianNumber - 1867216.25) / 36524.25);
        julilanOffset = yPrefix - Math.floor(yPrefix / 4.) + 1;
        var b = julianNumber + julilanOffset + 1524;
        var c = Math.floor((b - 122.1) / 365.25);
        var d = Math.floor(365.25 * c);
        var tempMonth = Math.floor((b - d) / 30.6001);
        day = (b - d) - Math.floor(30.6001 * tempMonth);
        month = Math.floor((b - d) / 20.6001);
        if (month > 13) {
            c += 1;
            month -= 12;
        }
        month -= 1;
        year = c - 4716;
        var modifiedJulianDate = julianNumber - 2400000;
        // date calculation for year after 2077
        var iyear = 10631. / 30.;
        var z = julianNumber - 1948084;
        var cyc = Math.floor(z / 10631.);
        z = z - 10631 * cyc;
        var j = Math.floor((z - 0.1335) / iyear);
        var iy = 30 * cyc + j;
        z = z - Math.floor(j * iyear + 0.1335);
        var im = Math.floor((z + 28.5001) / 29.5);
        /* istanbul ignore next */
        if (im === 13) {
            im = 12;
        }
        var tempDay = z - Math.floor(29.5001 * im - 29);
        var i = 0;
        for (; i < dateCorrection.length; i++) {
            if (dateCorrection[i] > modifiedJulianDate) {
                break;
            }
        }
        var iln = i + 16260;
        var ii = Math.floor((iln - 1) / 12);
        var hYear = ii + 1;
        var hmonth = iln - 12 * ii;
        var hDate = modifiedJulianDate - dateCorrection[i - 1] + 1;
        if ((hDate + '').length > 2) {
            hDate = tempDay;
            hmonth = im;
            hYear = iy;
        }
        return { year: hYear, month: hmonth, date: hDate };
    }
    HijriParser.getHijriDate = getHijriDate;
    /**
     *
     * @param {number} year ?
     * @param {number} month ?
     * @param {number} day ?
     * @returns {Date} ?
     */
    function toGregorian(year, month, day) {
        var iy = year;
        var im = month;
        var id = day;
        var ii = iy - 1;
        var iln = (ii * 12) + 1 + (im - 1);
        var i = iln - 16260;
        var mcjdn = id + dateCorrection[i - 1] - 1;
        var julianDate = mcjdn + 2400000;
        var z = Math.floor(julianDate + 0.5);
        var a = Math.floor((z - 1867216.25) / 36524.25);
        a = z + 1 + a - Math.floor(a / 4);
        var b = a + 1524;
        var c = Math.floor((b - 122.1) / 365.25);
        var d = Math.floor(365.25 * c);
        var e = Math.floor((b - d) / 30.6001);
        var gDay = b - d - Math.floor(e * 30.6001);
        var gMonth = e - (e > 13.5 ? 13 : 1);
        var gYear = c - (gMonth > 2.5 ? 4716 : 4715);
        /* istanbul ignore next */
        if (gYear <= 0) {
            gMonth--;
        } // No year zero
        return new Date(gYear + '/' + (gMonth) + '/' + gDay);
    }
    HijriParser.toGregorian = toGregorian;
})(HijriParser || (HijriParser = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/index.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/index.js ***!
  \***********************************************************************************************************/
/*! exports provided: blazorCultureFormats, IntlBase, Ajax, Animation, rippleEffect, isRippleEnabled, enableRipple, Base, getComponent, removeChildInstance, Browser, versionBasedStatePersistence, enableVersionBasedPersistence, Component, ChildProperty, Position, Draggable, Droppable, EventHandler, onIntlChange, rightToLeft, cldrData, defaultCulture, defaultCurrencyCode, Internationalization, setCulture, setCurrencyCode, loadCldr, enableRtl, getNumericObject, getNumberDependable, getDefaultDateObject, KeyboardEvents, L10n, ModuleLoader, Property, Complex, ComplexFactory, Collection, CollectionFactory, Event, NotifyPropertyChanges, CreateBuilder, SwipeSettings, Touch, HijriParser, blazorTemplates, getRandomId, compile, updateBlazorTemplate, resetBlazorTemplate, setTemplateEngine, getTemplateEngine, disableBlazorMode, createInstance, setImmediate, getValue, setValue, deleteObject, isObject, getEnumValue, merge, extend, isNullOrUndefined, isUndefined, getUniqueID, debounce, queryParams, isObjectArray, compareElementParent, throwError, print, formatUnit, enableBlazorMode, isBlazor, getElement, getInstance, addInstance, uniqueID, createElement, addClass, removeClass, isVisible, prepend, append, detach, remove, attributes, select, selectAll, closest, siblings, getAttributeOrDefault, setStyleAttribute, classList, matches, includeInnerHTML, containsClass, cloneNode, Observer, SanitizeHtmlHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _intl_intl_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intl/intl-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blazorCultureFormats", function() { return _intl_intl_base__WEBPACK_IMPORTED_MODULE_0__["blazorCultureFormats"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IntlBase", function() { return _intl_intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"]; });

/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ajax */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/ajax.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ajax", function() { return _ajax__WEBPACK_IMPORTED_MODULE_1__["Ajax"]; });

/* harmony import */ var _animation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./animation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/animation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return _animation__WEBPACK_IMPORTED_MODULE_2__["Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rippleEffect", function() { return _animation__WEBPACK_IMPORTED_MODULE_2__["rippleEffect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRippleEnabled", function() { return _animation__WEBPACK_IMPORTED_MODULE_2__["isRippleEnabled"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableRipple", function() { return _animation__WEBPACK_IMPORTED_MODULE_2__["enableRipple"]; });

/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Base", function() { return _base__WEBPACK_IMPORTED_MODULE_3__["Base"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getComponent", function() { return _base__WEBPACK_IMPORTED_MODULE_3__["getComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeChildInstance", function() { return _base__WEBPACK_IMPORTED_MODULE_3__["removeChildInstance"]; });

/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./browser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Browser", function() { return _browser__WEBPACK_IMPORTED_MODULE_4__["Browser"]; });

/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/component.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "versionBasedStatePersistence", function() { return _component__WEBPACK_IMPORTED_MODULE_5__["versionBasedStatePersistence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableVersionBasedPersistence", function() { return _component__WEBPACK_IMPORTED_MODULE_5__["enableVersionBasedPersistence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return _component__WEBPACK_IMPORTED_MODULE_5__["Component"]; });

/* harmony import */ var _child_property__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./child-property */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/child-property.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChildProperty", function() { return _child_property__WEBPACK_IMPORTED_MODULE_6__["ChildProperty"]; });

/* harmony import */ var _draggable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./draggable */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/draggable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Position", function() { return _draggable__WEBPACK_IMPORTED_MODULE_7__["Position"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Draggable", function() { return _draggable__WEBPACK_IMPORTED_MODULE_7__["Draggable"]; });

/* harmony import */ var _droppable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./droppable */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/droppable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Droppable", function() { return _droppable__WEBPACK_IMPORTED_MODULE_8__["Droppable"]; });

/* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./event-handler */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventHandler", function() { return _event_handler__WEBPACK_IMPORTED_MODULE_9__["EventHandler"]; });

/* harmony import */ var _internationalization__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./internationalization */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/internationalization.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onIntlChange", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["onIntlChange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rightToLeft", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["rightToLeft"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cldrData", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["cldrData"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultCulture", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["defaultCulture"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultCurrencyCode", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["defaultCurrencyCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Internationalization", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["Internationalization"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCulture", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["setCulture"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setCurrencyCode", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["setCurrencyCode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loadCldr", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["loadCldr"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableRtl", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["enableRtl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNumericObject", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["getNumericObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getNumberDependable", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["getNumberDependable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDefaultDateObject", function() { return _internationalization__WEBPACK_IMPORTED_MODULE_10__["getDefaultDateObject"]; });

/* harmony import */ var _keyboard__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./keyboard */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/keyboard.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "KeyboardEvents", function() { return _keyboard__WEBPACK_IMPORTED_MODULE_11__["KeyboardEvents"]; });

/* harmony import */ var _l10n__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./l10n */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/l10n.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "L10n", function() { return _l10n__WEBPACK_IMPORTED_MODULE_12__["L10n"]; });

/* harmony import */ var _module_loader__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./module-loader */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/module-loader.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModuleLoader", function() { return _module_loader__WEBPACK_IMPORTED_MODULE_13__["ModuleLoader"]; });

/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./notify-property-change */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Property", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["Property"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["Complex"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ComplexFactory", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["ComplexFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["Collection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CollectionFactory", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["CollectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["Event"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NotifyPropertyChanges", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["NotifyPropertyChanges"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CreateBuilder", function() { return _notify_property_change__WEBPACK_IMPORTED_MODULE_14__["CreateBuilder"]; });

/* harmony import */ var _touch__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./touch */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/touch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwipeSettings", function() { return _touch__WEBPACK_IMPORTED_MODULE_15__["SwipeSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Touch", function() { return _touch__WEBPACK_IMPORTED_MODULE_15__["Touch"]; });

/* harmony import */ var _hijri_parser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./hijri-parser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/hijri-parser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HijriParser", function() { return _hijri_parser__WEBPACK_IMPORTED_MODULE_16__["HijriParser"]; });

/* harmony import */ var _template_engine__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./template-engine */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/template-engine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blazorTemplates", function() { return _template_engine__WEBPACK_IMPORTED_MODULE_17__["blazorTemplates"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRandomId", function() { return _template_engine__WEBPACK_IMPORTED_MODULE_17__["getRandomId"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return _template_engine__WEBPACK_IMPORTED_MODULE_17__["compile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "updateBlazorTemplate", function() { return _template_engine__WEBPACK_IMPORTED_MODULE_17__["updateBlazorTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "resetBlazorTemplate", function() { return _template_engine__WEBPACK_IMPORTED_MODULE_17__["resetBlazorTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setTemplateEngine", function() { return _template_engine__WEBPACK_IMPORTED_MODULE_17__["setTemplateEngine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTemplateEngine", function() { return _template_engine__WEBPACK_IMPORTED_MODULE_17__["getTemplateEngine"]; });

/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disableBlazorMode", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["disableBlazorMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createInstance", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["createInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setImmediate", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["setImmediate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getValue", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["getValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["setValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deleteObject", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["deleteObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getEnumValue", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["getEnumValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["extend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["isNullOrUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["isUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getUniqueID", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["getUniqueID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["debounce"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queryParams", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["queryParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObjectArray", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["isObjectArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "compareElementParent", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["compareElementParent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["throwError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "print", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["print"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatUnit", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["formatUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "enableBlazorMode", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["enableBlazorMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBlazor", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["isBlazor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getInstance", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["getInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addInstance", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["addInstance"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "uniqueID", function() { return _util__WEBPACK_IMPORTED_MODULE_18__["uniqueID"]; });

/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["createElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addClass", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["addClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeClass", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["removeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isVisible", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["isVisible"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "prepend", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["prepend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "append", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["append"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detach", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["detach"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "remove", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["remove"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "attributes", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["attributes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "select", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["select"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAll", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["selectAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "closest", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["closest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "siblings", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["siblings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAttributeOrDefault", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["getAttributeOrDefault"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setStyleAttribute", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["setStyleAttribute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classList", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["classList"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "matches", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["matches"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "includeInnerHTML", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["includeInnerHTML"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "containsClass", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["containsClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cloneNode", function() { return _dom__WEBPACK_IMPORTED_MODULE_19__["cloneNode"]; });

/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./observer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/observer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Observer", function() { return _observer__WEBPACK_IMPORTED_MODULE_20__["Observer"]; });

/* harmony import */ var _sanitize_helper__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sanitize-helper */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/sanitize-helper.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SanitizeHtmlHelper", function() { return _sanitize_helper__WEBPACK_IMPORTED_MODULE_21__["SanitizeHtmlHelper"]; });

/**
 * Base modules
 */
























/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/internationalization.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/internationalization.js ***!
  \**************************************************************************************************************************/
/*! exports provided: onIntlChange, rightToLeft, cldrData, defaultCulture, defaultCurrencyCode, Internationalization, setCulture, setCurrencyCode, loadCldr, enableRtl, getNumericObject, getNumberDependable, getDefaultDateObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onIntlChange", function() { return onIntlChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rightToLeft", function() { return rightToLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cldrData", function() { return cldrData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultCulture", function() { return defaultCulture; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultCurrencyCode", function() { return defaultCurrencyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Internationalization", function() { return Internationalization; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCulture", function() { return setCulture; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCurrencyCode", function() { return setCurrencyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCldr", function() { return loadCldr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableRtl", function() { return enableRtl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNumericObject", function() { return getNumericObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNumberDependable", function() { return getNumberDependable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultDateObject", function() { return getDefaultDateObject; });
/* harmony import */ var _intl_date_formatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intl/date-formatter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-formatter.js");
/* harmony import */ var _intl_number_formatter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intl/number-formatter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/number-formatter.js");
/* harmony import */ var _intl_date_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./intl/date-parser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-parser.js");
/* harmony import */ var _intl_number_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./intl/number-parser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/number-parser.js");
/* harmony import */ var _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./intl/intl-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./observer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/observer.js");







/**
 * Specifies the observer used for external change detection.
 */
var onIntlChange = new _observer__WEBPACK_IMPORTED_MODULE_6__["Observer"]();
/**
 * Specifies the default rtl status for EJ2 components.
 */
var rightToLeft = false;
/**
 * Specifies the CLDR data loaded for internationalization functionalities.
 *
 * @private
 */
var cldrData = {};
/**
 * Specifies the default culture value to be considered.
 *
 * @private
 */
var defaultCulture = 'en-US';
/**
 * Specifies default currency code to be considered
 *
 * @private
 */
var defaultCurrencyCode = 'USD';
var mapper = ['numericObject', 'dateObject'];
/**
 * Internationalization class provides support to parse and format the number and date object to the desired format.
 * ```typescript
 * // To set the culture globally
 * setCulture('en-GB');
 *
 * // To set currency code globally
 * setCurrencyCode('EUR');
 *
 * //Load cldr data
 * loadCldr(gregorainData);
 * loadCldr(timeZoneData);
 * loadCldr(numbersData);
 * loadCldr(numberSystemData);
 *
 * // To use formatter in component side
 * let Intl:Internationalization = new Internationalization();
 *
 * // Date formatting
 * let dateFormatter: Function = Intl.getDateFormat({skeleton:'long',type:'dateTime'});
 * dateFormatter(new Date('11/2/2016'));
 * dateFormatter(new Date('25/2/2030'));
 * Intl.formatDate(new Date(),{skeleton:'E'});
 *
 * //Number formatting
 * let numberFormatter: Function = Intl.getNumberFormat({skeleton:'C5'})
 * numberFormatter(24563334);
 * Intl.formatNumber(123123,{skeleton:'p2'});
 *
 * // Date parser
 * let dateParser: Function = Intl.getDateParser({skeleton:'short',type:'time'});
 * dateParser('10:30 PM');
 * Intl.parseDate('10',{skeleton:'H'});
 * ```
 */
var Internationalization = /** @class */ (function () {
    function Internationalization(cultureName) {
        if (cultureName) {
            this.culture = cultureName;
        }
    }
    /**
     * Returns the format function for given options.
     *
     * @param {DateFormatOptions} options - Specifies the format options in which the format function will return.
     * @returns {Function} ?
     */
    Internationalization.prototype.getDateFormat = function (options) {
        return _intl_date_formatter__WEBPACK_IMPORTED_MODULE_0__["DateFormat"].dateFormat(this.getCulture(), options || { type: 'date', skeleton: 'short' }, cldrData);
    };
    /**
     * Returns the format function for given options.
     *
     * @param {NumberFormatOptions} options - Specifies the format options in which the format function will return.
     * @returns {Function} ?
     */
    Internationalization.prototype.getNumberFormat = function (options) {
        if (options && !options.currency) {
            options.currency = defaultCurrencyCode;
        }
        if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["isBlazor"])() && options && !options.format) {
            options.minimumFractionDigits = 0;
        }
        return _intl_number_formatter__WEBPACK_IMPORTED_MODULE_1__["NumberFormat"].numberFormatter(this.getCulture(), options || {}, cldrData);
    };
    /**
     * Returns the parser function for given options.
     *
     * @param {DateFormatOptions} options - Specifies the format options in which the parser function will return.
     * @returns {Function} ?
     */
    Internationalization.prototype.getDateParser = function (options) {
        return _intl_date_parser__WEBPACK_IMPORTED_MODULE_2__["DateParser"].dateParser(this.getCulture(), options || { skeleton: 'short', type: 'date' }, cldrData);
    };
    /**
     * Returns the parser function for given options.
     *
     * @param {NumberFormatOptions} options - Specifies the format options in which the parser function will return.
     * @returns {Function} ?
     */
    Internationalization.prototype.getNumberParser = function (options) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_5__["isBlazor"])() && options && !options.format) {
            options.minimumFractionDigits = 0;
        }
        return _intl_number_parser__WEBPACK_IMPORTED_MODULE_3__["NumberParser"].numberParser(this.getCulture(), options || { format: 'N' }, cldrData);
    };
    /**
     * Returns the formatted string based on format options.
     *
     * @param {number} value - Specifies the number to format.
     * @param {NumberFormatOptions} option - Specifies the format options in which the number will be formatted.
     * @returns {string} ?
     */
    Internationalization.prototype.formatNumber = function (value, option) {
        return this.getNumberFormat(option)(value);
    };
    /**
     * Returns the formatted date string based on format options.
     *
     * @param {Date} value - Specifies the number to format.
     * @param {DateFormatOptions} option - Specifies the format options in which the number will be formatted.
     * @returns {string} ?
     */
    Internationalization.prototype.formatDate = function (value, option) {
        return this.getDateFormat(option)(value);
    };
    /**
     * Returns the date object for given date string and options.
     *
     * @param {string} value - Specifies the string to parse.
     * @param {DateFormatOptions} option - Specifies the parse options in which the date string will be parsed.
     * @returns {Date} ?
     */
    Internationalization.prototype.parseDate = function (value, option) {
        return this.getDateParser(option)(value);
    };
    /**
     * Returns the number object from the given string value and options.
     *
     * @param {string} value - Specifies the string to parse.
     * @param {NumberFormatOptions} option - Specifies the parse options in which the  string number  will be parsed.
     * @returns {number} ?
     */
    Internationalization.prototype.parseNumber = function (value, option) {
        return this.getNumberParser(option)(value);
    };
    /**
     * Returns Native Date Time Pattern
     *
     * @param {DateFormatOptions} option - Specifies the parse options for resultant date time pattern.
     * @param {boolean} isExcelFormat - Specifies format value to be converted to excel pattern.
     * @returns {string} ?
     * @private
     */
    Internationalization.prototype.getDatePattern = function (option, isExcelFormat) {
        return _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getActualDateTimeFormat(this.getCulture(), option, cldrData, isExcelFormat);
    };
    /**
     * Returns Native Number Pattern
     *
     * @param {NumberFormatOptions} option - Specifies the parse options for resultant number pattern.
     * @param {boolean} isExcel ?
     * @returns {string} ?
     * @private
     */
    Internationalization.prototype.getNumberPattern = function (option, isExcel) {
        return _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getActualNumberFormat(this.getCulture(), option, cldrData, isExcel);
    };
    /**
     * Returns the First Day of the Week
     *
     * @returns {number} ?
     */
    Internationalization.prototype.getFirstDayOfWeek = function () {
        return _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getWeekData(this.getCulture(), cldrData);
    };
    /**
     * Returns the culture
     *
     * @returns {string} ?
     */
    Internationalization.prototype.getCulture = function () {
        return this.culture || defaultCulture;
    };
    return Internationalization;
}());

/**
 * Set the default culture to all EJ2 components
 *
 * @param {string} cultureName - Specifies the culture name to be set as default culture.
 * @returns {void} ?
 */
function setCulture(cultureName) {
    defaultCulture = cultureName;
    onIntlChange.notify('notifyExternalChange', { 'locale': defaultCulture });
}
/**
 * Set the default currency code to all EJ2 components
 *
 * @param {string} currencyCode Specifies the culture name to be set as default culture.
 * @returns {void} ?
 */
function setCurrencyCode(currencyCode) {
    defaultCurrencyCode = currencyCode;
    onIntlChange.notify('notifyExternalChange', { 'currencyCode': defaultCurrencyCode });
}
/**
 * Load the CLDR data into context
 *
 * @param {Object[]} data Specifies the CLDR data's to be used for formatting and parser.
 * @returns {void} ?
 */
function loadCldr() {
    var data = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        data[_i] = arguments[_i];
    }
    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {
        var obj = data_1[_a];
        Object(_util__WEBPACK_IMPORTED_MODULE_5__["extend"])(cldrData, obj, {}, true);
    }
}
/**
 * To enable or disable RTL functionality for all components globally.
 *
 * @param {boolean} status - Optional argument Specifies the status value to enable or disable rtl option.
 * @returns {void} ?
 */
function enableRtl(status) {
    if (status === void 0) { status = true; }
    rightToLeft = status;
    onIntlChange.notify('notifyExternalChange', { enableRtl: rightToLeft });
}
/**
 * To get the numeric CLDR object for given culture
 *
 * @param {string} locale - Specifies the locale for which numericObject to be returned.
 * @param {string} type ?
 * @returns {Object} ?
 * @ignore
 * @private
 */
function getNumericObject(locale, type) {
    // eslint-disable-next-line
    var numObject = _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getDependables(cldrData, locale, '', true)[mapper[0]];
    // eslint-disable-next-line
    var dateObject = _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getDependables(cldrData, locale, '')[mapper[1]];
    var numSystem = Object(_util__WEBPACK_IMPORTED_MODULE_5__["getValue"])('defaultNumberingSystem', numObject);
    var symbPattern = Object(_util__WEBPACK_IMPORTED_MODULE_5__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_5__["getValue"])('numberSymbols', numObject) : Object(_util__WEBPACK_IMPORTED_MODULE_5__["getValue"])('symbols-numberSystem-' + numSystem, numObject);
    var pattern = _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getSymbolPattern(type || 'decimal', numSystem, numObject, false);
    return Object(_util__WEBPACK_IMPORTED_MODULE_5__["extend"])(symbPattern, _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getFormatData(pattern, true, '', true), { 'dateSeparator': _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getDateSeparator(dateObject) });
}
/**
 * To get the numeric CLDR  number base object for given culture
 *
 * @param {string} locale - Specifies the locale for which numericObject to be returned.
 * @param {string} currency - Specifies the currency for which numericObject to be returned.
 * @returns {string} ?
 * @ignore
 * @private
 */
function getNumberDependable(locale, currency) {
    // eslint-disable-next-line
    var numObject = _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getDependables(cldrData, locale, '', true);
    // eslint-disable-next-line
    return _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getCurrencySymbol(numObject.numericObject, currency);
}
/**
 * To get the default date CLDR object.
 *
 * @param {string} mode ?
 * @returns {Object} ?
 * @ignore
 * @private
 */
function getDefaultDateObject(mode) {
    // eslint-disable-next-line
    return _intl_intl_base__WEBPACK_IMPORTED_MODULE_4__["IntlBase"].getDependables(cldrData, '', mode, false)[mapper[1]];
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-formatter.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-formatter.js ***!
  \*************************************************************************************************************************/
/*! exports provided: basicPatterns, datePartMatcher, DateFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "basicPatterns", function() { return basicPatterns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "datePartMatcher", function() { return datePartMatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateFormat", function() { return DateFormat; });
/* harmony import */ var _parser_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js");
/* harmony import */ var _intl_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intl-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _hijri_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hijri-parser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/hijri-parser.js");





var abbreviateRegexGlobal = /\/MMMMM|MMMM|MMM|a|LLLL|LLL|EEEEE|EEEE|E|K|cccc|ccc|WW|W|G+|z+/gi;
var standalone = 'stand-alone';
var weekdayKey = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
var basicPatterns = ['short', 'medium', 'long', 'full'];
var timeSetter = {
    m: 'getMinutes',
    h: 'getHours',
    H: 'getHours',
    s: 'getSeconds',
    d: 'getDate',
    f: 'getMilliseconds'
};
var datePartMatcher = {
    'M': 'month',
    'd': 'day',
    'E': 'weekday',
    'c': 'weekday',
    'y': 'year',
    'm': 'minute',
    'h': 'hour',
    'H': 'hour',
    's': 'second',
    'L': 'month',
    'a': 'designator',
    'z': 'timeZone',
    'Z': 'timeZone',
    'G': 'era',
    'f': 'milliseconds'
};
var timeSeparator = 'timeSeparator';
/* tslint:disable no-any */
/**
 * Date Format is a framework provides support for date formatting.
 *
 * @private
 */
var DateFormat = /** @class */ (function () {
    function DateFormat() {
    }
    /**
     * Returns the formatter function for given skeleton.
     *
     * @param {string} culture -  Specifies the culture name to be which formatting.
     * @param {DateFormatOptions} option - Specific the format in which date  will format.
     * @param {Object} cldr - Specifies the global cldr data collection.
     * @returns {Function} ?
     */
    DateFormat.dateFormat = function (culture, option, cldr) {
        var _this = this;
        var dependable = _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].getDependables(cldr, culture, option.calendar);
        var numObject = Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('parserObject.numbers', dependable);
        var dateObject = dependable.dateObject;
        var formatOptions = { isIslamic: _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].islamicRegex.test(option.calendar) };
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() && option.isServerRendered) {
            option = _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].compareBlazorDateFormats(option, culture);
        }
        var resPattern = option.format ||
            _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ? culture : '');
        formatOptions.dateSeperator = Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('dateSeperator', dateObject) : _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].getDateSeparator(dependable.dateObject);
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(resPattern)) {
            Object(_util__WEBPACK_IMPORTED_MODULE_2__["throwError"])('Format options or type given must be invalid');
        }
        else {
            resPattern = _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].ConvertDateToWeekFormat(resPattern);
            if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])()) {
                resPattern = resPattern.replace(/tt/, 'a');
            }
            formatOptions.pattern = resPattern;
            formatOptions.numMapper = Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ?
                Object(_util__WEBPACK_IMPORTED_MODULE_2__["extend"])({}, numObject) : _parser_base__WEBPACK_IMPORTED_MODULE_0__["ParserBase"].getNumberMapper(dependable.parserObject, _parser_base__WEBPACK_IMPORTED_MODULE_0__["ParserBase"].getNumberingSystem(cldr));
            var patternMatch = resPattern.match(abbreviateRegexGlobal) || [];
            for (var _i = 0, patternMatch_1 = patternMatch; _i < patternMatch_1.length; _i++) {
                var str = patternMatch_1[_i];
                var len = str.length;
                var char = str[0];
                if (char === 'K') {
                    char = 'h';
                }
                switch (char) {
                    case 'E':
                    case 'c':
                        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])()) {
                            // eslint-disable-next-line
                            formatOptions.weekday = Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('days.' + _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].monthIndex[len], dateObject);
                        }
                        else {
                            // eslint-disable-next-line
                            formatOptions.weekday = dependable.dateObject[_intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].days][standalone][_intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].monthIndex[len]];
                        }
                        break;
                    case 'M':
                    case 'L':
                        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])()) {
                            // eslint-disable-next-line
                            formatOptions.month = Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('months.' + _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].monthIndex[len], dateObject);
                        }
                        else {
                            // eslint-disable-next-line
                            formatOptions.month = dependable.dateObject[_intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].month][standalone][_intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].monthIndex[len]];
                        }
                        break;
                    case 'a':
                        formatOptions.designator = Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ?
                            Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('dayPeriods', dateObject) : Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('dayPeriods.format.wide', dateObject);
                        break;
                    case 'G':
                        // eslint-disable-next-line
                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';
                        formatOptions.era = Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('eras', dateObject) : Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('eras.' + eText, dependable.dateObject);
                        break;
                    case 'z':
                        formatOptions.timeZone = Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('dates.timeZoneNames', dependable.parserObject);
                        break;
                }
            }
        }
        return function (value) {
            if (isNaN(value.getDate())) {
                return null;
            }
            return _this.intDateFormatter(value, formatOptions);
        };
    };
    /**
     * Returns formatted date string based on options passed.
     *
     * @param {Date} value ?
     * @param {FormatOptions} options ?
     * @returns {string} ?
     */
    DateFormat.intDateFormatter = function (value, options) {
        var pattern = options.pattern;
        var ret = '';
        var matches = pattern.match(_intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].dateParseRegex);
        var dObject = this.getCurrentDateValue(value, options.isIslamic);
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            var length_1 = match.length;
            var char = match[0];
            if (char === 'K') {
                char = 'h';
            }
            var curval = void 0;
            var curvalstr = '';
            var isNumber = void 0;
            var processNumber = void 0;
            var curstr = '';
            switch (char) {
                case 'M':
                case 'L':
                    curval = dObject.month;
                    if (length_1 > 2) {
                        // eslint-disable-next-line
                        ret += options.month[curval];
                    }
                    else {
                        isNumber = true;
                    }
                    break;
                case 'E':
                case 'c':
                    // eslint-disable-next-line
                    ret += options.weekday[weekdayKey[value.getDay()]];
                    break;
                case 'H':
                case 'h':
                case 'm':
                case 's':
                case 'd':
                case 'f':
                    isNumber = true;
                    if (char === 'd') {
                        curval = dObject.date;
                    }
                    else if (char === 'f') {
                        isNumber = false;
                        processNumber = true;
                        // eslint-disable-next-line
                        curvalstr = value[timeSetter[char]]().toString();
                        curvalstr = curvalstr.substring(0, length_1);
                        var curlength = curvalstr.length;
                        if (length_1 !== curlength) {
                            if (length_1 > 3) {
                                continue;
                            }
                            for (var i = 0; i < length_1 - curlength; i++) {
                                curvalstr = '0' + curvalstr.toString();
                            }
                        }
                        curstr += curvalstr;
                    }
                    else {
                        // eslint-disable-next-line
                        curval = value[timeSetter[char]]();
                    }
                    if (char === 'h') {
                        curval = curval % 12 || 12;
                    }
                    break;
                case 'y':
                    processNumber = true;
                    curstr += dObject.year;
                    if (length_1 === 2) {
                        curstr = curstr.substr(curstr.length - 2);
                    }
                    break;
                case 'a':
                    // eslint-disable-next-line
                    var desig = value.getHours() < 12 ? 'am' : 'pm';
                    // eslint-disable-next-line
                    ret += options.designator[desig];
                    break;
                case 'G':
                    // eslint-disable-next-line
                    var dec = value.getFullYear() < 0 ? 0 : 1;
                    // eslint-disable-next-line
                    var retu = options.era[dec];
                    if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(retu)) {
                        // eslint-disable-next-line
                        retu = options.era[dec ? 0 : 1];
                    }
                    ret += retu || '';
                    break;
                case '\'':
                    ret += (match === '\'\'') ? '\'' : match.replace(/'/g, '');
                    break;
                case 'z':
                    // eslint-disable-next-line
                    var timezone = value.getTimezoneOffset();
                    // eslint-disable-next-line
                    var pattern_1 = (length_1 < 4) ? '+H;-H' : options.timeZone.hourFormat;
                    pattern_1 = pattern_1.replace(/:/g, options.numMapper.timeSeparator);
                    if (timezone === 0) {
                        ret += options.timeZone.gmtZeroFormat;
                    }
                    else {
                        processNumber = true;
                        curstr = this.getTimeZoneValue(timezone, pattern_1);
                    }
                    curstr = options.timeZone.gmtFormat.replace(/\{0\}/, curstr);
                    break;
                case ':':
                    // eslint-disable-next-line
                    ret += options.numMapper.numberSymbols[timeSeparator];
                    break;
                case '/':
                    ret += options.dateSeperator;
                    break;
                case 'W':
                    isNumber = true;
                    curval = _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].getWeekOfYear(value);
                    break;
                default:
                    ret += match;
            }
            if (isNumber) {
                processNumber = true;
                curstr = this.checkTwodigitNumber(curval, length_1);
            }
            if (processNumber) {
                ret += _parser_base__WEBPACK_IMPORTED_MODULE_0__["ParserBase"].convertValueParts(curstr, _intl_base__WEBPACK_IMPORTED_MODULE_1__["IntlBase"].latnParseRegex, options.numMapper.mapper);
            }
        }
        return ret;
    };
    DateFormat.getCurrentDateValue = function (value, isIslamic) {
        if (isIslamic) {
            return _hijri_parser__WEBPACK_IMPORTED_MODULE_3__["HijriParser"].getHijriDate(value);
        }
        return { year: value.getFullYear(), month: value.getMonth() + 1, date: value.getDate() };
    };
    /**
     * Returns two digit numbers for given value and length
     *
     * @param {number} val ?
     * @param {number} len ?
     * @returns {string} ?
     */
    DateFormat.checkTwodigitNumber = function (val, len) {
        var ret = val + '';
        if (len === 2 && ret.length !== 2) {
            return '0' + ret;
        }
        return ret;
    };
    /**
     * Returns the value of the Time Zone.
     *
     * @param {number} tVal ?
     * @param {string} pattern ?
     * @returns {string} ?
     * @private
     */
    DateFormat.getTimeZoneValue = function (tVal, pattern) {
        var _this = this;
        var splt = pattern.split(';');
        var curPattern = splt[tVal > 0 ? 1 : 0];
        var no = Math.abs(tVal);
        return curPattern = curPattern.replace(/HH?|mm/g, function (str) {
            var len = str.length;
            var ishour = str.indexOf('H') !== -1;
            return _this.checkTwodigitNumber(Math.floor(ishour ? (no / 60) : (no % 60)), len);
        });
    };
    return DateFormat;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-parser.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-parser.js ***!
  \**********************************************************************************************************************/
/*! exports provided: DateParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateParser", function() { return DateParser; });
/* harmony import */ var _intl_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intl-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js");
/* harmony import */ var _parser_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _date_formatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date-formatter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-formatter.js");
/* harmony import */ var _hijri_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hijri-parser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/hijri-parser.js");





var standalone = 'stand-alone';
var latnRegex = /^[0-9]*$/;
var timeSetter = {
    minute: 'setMinutes',
    hour: 'setHours',
    second: 'setSeconds',
    day: 'setDate',
    month: 'setMonth',
    milliseconds: 'setMilliseconds'
};
var month = 'months';
/* tslint:disable no-any */
/**
 * Date Parser.
 *
 * @private
 */
var DateParser = /** @class */ (function () {
    function DateParser() {
    }
    /**
     * Returns the parser function for given skeleton.
     *
     * @param {string} culture -  Specifies the culture name to be which formatting.
     * @param {DateFormatOptions} option - Specific the format in which string date  will be parsed.
     * @param {Object} cldr - Specifies the global cldr data collection.
     * @returns {Function} ?
     */
    DateParser.dateParser = function (culture, option, cldr) {
        var _this = this;
        var dependable = _intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].getDependables(cldr, culture, option.calendar);
        var numOptions = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].getCurrentNumericOptions(dependable.parserObject, _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].getNumberingSystem(cldr), false, Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])());
        var parseOptions = {};
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() && option.isServerRendered) {
            option = _intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].compareBlazorDateFormats(option, culture);
        }
        var resPattern = option.format ||
            _intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].getResultantPattern(option.skeleton, dependable.dateObject, option.type, false, Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ? culture : '');
        var regexString = '';
        var hourOnly;
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(resPattern)) {
            Object(_util__WEBPACK_IMPORTED_MODULE_2__["throwError"])('Format options or type given must be invalid');
        }
        else {
            resPattern = _intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].ConvertDateToWeekFormat(resPattern);
            parseOptions = { isIslamic: _intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].islamicRegex.test(option.calendar), pattern: resPattern, evalposition: {}, culture: culture };
            var patternMatch = resPattern.match(_intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].dateParseRegex) || [];
            var length_1 = patternMatch.length;
            var gmtCorrection = 0;
            var zCorrectTemp = 0;
            var isgmtTraversed = false;
            var nRegx = numOptions.numericRegex;
            // eslint-disable-next-line
            var numMapper = Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ? dependable.parserObject.numbers :
                _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].getNumberMapper(dependable.parserObject, _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].getNumberingSystem(cldr));
            for (var i = 0; i < length_1; i++) {
                var str = patternMatch[i];
                var len = str.length;
                var char = (str[0] === 'K') ? 'h' : str[0];
                var isNumber = void 0;
                var canUpdate = void 0;
                // eslint-disable-next-line
                var charKey = _date_formatter__WEBPACK_IMPORTED_MODULE_3__["datePartMatcher"][char];
                var optional = (len === 2) ? '' : '?';
                if (isgmtTraversed) {
                    gmtCorrection = zCorrectTemp;
                    isgmtTraversed = false;
                }
                switch (char) {
                    case 'E':
                    case 'c':
                        // eslint-disable-next-line
                        var weekData = void 0;
                        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])()) {
                            // eslint-disable-next-line
                            weekData = Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('days.' + _intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].monthIndex[len], dependable.dateObject);
                        }
                        else {
                            // eslint-disable-next-line
                            weekData = dependable.dateObject[_intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].days][standalone][_intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].monthIndex[len]];
                        }
                        // eslint-disable-next-line
                        var weekObject = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].reverseObject(weekData);
                        // tslint:enable
                        regexString += '(' + Object.keys(weekObject).join('|') + ')';
                        break;
                    case 'M':
                    case 'L':
                    case 'd':
                    case 'm':
                    case 's':
                    case 'h':
                    case 'H':
                    case 'f':
                        canUpdate = true;
                        if ((char === 'M' || char === 'L') && len > 2) {
                            var monthData = void 0;
                            if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])()) {
                                // eslint-disable-next-line
                                monthData = Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('months.' + _intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].monthIndex[len], dependable.dateObject);
                            }
                            else {
                                // eslint-disable-next-line
                                monthData = dependable.dateObject[month][standalone][_intl_base__WEBPACK_IMPORTED_MODULE_0__["IntlBase"].monthIndex[len]];
                            }
                            // eslint-disable-next-line
                            parseOptions[charKey] = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].reverseObject(monthData);
                            // eslint-disable-next-line
                            regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
                        }
                        else if (char === 'f') {
                            if (len > 3) {
                                continue;
                            }
                            isNumber = true;
                            regexString += '(' + nRegx + nRegx + '?' + nRegx + '?' + ')';
                        }
                        else {
                            isNumber = true;
                            regexString += '(' + nRegx + nRegx + optional + ')';
                        }
                        if (char === 'h') {
                            parseOptions.hour12 = true;
                        }
                        break;
                    case 'W':
                        // eslint-disable-next-line
                        var opt = len === 1 ? '?' : '';
                        regexString += '(' + nRegx + opt + nRegx + ')';
                        break;
                    case 'y':
                        canUpdate = isNumber = true;
                        if (len === 2) {
                            regexString += '(' + nRegx + nRegx + ')';
                        }
                        else {
                            regexString += '(' + nRegx + '{' + len + ',})';
                        }
                        break;
                    case 'a':
                        canUpdate = true;
                        // eslint-disable-next-line
                        var periodValur = Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ?
                            Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('dayPeriods', dependable.dateObject) :
                            Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('dayPeriods.format.wide', dependable.dateObject);
                        // eslint-disable-next-line
                        parseOptions[charKey] = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].reverseObject(periodValur);
                        // eslint-disable-next-line
                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + ')';
                        break;
                    case 'G':
                        canUpdate = true;
                        // eslint-disable-next-line
                        var eText = (len <= 3) ? 'eraAbbr' : (len === 4) ? 'eraNames' : 'eraNarrow';
                        // eslint-disable-next-line
                        parseOptions[charKey] = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].reverseObject(Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() ?
                            Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('eras', dependable.dateObject) : Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('eras.' + eText, dependable.dateObject));
                        // eslint-disable-next-line
                        regexString += '(' + Object.keys(parseOptions[charKey]).join('|') + '?)';
                        break;
                    case 'z':
                        // eslint-disable-next-line
                        var tval = new Date().getTimezoneOffset();
                        canUpdate = (tval !== 0);
                        // eslint-disable-next-line
                        parseOptions[charKey] = Object(_util__WEBPACK_IMPORTED_MODULE_2__["getValue"])('dates.timeZoneNames', dependable.parserObject);
                        // eslint-disable-next-line
                        var tzone = parseOptions[charKey];
                        hourOnly = (len < 4);
                        // eslint-disable-next-line
                        var hpattern = hourOnly ? '+H;-H' : tzone.hourFormat;
                        hpattern = hpattern.replace(/:/g, numMapper.timeSeparator);
                        regexString += '(' + this.parseTimeZoneRegx(hpattern, tzone, nRegx) + ')?';
                        isgmtTraversed = true;
                        zCorrectTemp = hourOnly ? 6 : 12;
                        break;
                    case '\'':
                        // eslint-disable-next-line
                        var iString = str.replace(/'/g, '');
                        regexString += '(' + iString + ')?';
                        break;
                    default:
                        regexString += '([\\D])';
                        break;
                }
                if (canUpdate) {
                    parseOptions.evalposition[charKey] = { isNumber: isNumber, pos: i + 1 + gmtCorrection, hourOnly: hourOnly };
                }
                if (i === length_1 - 1 && !Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(regexString)) {
                    parseOptions.parserRegex = new RegExp('^' + regexString + '$', 'i');
                }
            }
        }
        return function (value) {
            var parsedDateParts = _this.internalDateParse(value, parseOptions, numOptions);
            if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(parsedDateParts) || !Object.keys(parsedDateParts).length) {
                return null;
            }
            if (parseOptions.isIslamic) {
                var dobj = {};
                var tYear = parsedDateParts.year;
                var tDate = parsedDateParts.day;
                var tMonth = parsedDateParts.month;
                var ystrig = tYear ? (tYear + '') : '';
                var is2DigitYear = (ystrig.length === 2);
                if (!tYear || !tMonth || !tDate || is2DigitYear) {
                    dobj = _hijri_parser__WEBPACK_IMPORTED_MODULE_4__["HijriParser"].getHijriDate(new Date());
                }
                if (is2DigitYear) {
                    tYear = parseInt((dobj.year + '').slice(0, 2) + ystrig, 10);
                }
                // tslint:disable-next-line
                var dateObject = _hijri_parser__WEBPACK_IMPORTED_MODULE_4__["HijriParser"].toGregorian(tYear || dobj.year, tMonth || dobj.month, tDate || dobj.date);
                parsedDateParts.year = dateObject.getFullYear();
                parsedDateParts.month = dateObject.getMonth() + 1;
                parsedDateParts.day = dateObject.getDate();
            }
            return _this.getDateObject(parsedDateParts);
        };
    };
    /* tslint:disable */
    /**
     * Returns date object for provided date options
     *
     * @param {DateParts} options ?
     * @param {Date} value ?
     * @returns {Date} ?
     */
    DateParser.getDateObject = function (options, value) {
        var res = value || new Date();
        res.setMilliseconds(0);
        var tKeys = ['hour', 'minute', 'second', 'milliseconds', 'month', 'day'];
        var y = options.year;
        var desig = options.designator;
        var tzone = options.timeZone;
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(y)) {
            var len = (y + '').length;
            if (len <= 2) {
                var century = Math.floor(res.getFullYear() / 100) * 100;
                y += century;
            }
            res.setFullYear(y);
        }
        for (var _i = 0, tKeys_1 = tKeys; _i < tKeys_1.length; _i++) {
            var key = tKeys_1[_i];
            // eslint-disable-next-line
            var tValue = options[key];
            if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(tValue) && key === 'day') {
                res.setDate(1);
            }
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(tValue)) {
                if (key === 'month') {
                    tValue -= 1;
                    if (tValue < 0 || tValue > 11) {
                        return new Date('invalid');
                    }
                    var pDate = res.getDate();
                    res.setDate(1);
                    // eslint-disable-next-line
                    res[timeSetter[key]](tValue);
                    var lDate = new Date(res.getFullYear(), tValue + 1, 0).getDate();
                    res.setDate(pDate < lDate ? pDate : lDate);
                }
                else {
                    if (key === 'day') {
                        var lastDay = new Date(res.getFullYear(), res.getMonth() + 1, 0).getDate();
                        if ((tValue < 1 || tValue > lastDay)) {
                            return null;
                        }
                    }
                    // eslint-disable-next-line
                    res[timeSetter[key]](tValue);
                }
            }
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(desig)) {
            var hour = res.getHours();
            if (desig === 'pm') {
                res.setHours(hour + (hour === 12 ? 0 : 12));
            }
            else if (hour === 12) {
                res.setHours(0);
            }
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(tzone)) {
            var tzValue = tzone - res.getTimezoneOffset();
            if (tzValue !== 0) {
                res.setMinutes(res.getMinutes() + tzValue);
            }
        }
        return res;
    };
    /**
     * Returns date parsing options for provided value along with parse and numeric options
     *
     * @param {string} value ?
     * @param {ParseOptions} parseOptions ?
     * @param {NumericOptions} num ?
     * @returns {DateParts} ?
     */
    DateParser.internalDateParse = function (value, parseOptions, num) {
        var matches = value.match(parseOptions.parserRegex);
        var retOptions = { 'hour': 0, 'minute': 0, 'second': 0 };
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(matches)) {
            return null;
        }
        else {
            var props = Object.keys(parseOptions.evalposition);
            for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {
                var prop = props_1[_i];
                var curObject = parseOptions.evalposition[prop];
                var matchString = matches[curObject.pos];
                if (curObject.isNumber) {
                    // eslint-disable-next-line
                    retOptions[prop] = this.internalNumberParser(matchString, num);
                }
                else {
                    if (prop === 'timeZone' && !Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(matchString)) {
                        var pos = curObject.pos;
                        var val = void 0;
                        var tmatch = matches[pos + 1];
                        var flag = !Object(_util__WEBPACK_IMPORTED_MODULE_2__["isUndefined"])(tmatch);
                        if (curObject.hourOnly) {
                            val = this.getZoneValue(flag, tmatch, matches[pos + 4], num) * 60;
                        }
                        else {
                            val = this.getZoneValue(flag, tmatch, matches[pos + 7], num) * 60;
                            val += this.getZoneValue(flag, matches[pos + 4], matches[pos + 10], num);
                        }
                        if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(val)) {
                            retOptions[prop] = val;
                        }
                    }
                    else {
                        // eslint-disable-next-line
                        matchString = ((prop === 'month') && (!parseOptions.isIslamic) && (parseOptions.culture === 'en' || parseOptions.culture === 'en-GB' || parseOptions.culture === 'en-US'))
                            ? matchString[0].toUpperCase() + matchString.substring(1).toLowerCase() : matchString;
                        // eslint-disable-next-line
                        retOptions[prop] = parseOptions[prop][matchString];
                    }
                }
            }
            if (parseOptions.hour12) {
                retOptions.hour12 = true;
            }
        }
        return retOptions;
    };
    /**
     * Returns parsed number for provided Numeric string and Numeric Options
     *
     * @param {string} value ?
     * @param {NumericOptions} option ?
     * @returns {number} ?
     */
    DateParser.internalNumberParser = function (value, option) {
        value = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].convertValueParts(value, option.numberParseRegex, option.numericPair);
        if (latnRegex.test(value)) {
            return +value;
        }
        return null;
    };
    /**
     * Returns parsed time zone RegExp for provided hour format and time zone
     *
     * @param {string} hourFormat ?
     * @param {base.TimeZoneOptions} tZone ?
     * @param {string} nRegex ?
     * @returns {string} ?
     */
    DateParser.parseTimeZoneRegx = function (hourFormat, tZone, nRegex) {
        var pattern = tZone.gmtFormat;
        var ret;
        var cRegex = '(' + nRegex + ')' + '(' + nRegex + ')';
        var splitStr;
        ret = hourFormat.replace('+', '\\+');
        if (hourFormat.indexOf('HH') !== -1) {
            ret = ret.replace(/HH|mm/g, '(' + cRegex + ')');
        }
        else {
            ret = ret.replace(/H|m/g, '(' + cRegex + '?)');
        }
        // eslint-disable-next-line
        splitStr = (ret.split(';').map(function (str) {
            return pattern.replace('{0}', str);
        }));
        ret = splitStr.join('|') + '|' + tZone.gmtZeroFormat;
        return ret;
    };
    /**
     * Returns zone based value.
     *
     * @param {boolean} flag ?
     * @param {string} val1 ?
     * @param {string} val2 ?
     * @param {NumericOptions} num ?
     * @returns {number} ?
     */
    DateParser.getZoneValue = function (flag, val1, val2, num) {
        var ival = flag ? val1 : val2;
        if (!ival) {
            return 0;
        }
        var value = this.internalNumberParser(ival, num);
        if (flag) {
            return -value;
        }
        return value;
    };
    return DateParser;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js ***!
  \********************************************************************************************************************/
/*! exports provided: blazorCultureFormats, IntlBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blazorCultureFormats", function() { return blazorCultureFormats; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IntlBase", function() { return IntlBase; });
/* harmony import */ var _internationalization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internationalization */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/internationalization.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _parser_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parser-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js");
/* harmony import */ var _date_formatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date-formatter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/date-formatter.js");
/* harmony import */ var _number_formatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number-formatter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/number-formatter.js");






var blazorCultureFormats = {
    'en-US': {
        'd': 'M/d/y',
        'D': 'EEEE, MMMM d, y',
        'f': 'EEEE, MMMM d, y h:mm a',
        'F': 'EEEE, MMMM d, y h:mm:s a',
        'g': 'M/d/y h:mm a',
        'G': 'M/d/yyyy h:mm:ss tt',
        'm': 'MMMM d',
        'M': 'MMMM d',
        'r': 'ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'',
        'R': 'ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'',
        's': 'yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss',
        't': 'h:mm tt',
        'T': 'h:m:s tt',
        'u': 'yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'',
        'U': 'dddd, MMMM d, yyyy h:mm:ss tt',
        'y': 'MMMM yyyy',
        'Y': 'MMMM yyyy'
    }
};
/**
 * Date base common constants and function for date parser and formatter.
 */
// eslint-disable-next-line
var IntlBase;
(function (IntlBase) {
    // tslint:disable-next-line:max-line-length
    IntlBase.negativeDataRegex = /^(('[^']+'|''|[^*#@0,.E])*)(\*.)?((([#,]*[0,]*0+)(\.0*[0-9]*#*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
    IntlBase.customRegex = /^(('[^']+'|''|[^*#@0,.])*)(\*.)?((([0#,]*[0,]*[0#]*)(\.[0#]*)?)|([#,]*@+#*))(E\+?0+)?(('[^']+'|''|[^*#@0,.E])*)$/;
    IntlBase.latnParseRegex = /0|1|2|3|4|5|6|7|8|9/g;
    var fractionRegex = /[0-9]/g;
    IntlBase.defaultCurrency = '$';
    var mapper = ['infinity', 'nan', 'group', 'decimal'];
    var patternRegex = /G|M|L|H|c|'| a|yy|y|EEEE|E/g;
    var patternMatch = {
        'G': '',
        'M': 'm',
        'L': 'm',
        'H': 'h',
        'c': 'd',
        '\'': '"',
        ' a': ' AM/PM',
        'yy': 'yy',
        'y': 'yyyy',
        'EEEE': 'dddd',
        'E': 'ddd'
    };
    IntlBase.dateConverterMapper = /dddd|ddd/ig;
    var defaultFirstDay = 'sun';
    IntlBase.islamicRegex = /^islamic/;
    var firstDayMapper = {
        'sun': 0,
        'mon': 1,
        'tue': 2,
        'wed': 3,
        'thu': 4,
        'fri': 5,
        'sat': 6
    };
    IntlBase.formatRegex = /(^[ncpae]{1})([0-1]?[0-9]|20)?$/i;
    IntlBase.currencyFormatRegex = /(^[ca]{1})([0-1]?[0-9]|20)?$/i;
    IntlBase.curWithoutNumberRegex = /(c|a)$/ig;
    var typeMapper = {
        '$': 'isCurrency',
        '%': 'isPercent',
        '-': 'isNegative',
        0: 'nlead',
        1: 'nend'
    };
    IntlBase.dateParseRegex = /([a-z])\1*|'([^']|'')+'|''|./gi;
    IntlBase.basicPatterns = ['short', 'medium', 'long', 'full'];
    /* tslint:disable:quotemark */
    IntlBase.defaultObject = {
        'dates': {
            'calendars': {
                'gregorian': {
                    'months': {
                        'stand-alone': {
                            'abbreviated': {
                                '1': 'Jan',
                                '2': 'Feb',
                                '3': 'Mar',
                                '4': 'Apr',
                                '5': 'May',
                                '6': 'Jun',
                                '7': 'Jul',
                                '8': 'Aug',
                                '9': 'Sep',
                                '10': 'Oct',
                                '11': 'Nov',
                                '12': 'Dec'
                            },
                            'narrow': {
                                '1': 'J',
                                '2': 'F',
                                '3': 'M',
                                '4': 'A',
                                '5': 'M',
                                '6': 'J',
                                '7': 'J',
                                '8': 'A',
                                '9': 'S',
                                '10': 'O',
                                '11': 'N',
                                '12': 'D'
                            },
                            'wide': {
                                '1': 'January',
                                '2': 'February',
                                '3': 'March',
                                '4': 'April',
                                '5': 'May',
                                '6': 'June',
                                '7': 'July',
                                '8': 'August',
                                '9': 'September',
                                '10': 'October',
                                '11': 'November',
                                '12': 'December'
                            }
                        }
                    },
                    'days': {
                        'stand-alone': {
                            'abbreviated': {
                                'sun': 'Sun',
                                'mon': 'Mon',
                                'tue': 'Tue',
                                'wed': 'Wed',
                                'thu': 'Thu',
                                'fri': 'Fri',
                                'sat': 'Sat'
                            },
                            'narrow': {
                                'sun': 'S',
                                'mon': 'M',
                                'tue': 'T',
                                'wed': 'W',
                                'thu': 'T',
                                'fri': 'F',
                                'sat': 'S'
                            },
                            'short': {
                                'sun': 'Su',
                                'mon': 'Mo',
                                'tue': 'Tu',
                                'wed': 'We',
                                'thu': 'Th',
                                'fri': 'Fr',
                                'sat': 'Sa'
                            },
                            'wide': {
                                'sun': 'Sunday',
                                'mon': 'Monday',
                                'tue': 'Tuesday',
                                'wed': 'Wednesday',
                                'thu': 'Thursday',
                                'fri': 'Friday',
                                'sat': 'Saturday'
                            }
                        }
                    },
                    'dayPeriods': {
                        'format': {
                            'wide': {
                                'am': 'AM',
                                'pm': 'PM'
                            }
                        }
                    },
                    'eras': {
                        'eraNames': {
                            '0': 'Before Christ',
                            '0-alt-variant': 'Before Common Era',
                            '1': 'Anno Domini',
                            '1-alt-variant': 'Common Era'
                        },
                        'eraAbbr': {
                            '0': 'BC',
                            '0-alt-variant': 'BCE',
                            '1': 'AD',
                            '1-alt-variant': 'CE'
                        },
                        'eraNarrow': {
                            '0': 'B',
                            '0-alt-variant': 'BCE',
                            '1': 'A',
                            '1-alt-variant': 'CE'
                        }
                    },
                    'dateFormats': {
                        'full': 'EEEE, MMMM d, y',
                        'long': 'MMMM d, y',
                        'medium': 'MMM d, y',
                        'short': 'M/d/yy'
                    },
                    'timeFormats': {
                        'full': 'h:mm:ss a zzzz',
                        'long': 'h:mm:ss a z',
                        'medium': 'h:mm:ss a',
                        'short': 'h:mm a'
                    },
                    'dateTimeFormats': {
                        'full': '{1} \'at\' {0}',
                        'long': '{1} \'at\' {0}',
                        'medium': '{1}, {0}',
                        'short': '{1}, {0}',
                        'availableFormats': {
                            'd': 'd',
                            'E': 'ccc',
                            'Ed': 'd E',
                            'Ehm': 'E h:mm a',
                            'EHm': 'E HH:mm',
                            'Ehms': 'E h:mm:ss a',
                            'EHms': 'E HH:mm:ss',
                            'Gy': 'y G',
                            'GyMMM': 'MMM y G',
                            'GyMMMd': 'MMM d, y G',
                            'GyMMMEd': 'E, MMM d, y G',
                            'h': 'h a',
                            'H': 'HH',
                            'hm': 'h:mm a',
                            'Hm': 'HH:mm',
                            'hms': 'h:mm:ss a',
                            'Hms': 'HH:mm:ss',
                            'hmsv': 'h:mm:ss a v',
                            'Hmsv': 'HH:mm:ss v',
                            'hmv': 'h:mm a v',
                            'Hmv': 'HH:mm v',
                            'M': 'L',
                            'Md': 'M/d',
                            'MEd': 'E, M/d',
                            'MMM': 'LLL',
                            'MMMd': 'MMM d',
                            'MMMEd': 'E, MMM d',
                            'MMMMd': 'MMMM d',
                            'ms': 'mm:ss',
                            'y': 'y',
                            'yM': 'M/y',
                            'yMd': 'M/d/y',
                            'yMEd': 'E, M/d/y',
                            'yMMM': 'MMM y',
                            'yMMMd': 'MMM d, y',
                            'yMMMEd': 'E, MMM d, y',
                            'yMMMM': 'MMMM y'
                        }
                    }
                },
                'islamic': {
                    'months': {
                        'stand-alone': {
                            'abbreviated': {
                                '1': 'Muh.',
                                '2': 'Saf.',
                                '3': 'Rab. I',
                                '4': 'Rab. II',
                                '5': 'Jum. I',
                                '6': 'Jum. II',
                                '7': 'Raj.',
                                '8': 'Sha.',
                                '9': 'Ram.',
                                '10': 'Shaw.',
                                '11': 'Dhuʻl-Q.',
                                '12': 'Dhuʻl-H.'
                            },
                            'narrow': {
                                '1': '1',
                                '2': '2',
                                '3': '3',
                                '4': '4',
                                '5': '5',
                                '6': '6',
                                '7': '7',
                                '8': '8',
                                '9': '9',
                                '10': '10',
                                '11': '11',
                                '12': '12'
                            },
                            'wide': {
                                '1': 'Muharram',
                                '2': 'Safar',
                                '3': 'Rabiʻ I',
                                '4': 'Rabiʻ II',
                                '5': 'Jumada I',
                                '6': 'Jumada II',
                                '7': 'Rajab',
                                '8': 'Shaʻban',
                                '9': 'Ramadan',
                                '10': 'Shawwal',
                                '11': 'Dhuʻl-Qiʻdah',
                                '12': 'Dhuʻl-Hijjah'
                            }
                        }
                    },
                    'days': {
                        'stand-alone': {
                            'abbreviated': {
                                'sun': 'Sun',
                                'mon': 'Mon',
                                'tue': 'Tue',
                                'wed': 'Wed',
                                'thu': 'Thu',
                                'fri': 'Fri',
                                'sat': 'Sat'
                            },
                            'narrow': {
                                'sun': 'S',
                                'mon': 'M',
                                'tue': 'T',
                                'wed': 'W',
                                'thu': 'T',
                                'fri': 'F',
                                'sat': 'S'
                            },
                            'short': {
                                'sun': 'Su',
                                'mon': 'Mo',
                                'tue': 'Tu',
                                'wed': 'We',
                                'thu': 'Th',
                                'fri': 'Fr',
                                'sat': 'Sa'
                            },
                            'wide': {
                                'sun': 'Sunday',
                                'mon': 'Monday',
                                'tue': 'Tuesday',
                                'wed': 'Wednesday',
                                'thu': 'Thursday',
                                'fri': 'Friday',
                                'sat': 'Saturday'
                            }
                        }
                    },
                    'dayPeriods': {
                        'format': {
                            'wide': {
                                'am': 'AM',
                                'pm': 'PM'
                            }
                        }
                    },
                    'eras': {
                        'eraNames': {
                            '0': 'AH'
                        },
                        'eraAbbr': {
                            '0': 'AH'
                        },
                        'eraNarrow': {
                            '0': 'AH'
                        }
                    },
                    'dateFormats': {
                        'full': 'EEEE, MMMM d, y G',
                        'long': 'MMMM d, y G',
                        'medium': 'MMM d, y G',
                        'short': 'M/d/y GGGGG'
                    },
                    'timeFormats': {
                        'full': 'h:mm:ss a zzzz',
                        'long': 'h:mm:ss a z',
                        'medium': 'h:mm:ss a',
                        'short': 'h:mm a'
                    },
                    'dateTimeFormats': {
                        'full': '{1} \'at\' {0}',
                        'long': '{1} \'at\' {0}',
                        'medium': '{1}, {0}',
                        'short': '{1}, {0}',
                        'availableFormats': {
                            'd': 'd',
                            'E': 'ccc',
                            'Ed': 'd E',
                            'Ehm': 'E h:mm a',
                            'EHm': 'E HH:mm',
                            'Ehms': 'E h:mm:ss a',
                            'EHms': 'E HH:mm:ss',
                            'Gy': 'y G',
                            'GyMMM': 'MMM y G',
                            'GyMMMd': 'MMM d, y G',
                            'GyMMMEd': 'E, MMM d, y G',
                            'h': 'h a',
                            'H': 'HH',
                            'hm': 'h:mm a',
                            'Hm': 'HH:mm',
                            'hms': 'h:mm:ss a',
                            'Hms': 'HH:mm:ss',
                            'M': 'L',
                            'Md': 'M/d',
                            'MEd': 'E, M/d',
                            'MMM': 'LLL',
                            'MMMd': 'MMM d',
                            'MMMEd': 'E, MMM d',
                            'MMMMd': 'MMMM d',
                            'ms': 'mm:ss',
                            'y': 'y G',
                            'yyyy': 'y G',
                            'yyyyM': 'M/y GGGGG',
                            'yyyyMd': 'M/d/y GGGGG',
                            'yyyyMEd': 'E, M/d/y GGGGG',
                            'yyyyMMM': 'MMM y G',
                            'yyyyMMMd': 'MMM d, y G',
                            'yyyyMMMEd': 'E, MMM d, y G',
                            'yyyyMMMM': 'MMMM y G',
                            'yyyyQQQ': 'QQQ y G',
                            'yyyyQQQQ': 'QQQQ y G'
                        }
                    }
                }
            },
            'timeZoneNames': {
                'hourFormat': '+HH:mm;-HH:mm',
                'gmtFormat': 'GMT{0}',
                'gmtZeroFormat': 'GMT'
            }
        },
        'numbers': {
            'currencies': {
                'USD': {
                    'displayName': 'US Dollar',
                    'symbol': '$',
                    'symbol-alt-narrow': '$'
                },
                'EUR': {
                    'displayName': 'Euro',
                    'symbol': '€',
                    'symbol-alt-narrow': '€'
                },
                'GBP': {
                    'displayName': 'British Pound',
                    'symbol-alt-narrow': '£'
                }
            },
            'defaultNumberingSystem': 'latn',
            'minimumGroupingDigits': '1',
            'symbols-numberSystem-latn': {
                'decimal': '.',
                'group': ',',
                'list': ';',
                'percentSign': '%',
                'plusSign': '+',
                'minusSign': '-',
                'exponential': 'E',
                'superscriptingExponent': '×',
                'perMille': '‰',
                'infinity': '∞',
                'nan': 'NaN',
                'timeSeparator': ':'
            },
            'decimalFormats-numberSystem-latn': {
                'standard': '#,##0.###'
            },
            'percentFormats-numberSystem-latn': {
                'standard': '#,##0%'
            },
            'currencyFormats-numberSystem-latn': {
                'standard': '¤#,##0.00',
                'accounting': '¤#,##0.00;(¤#,##0.00)'
            },
            'scientificFormats-numberSystem-latn': {
                'standard': '#E0'
            }
        }
    };
    IntlBase.blazorDefaultObject = {
        'numbers': {
            'mapper': {
                '0': '0',
                '1': '1',
                '2': '2',
                '3': '3',
                '4': '4',
                '5': '5',
                '6': '6',
                '7': '7',
                '8': '8',
                '9': '9'
            },
            'mapperDigits': '0123456789',
            'numberSymbols': {
                'decimal': '.',
                'group': ',',
                'plusSign': '+',
                'minusSign': '-',
                'percentSign': '%',
                'nan': 'NaN',
                'timeSeparator': ':',
                'infinity': '∞'
            },
            'timeSeparator': ':',
            'currencySymbol': '$',
            'currencypData': {
                'nlead': '$',
                'nend': '',
                'groupSeparator': ',',
                'groupData': {
                    'primary': 3
                },
                'maximumFraction': 2,
                'minimumFraction': 2
            },
            'percentpData': {
                'nlead': '',
                'nend': '%',
                'groupSeparator': ',',
                'groupData': {
                    'primary': 3
                },
                'maximumFraction': 2,
                'minimumFraction': 2
            },
            'percentnData': {
                'nlead': '-',
                'nend': '%',
                'groupSeparator': ',',
                'groupData': {
                    'primary': 3
                },
                'maximumFraction': 2,
                'minimumFraction': 2
            },
            'currencynData': {
                'nlead': '($',
                'nend': ')',
                'groupSeparator': ',',
                'groupData': {
                    'primary': 3
                },
                'maximumFraction': 2,
                'minimumFraction': 2
            },
            'decimalnData': {
                'nlead': '-',
                'nend': '',
                'groupData': {
                    'primary': 3
                },
                'maximumFraction': 2,
                'minimumFraction': 2
            },
            'decimalpData': {
                'nlead': '',
                'nend': '',
                'groupData': {
                    'primary': 3
                },
                'maximumFraction': 2,
                'minimumFraction': 2
            }
        },
        'dates': {
            'dayPeriods': {
                'am': 'AM',
                'pm': 'PM'
            },
            'dateSeperator': '/',
            'days': {
                'abbreviated': {
                    'sun': 'Sun',
                    'mon': 'Mon',
                    'tue': 'Tue',
                    'wed': 'Wed',
                    'thu': 'Thu',
                    'fri': 'Fri',
                    'sat': 'Sat'
                },
                'short': {
                    'sun': 'Su',
                    'mon': 'Mo',
                    'tue': 'Tu',
                    'wed': 'We',
                    'thu': 'Th',
                    'fri': 'Fr',
                    'sat': 'Sa'
                },
                'wide': {
                    'sun': 'Sunday',
                    'mon': 'Monday',
                    'tue': 'Tuesday',
                    'wed': 'Wednesday',
                    'thu': 'Thursday',
                    'fri': 'Friday',
                    'sat': 'Saturday'
                }
            },
            'months': {
                'abbreviated': {
                    '1': 'Jan',
                    '2': 'Feb',
                    '3': 'Mar',
                    '4': 'Apr',
                    '5': 'May',
                    '6': 'Jun',
                    '7': 'Jul',
                    '8': 'Aug',
                    '9': 'Sep',
                    '10': 'Oct',
                    '11': 'Nov',
                    '12': 'Dec'
                },
                'wide': {
                    '1': 'January',
                    '2': 'February',
                    '3': 'March',
                    '4': 'April',
                    '5': 'May',
                    '6': 'June',
                    '7': 'July',
                    '8': 'August',
                    '9': 'September',
                    '10': 'October',
                    '11': 'November',
                    '12': 'December'
                }
            },
            'eras': {
                '1': 'AD'
            }
        }
    };
    /* tslint:enable:quotemark */
    IntlBase.monthIndex = {
        3: 'abbreviated',
        4: 'wide',
        5: 'narrow',
        1: 'abbreviated'
    };
    /**
     *
     */
    IntlBase.month = 'months';
    IntlBase.days = 'days';
    /**
     * Default numerber Object
     */
    IntlBase.patternMatcher = {
        C: 'currency',
        P: 'percent',
        N: 'decimal',
        A: 'currency',
        E: 'scientific'
    };
    /**
     * Returns the resultant pattern based on the skeleton, dateObject and the type provided
     *
     * @private
     * @param {string} skeleton ?
     * @param {Object} dateObject ?
     * @param {string} type ?
     * @param {boolean} isIslamic ?
     * @param {string} blazorCulture ?
     * @returns {string} ?
     */
    function getResultantPattern(skeleton, dateObject, type, isIslamic, blazorCulture) {
        var resPattern;
        var iType = type || 'date';
        if (blazorCulture) {
            resPattern = compareBlazorDateFormats({ skeleton: skeleton }, blazorCulture).format ||
                compareBlazorDateFormats({ skeleton: 'd' }, 'en-US').format;
        }
        else {
            if (IntlBase.basicPatterns.indexOf(skeleton) !== -1) {
                resPattern = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(iType + 'Formats.' + skeleton, dateObject);
                if (iType === 'dateTime') {
                    var dPattern = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('dateFormats.' + skeleton, dateObject);
                    var tPattern = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('timeFormats.' + skeleton, dateObject);
                    resPattern = resPattern.replace('{1}', dPattern).replace('{0}', tPattern);
                }
            }
            else {
                resPattern = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('dateTimeFormats.availableFormats.' + skeleton, dateObject);
            }
            if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isUndefined"])(resPattern) && skeleton === 'yMd') {
                resPattern = 'M/d/y';
            }
        }
        return resPattern;
    }
    IntlBase.getResultantPattern = getResultantPattern;
    /**
     * Returns the dependable object for provided cldr data and culture
     *
     * @private
     * @param {Object} cldr ?
     * @param {string} culture ?
     * @param {string} mode ?
     * @param {boolean} isNumber ?
     * @returns {any} ?
     */
    function getDependables(cldr, culture, mode, isNumber) {
        var ret = {};
        var calendartype = mode || 'gregorian';
        ret.parserObject = _parser_base__WEBPACK_IMPORTED_MODULE_2__["ParserBase"].getMainObject(cldr, culture) || (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() ? IntlBase.blazorDefaultObject : IntlBase.defaultObject);
        if (isNumber) {
            ret.numericObject = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('numbers', ret.parserObject);
        }
        else {
            var dateString = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() ? 'dates' : ('dates.calendars.' + calendartype);
            ret.dateObject = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(dateString, ret.parserObject);
        }
        return ret;
    }
    IntlBase.getDependables = getDependables;
    /**
     * Returns the symbol pattern for provided parameters
     *
     * @private
     * @param {string} type ?
     * @param {string} numSystem ?
     * @param {Object} obj ?
     * @param {boolean} isAccount ?
     * @returns {string} ?
     */
    function getSymbolPattern(type, numSystem, obj, isAccount) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(type + 'Formats-numberSystem-' +
            numSystem + (isAccount ? '.accounting' : '.standard'), obj) || (isAccount ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(type + 'Formats-numberSystem-' +
            numSystem + '.standard', obj) : '');
    }
    IntlBase.getSymbolPattern = getSymbolPattern;
    /**
     *
     * @param {string} format ?
     * @returns {string} ?
     */
    function ConvertDateToWeekFormat(format) {
        var convertMapper = format.match(IntlBase.dateConverterMapper);
        if (convertMapper && Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])()) {
            var tempString = convertMapper[0].length === 3 ? 'EEE' : 'EEEE';
            return format.replace(IntlBase.dateConverterMapper, tempString);
        }
        return format;
    }
    IntlBase.ConvertDateToWeekFormat = ConvertDateToWeekFormat;
    /**
     *
     * @param {DateFormatOptions} formatOptions ?
     * @param {string} culture ?
     * @returns {DateFormatOptions} ?
     */
    function compareBlazorDateFormats(formatOptions, culture) {
        var format = formatOptions.format || formatOptions.skeleton;
        var curFormatMapper = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])((culture || 'en-US') + '.' + format, blazorCultureFormats);
        if (!curFormatMapper) {
            curFormatMapper = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('en-US.' + format, blazorCultureFormats);
        }
        if (curFormatMapper) {
            curFormatMapper = ConvertDateToWeekFormat(curFormatMapper);
            formatOptions.format = curFormatMapper.replace(/tt/, 'a');
        }
        return formatOptions;
    }
    IntlBase.compareBlazorDateFormats = compareBlazorDateFormats;
    /**
     * Returns proper numeric skeleton
     *
     * @private
     * @param {string} skeleton ?
     * @returns {any} ?
     */
    function getProperNumericSkeleton(skeleton) {
        var matches = skeleton.match(IntlBase.formatRegex);
        var ret = {};
        var pattern = matches[1].toUpperCase();
        ret.isAccount = (pattern === 'A');
        // eslint-disable-next-line
        ret.type = IntlBase.patternMatcher[pattern];
        if (skeleton.length > 1) {
            ret.fractionDigits = parseInt(matches[2], 10);
        }
        return ret;
    }
    IntlBase.getProperNumericSkeleton = getProperNumericSkeleton;
    /**
     * Returns format data for number formatting like minimum fraction, maximum fraction, etc..,
     *
     * @private
     * @param {string} pattern ?
     * @param {boolean} needFraction ?
     * @param {string} cSymbol ?
     * @param {boolean} fractionOnly ?
     * @returns {any} ?
     */
    function getFormatData(pattern, needFraction, cSymbol, fractionOnly) {
        var nData = fractionOnly ? {} : { nlead: '', nend: '' };
        var match = pattern.match(IntlBase.customRegex);
        if (match) {
            if (!fractionOnly) {
                nData.nlead = changeCurrencySymbol(match[1], cSymbol);
                nData.nend = changeCurrencySymbol(match[10], cSymbol);
                nData.groupPattern = match[4];
            }
            var fraction = match[7];
            if (fraction && needFraction) {
                var fmatch = fraction.match(fractionRegex);
                if (!Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(fmatch)) {
                    nData.minimumFraction = fmatch.length;
                }
                else {
                    nData.minimumFraction = 0;
                }
                nData.maximumFraction = fraction.length - 1;
            }
        }
        return nData;
    }
    IntlBase.getFormatData = getFormatData;
    /**
     * Changes currency symbol
     *
     * @private
     * @param {string} val ?
     * @param {string} sym ?
     * @returns {string} ?
     */
    function changeCurrencySymbol(val, sym) {
        if (val) {
            return val.replace(IntlBase.defaultCurrency, sym);
        }
        return '';
    }
    IntlBase.changeCurrencySymbol = changeCurrencySymbol;
    /**
     * Returns currency symbol based on currency code ?
     *
     * @private
     * @param {Object} numericObject ?
     * @param {string} currencyCode ?
     * @param {string} altSymbol ?
     * @returns {string} ?
     */
    function getCurrencySymbol(numericObject, currencyCode, altSymbol) {
        var symbol = altSymbol ? ('.' + altSymbol) : '.symbol';
        var getCurrency = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('currencies.' + currencyCode + symbol, numericObject) ||
            Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('currencies.' + currencyCode + '.symbol-alt-narrow', numericObject) || '$';
        return getCurrency;
    }
    IntlBase.getCurrencySymbol = getCurrencySymbol;
    /**
     * Returns formatting options for custom number format
     *
     * @private
     * @param {string} format ?
     * @param {CommonOptions} dOptions ?
     * @param {any} obj ?
     * @returns {any} ?
     */
    function customFormat(format, dOptions, obj) {
        var options = {};
        var formatSplit = format.split(';');
        var data = ['pData', 'nData', 'zeroData'];
        for (var i = 0; i < formatSplit.length; i++) {
            // eslint-disable-next-line
            options[data[i]] = customNumberFormat(formatSplit[i], dOptions, obj);
        }
        if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(options.nData)) {
            options.nData = Object(_util__WEBPACK_IMPORTED_MODULE_1__["extend"])({}, options.pData);
            options.nData.nlead = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(dOptions) ? '-' + options.nData.nlead : dOptions.minusSymbol + options.nData.nlead;
        }
        return options;
    }
    IntlBase.customFormat = customFormat;
    /**
     * Returns custom formatting options
     *
     * @private
     * @param {string} format ?
     * @param {CommonOptions} dOptions ?
     * @param {Object} numObject ?
     * @returns {any} ?
     */
    function customNumberFormat(format, dOptions, numObject) {
        var cOptions = { type: 'decimal', minimumFractionDigits: 0, maximumFractionDigits: 0 };
        var pattern = format.match(IntlBase.customRegex);
        if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(pattern) || (pattern[5] === '' && format !== 'N/A')) {
            cOptions.type = undefined;
            return cOptions;
        }
        cOptions.nlead = pattern[1];
        cOptions.nend = pattern[10];
        var integerPart = pattern[6];
        cOptions.useGrouping = integerPart.indexOf(',') !== -1;
        integerPart = integerPart.replace(/,/g, '');
        var fractionPart = pattern[7];
        if (integerPart.indexOf('0') !== -1) {
            cOptions.minimumIntegerDigits = integerPart.length - integerPart.indexOf('0');
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(fractionPart)) {
            cOptions.minimumFractionDigits = fractionPart.lastIndexOf('0');
            cOptions.maximumFractionDigits = fractionPart.lastIndexOf('#');
            if (cOptions.minimumFractionDigits === -1) {
                cOptions.minimumFractionDigits = 0;
            }
            if (cOptions.maximumFractionDigits === -1 || cOptions.maximumFractionDigits < cOptions.minimumFractionDigits) {
                cOptions.maximumFractionDigits = cOptions.minimumFractionDigits;
            }
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(dOptions)) {
            Object(_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '$', dOptions.currencySymbol));
            if (!cOptions.isCurrency) {
                Object(_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', dOptions.percentSymbol));
            }
        }
        else {
            Object(_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(cOptions, isCurrencyPercent([cOptions.nlead, cOptions.nend], '%', '%'));
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_1__["isNullOrUndefined"])(numObject)) {
            var symbolPattern = getSymbolPattern(cOptions.type, dOptions.numberMapper.numberSystem, numObject, false);
            if (cOptions.useGrouping) {
                // eslint-disable-next-line
                cOptions.groupSeparator = dOptions.numberMapper.numberSymbols[mapper[2]];
                cOptions.groupData = _number_formatter__WEBPACK_IMPORTED_MODULE_4__["NumberFormat"].getGroupingDetails(symbolPattern.split(';')[0]);
            }
            cOptions.nlead = cOptions.nlead.replace(/'/g, '');
            cOptions.nend = cOptions.nend.replace(/'/g, '');
        }
        return cOptions;
    }
    IntlBase.customNumberFormat = customNumberFormat;
    /**
     * Returns formatting options for currency or percent type
     *
     * @private
     * @param {string[]} parts ?
     * @param {string} actual ?
     * @param {string} symbol ?
     * @returns {any} ?
     */
    function isCurrencyPercent(parts, actual, symbol) {
        var options = { nlead: parts[0], nend: parts[1] };
        for (var i = 0; i < 2; i++) {
            var part = parts[i];
            var loc = part.indexOf(actual);
            if ((loc !== -1) && ((loc < part.indexOf('\'')) || (loc > part.lastIndexOf('\'')))) {
                // eslint-disable-next-line
                options[typeMapper[i]] = part.substr(0, loc) + symbol + part.substr(loc + 1);
                // eslint-disable-next-line
                options[typeMapper[actual]] = true;
                options.type = options.isCurrency ? 'currency' : 'percent';
                break;
            }
        }
        return options;
    }
    IntlBase.isCurrencyPercent = isCurrencyPercent;
    /**
     * Returns culture based date separator
     *
     * @private
     * @param {Object} dateObj ?
     * @returns {string} ?
     */
    function getDateSeparator(dateObj) {
        var value = (Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('dateFormats.short', dateObj) || '').match(/[d‏M‏]([^d‏M])[d‏M‏]/i);
        return value ? value[1] : '/';
    }
    IntlBase.getDateSeparator = getDateSeparator;
    /**
     * Returns Native Date Time pattern
     *
     * @private
     * @param {string} culture ?
     * @param {DateFormatOptions} options ?
     * @param {Object} cldr ?
     * @param {boolean} isExcelFormat ?
     * @returns {string} ?
     */
    function getActualDateTimeFormat(culture, options, cldr, isExcelFormat) {
        var dependable = getDependables(cldr, culture, options.calendar);
        if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])()) {
            options = compareBlazorDateFormats(options, culture);
        }
        var actualPattern = options.format || getResultantPattern(options.skeleton, dependable.dateObject, options.type);
        if (isExcelFormat) {
            actualPattern = actualPattern.replace(patternRegex, function (pattern) {
                // eslint-disable-next-line
                return patternMatch[pattern];
            });
            if (actualPattern.indexOf('z') !== -1) {
                var tLength = actualPattern.match(/z/g).length;
                var timeZonePattern = void 0;
                var options_1 = { 'timeZone': {} };
                options_1.numMapper = _parser_base__WEBPACK_IMPORTED_MODULE_2__["ParserBase"].getNumberMapper(dependable.parserObject, _parser_base__WEBPACK_IMPORTED_MODULE_2__["ParserBase"].getNumberingSystem(cldr));
                options_1.timeZone = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('dates.timeZoneNames', dependable.parserObject);
                var value = new Date();
                var timezone = value.getTimezoneOffset();
                var pattern = (tLength < 4) ? '+H;-H' : options_1.timeZone.hourFormat;
                pattern = pattern.replace(/:/g, options_1.numMapper.timeSeparator);
                if (timezone === 0) {
                    timeZonePattern = options_1.timeZone.gmtZeroFormat;
                }
                else {
                    timeZonePattern = _date_formatter__WEBPACK_IMPORTED_MODULE_3__["DateFormat"].getTimeZoneValue(timezone, pattern);
                    timeZonePattern = options_1.timeZone.gmtFormat.replace(/\{0\}/, timeZonePattern);
                }
                actualPattern = actualPattern.replace(/[z]+/, '"' + timeZonePattern + '"');
            }
            actualPattern = actualPattern.replace(/ $/, '');
        }
        return actualPattern;
    }
    IntlBase.getActualDateTimeFormat = getActualDateTimeFormat;
    /**
     *
     * @param {string} actual ?
     * @param {any} option ?
     * @returns {any} ?
     */
    // eslint-disable-next-line
    function processSymbol(actual, option) {
        if (actual.indexOf(',') !== -1) {
            // eslint-disable-next-line
            var split = actual.split(',');
            actual = (split[0] + Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('numberMapper.numberSymbols.group', option) +
                split[1].replace('.', Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('numberMapper.numberSymbols.decimal', option)));
        }
        else {
            actual = actual.replace('.', Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('numberMapper.numberSymbols.decimal', option));
        }
        return actual;
    }
    /**
     * Returns Native Number pattern
     *
     * @private
     * @param {string} culture ?
     * @param {NumberFormatOptions} options ?
     * @param {Object} cldr ?
     * @param {boolean} isExcel ?
     * @returns {string} ?
     */
    function getActualNumberFormat(culture, options, cldr, isExcel) {
        var dependable = getDependables(cldr, culture, '', true);
        var parseOptions = { custom: true };
        var numrericObject = dependable.numericObject;
        var minFrac;
        var curObj = {};
        var curMatch = (options.format || '').match(IntlBase.currencyFormatRegex);
        var type = IntlBase.formatRegex.test(options.format) ? getProperNumericSkeleton(options.format || 'N') : {};
        var dOptions = {};
        if (curMatch) {
            dOptions.numberMapper = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() ?
                Object(_util__WEBPACK_IMPORTED_MODULE_1__["extend"])({}, dependable.numericObject) :
                _parser_base__WEBPACK_IMPORTED_MODULE_2__["ParserBase"].getNumberMapper(dependable.parserObject, _parser_base__WEBPACK_IMPORTED_MODULE_2__["ParserBase"].getNumberingSystem(cldr), true);
            var curCode = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('currencySymbol', dependable.numericObject) :
                getCurrencySymbol(dependable.numericObject, options.currency || _internationalization__WEBPACK_IMPORTED_MODULE_0__["defaultCurrencyCode"], options.altSymbol);
            var symbolPattern = getSymbolPattern('currency', dOptions.numberMapper.numberSystem, dependable.numericObject, (/a/i).test(options.format));
            symbolPattern = symbolPattern.replace(/\u00A4/g, curCode);
            var split = symbolPattern.split(';');
            curObj.hasNegativePattern = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() ? true : (split.length > 1);
            curObj.nData = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(type.type + 'nData', numrericObject) :
                getFormatData(split[1] || '-' + split[0], true, curCode);
            curObj.pData = Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(type.type + 'pData', numrericObject) :
                getFormatData(split[0], false, curCode);
            if (!curMatch[2] && !options.minimumFractionDigits && !options.maximumFractionDigits) {
                minFrac = getFormatData(symbolPattern.split(';')[0], true, '', true).minimumFraction;
            }
        }
        var actualPattern;
        if ((IntlBase.formatRegex.test(options.format)) || !(options.format)) {
            Object(_util__WEBPACK_IMPORTED_MODULE_1__["extend"])(parseOptions, getProperNumericSkeleton(options.format || 'N'));
            parseOptions.custom = false;
            actualPattern = '###0';
            if (parseOptions.fractionDigits || options.minimumFractionDigits || options.maximumFractionDigits || minFrac) {
                var defaultMinimum = 0;
                if (parseOptions.fractionDigits) {
                    options.minimumFractionDigits = options.maximumFractionDigits = parseOptions.fractionDigits;
                }
                actualPattern = fractionDigitsPattern(actualPattern, minFrac || parseOptions.fractionDigits ||
                    options.minimumFractionDigits || defaultMinimum, options.maximumFractionDigits || defaultMinimum);
            }
            if (options.minimumIntegerDigits) {
                actualPattern = minimumIntegerPattern(actualPattern, options.minimumIntegerDigits);
            }
            if (options.useGrouping) {
                actualPattern = groupingPattern(actualPattern);
            }
            if (parseOptions.type === 'currency' || (parseOptions.type && Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])())) {
                if (Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])() && parseOptions.type !== 'currency') {
                    curObj.pData = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(parseOptions.type + 'pData', numrericObject);
                    curObj.nData = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])(parseOptions.type + 'nData', numrericObject);
                }
                var cPattern = actualPattern;
                actualPattern = curObj.pData.nlead + cPattern + curObj.pData.nend;
                if (curObj.hasNegativePattern || Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])()) {
                    actualPattern += ';' + curObj.nData.nlead + cPattern + curObj.nData.nend;
                }
            }
            if (parseOptions.type === 'percent' && !Object(_util__WEBPACK_IMPORTED_MODULE_1__["isBlazor"])()) {
                actualPattern += ' %';
            }
        }
        else {
            actualPattern = options.format.replace(/'/g, '"');
        }
        if (Object.keys(dOptions).length > 0) {
            actualPattern = !isExcel ? processSymbol(actualPattern, dOptions) : actualPattern;
        }
        return actualPattern;
    }
    IntlBase.getActualNumberFormat = getActualNumberFormat;
    /**
     *
     * @param {string} pattern ?
     * @param {number} minDigits ?
     * @param {number} maxDigits ?
     * @returns {string} ?
     */
    function fractionDigitsPattern(pattern, minDigits, maxDigits) {
        pattern += '.';
        for (var a = 0; a < minDigits; a++) {
            pattern += '0';
        }
        if (minDigits < maxDigits) {
            var diff = maxDigits - minDigits;
            for (var b = 0; b < diff; b++) {
                pattern += '#';
            }
        }
        return pattern;
    }
    IntlBase.fractionDigitsPattern = fractionDigitsPattern;
    /**
     *
     * @param {string} pattern ?
     * @param {number} digits ?
     * @returns {string} ?
     */
    function minimumIntegerPattern(pattern, digits) {
        var temp = pattern.split('.');
        var integer = '';
        for (var x = 0; x < digits; x++) {
            integer += '0';
        }
        return temp[1] ? (integer + '.' + temp[1]) : integer;
    }
    IntlBase.minimumIntegerPattern = minimumIntegerPattern;
    /**
     *
     * @param {string} pattern ?
     * @returns {string} ?
     */
    function groupingPattern(pattern) {
        var temp = pattern.split('.');
        var integer = temp[0];
        var no = 3 - integer.length % 3;
        var hash = (no && no === 1) ? '#' : (no === 2 ? '##' : '');
        integer = hash + integer;
        pattern = '';
        for (var x = integer.length - 1; x > 0; x = x - 3) {
            pattern = ',' + integer[x - 2] + integer[x - 1] + integer[x] + pattern;
        }
        pattern = pattern.slice(1);
        return temp[1] ? (pattern + '.' + temp[1]) : pattern;
    }
    IntlBase.groupingPattern = groupingPattern;
    /**
     *
     * @param {string} culture ?
     * @param {Object} cldr ?
     * @returns {number} ?
     */
    function getWeekData(culture, cldr) {
        var firstDay = defaultFirstDay;
        var mapper = Object(_util__WEBPACK_IMPORTED_MODULE_1__["getValue"])('supplemental.weekData.firstDay', cldr);
        var iCulture = culture;
        if ((/en-/).test(iCulture)) {
            iCulture = iCulture.slice(3);
        }
        iCulture = iCulture.slice(0, 2).toUpperCase() + iCulture.substr(2);
        if (mapper) {
            firstDay = mapper[iCulture] || mapper[iCulture.slice(0, 2)] || defaultFirstDay;
        }
        return firstDayMapper[firstDay];
    }
    IntlBase.getWeekData = getWeekData;
    /**
     * @private
     * @param {any} pData ?
     * @param {string} aCurrency ?
     * @param {string} rCurrency ?
     * @returns {void} ?
     */
    function replaceBlazorCurrency(pData, aCurrency, rCurrency) {
        var iCurrency = Object(_parser_base__WEBPACK_IMPORTED_MODULE_2__["getBlazorCurrencySymbol"])(rCurrency);
        if (aCurrency !== iCurrency) {
            for (var _i = 0, pData_1 = pData; _i < pData_1.length; _i++) {
                var data = pData_1[_i];
                data.nend = data.nend.replace(aCurrency, iCurrency);
                data.nlead = data.nlead.replace(aCurrency, iCurrency);
            }
        }
    }
    IntlBase.replaceBlazorCurrency = replaceBlazorCurrency;
    /**
     * @private
     * @param {Date} date ?
     * @returns {number} ?
     */
    function getWeekOfYear(date) {
        var newYear = new Date(date.getFullYear(), 0, 1);
        var day = newYear.getDay();
        var weeknum;
        day = (day >= 0 ? day : day + 7);
        var daynum = Math.floor((date.getTime() - newYear.getTime() -
            (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;
        if (day < 4) {
            weeknum = Math.floor((daynum + day - 1) / 7) + 1;
            if (weeknum > 52) {
                var nYear = new Date(date.getFullYear() + 1, 0, 1);
                var nday = nYear.getDay();
                nday = nday >= 0 ? nday : nday + 7;
                weeknum = nday < 4 ? 1 : 53;
            }
        }
        else {
            weeknum = Math.floor((daynum + day - 1) / 7);
        }
        return weeknum;
    }
    IntlBase.getWeekOfYear = getWeekOfYear;
})(IntlBase || (IntlBase = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/number-formatter.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/number-formatter.js ***!
  \***************************************************************************************************************************/
/*! exports provided: NumberFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberFormat", function() { return NumberFormat; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _internationalization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internationalization */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/internationalization.js");
/* harmony import */ var _intl_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./intl-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js");
/* harmony import */ var _parser_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parser-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js");




var errorText = {
    'ms': 'minimumSignificantDigits',
    'ls': 'maximumSignificantDigits',
    'mf': 'minimumFractionDigits',
    'lf': 'maximumFractionDigits',
};
var integerError = 'minimumIntegerDigits';
var percentSign = 'percentSign';
var minusSign = 'minusSign';
var spaceRegex = /\s/;
var mapper = ['infinity', 'nan', 'group', 'decimal', 'exponential'];
var infinity = 'infinity';
var nan = 'nan';
/**
 * Module for number formatting.
 *
 * @private
 */
var NumberFormat = /** @class */ (function () {
    function NumberFormat() {
    }
    /**
     * Returns the formatter function for given skeleton.
     *
     * @param {string} culture -  Specifies the culture name to be which formatting.
     * @param {NumberFormatOptions} option - Specific the format in which number  will format.
     * @param {Object} cldr - Specifies the global cldr data collection.
     * @returns {Function} ?
     */
    NumberFormat.numberFormatter = function (culture, option, cldr) {
        var _this = this;
        var fOptions = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, option);
        var cOptions = {};
        var dOptions = {};
        var symbolPattern;
        var dependable = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getDependables(cldr, culture, '', true);
        var numObject = dependable.numericObject;
        dOptions.numberMapper = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, numObject) :
            _parser_base__WEBPACK_IMPORTED_MODULE_3__["ParserBase"].getNumberMapper(dependable.parserObject, _parser_base__WEBPACK_IMPORTED_MODULE_3__["ParserBase"].getNumberingSystem(cldr), true);
        dOptions.currencySymbol = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('currencySymbol', numObject) : _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getCurrencySymbol(dependable.numericObject, fOptions.currency || _internationalization__WEBPACK_IMPORTED_MODULE_1__["defaultCurrencyCode"], option.altSymbol);
        /* eslint-disable  @typescript-eslint/no-explicit-any */
        dOptions.percentSymbol = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('numberSymbols.percentSign', numObject) :
            dOptions.numberMapper.numberSymbols[percentSign];
        dOptions.minusSymbol = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() ? Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('numberSymbols.minusSign', numObject) :
            dOptions.numberMapper.numberSymbols[minusSign];
        var symbols = dOptions.numberMapper.numberSymbols;
        if ((option.format) && !(_intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].formatRegex.test(option.format))) {
            cOptions = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].customFormat(option.format, dOptions, dependable.numericObject);
        }
        else {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(fOptions, _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getProperNumericSkeleton(option.format || 'N'));
            fOptions.isCurrency = fOptions.type === 'currency';
            fOptions.isPercent = fOptions.type === 'percent';
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])()) {
                symbolPattern = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getSymbolPattern(fOptions.type, dOptions.numberMapper.numberSystem, dependable.numericObject, fOptions.isAccount);
            }
            fOptions.groupOne = this.checkValueRange(fOptions.maximumSignificantDigits, fOptions.minimumSignificantDigits, true);
            this.checkValueRange(fOptions.maximumFractionDigits, fOptions.minimumFractionDigits, false, true);
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(fOptions.fractionDigits)) {
                fOptions.minimumFractionDigits = fOptions.maximumFractionDigits = fOptions.fractionDigits;
            }
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(fOptions.useGrouping)) {
                fOptions.useGrouping = true;
            }
            if (fOptions.isCurrency && !Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])()) {
                symbolPattern = symbolPattern.replace(/\u00A4/g, _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].defaultCurrency);
            }
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])()) {
                var split = symbolPattern.split(';');
                cOptions.nData = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getFormatData(split[1] || '-' + split[0], true, dOptions.currencySymbol);
                cOptions.pData = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getFormatData(split[0], false, dOptions.currencySymbol);
                if (fOptions.useGrouping) {
                    fOptions.groupSeparator = symbols[mapper[2]];
                    fOptions.groupData = this.getGroupingDetails(split[0]);
                }
            }
            else {
                cOptions.nData = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, {}, Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(fOptions.type + 'nData', numObject));
                cOptions.pData = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, {}, Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(fOptions.type + 'pData', numObject));
                if (fOptions.type === 'currency' && option.currency) {
                    _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].replaceBlazorCurrency([cOptions.pData, cOptions.nData], dOptions.currencySymbol, option.currency);
                }
            }
            var minFrac = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(fOptions.minimumFractionDigits);
            if (minFrac) {
                fOptions.minimumFractionDigits = cOptions.nData.minimumFraction;
            }
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(fOptions.maximumFractionDigits)) {
                var mval = cOptions.nData.maximumFraction;
                fOptions.maximumFractionDigits = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(mval) && fOptions.isPercent ? 0 : mval;
            }
            var mfrac = fOptions.minimumFractionDigits;
            var lfrac = fOptions.maximumFractionDigits;
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(mfrac) && !Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(lfrac)) {
                if (mfrac > lfrac) {
                    fOptions.maximumFractionDigits = mfrac;
                }
            }
        }
        Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(cOptions.nData, fOptions);
        Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(cOptions.pData, fOptions);
        return function (value) {
            if (isNaN(value)) {
                return symbols[mapper[1]];
            }
            else if (!isFinite(value)) {
                return symbols[mapper[0]];
            }
            return _this.intNumberFormatter(value, cOptions, dOptions);
        };
    };
    /**
     * Returns grouping details for the pattern provided
     *
     * @param {string} pattern ?
     * @returns {GroupDetails} ?
     */
    NumberFormat.getGroupingDetails = function (pattern) {
        var ret = {};
        var match = pattern.match(_intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].negativeDataRegex);
        if (match && match[4]) {
            var pattern_1 = match[4];
            var p = pattern_1.lastIndexOf(',');
            if (p !== -1) {
                var temp = pattern_1.split('.')[0];
                ret.primary = (temp.length - p) - 1;
                var s = pattern_1.lastIndexOf(',', p - 1);
                if (s !== -1) {
                    ret.secondary = p - 1 - s;
                }
            }
        }
        return ret;
    };
    /**
     * Returns if the provided integer range is valid.
     *
     * @param {number} val1 ?
     * @param {number} val2 ?
     * @param {boolean} checkbothExist ?
     * @param {boolean} isFraction ?
     * @returns {boolean} ?
     */
    NumberFormat.checkValueRange = function (val1, val2, checkbothExist, isFraction) {
        var decide = isFraction ? 'f' : 's';
        var dint = 0;
        var str1 = errorText['l' + decide];
        // eslint-disable-next-line
        var str2 = errorText['m' + decide];
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(val1)) {
            this.checkRange(val1, str1, isFraction);
            dint++;
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(val2)) {
            this.checkRange(val2, str2, isFraction);
            dint++;
        }
        if (dint === 2) {
            if (val1 < val2) {
                Object(_util__WEBPACK_IMPORTED_MODULE_0__["throwError"])(str2 + 'specified must be less than the' + str1);
            }
            else {
                return true;
            }
        }
        else if (checkbothExist && dint === 1) {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["throwError"])('Both' + str2 + 'and' + str2 + 'must be present');
        }
        return false;
    };
    /**
     * Check if the provided fraction range is valid
     *
     * @param {number} val ?
     * @param {string} text ?
     * @param {boolean} isFraction ?
     * @returns {void} ?
     */
    NumberFormat.checkRange = function (val, text, isFraction) {
        var range = isFraction ? [0, 20] : [1, 21];
        if (val < range[0] || val > range[1]) {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["throwError"])(text + 'value must be within the range' + range[0] + 'to' + range[1]);
        }
    };
    /**
     * Returns formatted numeric string for provided formatting options
     *
     * @param {number} value ?
     * @param {base.GenericFormatOptions} fOptions ?
     * @param {CommonOptions} dOptions ?
     * @returns {string} ?
     */
    NumberFormat.intNumberFormatter = function (value, fOptions, dOptions) {
        var curData;
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(fOptions.nData.type)) {
            return undefined;
        }
        else {
            if (value < 0) {
                value = value * -1;
                curData = fOptions.nData;
            }
            else if (value === 0) {
                curData = fOptions.zeroData || fOptions.pData;
            }
            else {
                curData = fOptions.pData;
            }
            var fValue = '';
            if (curData.isPercent) {
                value = value * 100;
            }
            if (curData.groupOne) {
                fValue = this.processSignificantDigits(value, curData.minimumSignificantDigits, curData.maximumSignificantDigits);
            }
            else {
                fValue = this.processFraction(value, curData.minimumFractionDigits, curData.maximumFractionDigits);
                if (curData.minimumIntegerDigits) {
                    fValue = this.processMinimumIntegers(fValue, curData.minimumIntegerDigits);
                }
            }
            if (curData.type === 'scientific') {
                fValue = value.toExponential(curData.maximumFractionDigits);
                fValue = fValue.replace('e', dOptions.numberMapper.numberSymbols[mapper[4]]);
            }
            fValue = fValue.replace('.', dOptions.numberMapper.numberSymbols[mapper[3]]);
            if (curData.useGrouping) {
                /* eslint-disable  @typescript-eslint/no-explicit-any */
                fValue = this.groupNumbers(fValue, curData.groupData.primary, curData.groupSeparator || ',', dOptions.numberMapper.numberSymbols[mapper[3]] || '.', curData.groupData.secondary);
            }
            fValue = _parser_base__WEBPACK_IMPORTED_MODULE_3__["ParserBase"].convertValueParts(fValue, _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].latnParseRegex, dOptions.numberMapper.mapper);
            if (curData.nlead === 'N/A') {
                return curData.nlead;
            }
            else {
                return curData.nlead + fValue + curData.nend;
            }
        }
    };
    /**
     * Returns significant digits processed numeric string
     *
     * @param {number} value ?
     * @param {number} min ?
     * @param {number} max ?
     * @returns {string} ?
     */
    NumberFormat.processSignificantDigits = function (value, min, max) {
        var temp = value + '';
        var tn;
        var length = temp.length;
        if (length < min) {
            return value.toPrecision(min);
        }
        else {
            temp = value.toPrecision(max);
            tn = +temp;
            return tn + '';
        }
    };
    /**
     * Returns grouped numeric string
     *
     * @param {string} val ?
     * @param {number} level1 ?
     * @param {string} sep ?
     * @param {string} decimalSymbol ?
     * @param {number} level2 ?
     * @returns {string} ?
     */
    NumberFormat.groupNumbers = function (val, level1, sep, decimalSymbol, level2) {
        var flag = !Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(level2) && level2 !== 0;
        var split = val.split(decimalSymbol);
        var prefix = split[0];
        var length = prefix.length;
        var str = '';
        while (length > level1) {
            str = prefix.slice(length - level1, length) + (str.length ?
                (sep + str) : '');
            length -= level1;
            if (flag) {
                level1 = level2;
                flag = false;
            }
        }
        split[0] = prefix.slice(0, length) + (str.length ? sep : '') + str;
        return split.join(decimalSymbol);
    };
    /**
     * Returns fraction processed numeric string
     *
     * @param {number} value ?
     * @param {number} min ?
     * @param {number} max ?
     * @returns {string} ?
     */
    NumberFormat.processFraction = function (value, min, max) {
        var temp = (value + '').split('.')[1];
        var length = temp ? temp.length : 0;
        if (min && length < min) {
            var ret = '';
            if (length === 0) {
                ret = value.toFixed(min);
            }
            else {
                ret += value;
                for (var j = 0; j < min - length; j++) {
                    ret += '0';
                }
                return ret;
            }
            return value.toFixed(min);
        }
        else if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(max) && (length > max || max === 0)) {
            return value.toFixed(max);
        }
        return value + '';
    };
    /**
     * Returns integer processed numeric string
     *
     * @param {string} value ?
     * @param {number} min ?
     * @returns {string} ?
     */
    NumberFormat.processMinimumIntegers = function (value, min) {
        var temp = value.split('.');
        var lead = temp[0];
        var len = lead.length;
        if (len < min) {
            for (var i = 0; i < min - len; i++) {
                lead = '0' + lead;
            }
            temp[0] = lead;
        }
        return temp.join('.');
    };
    return NumberFormat;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/number-parser.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/number-parser.js ***!
  \************************************************************************************************************************/
/*! exports provided: NumberParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumberParser", function() { return NumberParser; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _parser_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js");
/* harmony import */ var _intl_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./intl-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/intl-base.js");



var parseRegex = /^([^0-9]*)(([0-9,]*[0-9]+)(\.[0-9]+)?)([Ee][+-]?[0-9]+)?([^0-9]*)$/;
var groupRegex = /,/g;
var keys = ['minusSign', 'infinity'];
/**
 * Module for Number Parser.
 *
 * @private
 */
var NumberParser = /** @class */ (function () {
    function NumberParser() {
    }
    /**
     * Returns the parser function for given skeleton.
     *
     * @param {string} culture -  Specifies the culture name to be which formatting.
     * @param {NumberFormatOptions} option - Specific the format in which number  will parsed.
     * @param {Object} cldr - Specifies the global cldr data collection.
     * @returns {Function} ?
     */
    NumberParser.numberParser = function (culture, option, cldr) {
        var _this = this;
        var dependable = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getDependables(cldr, culture, '', true);
        var parseOptions = { custom: true };
        var numOptions;
        if ((_intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].formatRegex.test(option.format)) || !(option.format)) {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(parseOptions, _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getProperNumericSkeleton(option.format || 'N'));
            parseOptions.custom = false;
            if (!parseOptions.fractionDigits) {
                if (option.maximumFractionDigits) {
                    parseOptions.maximumFractionDigits = option.maximumFractionDigits;
                }
            }
        }
        else {
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(parseOptions, _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].customFormat(option.format, null, null));
        }
        var numbers = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('numbers', dependable.parserObject);
        // eslint-disable-next-line
        numOptions = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].getCurrentNumericOptions(dependable.parserObject, _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].getNumberingSystem(cldr), true, Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])());
        parseOptions.symbolRegex = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].getSymbolRegex(Object.keys(numOptions.symbolMatch));
        // eslint-disable-next-line
        parseOptions.infinity = numOptions.symbolNumberSystem[keys[1]];
        var symbolpattern;
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])()) {
            symbolpattern = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getSymbolPattern(parseOptions.type, numOptions.numberSystem, dependable.numericObject, parseOptions.isAccount);
            if (symbolpattern) {
                symbolpattern = symbolpattern.replace(/\u00A4/g, _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].defaultCurrency);
                var split = symbolpattern.split(';');
                parseOptions.nData = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getFormatData(split[1] || '-' + split[0], true, '');
                parseOptions.pData = _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].getFormatData(split[0], true, '');
            }
        }
        else {
            parseOptions.nData = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, {}, Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(parseOptions.type + 'nData', numbers));
            parseOptions.pData = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, {}, Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(parseOptions.type + 'pData', numbers));
            if (parseOptions.type === 'currency' && option.currency) {
                _intl_base__WEBPACK_IMPORTED_MODULE_2__["IntlBase"].replaceBlazorCurrency([parseOptions.pData, parseOptions.nData], Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('currencySymbol', numbers), option.currency);
            }
        }
        return function (value) {
            return _this.getParsedNumber(value, parseOptions, numOptions);
        };
    };
    /**
     * Returns parsed number for the provided formatting options
     *
     * @param {string} value ?
     * @param {NumericParts} options ?
     * @param {NumericOptions} numOptions ?
     * @returns {number} ?
     */
    NumberParser.getParsedNumber = function (value, options, numOptions) {
        var isNegative;
        var isPercent;
        var tempValue;
        var lead;
        var end;
        var ret;
        if (value.indexOf(options.infinity) !== -1) {
            return Infinity;
        }
        else {
            value = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].convertValueParts(value, options.symbolRegex, numOptions.symbolMatch);
            value = _parser_base__WEBPACK_IMPORTED_MODULE_1__["ParserBase"].convertValueParts(value, numOptions.numberParseRegex, numOptions.numericPair);
            value = value.indexOf('-') !== -1 ? value.replace('-.', '-0.') : value;
            if (value.indexOf('.') === 0) {
                value = '0' + value;
            }
            var matches = value.match(parseRegex);
            if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(matches)) {
                return NaN;
            }
            lead = matches[1];
            tempValue = matches[2];
            var exponent = matches[5];
            end = matches[6];
            isNegative = options.custom ? ((lead === options.nData.nlead) && (end === options.nData.nend)) :
                ((lead.indexOf(options.nData.nlead) !== -1) && (end.indexOf(options.nData.nend) !== -1));
            isPercent = isNegative ?
                options.nData.isPercent :
                options.pData.isPercent;
            tempValue = tempValue.replace(groupRegex, '');
            if (exponent) {
                tempValue += exponent;
            }
            ret = +tempValue;
            if (options.type === 'percent' || isPercent) {
                ret = ret / 100;
            }
            if (options.custom || options.fractionDigits) {
                ret = parseFloat(ret.toFixed(options.custom ?
                    (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.fractionDigits));
            }
            if (options.maximumFractionDigits) {
                ret = this.convertMaxFracDigits(tempValue, options, ret, isNegative);
            }
            if (isNegative) {
                ret *= -1;
            }
            return ret;
        }
    };
    NumberParser.convertMaxFracDigits = function (value, options, ret, isNegative) {
        var decimalSplitValue = value.split('.');
        if (decimalSplitValue[1] && decimalSplitValue[1].length > options.maximumFractionDigits) {
            ret = +(ret.toFixed(options.custom ?
                (isNegative ? options.nData.maximumFractionDigits : options.pData.maximumFractionDigits) : options.maximumFractionDigits));
        }
        return ret;
    };
    return NumberParser;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/intl/parser-base.js ***!
  \**********************************************************************************************************************/
/*! exports provided: ParserBase, getBlazorCurrencySymbol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParserBase", function() { return ParserBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBlazorCurrencySymbol", function() { return getBlazorCurrencySymbol; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/**
 * Parser
 */
var defaultNumberingSystem = {
    'latn': {
        '_digits': '0123456789',
        '_type': 'numeric'
    }
};

var defaultNumberSymbols = {
    'decimal': '.',
    'group': ',',
    'percentSign': '%',
    'plusSign': '+',
    'minusSign': '-',
    'infinity': '∞',
    'nan': 'NaN',
    'exponential': 'E'
};
var latnNumberSystem = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
/**
 * Interface for parser base
 *
 * @private
 */
var ParserBase = /** @class */ (function () {
    function ParserBase() {
    }
    /**
     * Returns the cldr object for the culture specifies
     *
     * @param {Object} obj - Specifies the object from which culture object to be acquired.
     * @param {string} cName - Specifies the culture name.
     * @returns {Object} ?
     */
    ParserBase.getMainObject = function (obj, cName) {
        var value = Object(_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() ? cName : 'main.' + cName;
        return Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(value, obj);
    };
    /**
     * Returns the numbering system object from given cldr data.
     *
     * @param {Object} obj - Specifies the object from which number system is acquired.
     * @returns {Object} ?
     */
    ParserBase.getNumberingSystem = function (obj) {
        return Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('supplemental.numberingSystems', obj) || this.numberingSystems;
    };
    /**
     * Returns the reverse of given object keys or keys specified.
     *
     * @param {Object} prop - Specifies the object to be reversed.
     * @param {number[]} keys - Optional parameter specifies the custom keyList for reversal.
     * @returns {Object} ?
     */
    ParserBase.reverseObject = function (prop, keys) {
        var propKeys = keys || Object.keys(prop);
        var res = {};
        for (var _i = 0, propKeys_1 = propKeys; _i < propKeys_1.length; _i++) {
            var key = propKeys_1[_i];
            // eslint-disable-next-line
            if (!res.hasOwnProperty(prop[key])) {
                // eslint-disable-next-line
                res[prop[key]] = key;
            }
        }
        return res;
    };
    /**
     * Returns the symbol regex by skipping the escape sequence.
     *
     * @param {string[]} props - Specifies the array values to be skipped.
     * @returns {RegExp} ?
     */
    ParserBase.getSymbolRegex = function (props) {
        var regexStr = props.map(function (str) {
            return str.replace(/([.*+?^=!:${}()|[\]/\\])/g, '\\$1');
        }).join('|');
        return new RegExp(regexStr, 'g');
    };
    /**
     *
     * @param {Object} prop ?
     * @returns {Object} ?
     */
    ParserBase.getSymbolMatch = function (prop) {
        var matchKeys = Object.keys(defaultNumberSymbols);
        var ret = {};
        for (var _i = 0, matchKeys_1 = matchKeys; _i < matchKeys_1.length; _i++) {
            var key = matchKeys_1[_i];
            // eslint-disable-next-line
            ret[prop[key]] = defaultNumberSymbols[key];
        }
        return ret;
    };
    /**
     * Returns regex string for provided value
     *
     * @param {string} val ?
     * @returns {string} ?
     */
    ParserBase.constructRegex = function (val) {
        var len = val.length;
        var ret = '';
        for (var i = 0; i < len; i++) {
            if (i !== len - 1) {
                ret += val[i] + '|';
            }
            else {
                ret += val[i];
            }
        }
        return ret;
    };
    /**
     * Returns the replaced value of matching regex and obj mapper.
     *
     * @param {string} value - Specifies the  values to be replaced.
     * @param {RegExp} regex - Specifies the  regex to search.
     * @param {Object} obj - Specifies the  object matcher to be replace value parts.
     * @returns {string} ?
     */
    ParserBase.convertValueParts = function (value, regex, obj) {
        return value.replace(regex, function (str) {
            // eslint-disable-next-line
            return obj[str];
        });
    };
    /**
     * Returns default numbering system object for formatting from cldr data
     *
     * @param {Object} obj ?
     * @returns {NumericObject} ?
     */
    ParserBase.getDefaultNumberingSystem = function (obj) {
        var ret = {};
        ret.obj = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('numbers', obj);
        ret.nSystem = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('defaultNumberingSystem', ret.obj);
        return ret;
    };
    /**
     * Returns the replaced value of matching regex and obj mapper.
     *
     * @param {Object} curObj ?
     * @param {Object} numberSystem ?
     * @param {boolean} needSymbols ?
     * @param {boolean} blazorMode ?
     * @returns {Object} ?
     */
    ParserBase.getCurrentNumericOptions = function (curObj, numberSystem, needSymbols, blazorMode) {
        var ret = {};
        var cur = this.getDefaultNumberingSystem(curObj);
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(cur.nSystem) || blazorMode) {
            var digits = blazorMode ? Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('obj.mapperDigits', cur) : Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(cur.nSystem + '._digits', numberSystem);
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(digits)) {
                ret.numericPair = this.reverseObject(digits, latnNumberSystem);
                ret.numberParseRegex = new RegExp(this.constructRegex(digits), 'g');
                ret.numericRegex = '[' + digits[0] + '-' + digits[9] + ']';
                if (needSymbols) {
                    ret.numericRegex = digits[0] + '-' + digits[9];
                    ret.symbolNumberSystem = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(blazorMode ? 'numberSymbols' : 'symbols-numberSystem-' + cur.nSystem, cur.obj);
                    ret.symbolMatch = this.getSymbolMatch(ret.symbolNumberSystem);
                    ret.numberSystem = cur.nSystem;
                }
            }
        }
        return ret;
    };
    /**
     * Returns number mapper object for the provided cldr data
     *
     * @param {Object} curObj ?
     * @param {Object} numberSystem ?
     * @param {boolean} isNumber ?
     * @returns {NumberMapper} ?
     */
    // eslint-disable-next-line
    ParserBase.getNumberMapper = function (curObj, numberSystem, isNumber) {
        var ret = { mapper: {} };
        var cur = this.getDefaultNumberingSystem(curObj);
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(cur.nSystem)) {
            ret.numberSystem = cur.nSystem;
            ret.numberSymbols = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('symbols-numberSystem-' + cur.nSystem, cur.obj);
            ret.timeSeparator = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('timeSeparator', ret.numberSymbols);
            var digits = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(cur.nSystem + '._digits', numberSystem);
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(digits)) {
                for (var _i = 0, latnNumberSystem_1 = latnNumberSystem; _i < latnNumberSystem_1.length; _i++) {
                    var i = latnNumberSystem_1[_i];
                    // eslint-disable-next-line
                    ret.mapper[i] = digits[i];
                }
            }
        }
        return ret;
    };
    ParserBase.nPair = 'numericPair';
    ParserBase.nRegex = 'numericRegex';
    ParserBase.numberingSystems = defaultNumberingSystem;
    return ParserBase;
}());

/**
 * @private
 */
var blazorCurrencyData = {
    'DJF': 'Fdj',
    'ERN': 'Nfk',
    'ETB': 'Br',
    'NAD': '$',
    'ZAR': 'R',
    'XAF': 'FCFA',
    'GHS': 'GH₵',
    'XDR': 'XDR',
    'AED': 'د.إ.‏',
    'BHD': 'د.ب.‏',
    'DZD': 'د.ج.‏',
    'EGP': 'ج.م.‏',
    'ILS': '₪',
    'IQD': 'د.ع.‏',
    'JOD': 'د.ا.‏',
    'KMF': 'CF',
    'KWD': 'د.ك.‏',
    'LBP': 'ل.ل.‏',
    'LYD': 'د.ل.‏',
    'MAD': 'د.م.‏',
    'MRU': 'أ.م.',
    'OMR': 'ر.ع.‏',
    'QAR': 'ر.ق.‏',
    'SAR': 'ر.س.‏',
    'SDG': 'ج.س.',
    'SOS': 'S',
    'SSP': '£',
    'SYP': 'ل.س.‏',
    'TND': 'د.ت.‏',
    'YER': 'ر.ي.‏',
    'CLP': '$',
    'INR': '₹',
    'TZS': 'TSh',
    'EUR': '€',
    'AZN': '₼',
    'RUB': '₽',
    'BYN': 'Br',
    'ZMW': 'K',
    'BGN': 'лв.',
    'NGN': '₦',
    'XOF': 'CFA',
    'BDT': '৳',
    'CNY': '¥',
    'BAM': 'КМ',
    'UGX': 'USh',
    'USD': '$',
    'CZK': 'Kč',
    'GBP': '£',
    'DKK': 'kr.',
    'KES': 'Ksh',
    'CHF': 'CHF',
    'MVR': 'ރ.',
    'BTN': 'Nu.',
    'XCD': 'EC$',
    'AUD': '$',
    'BBD': '$',
    'BIF': 'FBu',
    'BMD': '$',
    'BSD': '$',
    'BWP': 'P',
    'BZD': '$',
    'CAD': '$',
    'NZD': '$',
    'FJD': '$',
    'FKP': '£',
    'GIP': '£',
    'GMD': 'D',
    'GYD': '$',
    'HKD': '$',
    'IDR': 'Rp',
    'JMD': '$',
    'KYD': '$',
    'LRD': '$',
    'MGA': 'Ar',
    'MOP': 'MOP$',
    'MUR': 'Rs',
    'MWK': 'MK',
    'MYR': 'RM',
    'PGK': 'K',
    'PHP': '₱',
    'PKR': 'Rs',
    'RWF': 'RF',
    'SBD': '$',
    'SCR': 'SR',
    'SEK': 'kr',
    'SGD': '$',
    'SHP': '£',
    'SLL': 'Le',
    'ANG': 'NAf.',
    'SZL': 'E',
    'TOP': 'T$',
    'TTD': '$',
    'VUV': 'VT',
    'WST': 'WS$',
    'ARS': '$',
    'BOB': 'Bs',
    'BRL': 'R$',
    'COP': '$',
    'CRC': '₡',
    'CUP': '$',
    'DOP': '$',
    'GTQ': 'Q',
    'HNL': 'L',
    'MXN': '$',
    'NIO': 'C$',
    'PAB': 'B/.',
    'PEN': 'S/',
    'PYG': '₲',
    'UYU': '$',
    'VES': 'Bs.S',
    'IRR': 'ريال',
    'GNF': 'FG',
    'CDF': 'FC',
    'HTG': 'G',
    'XPF': 'FCFP',
    'HRK': 'kn',
    'HUF': 'Ft',
    'AMD': '֏',
    'ISK': 'kr',
    'JPY': '¥',
    'GEL': '₾',
    'CVE': '​',
    'KZT': '₸',
    'KHR': '៛',
    'KPW': '₩',
    'KRW': '₩',
    'KGS': 'сом',
    'AOA': 'Kz',
    'LAK': '₭',
    'MZN': 'MTn',
    'MKD': 'ден',
    'MNT': '₮',
    'BND': '$',
    'MMK': 'K',
    'NOK': 'kr',
    'NPR': 'रु',
    'AWG': 'Afl.',
    'SRD': '$',
    'PLN': 'zł',
    'AFN': '؋',
    'STN': 'Db',
    'MDL': 'L',
    'RON': 'lei',
    'UAH': '₴',
    'LKR': 'රු.',
    'ALL': 'Lekë',
    'RSD': 'дин.',
    'TJS': 'смн',
    'THB': '฿',
    'TMT': 'm.',
    'TRY': '₺',
    'UZS': 'сўм',
    'VND': '₫',
    'TWD': 'NT$'
};
/**
 *
 * @param {string} currencyCode ?
 * @returns {string} ?
 */
function getBlazorCurrencySymbol(currencyCode) {
    return Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(currencyCode || '', blazorCurrencyData);
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/keyboard.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/keyboard.js ***!
  \**************************************************************************************************************/
/*! exports provided: KeyboardEvents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyboardEvents", function() { return KeyboardEvents; });
/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./notify-property-change */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var keyCode = {
    'backspace': 8,
    'tab': 9,
    'enter': 13,
    'shift': 16,
    'control': 17,
    'alt': 18,
    'pause': 19,
    'capslock': 20,
    'space': 32,
    'escape': 27,
    'pageup': 33,
    'pagedown': 34,
    'end': 35,
    'home': 36,
    'leftarrow': 37,
    'uparrow': 38,
    'rightarrow': 39,
    'downarrow': 40,
    'insert': 45,
    'delete': 46,
    'f1': 112,
    'f2': 113,
    'f3': 114,
    'f4': 115,
    'f5': 116,
    'f6': 117,
    'f7': 118,
    'f8': 119,
    'f9': 120,
    'f10': 121,
    'f11': 122,
    'f12': 123,
    'semicolon': 186,
    'plus': 187,
    'comma': 188,
    'minus': 189,
    'dot': 190,
    'forwardslash': 191,
    'graveaccent': 192,
    'openbracket': 219,
    'backslash': 220,
    'closebracket': 221,
    'singlequote': 222
};
/**
 * KeyboardEvents class enables you to bind key action desired key combinations for ex., Ctrl+A, Delete, Alt+Space etc.
 * ```html
 * <div id='testEle'>  </div>;
 * <script>
 *   let node: HTMLElement = document.querySelector('#testEle');
 *   let kbInstance = new KeyboardEvents({
 *       element: node,
 *       keyConfigs:{ selectAll : 'ctrl+a' },
 *       keyAction: function (e:KeyboardEvent, action:string) {
 *           // handler function code
 *       }
 *   });
 * </script>
 * ```
 */
var KeyboardEvents = /** @class */ (function (_super) {
    __extends(KeyboardEvents, _super);
    /**
     * Initializes the KeyboardEvents
     *
     * @param {HTMLElement} element ?
     * @param {KeyboardEventsModel} options ?
     */
    function KeyboardEvents(element, options) {
        var _this = _super.call(this, options, element) || this;
        /**
         * To handle a key press event returns null
         *
         * @param {KeyboardEventArgs} e ?
         * @returns {void} ?
         */
        _this.keyPressHandler = function (e) {
            var isAltKey = e.altKey;
            var isCtrlKey = e.ctrlKey;
            var isShiftKey = e.shiftKey;
            var curkeyCode = e.which;
            var keys = Object.keys(_this.keyConfigs);
            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                var key = keys_1[_i];
                var configCollection = _this.keyConfigs[key].split(',');
                for (var _a = 0, configCollection_1 = configCollection; _a < configCollection_1.length; _a++) {
                    var rconfig = configCollection_1[_a];
                    var rKeyObj = KeyboardEvents_1.getKeyConfigData(rconfig.trim());
                    if (isAltKey === rKeyObj.altKey && isCtrlKey === rKeyObj.ctrlKey &&
                        isShiftKey === rKeyObj.shiftKey && curkeyCode === rKeyObj.keyCode) {
                        e.action = key;
                        if (_this.keyAction) {
                            _this.keyAction(e);
                        }
                    }
                }
            }
        };
        _this.bind();
        return _this;
    }
    KeyboardEvents_1 = KeyboardEvents;
    /**
     * Unwire bound events and destroy the instance.
     *
     * @returns {void} ?
     */
    KeyboardEvents.prototype.destroy = function () {
        this.unwireEvents();
        _super.prototype.destroy.call(this);
    };
    /**
     * Function can be used to specify certain action if a property is changed
     *
     * @param {KeyboardEventsModel} newProp ?
     * @param {KeyboardEventsModel} oldProp ?
     * @returns {void} ?
     * @private
     */
    // eslint-disable-next-line
    KeyboardEvents.prototype.onPropertyChanged = function (newProp, oldProp) {
        // No code are needed
    };
    KeyboardEvents.prototype.bind = function () {
        this.wireEvents();
    };
    /**
     * To get the module name, returns 'keyboard'.
     *
     * @returns {string} ?
     * @private
     */
    KeyboardEvents.prototype.getModuleName = function () {
        return 'keyboard';
    };
    /**
     * Wiring event handlers to events
     *
     * @returns {void} ?
     * @private
     */
    KeyboardEvents.prototype.wireEvents = function () {
        this.element.addEventListener(this.eventName, this.keyPressHandler);
    };
    /**
     * Unwiring event handlers to events
     *
     * @returns {void} ?
     * @private
     */
    KeyboardEvents.prototype.unwireEvents = function () {
        this.element.removeEventListener(this.eventName, this.keyPressHandler);
    };
    /**
     * To get the key configuration data
     *
     * @param {string} config - configuration data
     * @returns {KeyData} ?
     */
    KeyboardEvents.getKeyConfigData = function (config) {
        if (config in this.configCache) {
            return this.configCache[config];
        }
        var keys = config.toLowerCase().split('+');
        var keyData = {
            altKey: (keys.indexOf('alt') !== -1 ? true : false),
            ctrlKey: (keys.indexOf('ctrl') !== -1 ? true : false),
            shiftKey: (keys.indexOf('shift') !== -1 ? true : false),
            keyCode: null
        };
        if (keys[keys.length - 1].length > 1 && !!Number(keys[keys.length - 1])) {
            keyData.keyCode = Number(keys[keys.length - 1]);
        }
        else {
            keyData.keyCode = KeyboardEvents_1.getKeyCode(keys[keys.length - 1]);
        }
        KeyboardEvents_1.configCache[config] = keyData;
        return keyData;
    };
    // Return the keycode value as string
    KeyboardEvents.getKeyCode = function (keyVal) {
        return keyCode[keyVal] || keyVal.toUpperCase().charCodeAt(0);
    };
    var KeyboardEvents_1;
    KeyboardEvents.configCache = {};
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_0__["Property"])({})
    ], KeyboardEvents.prototype, "keyConfigs", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_0__["Property"])('keyup')
    ], KeyboardEvents.prototype, "eventName", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], KeyboardEvents.prototype, "keyAction", void 0);
    KeyboardEvents = KeyboardEvents_1 = __decorate([
        _notify_property_change__WEBPACK_IMPORTED_MODULE_0__["NotifyPropertyChanges"]
    ], KeyboardEvents);
    return KeyboardEvents;
}(_base__WEBPACK_IMPORTED_MODULE_1__["Base"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/l10n.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/l10n.js ***!
  \**********************************************************************************************************/
/*! exports provided: L10n */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L10n", function() { return L10n; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _internationalization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internationalization */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/internationalization.js");


/**
 * L10n modules provides localized text for different culture.
 * ```typescript
 * import {setCulture} from '@syncfusion/ts-base-library';
 * //load global locale object common for all components.
 * L10n.load({
 *    'fr-BE': {
 *       'button': {
 *            'check': 'vérifié'
 *        }
 *    }
 * });
 * //set globale default locale culture.
 * setCulture('fr-BE');
 * let instance: L10n = new L10n('button', {
 *    check: 'checked'
 * });
 * //Get locale text for current property.
 * instance.getConstant('check');
 * //Change locale culture in a component.
 * instance.setLocale('en-US');
 * ```
 */
var L10n = /** @class */ (function () {
    /**
     * Constructor
     *
     * @param {string} controlName ?
     * @param {Object} localeStrings ?
     * @param {string} locale ?
     */
    function L10n(controlName, localeStrings, locale) {
        this.controlName = controlName;
        this.localeStrings = localeStrings;
        this.setLocale(locale || _internationalization__WEBPACK_IMPORTED_MODULE_1__["defaultCulture"]);
    }
    /**
     * Sets the locale text
     *
     * @param {string} locale ?
     * @returns {void} ?
     */
    L10n.prototype.setLocale = function (locale) {
        var intLocale = this.intGetControlConstant(L10n.locale, locale);
        this.currentLocale = intLocale || this.localeStrings;
    };
    /**
     * Sets the global locale for all components.
     *
     * @param {Object} localeObject - specifies the localeObject to be set as global locale.
     * @returns {void} ?
     */
    L10n.load = function (localeObject) {
        this.locale = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(this.locale, localeObject, {}, true);
    };
    /**
     * Returns current locale text for the property based on the culture name and control name.
     *
     * @param {string} prop - specifies the property for which localize text to be returned.
     * @returns {string} ?
     */
    L10n.prototype.getConstant = function (prop) {
        // Removed conditional operator because this method does not return correct value when passing 0 as value in localization
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.currentLocale[prop])) {
            return this.currentLocale[prop];
        }
        else {
            return this.localeStrings[prop] || '';
        }
    };
    /**
     * Returns the control constant object for current object and the locale specified.
     *
     * @param {Object} curObject ?
     * @param {string} locale ?
     * @returns {Object} ?
     */
    L10n.prototype.intGetControlConstant = function (curObject, locale) {
        if ((curObject)[locale]) {
            return (curObject)[locale][this.controlName];
        }
        return null;
    };
    L10n.locale = {};
    return L10n;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/module-loader.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/module-loader.js ***!
  \*******************************************************************************************************************/
/*! exports provided: ModuleLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModuleLoader", function() { return ModuleLoader; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/**
 * Module loading operations
 */

var MODULE_SUFFIX = 'Module';
var ModuleLoader = /** @class */ (function () {
    function ModuleLoader(parent) {
        this.loadedModules = [];
        this.parent = parent;
    }
    /**
     * Inject required modules in component library
     *
     * @returns {void} ?
     * @param {ModuleDeclaration[]} requiredModules - Array of modules to be required
     * @param {Function[]} moduleList - Array of modules to be injected from sample side
     */
    ModuleLoader.prototype.inject = function (requiredModules, moduleList) {
        var reqLength = requiredModules.length;
        if (reqLength === 0) {
            this.clean();
            return;
        }
        if (this.loadedModules.length) {
            this.clearUnusedModule(requiredModules);
        }
        for (var i = 0; i < reqLength; i++) {
            var modl = requiredModules[i];
            for (var _i = 0, moduleList_1 = moduleList; _i < moduleList_1.length; _i++) {
                var module = moduleList_1[_i];
                var modName = modl.member;
                if (module.prototype.getModuleName() === modl.member && !this.isModuleLoaded(modName)) {
                    var moduleObject = Object(_util__WEBPACK_IMPORTED_MODULE_0__["createInstance"])(module, modl.args);
                    var memberName = this.getMemberName(modName);
                    if (modl.isProperty) {
                        Object(_util__WEBPACK_IMPORTED_MODULE_0__["setValue"])(memberName, module, this.parent);
                    }
                    else {
                        Object(_util__WEBPACK_IMPORTED_MODULE_0__["setValue"])(memberName, moduleObject, this.parent);
                    }
                    var loadedModule = modl;
                    loadedModule.member = memberName;
                    this.loadedModules.push(loadedModule);
                }
            }
        }
    };
    /**
     * To remove the created object while destroying the control
     *
     * @returns {void}
     */
    ModuleLoader.prototype.clean = function () {
        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
            var modules = _a[_i];
            if (!modules.isProperty) {
                Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(modules.member, this.parent).destroy();
            }
        }
        this.loadedModules = [];
    };
    /**
     * Removes all unused modules
     *
     * @param {ModuleDeclaration[]} moduleList ?
     * @returns {void} ?
     */
    ModuleLoader.prototype.clearUnusedModule = function (moduleList) {
        var _this = this;
        var usedModules = moduleList.map(function (arg) { return _this.getMemberName(arg.member); });
        var removableModule = this.loadedModules.filter(function (module) {
            return usedModules.indexOf(module.member) === -1;
        });
        for (var _i = 0, removableModule_1 = removableModule; _i < removableModule_1.length; _i++) {
            var mod = removableModule_1[_i];
            if (!mod.isProperty) {
                Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(mod.member, this.parent).destroy();
            }
            this.loadedModules.splice(this.loadedModules.indexOf(mod), 1);
            Object(_util__WEBPACK_IMPORTED_MODULE_0__["deleteObject"])(this.parent, mod.member);
        }
    };
    /**
     * To get the name of the member.
     *
     * @param {string} name ?
     * @returns {string} ?
     */
    ModuleLoader.prototype.getMemberName = function (name) {
        return name[0].toLowerCase() + name.substring(1) + MODULE_SUFFIX;
    };
    /**
     * Returns boolean based on whether the module specified is loaded or not
     *
     * @param {string} modName ?
     * @returns {boolean} ?
     */
    ModuleLoader.prototype.isModuleLoaded = function (modName) {
        for (var _i = 0, _a = this.loadedModules; _i < _a.length; _i++) {
            var mod = _a[_i];
            if (mod.member === this.getMemberName(modName)) {
                return true;
            }
        }
        return false;
    };
    return ModuleLoader;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js ***!
  \****************************************************************************************************************************/
/*! exports provided: Property, Complex, ComplexFactory, Collection, CollectionFactory, Event, NotifyPropertyChanges, CreateBuilder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Property", function() { return Property; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Complex", function() { return Complex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComplexFactory", function() { return ComplexFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Collection", function() { return Collection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CollectionFactory", function() { return CollectionFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return Event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotifyPropertyChanges", function() { return NotifyPropertyChanges; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateBuilder", function() { return CreateBuilder; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");

/**
 * Returns the Class Object
 *
 * @param {ClassObject} instance - instance of ClassObject
 * @param {string} curKey - key of the current instance
 * @param {Object} defaultValue - default Value
 * @param {Object[]} type ?
 * @returns {ClassObject} ?
 */
// eslint-disable-next-line
function getObject(instance, curKey, defaultValue, type) {
    // eslint-disable-next-line
    if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {
        instance.properties[curKey] = Object(_util__WEBPACK_IMPORTED_MODULE_0__["createInstance"])(type, [instance, curKey, defaultValue]);
    }
    return instance.properties[curKey];
}
/**
 * Returns object array
 *
 * @param {ClassObject} instance ?
 * @param {string} curKey ?
 * @param {Object[]} defaultValue ?
 * @param {Object} type ?
 * @param {boolean} isSetter ?
 * @param {boolean} isFactory ?
 * @returns {Object[]} ?
 */
// eslint-disable-next-line
function getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {
    var result = [];
    var len = defaultValue ? defaultValue.length : 0;
    for (var i = 0; i < len; i++) {
        var curType = type;
        if (isFactory) {
            curType = type(defaultValue[i], instance);
        }
        if (isSetter) {
            var inst = Object(_util__WEBPACK_IMPORTED_MODULE_0__["createInstance"])(curType, [instance, curKey, {}, true]);
            inst.setProperties(defaultValue[i], true);
            result.push(inst);
        }
        else {
            result.push(Object(_util__WEBPACK_IMPORTED_MODULE_0__["createInstance"])(curType, [instance, curKey, defaultValue[i], false]));
        }
    }
    return result;
}
/**
 * Returns the properties of the object
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @returns {void} ?
 */
function propertyGetter(defaultValue, curKey) {
    return function () {
        // eslint-disable-next-line
        if (!this.properties.hasOwnProperty(curKey)) {
            this.properties[curKey] = defaultValue;
        }
        return this.properties[curKey];
    };
}
/**
 * Set the properties for the object
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @returns {void} ?
 */
function propertySetter(defaultValue, curKey) {
    return function (newValue) {
        if (this.properties[curKey] !== newValue) {
            // eslint-disable-next-line
            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;
            this.saveChanges(curKey, newValue, oldVal);
            this.properties[curKey] = newValue;
        }
    };
}
/**
 * Returns complex objects
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */
// eslint-disable-next-line
function complexGetter(defaultValue, curKey, type) {
    return function () {
        return getObject(this, curKey, defaultValue, type);
    };
}
/**
 * Sets complex objects
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */
function complexSetter(defaultValue, curKey, type) {
    return function (newValue) {
        getObject(this, curKey, defaultValue, type).setProperties(newValue);
    };
}
/**
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {FunctionConstructor} type ?
 * @returns {void} ?
 */
// eslint-disable-next-line
function complexFactoryGetter(defaultValue, curKey, type) {
    return function () {
        var curType = type({});
        // eslint-disable-next-line
        if (this.properties.hasOwnProperty(curKey)) {
            return this.properties[curKey];
        }
        else {
            return getObject(this, curKey, defaultValue, curType);
        }
    };
}
/**
 *
 * @param {Object} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */
function complexFactorySetter(defaultValue, curKey, type) {
    return function (newValue) {
        var curType = type(newValue, this);
        getObject(this, curKey, defaultValue, curType).setProperties(newValue);
    };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */
function complexArrayGetter(defaultValue, curKey, type) {
    return function () {
        var _this = this;
        // eslint-disable-next-line
        if (!this.properties.hasOwnProperty(curKey)) {
            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);
            this.properties[curKey] = defCollection;
        }
        var ignore = ((this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch)
            || this.ignoreCollectionWatch);
        // eslint-disable-next-line
        if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {
            ['push', 'pop'].forEach(function (extendFunc) {
                var descriptor = {
                    value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[curKey]).bind(_this),
                    configurable: true
                };
                Object.defineProperty(_this.properties[curKey], extendFunc, descriptor);
            });
        }
        // eslint-disable-next-line
        if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {
            Object.defineProperty(this.properties[curKey], 'isComplexArray', { value: true });
        }
        return this.properties[curKey];
    };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */
function complexArraySetter(defaultValue, curKey, type) {
    return function (newValue) {
        this.isComplexArraySetter = true;
        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);
        var newValCollection = getObjectArray(this, curKey, newValue, type, true);
        this.isComplexArraySetter = false;
        this.saveChanges(curKey, newValCollection, oldValueCollection);
        this.properties[curKey] = newValCollection;
    };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {Object[]} type ?
 * @returns {void} ?
 */
function complexArrayFactorySetter(defaultValue, curKey, type) {
    return function (newValue) {
        // eslint-disable-next-line
        var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;
        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);
        this.saveChanges(curKey, newValCollection, oldValueCollection);
        this.properties[curKey] = newValCollection;
    };
}
/**
 *
 * @param {Object[]} defaultValue ?
 * @param {string} curKey ?
 * @param {FunctionConstructor} type ?
 * @returns {void} ?
 */
function complexArrayFactoryGetter(defaultValue, curKey, type) {
    return function () {
        var curType = type({});
        // eslint-disable-next-line
        if (!this.properties.hasOwnProperty(curKey)) {
            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);
            this.properties[curKey] = defCollection;
        }
        return this.properties[curKey];
    };
}
/**
 *
 * @param {string} dFunc ?
 * @param {string} curKey ?
 * @param {Object} type ?
 * @param {Object} prop ?
 * @returns {Object} ?
 */
function complexArrayDefinedCallback(dFunc, curKey, type, prop) {
    /* tslint:disable no-function-expression */
    return function () {
        var newValue = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            newValue[_i] = arguments[_i];
        }
        var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';
        switch (dFunc) {
            case 'push':
                for (var i = 0; i < newValue.length; i++) {
                    Array.prototype[dFunc].apply(prop, [newValue[i]]);
                    var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[i], !this.controlParent, dFunc);
                    this.serverDataBind(model_1, newValue[i], false, dFunc);
                }
                break;
            case 'pop':
                Array.prototype[dFunc].apply(prop);
                // eslint-disable-next-line
                var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);
                this.serverDataBind(model, { ejsAction: 'pop' }, false, dFunc);
                break;
        }
        return prop;
    };
}
/**
 *
 * @param {string} keyString ?
 * @param {Object} value ?
 * @param {boolean} isControlParent ?
 * @param {string} arrayFunction ?
 * @returns {Object} ?
 */
function getArrayModel(keyString, value, isControlParent, arrayFunction) {
    var modelObject = keyString;
    if (isControlParent) {
        modelObject = {};
        modelObject[keyString] = value;
        if (value && typeof value === 'object') {
            var action = 'ejsAction';
            modelObject[keyString][action] = arrayFunction;
        }
    }
    return modelObject;
}
// eslint-disable-next-line
/**
 * Method used to create property. General syntax below.
 *
 * @param {Object} defaultValue - Specifies the default value of property.
 * @returns {PropertyDecorator} ?
 * ```
 * @Property('TypeScript')
 * propertyName: Type;
 * ```
 * @private
 */
function Property(defaultValue) {
    return function (target, key) {
        var propertyDescriptor = {
            set: propertySetter(defaultValue, key),
            get: propertyGetter(defaultValue, key),
            enumerable: true,
            configurable: true
        };
        //new property creation
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'prop', defaultValue);
    };
}
/**
 * Method used to create complex property. General syntax below.
 *
 * @param  {any} defaultValue - Specifies the default value of property.
 * @param  {Function} type - Specifies the class type of complex object.
 * @returns {PropertyDecorator} ?
 * ```
 * @Complex<Type>({},Type)
 * propertyName: Type;
 * ```
 * @private
 */
function Complex(defaultValue, type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexSetter(defaultValue, key, type),
            get: complexGetter(defaultValue, key, type),
            enumerable: true,
            configurable: true
        };
        //new property creation
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'complexProp', defaultValue, type);
    };
}
/**
 * Method used to create complex Factory property. General syntax below.
 *
 * @param  {Function} type - Specifies the class factory type of complex object.
 * @returns {PropertyDecorator} ?
 * ```
 * @ComplexFactory(defaultType, factoryFunction)
 * propertyName: Type1 | Type2;
 * ```
 * @private
 */
function ComplexFactory(type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexFactorySetter({}, key, type),
            get: complexFactoryGetter({}, key, type),
            enumerable: true,
            configurable: true
        };
        //new property creation
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'complexProp', {}, type);
    };
}
/**
 * Method used to create complex array property. General syntax below.
 *
 * @param  {any} defaultValue - Specifies the default value of property.
 * @param  {Function} type - Specifies the class type of complex object.
 * @returns {PropertyDecorator} ?
 * ```
 * @Collection([], Type);
 * propertyName: Type;
 * ```
 * @private
 */
function Collection(defaultValue, type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexArraySetter(defaultValue, key, type),
            get: complexArrayGetter(defaultValue, key, type),
            enumerable: true,
            configurable: true
        };
        //new property creation
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'colProp', defaultValue, type);
    };
}
/**
 * Method used to create complex factory array property. General syntax below.
 *
 * @param  {Function} type - Specifies the class type of complex object.
 * @returns {PropertyCollectionInfo} ?
 * ```
 * @Collection([], Type);
 * propertyName: Type;
 * ```
 * @private
 */
function CollectionFactory(type) {
    return function (target, key) {
        var propertyDescriptor = {
            set: complexArrayFactorySetter([], key, type),
            get: complexArrayFactoryGetter([], key, type),
            enumerable: true,
            configurable: true
        };
        //new property creation
        Object.defineProperty(target, key, propertyDescriptor);
        addPropertyCollection(target, key, 'colProp', {}, type);
    };
}
/**
 * Method used to create event property. General syntax below.
 *
 * @returns {PropertyDecorator} ?
 * ```
 * @Event(()=>{return true;})
 * ```
 * @private
 */
function Event() {
    return function (target, key) {
        var eventDescriptor = {
            set: function (newValue) {
                var oldValue = this.properties[key];
                if (oldValue !== newValue) {
                    var finalContext = getParentContext(this, key);
                    if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(oldValue) === false) {
                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);
                    }
                    finalContext.context.addEventListener(finalContext.prefix, newValue);
                    this.properties[key] = newValue;
                }
            },
            get: propertyGetter(undefined, key),
            enumerable: true,
            configurable: true
        };
        Object.defineProperty(target, key, eventDescriptor);
        addPropertyCollection(target, key, 'event');
    };
}
/**
 * NotifyPropertyChanges is triggers the call back when the property has been changed.
 *
 * @param {Function} classConstructor ?
 * @returns {void} ?
 * ```
 *  @NotifyPropertyChanges
 * class DemoClass implements INotifyPropertyChanged {
 *
 *     @Property()
 *     property1: string;
 *
 *     dataBind: () => void;
 *
 *     constructor() { }
 *
 *     onPropertyChanged(newProp: any, oldProp: any) {
 *         // Called when property changed
 *     }
 * }
 * ```
 * @private
 */
// eslint-disable-next-line
function NotifyPropertyChanges(classConstructor) {
    /** Need to code */
}
/**
 * Method  used to create the builderObject for the target component.
 *
 * @param {BuildInfo} target ?
 * @param {string} key ?
 * @param {string} propertyType ?
 * @param {Object} defaultValue ?
 * @param {Function} type ?
 * @returns {void} ?
 * @private
 */
function addPropertyCollection(target, key, propertyType, defaultValue, type) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(target.propList)) {
        target.propList = {
            props: [],
            complexProps: [],
            colProps: [],
            events: [],
            propNames: [],
            complexPropNames: [],
            colPropNames: [],
            eventNames: []
        };
    }
    // eslint-disable-next-line
    target.propList[propertyType + 's'].push({
        propertyName: key,
        defaultValue: defaultValue,
        type: type
    });
    // eslint-disable-next-line
    target.propList[propertyType + 'Names'].push(key);
}
/**
 * Returns an object containing the builder properties
 *
 * @param {Function} component ?
 * @returns {Object} ?
 * @private
 */
function getBuilderProperties(component) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isUndefined"])(component.prototype.builderObject)) {
        component.prototype.builderObject = {
            properties: {}, propCollections: [], add: function () {
                this.isPropertyArray = true;
                this.propCollections.push(Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, this.properties, {}));
            }
        };
        var rex = /complex/;
        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {
            var key = _a[_i];
            var _loop_1 = function (prop) {
                if (rex.test(key)) {
                    component.prototype.builderObject[prop.propertyName] = function (value) {
                        var childType = {};
                        Object(_util__WEBPACK_IMPORTED_MODULE_0__["merge"])(childType, getBuilderProperties(prop.type));
                        value(childType);
                        var tempValue;
                        if (!childType.isPropertyArray) {
                            tempValue = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, childType.properties, {});
                        }
                        else {
                            tempValue = childType.propCollections;
                        }
                        this.properties[prop.propertyName] = tempValue;
                        childType.properties = {};
                        childType.propCollections = [];
                        childType.isPropertyArray = false;
                        return this;
                    };
                }
                else {
                    component.prototype.builderObject[prop.propertyName] = function (value) {
                        this.properties[prop.propertyName] = value;
                        return this;
                    };
                }
            };
            for (var _b = 0, _c = component.prototype.propList[key]; _b < _c.length; _b++) {
                var prop = _c[_b];
                _loop_1(prop);
            }
        }
    }
    return component.prototype.builderObject;
}
/**
 * Method used to create builder for the components
 *
 * @param {any} component -specifies the target component for which builder to be created.
 * @returns {Object} ?
 * @private
 */
function CreateBuilder(component) {
    var builderFunction = function (element) {
        this.element = element;
        return this;
    };
    var instanceFunction = function (element) {
        // eslint-disable-next-line
        if (!builderFunction.prototype.hasOwnProperty('create')) {
            builderFunction.prototype = getBuilderProperties(component);
            builderFunction.prototype.create = function () {
                var temp = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, {}, this.properties);
                this.properties = {};
                return new component(temp, this.element);
            };
        }
        return new builderFunction(element);
    };
    return instanceFunction;
}
/**
 * Returns parent options for the object
 *
 * @param {Object} context ?
 * @param {string} prefix ?
 * @returns {ParentOption} ?
 * @private
 */
function getParentContext(context, prefix) {
    // eslint-disable-next-line
    if (context.hasOwnProperty('parentObj') === false) {
        return { context: context, prefix: prefix };
    }
    else {
        var curText = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('propName', context);
        if (curText) {
            prefix = curText + '-' + prefix;
        }
        return getParentContext(Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])('parentObj', context), prefix);
    }
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/observer.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/observer.js ***!
  \**************************************************************************************************************/
/*! exports provided: Observer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Observer", function() { return Observer; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");

var Observer = /** @class */ (function () {
    function Observer(context) {
        this.ranArray = [];
        this.boundedEvents = {};
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(context)) {
            return;
        }
        this.context = context;
    }
    /**
     * To attach handler for given property in current context.
     *
     * @param {string} property - specifies the name of the event.
     * @param {Function} handler - Specifies the handler function to be called while event notified.
     * @param {Object} context - Specifies the context binded to the handler.
     * @param {string} id - specifies the random generated id.
     * @returns {void}
     */
    Observer.prototype.on = function (property, handler, context, id) {
        if (Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(handler)) {
            return;
        }
        var cntxt = context || this.context;
        if (this.notExist(property)) {
            this.boundedEvents[property] = [{ handler: handler, context: cntxt }];
            return;
        }
        if (!Object(_util__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(id)) {
            if (this.ranArray.indexOf(id) === -1) {
                this.ranArray.push(id);
                this.boundedEvents[property].push({ handler: handler, context: cntxt, id: id });
            }
        }
        else if (!this.isHandlerPresent(this.boundedEvents[property], handler)) {
            this.boundedEvents[property].push({ handler: handler, context: cntxt });
        }
    };
    /**
     * To remove handlers from a event attached using on() function.
     *
     * @param {string} property - specifies the name of the event.
     * @param {Function} handler - Optional argument specifies the handler function to be called while event notified.
     * @param {string} id - specifies the random generated id.
     * @returns {void} ?
     */
    Observer.prototype.off = function (property, handler, id) {
        if (this.notExist(property)) {
            return;
        }
        var curObject = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(property, this.boundedEvents);
        if (handler) {
            for (var i = 0; i < curObject.length; i++) {
                if (id) {
                    if (curObject[i].id === id) {
                        curObject.splice(i, 1);
                        var indexLocation = this.ranArray.indexOf(id);
                        if (indexLocation !== -1) {
                            this.ranArray.splice(indexLocation, 1);
                        }
                        break;
                    }
                }
                else if (handler === curObject[i].handler) {
                    curObject.splice(i, 1);
                    break;
                }
            }
        }
        else {
            delete this.boundedEvents[property];
        }
    };
    /**
     * To notify the handlers in the specified event.
     *
     * @param {string} property - Specifies the event to be notify.
     * @param {Object} argument - Additional parameters to pass while calling the handler.
     * @param {Function} successHandler - this function will invoke after event successfully triggered
     * @param {Function} errorHandler - this function will invoke after event if it was failure to call.
     * @returns {void} ?
     */
    Observer.prototype.notify = function (property, argument, successHandler, errorHandler) {
        if (this.notExist(property)) {
            if (successHandler) {
                successHandler.call(this, argument);
            }
            return;
        }
        if (argument) {
            argument.name = property;
        }
        var blazor = 'Blazor';
        var curObject = Object(_util__WEBPACK_IMPORTED_MODULE_0__["getValue"])(property, this.boundedEvents).slice(0);
        if (window[blazor]) {
            return this.blazorCallback(curObject, argument, successHandler, errorHandler, 0);
        }
        else {
            for (var _i = 0, curObject_1 = curObject; _i < curObject_1.length; _i++) {
                var cur = curObject_1[_i];
                cur.handler.call(cur.context, argument);
            }
            if (successHandler) {
                successHandler.call(this, argument);
            }
        }
    };
    Observer.prototype.blazorCallback = function (objs, argument, successHandler, errorHandler, index) {
        var _this = this;
        var isTrigger = index === objs.length - 1;
        if (index < objs.length) {
            var obj_1 = objs[index];
            var promise = obj_1.handler.call(obj_1.context, argument);
            if (promise && typeof promise.then === 'function') {
                if (!successHandler) {
                    return promise;
                }
                promise.then(function (data) {
                    data = typeof data === 'string' && _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data;
                    Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(argument, argument, data, true);
                    if (successHandler && isTrigger) {
                        successHandler.call(obj_1.context, argument);
                    }
                    else {
                        return _this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);
                    }
                }).catch(function (data) {
                    if (errorHandler) {
                        errorHandler.call(obj_1.context, typeof data === 'string' &&
                            _this.isJson(data) ? JSON.parse(data, _this.dateReviver) : data);
                    }
                });
            }
            else if (successHandler && isTrigger) {
                successHandler.call(obj_1.context, argument);
            }
            else {
                return this.blazorCallback(objs, argument, successHandler, errorHandler, index + 1);
            }
        }
    };
    // eslint-disable-next-line
    Observer.prototype.dateReviver = function (key, value) {
        var dPattern = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}/;
        if (_util__WEBPACK_IMPORTED_MODULE_0__["isBlazor"] && typeof value === 'string' && value.match(dPattern) !== null) {
            return (new Date(value));
        }
        return (value);
    };
    Observer.prototype.isJson = function (value) {
        try {
            JSON.parse(value);
        }
        catch (e) {
            return false;
        }
        return true;
    };
    /**
     * To destroy handlers in the event
     *
     * @returns {void} ?
     */
    Observer.prototype.destroy = function () {
        this.boundedEvents = this.context = undefined;
    };
    /**
     * Returns if the property exists.
     *
     * @param {string} prop ?
     * @returns {boolean} ?
     */
    Observer.prototype.notExist = function (prop) {
        // eslint-disable-next-line
        return this.boundedEvents.hasOwnProperty(prop) === false || this.boundedEvents[prop].length <= 0;
    };
    /**
     * Returns if the handler is present.
     *
     * @param {BoundOptions[]} boundedEvents ?
     * @param {Function} handler ?
     * @returns {boolean} ?
     */
    Observer.prototype.isHandlerPresent = function (boundedEvents, handler) {
        for (var _i = 0, boundedEvents_1 = boundedEvents; _i < boundedEvents_1.length; _i++) {
            var cur = boundedEvents_1[_i];
            if (cur.handler === handler) {
                return true;
            }
        }
        return false;
    };
    return Observer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/sanitize-helper.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/sanitize-helper.js ***!
  \*********************************************************************************************************************/
/*! exports provided: SanitizeHtmlHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SanitizeHtmlHelper", function() { return SanitizeHtmlHelper; });
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
/**
 * SanitizeHtmlHelper for sanitize the value.
 */

var removeTags = [
    'script',
    'style',
    'iframe[src]',
    'link[href*="javascript:"]',
    'object[type="text/x-scriptlet"]',
    'object[data^="data:text/html;base64"]',
    'img[src^="data:text/html;base64"]',
    '[src^="javascript:"]',
    '[dynsrc^="javascript:"]',
    '[lowsrc^="javascript:"]',
    '[type^="application/x-shockwave-flash"]'
];
var removeAttrs = [
    { attribute: 'href', selector: '[href*="javascript:"]' },
    { attribute: 'background', selector: '[background^="javascript:"]' },
    { attribute: 'style', selector: '[style*="javascript:"]' },
    { attribute: 'style', selector: '[style*="expression("]' },
    { attribute: 'href', selector: 'a[href^="data:text/html;base64"]' }
];
var jsEvents = ['onchange',
    'onclick',
    'onmouseover',
    'onmouseout',
    'onkeydown',
    'onload',
    'onerror',
    'onblur',
    'onfocus',
    'onbeforeload',
    'onbeforeunload',
    'onkeyup',
    'onsubmit',
    'onafterprint',
    'onbeforeonload',
    'onbeforeprint',
    'onblur',
    'oncanplay',
    'oncanplaythrough',
    'onchange',
    'onclick',
    'oncontextmenu',
    'ondblclick',
    'ondrag',
    'ondragend',
    'ondragenter',
    'ondragleave',
    'ondragover',
    'ondragstart',
    'ondrop',
    'ondurationchange',
    'onemptied',
    'onended',
    'onerror',
    'onerror',
    'onfocus',
    'onformchange',
    'onforminput',
    'onhaschange',
    'oninput',
    'oninvalid',
    'onkeydown',
    'onkeypress',
    'onkeyup',
    'onload',
    'onloadeddata',
    'onloadedmetadata',
    'onloadstart',
    'onmessage',
    'onmousedown',
    'onmousemove',
    'onmouseout',
    'onmouseover',
    'onmouseup',
    'onmousewheel',
    'onoffline',
    'onoine',
    'ononline',
    'onpagehide',
    'onpageshow',
    'onpause',
    'onplay',
    'onplaying',
    'onpopstate',
    'onprogress',
    'onratechange',
    'onreadystatechange',
    'onredo',
    'onresize',
    'onscroll',
    'onseeked',
    'onseeking',
    'onselect',
    'onstalled',
    'onstorage',
    'onsubmit',
    'onsuspend',
    'ontimeupdate',
    'onundo',
    'onunload',
    'onvolumechange',
    'onwaiting',
    'onmouseenter',
    'onmouseleave',
    'onmousewheel',
    'onstart',
    'onpropertychange'
];
var SanitizeHtmlHelper = /** @class */ (function () {
    function SanitizeHtmlHelper() {
    }
    SanitizeHtmlHelper.beforeSanitize = function () {
        return {
            selectors: {
                tags: removeTags,
                attributes: removeAttrs
            }
        };
    };
    SanitizeHtmlHelper.sanitize = function (value) {
        var item = this.beforeSanitize();
        var output = this.serializeValue(item, value);
        return output;
    };
    SanitizeHtmlHelper.serializeValue = function (item, value) {
        this.removeAttrs = item.selectors.attributes;
        this.removeTags = item.selectors.tags;
        this.wrapElement = document.createElement('div');
        this.wrapElement.innerHTML = value;
        this.removeXssTags();
        this.removeJsEvents();
        this.removeXssAttrs();
        var tempEleValue = this.wrapElement.innerHTML;
        this.removeElement();
        return tempEleValue;
    };
    SanitizeHtmlHelper.removeElement = function () {
        // Removes an element's attibute to avoid html tag validation
        var nodes = this.wrapElement.children;
        for (var j = 0; j < nodes.length; j++) {
            var attribute = nodes[j].attributes;
            for (var i = 0; i < attribute.length; i++) {
                this.wrapElement.children[j].removeAttribute(attribute[i].localName);
            }
        }
    };
    SanitizeHtmlHelper.removeXssTags = function () {
        var elements = this.wrapElement.querySelectorAll(this.removeTags.join(','));
        if (elements.length > 0) {
            elements.forEach(function (element) {
                Object(_dom__WEBPACK_IMPORTED_MODULE_0__["detach"])(element);
            });
        }
        else {
            return;
        }
    };
    SanitizeHtmlHelper.removeJsEvents = function () {
        var elements = this.wrapElement.querySelectorAll('[' + jsEvents.join('],[') + ']');
        if (elements.length > 0) {
            elements.forEach(function (element) {
                jsEvents.forEach(function (attr) {
                    if (element.hasAttribute(attr)) {
                        element.removeAttribute(attr);
                    }
                });
            });
        }
        else {
            return;
        }
    };
    SanitizeHtmlHelper.removeXssAttrs = function () {
        var _this = this;
        // eslint-disable-next-line
        this.removeAttrs.forEach(function (item, index) {
            var elements = _this.wrapElement.querySelectorAll(item.selector);
            if (elements.length > 0) {
                elements.forEach(function (element) {
                    element.removeAttribute(item.attribute);
                });
            }
        });
    };
    return SanitizeHtmlHelper;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/template-engine.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/template-engine.js ***!
  \*********************************************************************************************************************/
/*! exports provided: blazorTemplates, getRandomId, compile, updateBlazorTemplate, resetBlazorTemplate, setTemplateEngine, getTemplateEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blazorTemplates", function() { return blazorTemplates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRandomId", function() { return getRandomId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return compile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBlazorTemplate", function() { return updateBlazorTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetBlazorTemplate", function() { return resetBlazorTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTemplateEngine", function() { return setTemplateEngine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTemplateEngine", function() { return getTemplateEngine; });
/* harmony import */ var _template__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/template.js");
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/dom.js");
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/**
 * Template Engine Bridge
 */



var HAS_ROW = /^[\n\r.]+<tr|^<tr/;
var HAS_SVG = /^[\n\r.]+<svg|^<path|^<g/;
var blazorTemplates = {};
/**
 *
 * @returns {string} ?
 */
function getRandomId() {
    return '-' + Math.random().toString(36).substr(2, 5);
}
/**
 * Compile the template string into template function.
 *
 * @param {string} templateString - The template string which is going to convert.
 * @param {Object} helper - Helper functions as an object.
 * @param {boolean} ignorePrefix ?
 * @returns {NodeList} ?
 * @private
 */
// eslint-disable-next-line
function compile(templateString, helper, ignorePrefix) {
    var compiler = engineObj.compile(templateString, helper, ignorePrefix);
    // eslint-disable-next-line
    return function (data, component, propName, templateId, isStringTemplate, index, element) {
        var result = compiler(data, component, propName, element);
        var blazorTemplateId = 'BlazorTemplateId';
        if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])() && !isStringTemplate) {
            var randomId = getRandomId();
            var blazorId = templateId + randomId;
            if (!blazorTemplates[templateId]) {
                blazorTemplates[templateId] = [];
            }
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(index)) {
                var keys = Object.keys(blazorTemplates[templateId][index]);
                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                    var key = keys_1[_i];
                    if (key !== blazorTemplateId && data[key]) {
                        blazorTemplates[templateId][index][key] = data[key];
                    }
                    if (key === blazorTemplateId) {
                        blazorId = blazorTemplates[templateId][index][key];
                    }
                }
            }
            else {
                data[blazorTemplateId] = blazorId;
                blazorTemplates[templateId].push(data);
            }
            // eslint-disable-next-line
            return propName === 'rowTemplate' ? [Object(_dom__WEBPACK_IMPORTED_MODULE_1__["createElement"])('tr', { id: blazorId, className: 'e-blazor-template' })] :
                // eslint-disable-next-line
                [Object(_dom__WEBPACK_IMPORTED_MODULE_1__["createElement"])('div', { id: blazorId, className: 'e-blazor-template' })];
        }
        if (typeof result === 'string') {
            if (HAS_SVG.test(result)) {
                var ele = Object(_dom__WEBPACK_IMPORTED_MODULE_1__["createElement"])('svg', { innerHTML: result });
                return ele.childNodes;
            }
            else {
                var ele = Object(_dom__WEBPACK_IMPORTED_MODULE_1__["createElement"])((HAS_ROW.test(result) ? 'table' : 'div'), { innerHTML: result });
                return ele.childNodes;
            }
        }
        else {
            return result;
        }
    };
}
/**
 *
 * @param {string} templateId ?
 * @param {string} templateName ?
 * @param {string} comp ?
 * @param {boolean} isEmpty ?
 * @param {Function} callBack ?
 * @returns {void} ?
 */
function updateBlazorTemplate(templateId, templateName, comp, isEmpty, callBack) {
    if (Object(_util__WEBPACK_IMPORTED_MODULE_2__["isBlazor"])()) {
        var ejsIntrop = 'sfBlazor';
        window[ejsIntrop].updateTemplate(templateName, blazorTemplates[templateId], templateId, comp, callBack);
        if (isEmpty !== false) {
            blazorTemplates[templateId] = [];
        }
    }
}
/**
 *
 * @param {string} templateId ?
 * @param {string} templateName ?
 * @param {number} index ?
 * @returns {void} ?
 */
function resetBlazorTemplate(templateId, templateName, index) {
    var templateDiv = document.getElementById(templateId);
    if (templateDiv) {
        // eslint-disable-next-line
        var innerTemplates = templateDiv.getElementsByClassName('blazor-inner-template');
        for (var i = 0; i < innerTemplates.length; i++) {
            var tempId = ' ';
            if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(index)) {
                tempId = innerTemplates[index].getAttribute('data-templateId');
            }
            else {
                tempId = innerTemplates[i].getAttribute('data-templateId');
            }
            var tempElement = document.getElementById(tempId);
            if (tempElement) {
                var length_1 = tempElement.childNodes.length;
                for (var j = 0; j < length_1; j++) {
                    if (!Object(_util__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(index)) {
                        innerTemplates[index].appendChild(tempElement.childNodes[0]);
                        i = innerTemplates.length;
                    }
                    else {
                        innerTemplates[i].appendChild(tempElement.childNodes[0]);
                    }
                }
            }
        }
    }
}
/**
 * Set your custom template engine for template rendering.
 *
 * @param  {ITemplateEngine} classObj - Class object for custom template.
 * @returns {void} ?
 * @private
 */
function setTemplateEngine(classObj) {
    engineObj.compile = classObj.compile;
}
/**
 * Get current template engine for template rendering
 *
 * @returns {string} ?
 * @private
 */
function getTemplateEngine() {
    return engineObj.compile;
}
//Default Engine Class
var Engine = /** @class */ (function () {
    function Engine() {
    }
    // eslint-disable-next-line
    Engine.prototype.compile = function (templateString, helper, ignorePrefix) {
        if (helper === void 0) { helper = {}; }
        return Object(_template__WEBPACK_IMPORTED_MODULE_0__["compile"])(templateString, helper);
    };
    return Engine;
}());
var engineObj = { compile: new Engine().compile };


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/template.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/template.js ***!
  \**************************************************************************************************************/
/*! exports provided: expression, compile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expression", function() { return expression; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compile", function() { return compile; });
/**
 * Template Engine
 */
var LINES = new RegExp('\\n|\\r|\\s\\s+', 'g');
var QUOTES = new RegExp(/'|"/g);
var IF_STMT = new RegExp('if ?\\(');
var ELSEIF_STMT = new RegExp('else if ?\\(');
var ELSE_STMT = new RegExp('else');
var FOR_STMT = new RegExp('for ?\\(');
var IF_OR_FOR = new RegExp('(/if|/for)');
var CALL_FUNCTION = new RegExp('\\((.*)\\)', '');
var NOT_NUMBER = new RegExp('^[0-9]+$', 'g');
var WORD = new RegExp('[\\w"\'.\\s+]+', 'g');
var DBL_QUOTED_STR = new RegExp('"(.*?)"', 'g');
var WORDIF = new RegExp('[\\w"\'@#$.\\s-+]+', 'g');
var exp = new RegExp('\\${([^}]*)}', 'g');
// let cachedTemplate: Object = {};
var ARR_OBJ = /^\..*/gm;
var SINGLE_SLASH = /\\/gi;
var DOUBLE_SLASH = /\\\\/gi;
var WORDFUNC = new RegExp('[\\w"\'@#$.\\s+]+', 'g');
var WINDOWFUNC = /\window\./gm;
/**
 * The function to set regular expression for template expression string.
 *
 * @param {RegExp} value - Value expression.
 * @returns {RegExp} ?
 * @private
 */
function expression(value) {
    if (value) {
        exp = value;
    }
    return exp;
}
// /**
//  * To render the template string from the given data.
//  * @param  {string} template - String Template.
//  * @param  {Object[]|JSON} data - DataSource for the template.
//  * @param  {Object} helper? - custom helper object.
//  */
// export function template(template: string, data: JSON, helper?: Object): string {
//     let hash: string = hashCode(template);
//     let tmpl: Function;
//     if (!cachedTemplate[hash]) {
//         tmpl = cachedTemplate[hash] = compile(template, helper);
//     } else {
//         tmpl = cachedTemplate[hash];
//     }
//     return tmpl(data);
// }
/**
 * Compile the template string into template function.
 *
 * @param {string} template - The template string which is going to convert.
 * @param {Object} helper - Helper functions as an object.
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 * @private
 */
function compile(template, helper, ignorePrefix) {
    var argName = 'data';
    var evalExpResult = evalExp(template, argName, helper, ignorePrefix);
    var condtion = "var valueRegEx = (/value=\\'([A-Za-z0-9 _]*)((.)([\\w)(!-;?-\u25A0\\s]+)['])/g);\n    var hrefRegex = (/(?:href)([\\s='\"./]+)([\\w-./?=&\\\\#\"]+)((.)([\\w)(!-;/?-\u25A0\\s]+)['])/g);\n    if(str.match(valueRegEx)){\n        var check = str.match(valueRegEx);\n        var str1 = str;\n        for (var i=0; i < check.length; i++) {\n            var check1 = str.match(valueRegEx)[i].split('value=')[1];\n            var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\"') : check1;\n            change =change.match(/.$/)[0] === '\\'' ? change.replace(/.$/,'\"') : change;\n            str1 = str1.replace(check1, change);\n        }\n        str = str.replace(str, str1);\n    }\n    else if (str.match(/(?:href='')/) === null) {\n        if(str.match(hrefRegex)) {\n            var check = str.match(hrefRegex);\n            var str1 = str;\n            for (var i=0; i < check.length; i++) {\n                var check1 = str.match(hrefRegex)[i].split('href=')[1];\n                var change = check1.match(/^'/) !== null ? check1.replace(/^'/, '\"') : check1;\n                change =change.match(/.$/)[0] === '\\'' ? change.replace(/.$/,'\"') : change;\n                str1 = str1.replace(check1, change);\n            }\n            str = str.replace(str, str1);\n        }\n    }\n    ";
    var fnCode = "var str=\"" + evalExpResult + "\";" + condtion + " return str;";
    var fn = new Function(argName, fnCode);
    return fn.bind(helper);
}
/** function used to evaluate the function expression
 *
 * @param {string} str ?
 * @param {string} nameSpace ?
 * @param {Object} helper ?
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 */
function evalExp(str, nameSpace, helper, ignorePrefix) {
    var varCOunt = 0;
    /**
     * Variable containing Local Keys
     */
    var localKeys = [];
    var isClass = str.match(/class="([^"]+|)\s{2}/g);
    var singleSpace = '';
    if (isClass) {
        isClass.forEach(function (value) {
            singleSpace = value.replace(/\s\s+/g, ' ');
            str = str.replace(value, singleSpace);
        });
    }
    return str.replace(LINES, '').replace(DBL_QUOTED_STR, '\'$1\'').replace(exp, 
    // eslint-disable-next-line
    function (match, cnt, offset, matchStr) {
        var SPECIAL_CHAR = /@|#|\$/gm;
        var matches = cnt.match(CALL_FUNCTION);
        // matches to detect any function calls
        if (matches) {
            var rlStr = matches[1];
            if (ELSEIF_STMT.test(cnt)) {
                //handling else-if condition
                cnt = '";} ' + cnt.replace(matches[1], rlStr.replace(WORD, function (str) {
                    str = str.trim();
                    return addNameSpace(str, !(QUOTES.test(str)) && (localKeys.indexOf(str) === -1), nameSpace, localKeys, ignorePrefix);
                })) + '{ \n str = str + "';
            }
            else if (IF_STMT.test(cnt)) {
                //handling if condition
                cnt = '"; ' + cnt.replace(matches[1], rlStr.replace(WORDIF, function (strs) {
                    return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);
                })) + '{ \n str = str + "';
            }
            else if (FOR_STMT.test(cnt)) {
                //handling for condition
                var rlStr_1 = matches[1].split(' of ');
                // replace for each into actual JavaScript
                // eslint-disable-next-line
                cnt = '"; ' + cnt.replace(matches[1], function (mtc) {
                    localKeys.push(rlStr_1[0]);
                    localKeys.push(rlStr_1[0] + 'Index');
                    varCOunt = varCOunt + 1;
                    // tslint:disable-next-line
                    return 'var i' + varCOunt + '=0; i' + varCOunt + ' < ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix) + '.length; i' + varCOunt + '++';
                }) + '{ \n ' + rlStr_1[0] + '= ' + addNameSpace(rlStr_1[1], true, nameSpace, localKeys, ignorePrefix)
                    + '[i' + varCOunt + ']; \n var ' + rlStr_1[0] + 'Index=i' + varCOunt + '; \n str = str + "';
            }
            else {
                //helper function handling
                var fnStr = cnt.split('(');
                // eslint-disable-next-line
                var fNameSpace = (helper && helper.hasOwnProperty(fnStr[0]) ? 'this.' : 'global');
                fNameSpace = (/\./.test(fnStr[0]) ? '' : fNameSpace);
                var ftArray = matches[1].split(',');
                if (matches[1].length !== 0 && !(/data/).test(ftArray[0]) && !(/window./).test(ftArray[0])) {
                    matches[1] = (fNameSpace === 'global' ? nameSpace + '.' + matches[1] : matches[1]);
                }
                var splRegexp = /@|\$|#/gm;
                var arrObj = /\]\./gm;
                if (WINDOWFUNC.test(cnt) && arrObj.test(cnt) || splRegexp.test(cnt)) {
                    var splArrRegexp = /@|\$|#|\]\./gm;
                    if (splArrRegexp.test(cnt)) {
                        // tslint:disable-next-line
                        cnt = '"+ ' + (fNameSpace === 'global' ? '' : fNameSpace) + cnt.replace(matches[1], rlStr.replace(WORDFUNC, function (strs) {
                            return HandleSpecialCharArrObj(strs, nameSpace, localKeys, ignorePrefix);
                        })) + '+ "';
                    }
                }
                else {
                    cnt = '" + ' + (fNameSpace === 'global' ? '' : fNameSpace) +
                        cnt.replace(rlStr, addNameSpace(matches[1].replace(/,( |)data.|,/gi, ',' + nameSpace + '.').replace(/,( |)data.window/gi, ',window'), (fNameSpace === 'global' ? false : true), nameSpace, localKeys, ignorePrefix)) +
                        '+"';
                }
            }
        }
        else if (ELSE_STMT.test(cnt)) {
            // handling else condition
            cnt = '"; ' + cnt.replace(ELSE_STMT, '} else { \n str = str + "');
            // eslint-disable-next-line
        }
        else if (!!cnt.match(IF_OR_FOR)) {
            // close condition
            cnt = cnt.replace(IF_OR_FOR, '"; \n } \n str = str + "');
        }
        else if (SPECIAL_CHAR.test(cnt)) {
            // template string with double slash with special character
            if (cnt.match(SINGLE_SLASH)) {
                cnt = SlashReplace(cnt);
            }
            cnt = '"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '"]+"';
        }
        else {
            // template string with double slash
            if (cnt.match(SINGLE_SLASH)) {
                cnt = SlashReplace(cnt);
                cnt = '"+' + NameSpaceForspecialChar(cnt, (localKeys.indexOf(cnt) === -1), nameSpace, localKeys) + '"]+"';
            }
            else {
                // evaluate normal expression
                cnt = '"+' + addNameSpace(cnt.replace(/,/gi, '+' + nameSpace + '.'), (localKeys.indexOf(cnt) === -1), nameSpace, localKeys, ignorePrefix) + '+"';
            }
        }
        return cnt;
    });
}
/**
 *
 * @param {string} str ?
 * @param {boolean} addNS ?
 * @param {string} nameSpace ?
 * @param {string[]} ignoreList ?
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 */
function addNameSpace(str, addNS, nameSpace, ignoreList, ignorePrefix) {
    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1 && !ignorePrefix) ? nameSpace + '.' + str : str);
}
/**
 *
 * @param {string} str ?
 * @param {boolean} addNS ?
 * @param {string} nameSpace ?
 * @param {string[]} ignoreList ?
 * @returns {string} ?
 */
function NameSpaceArrObj(str, addNS, nameSpace, ignoreList) {
    var arrObjReg = /^\..*/gm;
    return ((addNS && !(NOT_NUMBER.test(str)) &&
        ignoreList.indexOf(str.split('.')[0]) === -1 && !(arrObjReg.test(str))) ? nameSpace + '.' + str : str);
}
// // Create hashCode for template string to storeCached function
// function hashCode(str: string): string {
//     return str.split('').reduce((a: number, b: string) => { a = ((a << 5) - a) + b.charCodeAt(0); return a & a; }, 0).toString();
// }
/**
 *
 * @param {string} str ?
 * @param {boolean} addNS ?
 * @param {string} nameSpace ?
 * @param {string[]} ignoreList ?
 * @returns {string} ?
 */
function NameSpaceForspecialChar(str, addNS, nameSpace, ignoreList) {
    return ((addNS && !(NOT_NUMBER.test(str)) && ignoreList.indexOf(str.split('.')[0]) === -1) ? nameSpace + '["' + str : str);
}
// eslint-disable-next-line
function SlashReplace(tempStr) {
    var double = '\\\\';
    if (tempStr.match(DOUBLE_SLASH)) {
        // eslint-disable-next-line
        tempStr = tempStr;
    }
    else {
        tempStr = tempStr.replace(SINGLE_SLASH, double);
    }
    return tempStr;
}
/**
 *
 * @param {string} str ?
 * @param {string} nameSpaceNew ?
 * @param {string[]} keys ?
 * @param {boolean} ignorePrefix ?
 * @returns {string} ?
 */
function HandleSpecialCharArrObj(str, nameSpaceNew, keys, ignorePrefix) {
    str = str.trim();
    var windowFunc = /\window\./gm;
    if (!windowFunc.test(str)) {
        var quotes = /'|"/gm;
        var splRegexp = /@|\$|#/gm;
        if (splRegexp.test(str)) {
            str = NameSpaceForspecialChar(str, (keys.indexOf(str) === -1), nameSpaceNew, keys) + '"]';
        }
        if (ARR_OBJ.test(str)) {
            return NameSpaceArrObj(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys);
        }
        else {
            return addNameSpace(str, !(quotes.test(str)) && (keys.indexOf(str) === -1), nameSpaceNew, keys, ignorePrefix);
        }
    }
    else {
        return str;
    }
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/touch.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/touch.js ***!
  \***********************************************************************************************************/
/*! exports provided: SwipeSettings, Touch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwipeSettings", function() { return SwipeSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Touch", function() { return Touch; });
/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js");
/* harmony import */ var _notify_property_change__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./notify-property-change */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/notify-property-change.js");
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./browser */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/browser.js");
/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/base.js");
/* harmony import */ var _child_property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./child-property */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/child-property.js");
/* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./event-handler */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/event-handler.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






/**
 * SwipeSettings is a framework module that provides support to handle swipe event like swipe up, swipe right, etc..,
 */
var SwipeSettings = /** @class */ (function (_super) {
    __extends(SwipeSettings, _super);
    function SwipeSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Property"])(50)
    ], SwipeSettings.prototype, "swipeThresholdDistance", void 0);
    return SwipeSettings;
}(_child_property__WEBPACK_IMPORTED_MODULE_4__["ChildProperty"]));

var swipeRegex = /(Up|Down)/;
/**
 * Touch class provides support to handle the touch event like tap, double tap, tap hold, etc..,
 * ```typescript
 *    let node: HTMLElement;
 * let touchObj: Touch = new Touch({
 *    element: node,
 *    tap: function (e) {
 *        // tap handler function code
 *    }
 *    tapHold: function (e) {
 *        // tap hold handler function code
 *    }
 *    scroll: function (e) {
 *        // scroll handler function code
 *    }
 *    swipe: function (e) {
 *        // swipe handler function code
 *    }
 * });
 * ```
 */
var Touch = /** @class */ (function (_super) {
    __extends(Touch, _super);
    /* End-Properties */
    function Touch(element, options) {
        var _this = _super.call(this, options, element) || this;
        _this.touchAction = true;
        _this.tapCount = 0;
        /**
         *
         * @param {MouseEventArgs | TouchEventArgs} evt ?
         * @returns {void} ?
         */
        _this.startEvent = function (evt) {
            if (_this.touchAction === true) {
                var point = _this.updateChangeTouches(evt);
                if (evt.changedTouches !== undefined) {
                    _this.touchAction = false;
                }
                _this.isTouchMoved = false;
                _this.movedDirection = '';
                _this.startPoint = _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };
                _this.startEventData = point;
                _this.hScrollLocked = _this.vScrollLocked = false;
                _this.tStampStart = Date.now();
                _this.timeOutTapHold = setTimeout(function () { _this.tapHoldEvent(evt); }, _this.tapHoldThreshold);
                _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].add(_this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchMoveEvent, _this.moveEvent, _this);
                _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].add(_this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchEndEvent, _this.endEvent, _this);
                _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].add(_this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchCancelEvent, _this.cancelEvent, _this);
            }
        };
        /**
         *
         * @param {MouseEventArgs | TouchEventArgs} evt ?
         * @returns {void} ?
         */
        _this.moveEvent = function (evt) {
            var point = _this.updateChangeTouches(evt);
            _this.movedPoint = point;
            _this.isTouchMoved = !(point.clientX === _this.startPoint.clientX && point.clientY === _this.startPoint.clientY);
            var eScrollArgs = {};
            if (_this.isTouchMoved) {
                clearTimeout(_this.timeOutTapHold);
                _this.calcScrollPoints(evt);
                var scrollArg = {
                    startEvents: _this.startEventData,
                    originalEvent: evt, startX: _this.startPoint.clientX,
                    startY: _this.startPoint.clientY, distanceX: _this.distanceX,
                    distanceY: _this.distanceY, scrollDirection: _this.scrollDirection,
                    velocity: _this.getVelocity(point)
                };
                eScrollArgs = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(eScrollArgs, {}, scrollArg);
                _this.trigger('scroll', eScrollArgs);
                _this.lastMovedPoint = { clientX: point.clientX, clientY: point.clientY };
            }
        };
        /**
         *
         * @param {MouseEventArgs | TouchEventArgs} evt ?
         * @returns {void} ?
         */
        _this.cancelEvent = function (evt) {
            clearTimeout(_this.timeOutTapHold);
            clearTimeout(_this.timeOutTap);
            _this.tapCount = 0;
            _this.swipeFn(evt);
            _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(_this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchCancelEvent, _this.cancelEvent);
        };
        /**
         *
         * @param {MouseEventArgs | TouchEventArgs} evt ?
         * @returns {void} ?
         */
        _this.endEvent = function (evt) {
            _this.swipeFn(evt);
            if (!_this.isTouchMoved) {
                if (typeof _this.tap === 'function') {
                    _this.trigger('tap', { originalEvent: evt, tapCount: ++_this.tapCount });
                    _this.timeOutTap = setTimeout(function () {
                        _this.tapCount = 0;
                    }, _this.tapThreshold);
                }
            }
            _this.modeclear();
        };
        /**
         *
         * @param {MouseEventArgs | TouchEventArgs} evt ?
         * @returns {void} ?
         */
        _this.swipeFn = function (evt) {
            clearTimeout(_this.timeOutTapHold);
            clearTimeout(_this.timeOutTap);
            var point = _this.updateChangeTouches(evt);
            var diffX = point.clientX - _this.startPoint.clientX;
            var diffY = point.clientY - _this.startPoint.clientY;
            diffX = Math.floor(diffX < 0 ? -1 * diffX : diffX);
            diffY = Math.floor(diffY < 0 ? -1 * diffY : diffX);
            _this.isTouchMoved = diffX > 1 || diffY > 1;
            _this.endPoint = point;
            _this.calcPoints(evt);
            var swipeArgs = {
                originalEvent: evt,
                startEvents: _this.startEventData,
                startX: _this.startPoint.clientX,
                startY: _this.startPoint.clientY,
                distanceX: _this.distanceX, distanceY: _this.distanceY, swipeDirection: _this.movedDirection,
                velocity: _this.getVelocity(point)
            };
            if (_this.isTouchMoved) {
                var eSwipeArgs = void 0;
                var tDistance = _this.swipeSettings.swipeThresholdDistance;
                // eslint-disable-next-line
                eSwipeArgs = Object(_util__WEBPACK_IMPORTED_MODULE_0__["extend"])(eSwipeArgs, _this.defaultArgs, swipeArgs);
                var canTrigger = false;
                var ele = _this.element;
                var scrollBool = _this.isScrollable(ele);
                var moved = swipeRegex.test(_this.movedDirection);
                if ((tDistance < _this.distanceX && !moved) || (tDistance < _this.distanceY && moved)) {
                    if (!scrollBool) {
                        canTrigger = true;
                    }
                    else {
                        canTrigger = _this.checkSwipe(ele, moved);
                    }
                }
                if (canTrigger) {
                    _this.trigger('swipe', eSwipeArgs);
                }
            }
            _this.modeclear();
        };
        _this.modeclear = function () {
            _this.modeClear = setTimeout(function () {
                _this.touchAction = true;
            }, (typeof _this.tap !== 'function' ? 0 : 20));
            _this.lastTapTime = new Date().getTime();
            _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(_this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchMoveEvent, _this.moveEvent);
            _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(_this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchEndEvent, _this.endEvent);
            _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(_this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchCancelEvent, _this.cancelEvent);
        };
        _this.bind();
        return _this;
    }
    // triggers when property changed
    /**
     *
     * @private
     * @param {TouchModel} newProp ?
     * @param {TouchModel} oldProp ?
     * @returns {void} ?
     */
    // eslint-disable-next-line
    Touch.prototype.onPropertyChanged = function (newProp, oldProp) {
        //No Code to handle
    };
    Touch.prototype.bind = function () {
        this.wireEvents();
        if (_browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].isIE) {
            this.element.classList.add('e-block-touch');
        }
    };
    /**
     * To destroy the touch instance.
     *
     * @returns {void}
     */
    Touch.prototype.destroy = function () {
        this.unwireEvents();
        _super.prototype.destroy.call(this);
    };
    // Need to changes the event binding once we updated the event handler.
    Touch.prototype.wireEvents = function () {
        _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].add(this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchStartEvent, this.startEvent, this);
    };
    Touch.prototype.unwireEvents = function () {
        _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchStartEvent, this.startEvent);
    };
    /**
     * Returns module name as touch
     *
     * @returns {string} ?
     * @private
     */
    Touch.prototype.getModuleName = function () {
        return 'touch';
    };
    /**
     * Returns if the HTML element is Scrollable.
     *
     * @param {HTMLElement} element - HTML Element to check if Scrollable.
     * @returns {boolean} ?
     */
    Touch.prototype.isScrollable = function (element) {
        var eleStyle = getComputedStyle(element);
        var style = eleStyle.overflow + eleStyle.overflowX + eleStyle.overflowY;
        if ((/(auto|scroll)/).test(style)) {
            return true;
        }
        return false;
    };
    /**
     *
     * @param {MouseEventArgs | TouchEventArgs} evt ?
     * @returns {void} ?
     */
    Touch.prototype.tapHoldEvent = function (evt) {
        this.tapCount = 0;
        this.touchAction = true;
        var eTapArgs;
        _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchMoveEvent, this.moveEvent);
        _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchEndEvent, this.endEvent);
        // eslint-disable-next-line
        eTapArgs = { originalEvent: evt };
        this.trigger('tapHold', eTapArgs);
        _event_handler__WEBPACK_IMPORTED_MODULE_5__["EventHandler"].remove(this.element, _browser__WEBPACK_IMPORTED_MODULE_2__["Browser"].touchCancelEvent, this.cancelEvent);
    };
    Touch.prototype.calcPoints = function (evt) {
        var point = this.updateChangeTouches(evt);
        this.defaultArgs = { originalEvent: evt };
        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.startPoint.clientX)));
        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.startPoint.clientY)));
        if (this.distanceX > this.distanceY) {
            this.movedDirection = (point.clientX > this.startPoint.clientX) ? 'Right' : 'Left';
        }
        else {
            this.movedDirection = (point.clientY < this.startPoint.clientY) ? 'Up' : 'Down';
        }
    };
    Touch.prototype.calcScrollPoints = function (evt) {
        var point = this.updateChangeTouches(evt);
        this.defaultArgs = { originalEvent: evt };
        this.distanceX = Math.abs((Math.abs(point.clientX) - Math.abs(this.lastMovedPoint.clientX)));
        this.distanceY = Math.abs((Math.abs(point.clientY) - Math.abs(this.lastMovedPoint.clientY)));
        if ((this.distanceX > this.distanceY || this.hScrollLocked === true) && this.vScrollLocked === false) {
            this.scrollDirection = (point.clientX > this.lastMovedPoint.clientX) ? 'Right' : 'Left';
            this.hScrollLocked = true;
        }
        else {
            this.scrollDirection = (point.clientY < this.lastMovedPoint.clientY) ? 'Up' : 'Down';
            this.vScrollLocked = true;
        }
    };
    Touch.prototype.getVelocity = function (pnt) {
        var newX = pnt.clientX;
        var newY = pnt.clientY;
        var newT = Date.now();
        var xDist = newX - this.startPoint.clientX;
        var yDist = newY - this.startPoint.clientX;
        var interval = newT - this.tStampStart;
        return Math.sqrt(xDist * xDist + yDist * yDist) / interval;
    };
    // eslint-disable-next-line
    Touch.prototype.checkSwipe = function (ele, flag) {
        var keys = ['scroll', 'offset'];
        var temp = flag ? ['Height', 'Top'] : ['Width', 'Left'];
        if ((ele[keys[0] + temp[0]] <= ele[keys[1] + temp[0]])) {
            return true;
        }
        return (ele[keys[0] + temp[1]] === 0) ||
            (ele[keys[1] + temp[0]] + ele[keys[0] + temp[1]] >= ele[keys[0] + temp[0]]);
    };
    Touch.prototype.updateChangeTouches = function (evt) {
        var point = evt.changedTouches && evt.changedTouches.length !== 0 ? evt.changedTouches[0] : evt;
        return point;
    };
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Event"])()
    ], Touch.prototype, "tap", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Event"])()
    ], Touch.prototype, "tapHold", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Event"])()
    ], Touch.prototype, "swipe", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Event"])()
    ], Touch.prototype, "scroll", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Property"])(350)
    ], Touch.prototype, "tapThreshold", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Property"])(750)
    ], Touch.prototype, "tapHoldThreshold", void 0);
    __decorate([
        Object(_notify_property_change__WEBPACK_IMPORTED_MODULE_1__["Complex"])({}, SwipeSettings)
    ], Touch.prototype, "swipeSettings", void 0);
    Touch = __decorate([
        _notify_property_change__WEBPACK_IMPORTED_MODULE_1__["NotifyPropertyChanges"]
    ], Touch);
    return Touch;
}(_base__WEBPACK_IMPORTED_MODULE_3__["Base"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/src/util.js ***!
  \**********************************************************************************************************/
/*! exports provided: disableBlazorMode, createInstance, setImmediate, getValue, setValue, deleteObject, isObject, getEnumValue, merge, extend, isNullOrUndefined, isUndefined, getUniqueID, debounce, queryParams, isObjectArray, compareElementParent, throwError, print, formatUnit, enableBlazorMode, isBlazor, getElement, getInstance, addInstance, uniqueID */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disableBlazorMode", function() { return disableBlazorMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInstance", function() { return createInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setImmediate", function() { return setImmediate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getValue", function() { return getValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setValue", function() { return setValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteObject", function() { return deleteObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEnumValue", function() { return getEnumValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return merge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNullOrUndefined", function() { return isNullOrUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUndefined", function() { return isUndefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUniqueID", function() { return getUniqueID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debounce", function() { return debounce; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryParams", function() { return queryParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObjectArray", function() { return isObjectArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareElementParent", function() { return compareElementParent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwError", function() { return throwError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "print", function() { return print; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatUnit", function() { return formatUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableBlazorMode", function() { return enableBlazorMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBlazor", function() { return isBlazor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return getElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getInstance", function() { return getInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addInstance", function() { return addInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uniqueID", function() { return uniqueID; });
var instances = 'ej2_instances';
var uid = 0;
var isBlazorPlatform = false;
/**
 * Function to check whether the platform is blazor or not.
 *
 * @returns {void} result
 * @private
 */
function disableBlazorMode() {
    isBlazorPlatform = false;
}
/**
 * Create Instance from constructor function with desired parameters.
 *
 * @param {Function} classFunction - Class function to which need to create instance
 * @param {any[]} params - Parameters need to passed while creating instance
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function createInstance(classFunction, params) {
    var arrayParam = params;
    arrayParam.unshift(undefined);
    return new (Function.prototype.bind.apply(classFunction, arrayParam));
}
/**
 * To run a callback function immediately after the browser has completed other operations.
 *
 * @param {Function} handler - callback function to be triggered.
 * @returns {Function} ?
 * @private
 */
function setImmediate(handler) {
    var unbind;
    // eslint-disable-next-line
    var num = new Uint16Array(5);
    var intCrypto = window.msCrypto || window.crypto;
    intCrypto.getRandomValues(num);
    var secret = 'ej2' + combineArray(num);
    // eslint-disable-next-line
    var messageHandler = function (event) {
        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {
            handler();
            unbind();
        }
    };
    window.addEventListener('message', messageHandler, false);
    window.postMessage(secret, '*');
    return unbind = function () {
        window.removeEventListener('message', messageHandler);
        handler = messageHandler = secret = undefined;
    };
}
/**
 * To get nameSpace value from the desired object.
 *
 * @param {string} nameSpace - String value to the get the inner object
 * @param {any} obj - Object to get the inner object value.
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function getValue(nameSpace, obj) {
    // eslint-disable-next-line
    var value = obj;
    var splits = nameSpace.replace(/\[/g, '.').replace(/\]/g, '').split('.');
    for (var i = 0; i < splits.length && !isUndefined(value); i++) {
        value = value[splits[i]];
    }
    return value;
}
/**
 * To set value for the nameSpace in desired object.
 *
 * @param {string} nameSpace - String value to the get the inner object
 * @param {any} value - Value that you need to set.
 * @param {any} obj - Object to get the inner object value.
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function setValue(nameSpace, value, obj) {
    var keys = nameSpace.replace(/\[/g, '.').replace(/\]/g, '').split('.');
    // eslint-disable-next-line
    var start = obj || {};
    // eslint-disable-next-line
    var fromObj = start;
    var i;
    var length = keys.length;
    var key;
    for (i = 0; i < length; i++) {
        key = keys[i];
        if (i + 1 === length) {
            fromObj[key] = value === undefined ? {} : value;
        }
        else if (isNullOrUndefined(fromObj[key])) {
            fromObj[key] = {};
        }
        fromObj = fromObj[key];
    }
    return start;
}
/**
 * Delete an item from Object
 *
 * @param {any} obj - Object in which we need to delete an item.
 * @param {string} key - String value to the get the inner object
 * @returns {void} ?
 * @private
 */
// eslint-disable-next-line
function deleteObject(obj, key) {
    delete obj[key];
}
/**
 * Check weather the given argument is only object.
 *
 * @param {any} obj - Object which is need to check.
 * @returns {boolean} ?
 * @private
 */
// eslint-disable-next-line
function isObject(obj) {
    var objCon = {};
    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);
}
/**
 * To get enum value by giving the string.
 *
 * @param {any} enumObject - Enum object.
 * @param {string} enumValue - Enum value to be searched
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function getEnumValue(enumObject, enumValue) {
    // eslint-disable-next-line
    return enumObject[enumValue];
}
/**
 * Merge the source object into destination object.
 *
 * @param {any} source - source object which is going to merge with destination object
 * @param {any} destination - object need to be merged
 * @returns {void} ?
 * @private
 */
function merge(source, destination) {
    if (!isNullOrUndefined(destination)) {
        var temrObj = source;
        var tempProp = destination;
        var keys = Object.keys(destination);
        var deepmerge = 'deepMerge';
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            if (!isNullOrUndefined(temrObj[deepmerge]) && (temrObj[deepmerge].indexOf(key) !== -1) &&
                (isObject(tempProp[key]) || Array.isArray(tempProp[key]))) {
                extend(temrObj[key], temrObj[key], tempProp[key], true);
            }
            else {
                temrObj[key] = tempProp[key];
            }
        }
    }
}
/**
 * Extend the two object with newer one.
 *
 * @param {any} copied - Resultant object after merged
 * @param {Object} first - First object need to merge
 * @param {Object} second - Second object need to merge
 * @param {boolean} deep ?
 * @returns {Object} ?
 * @private
 */
function extend(copied, first, second, deep) {
    var result = copied && typeof copied === 'object' ? copied : {};
    var length = arguments.length;
    if (deep) {
        length = length - 1;
    }
    var _loop_1 = function (i) {
        // eslint-disable-next-line
        if (!arguments_1[i]) {
            return "continue";
        }
        // eslint-disable-next-line
        var obj1 = arguments_1[i];
        Object.keys(obj1).forEach(function (key) {
            var src = result[key];
            var copy = obj1[key];
            var clone;
            var isArrayChanged = Array.isArray(copy) && Array.isArray(src) && (copy.length !== src.length);
            // eslint-disable-next-line
            var blazorEventExtend = isBlazor() ? (!(src instanceof Event) && !isArrayChanged) : true;
            if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {
                if (isObject(copy)) {
                    clone = src ? src : {};
                    // eslint-disable-next-line
                    if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {
                        extend(clone, {}, copy, deep);
                    }
                    else {
                        result[key] = extend(clone, {}, copy, deep);
                    }
                }
                else {
                    /* istanbul ignore next */
                    clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];
                    result[key] = extend([], clone, copy, deep);
                }
            }
            else {
                result[key] = copy;
            }
        });
    };
    var arguments_1 = arguments;
    for (var i = 1; i < length; i++) {
        _loop_1(i);
    }
    return result;
}
/**
 * To check whether the object is null or undefined.
 *
 * @param {Object} value - To check the object is null or undefined
 * @returns {boolean} ?
 * @private
 */
function isNullOrUndefined(value) {
    return value === undefined || value === null;
}
/**
 * To check whether the object is undefined.
 *
 * @param {Object} value - To check the object is undefined
 * @returns {boolean} ?
 * @private
 */
function isUndefined(value) {
    return ('undefined' === typeof value);
}
/**
 * To return the generated unique name
 *
 * @param {string} definedName - To concatenate the unique id to provided name
 * @returns {string} ?
 * @private
 */
function getUniqueID(definedName) {
    return definedName + '_' + uid++;
}
/**
 * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.
 *
 * @param {Function} eventFunction - Specifies the function to run when the event occurs
 * @param {number} delay - A number that specifies the milliseconds for function delay call option
 * @returns {Function} ?
 * @private
 */
function debounce(eventFunction, delay) {
    // eslint-disable-next-line
    var out;
    return function () {
        var _this = this;
        // eslint-disable-next-line
        var args = arguments;
        var later = function () {
            out = null;
            return eventFunction.apply(_this, args);
        };
        clearTimeout(out);
        out = setTimeout(later, delay);
    };
}
/**
 * To convert the object to string for query url
 *
 * @param  {Object} data ?
 * @returns {string} ?
 * @private
 */
// eslint-disable-next-line
function queryParams(data) {
    var array = [];
    var keys = Object.keys(data);
    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {
        var key = keys_2[_i];
        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[key]));
    }
    return array.join('&');
}
/**
 * To check whether the given array contains object.
 *
 * @param {any} value - Specifies the T type array to be checked.
 * @returns {boolean} ?
 * @private
 */
function isObjectArray(value) {
    var parser = Object.prototype.toString;
    if (parser.call(value) === '[object Array]') {
        if (parser.call(value[0]) === '[object Object]') {
            return true;
        }
    }
    return false;
}
/**
 * To check whether the  child element is descendant to parent element or parent and child are same element.
 *
 * @param {Element} child - Specifies the child element to compare with parent.
 * @param {Element} parent - Specifies the parent element.
 * @returns {boolean} ?
 * @private
 */
function compareElementParent(child, parent) {
    var node = child;
    if (node === parent) {
        return true;
    }
    else if (node === document || !node) {
        return false;
    }
    else {
        return compareElementParent(node.parentNode, parent);
    }
}
/**
 * To throw custom error message.
 *
 * @param {string} message - Specifies the error message to be thrown.
 * @returns {void} ?
 * @private
 */
function throwError(message) {
    try {
        throw new Error(message);
    }
    catch (e) {
        // eslint-disable-next-line
        throw e.message + '\n' + e.stack;
    }
}
/**
 * This function is used to print given element
 *
 * @param {Element} element - Specifies the print content element.
 * @param {Window} printWindow - Specifies the print window.
 * @returns {Window} ?
 * @private
 */
function print(element, printWindow) {
    var div = document.createElement('div');
    var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));
    var blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));
    if (blinks.length) {
        for (var l = 0, len = blinks.length; l < len; l++) {
            links.push(blinks[l]);
        }
    }
    var reference = '';
    if (isNullOrUndefined(printWindow)) {
        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');
    }
    div.appendChild(element.cloneNode(true));
    for (var i = 0, len = links.length; i < len; i++) {
        reference += links[i].outerHTML;
    }
    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +
        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');
    printWindow.document.close();
    printWindow.focus();
    // eslint-disable-next-line
    var interval = setInterval(function () {
        if (printWindow.ready) {
            printWindow.print();
            printWindow.close();
            clearInterval(interval);
        }
    }, 500);
    return printWindow;
}
/**
 * Function to normalize the units applied to the element.
 *
 * @param {number|string} value ?
 * @returns {string} result
 * @private
 */
function formatUnit(value) {
    var result = value + '';
    if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {
        return result;
    }
    return result + 'px';
}
/**
 * Function to check whether the platform is blazor or not.
 *
 * @returns {void} result
 * @private
 */
function enableBlazorMode() {
    isBlazorPlatform = true;
}
/**
 * Function to check whether the platform is blazor or not.
 *
 * @returns {boolean} result
 * @private
 */
function isBlazor() {
    return isBlazorPlatform;
}
/**
 * Function to convert xPath to DOM element in blazor platform
 *
 * @returns {HTMLElement} result
 * @param {HTMLElement | object} element ?
 * @private
 */
function getElement(element) {
    var xPath = 'xPath';
    if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[xPath])) {
        return document.evaluate(element[xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
    }
    return element;
}
/**
 * Function to fetch the Instances of a HTML element for the given component.
 *
 * @param {string | HTMLElement} element ?
 * @param {any} component ?
 * @returns {Object} ?
 * @private
 */
// eslint-disable-next-line
function getInstance(element, component) {
    // eslint-disable-next-line
    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;
    if (elem[instances]) {
        for (var _i = 0, _a = elem[instances]; _i < _a.length; _i++) {
            var inst = _a[_i];
            if (inst instanceof component) {
                return inst;
            }
        }
    }
    return null;
}
/**
 * Function to add instances for the given element.
 *
 * @param {string | HTMLElement} element ?
 * @param {Object} instance ?
 * @returns {void} ?
 * @private
 */
function addInstance(element, instance) {
    // eslint-disable-next-line
    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;
    if (elem[instances]) {
        elem[instances].push(instance);
    }
    else {
        elem[instances] = [instance];
    }
}
/**
 * Function to generate the unique id.
 *
 * @returns {any} ?
 * @private
 */
// eslint-disable-next-line
function uniqueID() {
    if ((typeof window) === 'undefined') {
        return;
    }
    // eslint-disable-next-line
    var num = new Uint16Array(5);
    var intCrypto = window.msCrypto || window.crypto;
    return intCrypto.getRandomValues(num);
}
/**
 *
 * @param {Int16Array} num ?
 * @returns {string} ?
 */
function combineArray(num) {
    var ret = '';
    for (var i = 0; i < 5; i++) {
        ret += (i ? ',' : '') + num[i];
    }
    return ret;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/index.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/index.js ***!
  \****************************************************************************************************************/
/*! exports provided: CircularGauge, Annotations, Line, Label, Range, Tick, Cap, NeedleTail, Animation, Annotation, Pointer, Axis, Border, Font, RangeTooltip, AnnotationTooltip, Margin, TooltipSettings, GaugeTooltip, measureText, toPixel, getFontStyle, textElement, appendPath, isCompleteAngle, getDegree, getAngleFromValue, getAngleFromLocation, getLocationFromAngle, getPathArc, arcPath, arcRoundedPath, arcWidthPath, getRangePath, arcWidthPathCalculation, roundedArcWidthPathCalculation, getRoundedPathArc, getCirclePath, getTemplateFunction, removeElement, getElement, stringToNumber, getPointer, getLabelFormat, calculateShapes, CustomizeOption, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption, VisibleLabels, getRangeColor, calculateSum, setStyles, getValueFromAngle, getRange, textTrim, showTooltip, linear, getCompleteArc, getCompletePath, getMousePosition, getElementSize, Location, LegendSettings, Legend, Index, LegendOptions, ImageExport, PdfExport, Print, ColorStop, GradientPosition, LinearGradient, RadialGradient, Gradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CircularGauge", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CircularGauge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotations", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Annotations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Line"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Label"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Tick"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Cap", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Cap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NeedleTail", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["NeedleTail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Annotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pointer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Pointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Axis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Border", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Border"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Font", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeTooltip", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RangeTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnnotationTooltip", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["AnnotationTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Margin", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Margin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipSettings", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TooltipSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeTooltip", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["GaugeTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["measureText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPixel", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["toPixel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFontStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getFontStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["textElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "appendPath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["appendPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCompleteAngle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDegree", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getDegree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromValue", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromLocation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getAngleFromLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLocationFromAngle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPathArc", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcPath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["arcPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcRoundedPath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["arcRoundedPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["arcWidthPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangePath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getRangePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPathCalculation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["arcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundedArcWidthPathCalculation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["roundedArcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRoundedPathArc", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getRoundedPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCirclePath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getCirclePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTemplateFunction", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getTemplateFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["removeElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringToNumber", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPointer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getPointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLabelFormat", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getLabelFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CustomizeOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PathOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectOption", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RectOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeLocation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["GaugeLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Rect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TextOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisibleLabels", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["VisibleLabels"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangeColor", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getRangeColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateSum", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["calculateSum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setStyles", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["setStyles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getValueFromAngle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getValueFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRange", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textTrim", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["textTrim"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "showTooltip", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["showTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["linear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompleteArc", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getCompleteArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompletePath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getCompletePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMousePosition", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getMousePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElementSize", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getElementSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Location"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["LegendSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Legend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendOptions", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["LegendOptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageExport", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ImageExport"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfExport", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfExport"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Print", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Print"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorStop", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ColorStop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GradientPosition", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["GradientPosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinearGradient", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["LinearGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadialGradient", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RadialGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Gradient"]; });

/**
 * index
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/annotations/annotations.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/annotations/annotations.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: Annotations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Annotations", function() { return Annotations; });
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _model_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../model/constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");



/**
 * Annotation Module handles the Annotation of the axis.
 */
var Annotations = /** @class */ (function () {
    /**
     * Constructor for Annotation module.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @private.
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function Annotations(gauge) {
        this.gauge = gauge;
        this.elementId = gauge.element.id;
    }
    // eslint-disable-next-line valid-jsdoc
    /**
     * Method to render the annotation for circular gauge.
     */
    Annotations.prototype.renderAnnotation = function (axis, index) {
        var _this = this;
        var width = this.gauge.availableSize.width;
        var element = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["createElement"])('div', {
            id: this.elementId + '_Annotations_' + index
        });
        var parentElement = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getElement"])(this.elementId + '_Secondary_Element');
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(document.getElementById(this.elementId + '_Secondary_Element'))) {
            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';
        }
        axis.annotations.map(function (annotation, annotationIndex) {
            if (annotation.content !== null) {
                _this.createTemplate(element, annotationIndex, index);
            }
        });
        if (parentElement && element.childElementCount) {
            parentElement.appendChild(element);
        }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.gauge.renderReactTemplates();
    };
    // eslint-disable-next-line valid-jsdoc
    /**
     * Method to create annotation template for circular gauge.
     */
    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {
        var _this = this;
        var axis = this.gauge.axes[axisIndex];
        var annotation = axis.annotations[annotationIndex];
        var childElement = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["createElement"])('div', {
            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,
            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +
                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'
        });
        var argsData = {
            cancel: false, name: _model_constants__WEBPACK_IMPORTED_MODULE_1__["annotationRender"], content: annotation.content,
            axis: axis, annotation: annotation, textStyle: annotation.textStyle
        };
        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var templateFn;
            var templateElement;
            if (!argsData.cancel) {
                templateFn = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getTemplateFunction"])(argsData.content, _this.gauge);
                if (templateFn && templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {
                    templateElement = Array.prototype.slice.call(templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));
                    var length_1 = templateElement.length;
                    for (var i = 0; i < length_1; i++) {
                        childElement.appendChild(templateElement[i]);
                    }
                }
                else {
                    childElement.appendChild(Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["createElement"])('div', {
                        innerHTML: argsData.content,
                        id: 'StringTemplate',
                        styles: Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getFontStyle"])(argsData.textStyle)
                    }));
                }
                _this.updateLocation(childElement, axis, annotation);
                element.appendChild(childElement);
                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');
            }
        });
    };
    /**
     * Method to update the annotation location for circular gauge.
     *
     * @param {HTMLElement} element - Specifies the element.
     * @param {Axis} axis - Specifies the axis.
     * @param {Annotation} annotation - Specifies the annotation.
     * @returns {void}
     */
    Annotations.prototype.updateLocation = function (element, axis, annotation) {
        var location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(annotation.angle - 90, Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(annotation.radius, axis.currentRadius), this.gauge.midPoint);
        var elementRect = this.measureElementRect(element);
        element.style.left = (location.x - (elementRect.width / 2)) + 'px';
        element.style.top = (location.y - (elementRect.height / 2)) + 'px';
        element.setAttribute('aria-label', annotation.description || 'Annotation');
    };
    /**
     * Get module name.
     *
     * @returns {string} - Returns the module name
     */
    Annotations.prototype.getModuleName = function () {
        // Returns te module name
        return 'Annotations';
    };
    /**
     * To destroy the annotation.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @returns {void}
     * @private
     */
    Annotations.prototype.destroy = function (gauge) {
        // Destroy method performed here
    };
    /**
    * Function to measure the element rect.
    *
    * @param {HTMLElement} element - Specifies the html element.
    * @returns {ClientRect} - Returns the client rect.
    * @private
    */
    Annotations.prototype.measureElementRect = function (element) {
        document.body.appendChild(element);
        var bounds = element.getBoundingClientRect();
        Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["removeElement"])(element.id);
        return bounds;
    };
    return Annotations;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis-panel.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis-panel.js ***!
  \*********************************************************************************************************************************************/
/*! exports provided: AxisLayoutPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLayoutPanel", function() { return AxisLayoutPanel; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _utils_helper_axis_panel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/helper-axis-panel */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-panel.js");
/* harmony import */ var _model_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model/constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js");
/* harmony import */ var _axis_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./axis-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis-renderer.js");
/* harmony import */ var _pointer_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pointer-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/pointer-renderer.js");






/**
 * Specifies the CircularGauge Axis Layout
 */
var AxisLayoutPanel = /** @class */ (function () {
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function AxisLayoutPanel(gauge) {
        this.gauge = gauge;
        this.axisRenderer = new _axis_renderer__WEBPACK_IMPORTED_MODULE_4__["AxisRenderer"](gauge);
        this.pointerRenderer = new _pointer_renderer__WEBPACK_IMPORTED_MODULE_5__["PointerRenderer"](gauge);
    }
    /**
     * Measure the calculate the axis size and radius.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.measureAxis = function (rect) {
        this.measureAxisSize(this.gauge, rect);
        this.calculateAxesRadius();
    };
    /**
     * Measure to calculate the axis radius of the circular gauge.
     *
     * @returns {void}
     * @private
     */
    AxisLayoutPanel.prototype.calculateAxesRadius = function () {
        var _this = this;
        var totalRadius;
        var currentRadius;
        var rangeMaximumRadius = 0;
        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;
        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;
        var _loop_1 = function (axis) {
            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);
            currentRadius = axis.radius != null ? Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["stringToNumber"])(axis.radius, totalRadius) : totalRadius;
            // eslint-disable-next-line prefer-spread
            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {
                return value.radius ?
                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;
            }));
            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?
                (currentRadius * 100) / rangeMaximumRadius : currentRadius;
            axis.currentRadius = currentRadius - axis.nearSize;
            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this_1.gauge.centerXpoint) && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this_1.gauge.centerYpoint)) {
                var endAngle = void 0;
                var startAngle = axis.startAngle;
                var startPoint = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(startAngle - 90, currentRadius, this_1.gauge.midPoint);
                endAngle = axis.endAngle;
                endAngle -= Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["isCompleteAngle"])(startAngle, endAngle) ? 0.0001 : 0;
                var endPoint = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(endAngle - 90, currentRadius, this_1.gauge.midPoint);
                var xDiff = void 0;
                var yDiff = void 0;
                var startXDiff = void 0;
                var endXDiff = void 0;
                var startYDiff = void 0;
                var endYDiff = void 0;
                var newPoint = void 0;
                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {
                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||
                        (endAngle >= 0 && endAngle <= 180))) {
                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));
                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :
                            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(90 - 90, currentRadius, this_1.gauge.midPoint);
                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);
                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :
                            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(360 - 90, currentRadius, this_1.gauge.midPoint);
                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);
                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?
                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :
                            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(180 - 90, currentRadius, this_1.gauge.midPoint);
                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));
                    }
                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {
                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);
                        newPoint = (endAngle >= 180) ? Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(180 - 90, currentRadius, this_1.gauge.midPoint) :
                            endPoint;
                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));
                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;
                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));
                        endPoint = (endAngle >= 90) ? Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;
                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);
                    }
                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {
                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?
                            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;
                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);
                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);
                        startPoint = (endAngle > 270) ? Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(endAngle - 90, currentRadius, this_1.gauge.midPoint) :
                            this_1.gauge.midPoint;
                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);
                        endPoint = (endAngle >= 180) ? Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;
                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));
                    }
                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||
                        (endAngle <= 180 && endAngle >= 0))) {
                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :
                            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(270 - 90, currentRadius, this_1.gauge.midPoint);
                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));
                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :
                            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(0, currentRadius, this_1.gauge.midPoint);
                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);
                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?
                            endPoint : Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(360 - 90, currentRadius, this_1.gauge.midPoint);
                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);
                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?
                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;
                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));
                    }
                    if ((!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(startXDiff) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(endXDiff) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(startYDiff) &&
                        !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {
                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);
                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);
                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);
                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);
                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +
                            (Math.min(xDiff, yDiff) / 2);
                        axis.currentRadius = (axis.radius != null ? Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["stringToNumber"])(axis.radius, totalRadius) : totalRadius) - axis.nearSize;
                    }
                }
            }
            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);
            var args = {
                cancel: false, name: _model_constants__WEBPACK_IMPORTED_MODULE_3__["radiusCalculate"], currentRadius: axis.currentRadius, gauge: this_1.gauge,
                midPoint: this_1.gauge.midPoint, axis: axis
            };
            this_1.gauge.trigger('radiusCalculate', args, function () {
                axis.currentRadius = args.currentRadius;
                _this.gauge.midPoint = args.midPoint;
                _this.calculateVisibleLabels(axis);
            });
        };
        var this_1 = this;
        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {
            var axis = _a[_i];
            _loop_1(axis);
        }
    };
    /**
     * Measure to calculate the axis size.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {
        var _this = this;
        var sum;
        this.computeSize(gauge.axes, rect);
        gauge.axes.map(function (axis, index) {
            sum = Object(_utils_helper_axis_panel__WEBPACK_IMPORTED_MODULE_2__["calculateSum"])(index, _this.farSizes.length - 1, _this.farSizes);
            axis.rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));
        });
    };
    /**
     * Calculate the axis values of the circular gauge.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {
        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {
            var axis = _a[_i];
            this.calculateVisibleRange(axis, rect);
            this.calculateVisibleLabels(axis);
        }
    };
    /**
     * Calculate the visible range of an axis.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {Rect} rect - Specifies the rect.
     * @returns {void}
     * @private
     */
    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {
        var interval = axis.majorTicks.interval;
        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);
        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);
        axis.pointers.map(function (pointer) {
            pointer.currentValue = pointer.value !== null ?
                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value
                : minimumValue;
            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;
            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;
        });
        minimumValue = (minimumValue === maximumValue) ?
            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;
        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };
        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);
    };
    /**
     * Calculate the numeric intervals of an axis range.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {
        var allowComponentRender = ((!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.minimum) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.maximum) && axis.minimum !== axis.maximum) || (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.minimum) || Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.maximum)));
        if (!allowComponentRender) {
            return 0;
        }
        else if (axis.majorTicks.interval !== null) {
            return axis.majorTicks.interval;
        }
        var totalAngle = axis.endAngle - axis.startAngle;
        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;
        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);
    };
    /**
     * Calculate the nice interval of an axis range.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {
        var delta = maxValue - minValue;
        var circumference = 2 * Math.PI * radius * (degree / 360);
        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);
        var niceInterval = delta / desiredIntervalsCount;
        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));
        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {
            var interval = _a[_i];
            var currentInterval = minInterval * interval;
            if (desiredIntervalsCount < (delta / currentInterval)) {
                break;
            }
            niceInterval = currentInterval;
        }
        return niceInterval;
    };
    /**
     * Calculate the visible labels of an axis.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {
        var style = axis.labelStyle;
        var customLabelFormat = style.format && style.format.match('{value}') !== null;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var format = this.gauge.intl.getNumberFormat({
            format: Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLabelFormat"])(style.format), useGrouping: this.gauge.useGroupingSeparator
        });
        var argsData;
        axis.visibleLabels = [];
        var roundValue;
        var interval = axis.visibleRange.interval;
        var max = axis.visibleRange.max;
        if ((Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.minimum) && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.maximum)) || axis.minimum !== axis.maximum) {
            var _loop_2 = function (i) {
                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;
                argsData = {
                    cancel: false, name: _model_constants__WEBPACK_IMPORTED_MODULE_3__["axisLabelRender"], axis: axis,
                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :
                        format(roundValue),
                    value: roundValue
                };
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                var axisLabelRenderSuccess = function (argsData) {
                    if (!argsData.cancel) {
                        axis.visibleLabels.push(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["VisibleLabels"](argsData.text, i));
                    }
                };
                axisLabelRenderSuccess.bind(this_2);
                this_2.gauge.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_3__["axisLabelRender"], argsData, axisLabelRenderSuccess);
            };
            var this_2 = this;
            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {
                _loop_2(i);
            }
        }
        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;
        var maxVal = axis.visibleRange.max;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {
            argsData = {
                cancel: false, name: _model_constants__WEBPACK_IMPORTED_MODULE_3__["axisLabelRender"], axis: axis,
                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :
                    format(maxVal),
                value: maxVal
            };
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var axisLabelRenderSuccess = function (argsData) {
                if (!argsData.cancel) {
                    axis.visibleLabels.push(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["VisibleLabels"](argsData.text, maxVal));
                }
            };
            axisLabelRenderSuccess.bind(this);
            this.gauge.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_3__["axisLabelRender"], argsData, axisLabelRenderSuccess);
        }
        this.getMaxLabelWidth(this.gauge, axis);
    };
    /**
     * Measure the axes available size.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {
        var lineSize;
        var outerHeight;
        var innerHeight;
        var heightForCross;
        var axisPadding = 5;
        var majorTickOffset = 0;
        var minorTickOffset = 0;
        var labelOffset = 0;
        var labelPadding = 10;
        this.farSizes = [];
        this.calculateAxisValues(rect);
        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {
            var axis = axes_1[_i];
            lineSize = (axis.lineStyle.width / 2);
            outerHeight = 0;
            innerHeight = 0;
            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;
            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?
                axis.minorTicks.height / 2 : heightForCross;
            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?
                axis.maxLabelSize.height / 2 : heightForCross;
            lineSize = lineSize < heightForCross ? heightForCross : lineSize;
            majorTickOffset = axis.majorTicks.offset;
            minorTickOffset = axis.minorTicks.offset;
            labelOffset = axis.labelStyle.offset;
            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;
            // Calculating the outer space of the axis
            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&
                axis.labelStyle.position === 'Outside') ? axisPadding : 0;
            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +
                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +
                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?
                    (axis.minorTicks.height + lineSize) : 0) + lineSize;
            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?
                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?
                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);
            // Calculating the inner space of the axis
            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +
                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +
                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?
                    (axis.minorTicks.height + lineSize) : 0) + lineSize;
            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?
                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?
                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);
            if (this.farSizes[this.farSizes.length - 1]) {
                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);
            }
            axis.nearSize = outerHeight - axisPadding;
            axis.farSize = innerHeight;
            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;
            this.farSizes.push(outerHeight);
        }
    };
    /**
     * To render the Axis element of the circular gauge.
     *
     * @return {void}
     * @private
     */
    AxisLayoutPanel.prototype.renderAxes = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var gauge = this.gauge;
        var renderer = this.axisRenderer;
        var element;
        var axesElements = gauge.renderer.createGroup({
            'id': gauge.element.id + '_AxesCollection',
            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'
        });
        // To append the secondary element for annotation and tooltip
        gauge.element.appendChild(Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('div', {
            id: gauge.element.id + '_Secondary_Element',
            styles: 'position: relative'
        }));
        gauge.axes.map(function (axis, index) {
            element = gauge.renderer.createGroup({
                id: gauge.element.id + '_Axis_Group_' + index
            });
            _this.gauge.allowComponentRender = ((!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.minimum) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.maximum) && axis.minimum !== axis.maximum) || (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.minimum) || Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(axis.maximum)));
            renderer.checkAngles(axis);
            renderer.drawAxisOuterLine(axis, index, element, gauge);
            renderer.drawAxisRange(axis, index, element);
            renderer.drawAxisLine(axis, index, element, gauge);
            renderer.drawMajorTickLines(axis, index, element, gauge);
            renderer.drawMinorTickLines(axis, index, element, gauge);
            renderer.drawAxisLabels(axis, index, element, gauge);
            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);
            if (gauge.annotationsModule) {
                gauge.annotationsModule.renderAnnotation(axis, index);
            }
            axesElements.appendChild(element);
        });
        // For append clip rect for axes
        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({
            'id': gauge.element.id + '_GaugeAreaClipRect_',
            'x': 0, 'y': 0,
            'width': gauge.availableSize.width,
            'height': gauge.availableSize.height,
            'fill': 'transparent', 'stroke': 'transparent'
        }));
        gauge.svgObject.appendChild(axesElements);
    };
    /**
     * Calculate maximum label width for the axis.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @param {Axis} axis - Specifies the axis.
     * @returns {void}
     */
    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {
        axis.maxLabelSize = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Size"](0, 0);
        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {
            var label = _a[_i];
            label.size = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["measureText"])(label.text, axis.labelStyle.font);
            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?
                label.size.width : axis.maxLabelSize.width;
            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?
                label.size.height : axis.maxLabelSize.height;
        }
    };
    return AxisLayoutPanel;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis-renderer.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis-renderer.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: AxisRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRenderer", function() { return AxisRenderer; });
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _utils_helper_axis_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper-axis-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-renderer.js");
/* harmony import */ var _model_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../model/theme */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/theme.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");




/**
 * Specifies the Axis rendering for circular gauge
 */
var AxisRenderer = /** @class */ (function () {
    /**
     * Constructor for axis renderer.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge
     * @private.
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function AxisRenderer(gauge) {
        this.gauge = gauge;
    }
    /**
     * Method to render the axis element of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {number} index - Specifies the index.
     * @param {Element} element - Specifies the element.
     * @param {CircularGauge} gauge - Specifies the gauge.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {
        var background = axis.background;
        this.setRangeColor(axis);
        if (background !== null) {
            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getPathArc"])(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);
        }
    };
    /**
     * Method to check the angles.
     *
     * @param {Axis} axis - Specifies the axis.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.checkAngles = function (axis) {
        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;
        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;
    };
    /**
     * Method to render the axis line of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {number} index - Specifies the index.
     * @param {Element} element - Specifies the element.
     * @param {CircularGauge} gauge - Specifies the gauge.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {
        var startAngle = axis.startAngle;
        var endAngle = axis.endAngle;
        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;
        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {
            startAngle = !Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];
            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getPathArc"])(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);
        }
    };
    /**
     * Method to render the axis labels of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {number} index - Specifies the index.
     * @param {Element} element - Specifies the element.
     * @param {CircularGauge} gauge - Specifies the gauge.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {
        var labelElement = gauge.renderer.createGroup({
            id: gauge.element.id + '_Axis_Labels_' + index
        });
        var min = axis.visibleRange.min;
        var max = axis.visibleRange.max;
        var labelCollection = axis.visibleLabels;
        var location;
        var textWidth;
        var textHeight;
        var labelsVisible = true;
        var currentTextWidth;
        var currentTextHeight;
        var previousLocation;
        var currentLocation;
        var lastLabelLocation;
        var lastLabelAngle;
        var lastLabelAnchor;
        var lastTextWidth;
        var lastTextHeight;
        var style = axis.labelStyle;
        var anchor;
        var angle;
        var label;
        var radius = axis.currentRadius;
        var checkLabelOpposed = 0;
        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&
            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&
            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?
            axis.lineStyle.width + axis.currentRadius / 20 :
            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);
        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;
        var color = style.font.color || this.gauge.themeStyle.labelColor;
        if (style.position === 'Outside') {
            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);
        }
        else if (style.position === 'Cross') {
            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;
        }
        else {
            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));
        }
        //To get and store lastlabelposition
        if (axis.hideIntersectingLabel) {
            lastLabelAngle = Math.round(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));
            lastLabelLocation = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(lastLabelAngle, radius, gauge.midPoint);
            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);
            lastTextWidth = (!axis.showLastLabel && (Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?
                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;
            lastTextHeight = (!axis.showLastLabel && (Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?
                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :
                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :
                    labelCollection[labelCollection.length - 1].size.width);
            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);
            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);
        }
        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {
            label = labelCollection[i];
            angle = Math.round(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));
            location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(angle, radius, gauge.midPoint);
            anchor = this.findAnchor(location, style, angle, label);
            //To get the current label and previous label position for initial stage
            if (axis.hideIntersectingLabel) {
                currentLocation = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(angle, radius, gauge.midPoint);
                currentTextWidth = label.size.width;
                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;
                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);
                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);
                if (i === 0) {
                    previousLocation = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(angle, radius, gauge.midPoint);
                    textWidth = label.size.width;
                    textHeight = !style.autoAngle ? label.size.height : textWidth;
                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);
                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);
                }
            }
            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {
                continue;
            }
            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;
            if (axis.hideIntersectingLabel && (i !== 0)) {
                //To remove the labels which is intersecting with last label.
                var lastlabel = ((i !== (labelCollection.length - 1)) && ((Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(axis.startAngle, axis.endAngle) ||
                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;
                //Checking wether the axis label is intersecting with previous label or not.
                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);
            }
            else {
                labelsVisible = true;
            }
            if (labelsVisible || (i === labelCollection.length - 1)) {
                //To hide first and last label based on requirement
                label.text = (!axis.showLastLabel && ((Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||
                    !labelsVisible)
                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;
                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(axis.startAngle, axis.endAngle)
                    && (i === 0)) ? '' : label.text;
                Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["textElement"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["TextOption"](gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? Object(_utils_helper_axis_renderer__WEBPACK_IMPORTED_MODULE_1__["getRangeColor"])(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');
                if (axis.hideIntersectingLabel) {
                    textWidth = label.size.width;
                    textHeight = !style.autoAngle ? label.size.height : textWidth;
                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);
                    previousLocation.x = currentLocation.x;
                    previousLocation.y = currentLocation.y;
                }
            }
        }
        element.appendChild(labelElement);
    };
    /**
     * Method to find the anchor of the axis label.
     *
     * @param {GaugeLocation} location - Specifies the location.
     * @param {Label} style - Specifies the label style.
     * @param {number} angle - Specifies the angle.
     * @param {VisibleLabels} label - Specifies the labels.
     * @returns {string} - Returns the anchor.
     * @private
     */
    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {
        if (style.autoAngle) {
            return 'middle';
        }
        var anchor = style.position === 'Inside' ?
            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :
            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));
        location.y += style.position === 'Inside' ?
            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :
                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :
            ((angle >= 240 && angle <= 300) ? 0 :
                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);
        return anchor;
    };
    /**
     * Methode to check whether the labels are intersecting or not.
     *
     * @param {GaugeLocation} previousLocation - Specifies the previous location.
     * @param {number} previousWidth - Specifies the previous width.
     * @param {number} previousHeight - Specifies the previous height.
     * @param {GaugeLocation} currentLocation - Specifies the current location.
     * @param {number} currentWidth - Specifies the current width.
     * @param {number} currentHeight - Specifies the current height.
     * @returns {boolean} - Returns the boolean value.
     * @private
     */
    // eslint-disable-next-line @typescript-eslint/naming-convention
    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {
        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||
            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||
            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||
            ((previousLocation.y) > (currentLocation.y + (currentHeight))));
        return labelVisisble;
    };
    /**
     * Methode to get anchor position of label as start.
     *
     * @param {GaugeLocation} actualLocation - Specifies the actual location.
     * @param {number} textWidth - Specifies the text width.
     * @param {Label} style - Specifies the label style.
     * @param {number} textHeight - Specifies the text height.
     * @param {string} anchorPosition - Specifies the anchor position.
     * @param {number} angle - Specifies the angle.
     * @returns {GaugeLocation} - Returns the gauge location.
     * @private
     */
    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {
        if (anchorPosition === 'end') {
            actualLocation.x = actualLocation.x - textWidth;
        }
        else if (anchorPosition === 'middle') {
            actualLocation.x = actualLocation.x - (textWidth / 2);
        }
        return actualLocation;
    };
    /**
     * Methode to offset label height and width based on angle.
     *
     * @param {number} angle - Specifies the angle.
     * @param {number} size - Specifies the size.
     * @returns {number} - Returns the fineal size.
     * @private
     */
    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {
        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||
            (angle >= 300 && angle <= 340)) ? size / 5 : 0;
        return finalSize;
    };
    /**
     * Method to render the axis minor tick lines of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {number} index - Specifies the index.
     * @param {Element} element - Specifies the element.
     * @param {CircularGauge} gauge - Specifies the gauge.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {
        var minorTickElements = gauge.renderer.createGroup({
            id: gauge.element.id + '_Axis_MinorTickLines_' + index
        });
        var minorLineStyle = axis.minorTicks;
        var minorInterval = minorLineStyle.interval !== null ?
            minorLineStyle.interval : (axis.visibleRange.interval / 2);
        var isRangeColor = minorLineStyle.useRangeColor;
        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;
        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {
            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {
                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {
                    Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? Object(_utils_helper_axis_renderer__WEBPACK_IMPORTED_MODULE_1__["getRangeColor"])(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);
                }
            }
            element.appendChild(minorTickElements);
        }
    };
    /**
     * Method to render the axis major tick lines of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {number} index - Specifies the index.
     * @param {Element} element - Specifies the element.
     * @param {CircularGauge} gauge - Specifies the gauge.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {
        var majorTickElements = gauge.renderer.createGroup({
            id: gauge.element.id + '_Axis_MajorTickLines_' + index
        });
        var majorLineStyle = axis.majorTicks;
        var isRangeColor = majorLineStyle.useRangeColor;
        this.majorValues = [];
        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;
        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {
            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {
                this.majorValues.push(+i.toFixed(3));
                Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? Object(_utils_helper_axis_renderer__WEBPACK_IMPORTED_MODULE_1__["getRangeColor"])(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);
            }
            element.appendChild(majorTickElements);
        }
    };
    /**
     * Method to calcualte the tick elements for the circular gauge.
     *
     * @param {number} value - Specifies the value.
     * @param {Tick} options - Specifies the options.
     * @param {Axis} axis - Specifies the axis.
     * @returns {string} - Returns the string.
     * @private
     */
    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {
        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;
        var angle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');
        var start = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(angle, axis.currentRadius +
            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?
                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);
        var end = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(angle, axis.currentRadius +
            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?
                options.height / 2 - options.offset : -axisLineWidth) +
            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);
        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';
    };
    /**
     * Method to render the range path of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {Range} range - Specifies the range.
     * @param {number} startWidth - Specifies the startwidth for the range.
     * @param {number} endWidth - Specifies the endwidth for the range.
     * @param {number} rangeIndex - Specifies the index of the range.
     * @param {number} index - Specifies the index of the axis.
     * @param {Element} rangeElement - Specifies the element.
     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.
     * @returns {void}
     * @private
     */
    /* eslint-disable @typescript-eslint/dot-notation */
    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {
        var startValue;
        var direction;
        var endValue;
        var location = this.gauge.midPoint;
        var startAngle;
        var endAngle;
        var isClockWise = axis.direction === 'ClockWise';
        var min = axis.visibleRange.min;
        var max = axis.visibleRange.max;
        var roundedStartAngle;
        var roundedEndAngle;
        var oldStart;
        var oldEnd;
        var gradientRangeColor;
        if (range.isLinearCircularGradient) {
            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);
            var rangeStart = range.linearGradient.colorStop.length > 1 ?
                (range.start + (rangeSplitValue * (colorIndex))) : range.start;
            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;
            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);
            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);
        }
        else {
            startValue = Math.min(Math.max(range.start, min), range.end);
            endValue = Math.min(Math.max(range.start, range.end), max);
        }
        startAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);
        endAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);
        var isAngleCross360 = (startAngle > endAngle);
        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end
            || (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient) && !range.isLinearCircularGradient
                && (colorIndex === range.linearGradient.colorStop.length - 1))) {
            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :
                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?
                    startAngle - (axis.rangeGap / Math.PI) :
                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient
                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;
            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :
                !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1
                    && range.isLinearCircularGradient ?
                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :
                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?
                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;
        }
        if (this.gauge.allowComponentRender) {
            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {
                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];
                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];
                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;
                var process = (radius * 0.25);
                var degreeValue = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getDegree"])(startAngle, endAngle);
                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -
                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;
                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +
                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;
                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +
                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient
                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;
                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -
                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient
                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;
                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {
                    roundedStartAngle = startAngle;
                    roundedEndAngle = endAngle;
                }
                if (this.gauge.gradientModule && ((!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient)
                    && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient.colorStop)) || (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.radialGradient)
                    && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.radialGradient.colorStop)))) {
                    if (range.isLinearCircularGradient) {
                        endAngle -= Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(startAngle, endAngle) ? 0.0001 : 0;
                        var degree = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getDegree"])(startAngle, endAngle);
                        var rangeColorLength = range.linearGradient.colorStop.length;
                        var degreeRange = ((axis.startAngle === axis.endAngle ?
                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :
                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));
                        var degreeRangeValue = void 0;
                        if (degreeRange <= 360 && degreeRange >= 270) {
                            degreeRangeValue = 270;
                        }
                        else if (degreeRange <= 270 && degreeRange >= 180) {
                            degreeRangeValue = 180;
                        }
                        else if (degreeRange <= 180 && degreeRange >= 90) {
                            degreeRangeValue = 90;
                        }
                        else if (degreeRange <= 90 && degreeRange >= 0) {
                            degreeRangeValue = 0;
                        }
                        var gradientDegree = axis.direction === 'AntiClockWise' ?
                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)
                            : axis.startAngle + degree * (colorIndex);
                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'
                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle
                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :
                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle
                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle
                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?
                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +
                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))
                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :
                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;
                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap
                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap
                            : axis.ranges[rangeIndex - 1]['gradientAngle'];
                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1
                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {
                            range.gradientAntiAngle = gradientAngle;
                        }
                        if (rangeIndex !== 0) {
                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?
                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :
                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :
                                range.gradientAngle + gradientAngle - axis.startAngle;
                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?
                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;
                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1
                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {
                                range.gradientAntiAngle = gradientAngle;
                            }
                        }
                        if (gradientAngle > 45 && gradientAngle <= 115
                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {
                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';
                        }
                        else if (gradientAngle > 115 && gradientAngle < 170) {
                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';
                        }
                        else if (gradientAngle >= 170 && gradientAngle <= 280) {
                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';
                        }
                        else if (gradientAngle > 280 && gradientAngle <= 360
                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {
                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';
                        }
                    }
                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);
                }
                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;
                if (range.roundedCornerRadius) {
                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {
                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {
                            if (axis.direction === 'ClockWise') {
                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1
                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);
                            }
                            else {
                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1
                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);
                            }
                        }
                        else {
                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);
                        }
                    }
                    else {
                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);
                    }
                }
                else {
                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);
                }
            }
            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {
                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);
            }
        }
    };
    /**
     * Method to render the rounded range path of the circular gauge.
     *
     * @param {Range} range - Specifies the range.
     * @param {number} rangeIndex - Specifies the index of the range.
     * @param {number} index - Specifies the index of the axis.
     * @param {number} startWidth - Specifies the startwidth for the range.
     * @param {number} endWidth - Specifies the endwidth for the range.
     * @param {Element} rangeElement - Specifies the element.
     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.
     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.
     * @param {number} oldStart - Specifies the rounded path of the old start value.
     * @param {number} oldEnd - Specifies the rounded path of the old end value..
     * @param {GaugeLocation} location - Specifies the location.
     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.
     * @param {Axis} axis - Specifies the axis.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {
        range.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"]((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex
            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getRoundedPathArc"])(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));
    };
    /**
     * Method to render the rounded range path of the circular gauge.
     *
     * @param {Range} range - Specifies the range.
     * @param {number} rangeIndex - Specifies the index of the range.
     * @param {number} index - Specifies the index of the axis.
     * @param {number} startWidth - Specifies the startwidth for the range.
     * @param {number} endWidth - Specifies the endwidth for the range.
     * @param {Element} rangeElement - Specifies the element.
     * @param {number} startAngle - Specifies the rounded path of the start angle.
     * @param {number} endAngle - Specifies the rounded path of the end angle.
     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {
        range.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +
            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +
            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getPathArc"])(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));
    };
    /**
     * Method to render the axis range of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {number} index - Specifies the index.
     * @param {Element} element - Specifies the element.
     * @param {CircularGauge} gauge - Specifies the gauge instance.
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {
        var _this = this;
        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));
        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :
            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });
        var startWidth;
        var startEndDifference;
        var endWidth;
        var previousEndWidth;
        var previousStartWidth;
        axis.ranges.map(function (range, rangeIndex) {
            range.isLinearCircularGradient = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(_this.gauge.gradientModule)
                && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient) && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient.startValue)
                && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient.endValue) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.linearGradient.colorStop);
            range.pathElement = [];
            if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.offset) && range.offset.length > 0) {
                range.currentDistanceFromScale = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(range.offset, axis.currentRadius);
            }
            else {
                range.currentDistanceFromScale = range.offset;
            }
            _this.calculateRangeRadius(axis, range);
            if (range.startWidth.length > 0) {
                startWidth = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["toPixel"])(range.startWidth, range.currentRadius);
            }
            else {
                startWidth = range.startWidth;
            }
            if (range.endWidth.length > 0) {
                endWidth = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["toPixel"])(range.endWidth, range.currentRadius);
            }
            else {
                endWidth = range.endWidth;
            }
            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);
            if (range.isLinearCircularGradient) {
                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {
                    if (i <= (range.linearGradient.colorStop.length - 1)) {
                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;
                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;
                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));
                        if (i > 0) {
                            startWidth = endWidth;
                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference
                                : startWidth + startEndDifference;
                        }
                        else {
                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference
                                : startWidth + startEndDifference;
                        }
                    }
                    else {
                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference
                            : startWidth + startEndDifference;
                        endWidth = (previousEndWidth);
                    }
                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);
                }
            }
            else {
                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {
                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);
                }
            }
        });
        element.appendChild(rangeElement);
    };
    /**
     * Method to calculate the radius of the axis range.
     *
     * @return {void}
     */
    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {
        var radius = range.radius !== null ? range.radius : '100%';
        range.currentRadius = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(radius, axis.currentRadius);
    };
    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {
        var actualRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.position) && range.position !== 'Auto' && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["isNullOrUndefined"])(range.radius) ?
            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :
                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :
                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;
        return actualRadius;
    };
    /**
     * Method to get the range color of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis
     * @returns {void}
     * @private
     */
    AxisRenderer.prototype.setRangeColor = function (axis) {
        var rangeColors = Object(_model_theme__WEBPACK_IMPORTED_MODULE_2__["getRangePalette"])(this.gauge.theme);
        axis.ranges.map(function (range, index) {
            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];
        });
    };
    return AxisRenderer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis.js ***!
  \***************************************************************************************************************************************/
/*! exports provided: Line, Label, Range, Tick, Cap, NeedleTail, Animation, Annotation, Pointer, Axis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return Line; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return Label; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return Range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return Tick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cap", function() { return Cap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NeedleTail", function() { return NeedleTail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return Animation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Annotation", function() { return Annotation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pointer", function() { return Pointer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return Axis; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _model_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../model/base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/base.js");
/* harmony import */ var _model_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../model/theme */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/theme.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/* eslint-disable @typescript-eslint/member-delimiter-style */



/**
 * Sets and gets the axis line in circular gauge component.
 */
var Line = /** @class */ (function (_super) {
    __extends(Line, _super);
    function Line() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(2)
    ], Line.prototype, "width", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], Line.prototype, "dashArray", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Line.prototype, "color", void 0);
    return Line;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the axis label in circular gauge component.
 */
var Label = /** @class */ (function (_super) {
    __extends(Label, _super);
    function Label() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])(_model_theme__WEBPACK_IMPORTED_MODULE_2__["Theme"].axisLabelFont, _model_base__WEBPACK_IMPORTED_MODULE_1__["Font"])
    ], Label.prototype, "font", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], Label.prototype, "format", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Inside')
    ], Label.prototype, "position", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('None')
    ], Label.prototype, "hiddenLabel", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Label.prototype, "autoAngle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Label.prototype, "useRangeColor", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Label.prototype, "offset", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], Label.prototype, "shouldMaintainPadding", void 0);
    return Label;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the option to customize the ranges of an axis in circular gauge component.
 */
var Range = /** @class */ (function (_super) {
    __extends(Range, _super);
    function Range() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @private */
        _this.isLinearCircularGradient = false;
        return _this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Range.prototype, "start", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Range.prototype, "end", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Range.prototype, "radius", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(10)
    ], Range.prototype, "startWidth", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(10)
    ], Range.prototype, "endWidth", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Range.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Range.prototype, "roundedCornerRadius", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1)
    ], Range.prototype, "opacity", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], Range.prototype, "legendText", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Auto')
    ], Range.prototype, "position", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Range.prototype, "offset", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Range.prototype, "linearGradient", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Range.prototype, "radialGradient", void 0);
    return Range;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the major and minor tick lines of an axis in circular gauge component.
 */
var Tick = /** @class */ (function (_super) {
    __extends(Tick, _super);
    function Tick() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(2)
    ], Tick.prototype, "width", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tick.prototype, "height", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tick.prototype, "interval", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Tick.prototype, "offset", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tick.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Inside')
    ], Tick.prototype, "position", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tick.prototype, "useRangeColor", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('0')
    ], Tick.prototype, "dashArray", void 0);
    return Tick;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the needle cap of pointer in circular gauge component.
 */
var Cap = /** @class */ (function (_super) {
    __extends(Cap, _super);
    function Cap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Cap.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Cap.prototype, "linearGradient", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Cap.prototype, "radialGradient", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ color: null, width: 8 }, _model_base__WEBPACK_IMPORTED_MODULE_1__["Border"])
    ], Cap.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(8)
    ], Cap.prototype, "radius", void 0);
    return Cap;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the pointer needle in the circular gauge component.
 */
var NeedleTail = /** @class */ (function (_super) {
    __extends(NeedleTail, _super);
    function NeedleTail() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], NeedleTail.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ color: null, width: 0 }, _model_base__WEBPACK_IMPORTED_MODULE_1__["Border"])
    ], NeedleTail.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('0%')
    ], NeedleTail.prototype, "length", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], NeedleTail.prototype, "linearGradient", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], NeedleTail.prototype, "radialGradient", void 0);
    return NeedleTail;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the animation of pointers in circular gauge component.
 */
var Animation = /** @class */ (function (_super) {
    __extends(Animation, _super);
    function Animation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], Animation.prototype, "enable", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1000)
    ], Animation.prototype, "duration", void 0);
    return Animation;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the annotation element for an axis in circular gauge component.
 */
var Annotation = /** @class */ (function (_super) {
    __extends(Annotation, _super);
    function Annotation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Annotation.prototype, "content", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(90)
    ], Annotation.prototype, "angle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('50%')
    ], Annotation.prototype, "radius", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('-1')
    ], Annotation.prototype, "zIndex", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Annotation.prototype, "autoAngle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ size: '12px', color: '#686868' }, _model_base__WEBPACK_IMPORTED_MODULE_1__["Font"])
    ], Annotation.prototype, "textStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Annotation.prototype, "description", void 0);
    return Annotation;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the pointers of an axis in circular gauge component.
 */
var Pointer = /** @class */ (function (_super) {
    __extends(Pointer, _super);
    function Pointer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "value", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Needle')
    ], Pointer.prototype, "type", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Auto')
    ], Pointer.prototype, "position", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Pointer.prototype, "roundedCornerRadius", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "imageUrl", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "radius", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(20)
    ], Pointer.prototype, "pointerWidth", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, Cap)
    ], Pointer.prototype, "cap", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, _model_base__WEBPACK_IMPORTED_MODULE_1__["Font"])
    ], Pointer.prototype, "textStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, NeedleTail)
    ], Pointer.prototype, "needleTail", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ color: '#DDDDDD', width: 0 }, _model_base__WEBPACK_IMPORTED_MODULE_1__["Border"])
    ], Pointer.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])(null, Animation)
    ], Pointer.prototype, "animation", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Circle')
    ], Pointer.prototype, "markerShape", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(5)
    ], Pointer.prototype, "markerHeight", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], Pointer.prototype, "text", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "description", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(5)
    ], Pointer.prototype, "markerWidth", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Pointer.prototype, "offset", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "needleStartWidth", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "needleEndWidth", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "linearGradient", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Pointer.prototype, "radialGradient", void 0);
    return Pointer;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the options to customize the axis for the circular gauge component.
 */
var Axis = /** @class */ (function (_super) {
    __extends(Axis, _super);
    function Axis() {
        /**
         * Sets and gets the minimum value of an axis in the circular gauge component.
         *
         * @aspDefaultValueIgnore
         * @default null
         */
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @private */
        _this.visibleLabels = [];
        return _this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Axis.prototype, "minimum", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Axis.prototype, "maximum", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Axis.prototype, "showLastLabel", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Axis.prototype, "hideIntersectingLabel", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Axis.prototype, "roundingPlaces", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Axis.prototype, "radius", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, Line)
    ], Axis.prototype, "lineStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Collection"])([{}], Range)
    ], Axis.prototype, "ranges", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Collection"])([{}], Pointer)
    ], Axis.prototype, "pointers", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Collection"])([{}], Annotation)
    ], Axis.prototype, "annotations", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ width: 2, height: 10 }, Tick)
    ], Axis.prototype, "majorTicks", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ width: 2, height: 5 }, Tick)
    ], Axis.prototype, "minorTicks", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(200)
    ], Axis.prototype, "startAngle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(160)
    ], Axis.prototype, "endAngle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('ClockWise')
    ], Axis.prototype, "direction", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Axis.prototype, "background", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Axis.prototype, "rangeGap", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Axis.prototype, "startAndEndRangeGap", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, Label)
    ], Axis.prototype, "labelStyle", void 0);
    return Axis;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/gradient.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/gradient.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: ColorStop, GradientPosition, LinearGradient, RadialGradient, Gradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColorStop", function() { return ColorStop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GradientPosition", function() { return GradientPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinearGradient", function() { return LinearGradient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadialGradient", function() { return RadialGradient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return Gradient; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


/**
 * Specifies the color information for the gradient in the circular gauge.
 */
var ColorStop = /** @class */ (function (_super) {
    __extends(ColorStop, _super);
    function ColorStop() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('#000000')
    ], ColorStop.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1)
    ], ColorStop.prototype, "opacity", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('0%')
    ], ColorStop.prototype, "offset", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], ColorStop.prototype, "style", void 0);
    return ColorStop;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Specifies the position in percentage from which the radial gradient must be applied.
 */
var GradientPosition = /** @class */ (function (_super) {
    __extends(GradientPosition, _super);
    function GradientPosition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('0%')
    ], GradientPosition.prototype, "x", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('0%')
    ], GradientPosition.prototype, "y", void 0);
    return GradientPosition;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * This specifies the properties of the linear gradient colors for the circular gauge.
 */
var LinearGradient = /** @class */ (function (_super) {
    __extends(LinearGradient, _super);
    function LinearGradient() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], LinearGradient.prototype, "startValue", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], LinearGradient.prototype, "endValue", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Collection"])([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)
    ], LinearGradient.prototype, "colorStop", void 0);
    return LinearGradient;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * This specifies the properties of the radial gradient colors for the circular gauge.
 */
var RadialGradient = /** @class */ (function (_super) {
    __extends(RadialGradient, _super);
    function RadialGradient() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('0%')
    ], RadialGradient.prototype, "radius", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ x: '0%', y: '0%' }, GradientPosition)
    ], RadialGradient.prototype, "outerPosition", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ x: '0%', y: '0%' }, GradientPosition)
    ], RadialGradient.prototype, "innerPosition", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Collection"])([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)
    ], RadialGradient.prototype, "colorStop", void 0);
    return RadialGradient;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the module that enables the gradient option for pointers and ranges.
 *
 * @hidden
 */
var Gradient = /** @class */ (function () {
    /**
     * Constructor for gauge
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function Gradient(gauge) {
        this.gauge = gauge;
    }
    /**
     * To get linear gradient string for pointers and ranges
     *
     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.
     * @param {name} name - Specifies the name of the gradient.
     * @param {name} direction - Specifies the gradient position.
     * @returns {string} - Returns the string value.
     * @private
     */
    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {
        var linearPosition = {
            id: name,
            x1: (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.startValue) && name.indexOf('range') !== -1
                ? (direction === 'right' ? '100%' : '0%')
                : (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?
                    element.linearGradient.startValue :
                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),
            x2: (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?
                (direction === 'left' ? '100%' : '0%') :
                (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?
                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),
            y1: (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.startValue) && name.indexOf('range') !== -1
                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),
            y2: (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.endValue) && name.indexOf('range') !== -1
                ? (direction === 'top' ? '100%' : '0%') : '0%')
        };
        return linearPosition;
    };
    /**
     * To get linear gradient string for pointers and ranges
     *
     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.
     * @param {number} index - Specifies the index of the axis.
     * @param { string } direction - Specifies the gradient position.
     * @param { number } rangeIndex - Specifies the index of the range.
     * @returns {string} - Returns the string value.
     * @private
     */
    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {
        var render = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__["SvgRenderer"]('');
        var colors = (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.startValue) &&
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.endValue) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(rangeIndex)) ?
            this.getCircularGradientColor(element.linearGradient.colorStop, index) :
            this.getGradientColor(element.linearGradient.colorStop);
        var name = (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.startValue) &&
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.endValue) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(rangeIndex)) ?
            '_' + this.gauge.svgObject.id + '_range_' +
                rangeIndex + '_color_' + index + '_' + 'linearGradient'
            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';
        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);
        gradientPosition = {
            id: gradientPosition.id,
            x1: gradientPosition.x1,
            x2: gradientPosition.x2,
            y1: gradientPosition.y1,
            y2: gradientPosition.y2
        };
        var def = render.drawGradient('linearGradient', gradientPosition, colors);
        this.gauge.svgObject.appendChild(def);
        return 'url(#' + name + ')';
    };
    // eslint-disable-next-line valid-jsdoc
    /**
     * To get color, opacity, offset and style for circular gradient path.
     *
     * @private
     */
    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {
        var colors = [];
        var colorIndex = index;
        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {
            var color = {
                color: colorStop[j].color,
                colorStop: colorStop[j].offset,
                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',
                style: colorStop[j].style
            };
            colors.push(color);
            colorIndex++;
        }
        return colors;
    };
    /**
     * To get the radial gradient string.
     *
     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.
     * @returns {string} - Returns the string.
     * @private
     */
    Gradient.prototype.getRadialGradientColor = function (element) {
        var render = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__["SvgRenderer"]('');
        var colors = this.getGradientColor(element.radialGradient.colorStop);
        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';
        var gradientPosition = {
            id: name,
            r: (element.radialGradient.radius.indexOf('%') === -1 ?
                element.radialGradient.radius :
                parseFloat(element.radialGradient.radius).toString()) + '%',
            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?
                element.radialGradient.outerPosition.x :
                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',
            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?
                element.radialGradient.outerPosition.y :
                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',
            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?
                element.radialGradient.innerPosition.x :
                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',
            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?
                element.radialGradient.innerPosition.y :
                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'
        };
        var def = render.drawGradient('radialGradient', gradientPosition, colors);
        this.gauge.svgObject.appendChild(def);
        return 'url(#' + name + ')';
    };
    /**
     * To get color, opacity, offset and style.
     *
     * @param { ColorStopModel[]} colorStop - Specifies the color stop.
     * @returns {GradientColor[]} - Returns the gradientColor.
     * @private
     */
    Gradient.prototype.getGradientColor = function (colorStop) {
        var colors = [];
        for (var j = 0; j < colorStop.length; j++) {
            var color = {
                color: colorStop[j].color,
                colorStop: colorStop[j].offset,
                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',
                style: colorStop[j].style
            };
            colors.push(color);
        }
        return colors;
    };
    // eslint-disable-next-line valid-jsdoc
    /**
     * To get a gradient color string
     *
     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.
     * @returns {string} - Returns the string
     * @private
     */
    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {
        var gradientColor;
        if ((element.linearGradient && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.linearGradient.colorStop)) ||
            (element.radialGradient && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element.radialGradient.colorStop))) {
            if (element.linearGradient) {
                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);
            }
            else {
                gradientColor = this.getRadialGradientColor(element);
            }
            this.gauge.gradientCount = this.gauge.gradientCount + 1;
        }
        else {
            return null;
        }
        return gradientColor;
    };
    Gradient.prototype.getModuleName = function () {
        // Returns te module name
        return 'Gradient';
    };
    /**
     * To destroy the Gradient.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @returns {void}
     * @private
     */
    Gradient.prototype.destroy = function (gauge) {
        // Destroy method performed here
    };
    return Gradient;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/pointer-renderer.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/pointer-renderer.js ***!
  \***************************************************************************************************************************************************/
/*! exports provided: PointerRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointerRenderer", function() { return PointerRenderer; });
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper-pointer-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-pointer-renderer.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _model_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model/constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js");




/**
 * Specifies the Axis rendering for circular gauge
 */
var PointerRenderer = /** @class */ (function () {
    /**
     * Constructor for pointer renderer.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @private.
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function PointerRenderer(gauge) {
        this.gauge = gauge;
    }
    /**
     * Method to render the axis pointers of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {number} axisIndex - Specifies the axis index.
     * @param {Element} element - Specifies the element.
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @param {boolean} animate - Specifies the boolean value.
     * @returns {void}
     * @private
     */
    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var pointerElement = gauge.renderer.createGroup({
            id: gauge.element.id + '_Axis_Pointers_' + axisIndex
        });
        var childElement;
        var range;
        if (this.gauge.allowComponentRender) {
            axis.pointers.map(function (pointer, pointerIndex) {
                if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(pointer.offset) && pointer.offset.length > 0) {
                    pointer.currentDistanceFromScale = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(pointer.offset, axis.currentRadius);
                }
                else {
                    pointer.currentDistanceFromScale = pointer.offset;
                }
                range = axis.visibleRange;
                pointer.pathElement = [];
                _this.calculatePointerRadius(axis, pointer);
                childElement = gauge.renderer.createGroup({
                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex
                });
                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);
                _this.setPointerValue(axis, pointer, pointer.currentValue);
                pointerElement.appendChild(childElement);
                if (animate || pointer.animation.enable) {
                    _this.doPointerAnimation(pointer, axis);
                }
            });
            element.appendChild(pointerElement);
        }
    };
    /**
     * Measure the pointer length of the circular gauge.
     *
     * @returns {void}
     */
    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {
        var padding = 5;
        pointer.currentRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(pointer.radius) ?
            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?
            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));
    };
    /**
     * Measure the pointer length of the circular gauge based on pointer position.
     *
     * @returns {number}
     */
    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {
        if (pointer.markerShape === 'Text') {
            var pointerRadius = void 0;
            var pointerSize = parseInt(pointer.textStyle.size, 10);
            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;
            // eslint-disable-next-line prefer-const
            pointerRadius = pointer.position === 'Inside' ?
                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :
                pointer.position === 'Outside' ?
                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +
                        pointer.currentDistanceFromScale) :
                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);
            return pointerRadius;
        }
        else {
            var pointerRadius = void 0;
            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;
            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||
                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :
                pointer.markerWidth / 2) : 0;
            // eslint-disable-next-line prefer-const
            pointerRadius = pointer.position === 'Inside' ?
                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :
                pointer.position === 'Outside' ?
                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :
                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -
                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));
            return pointerRadius;
        }
    };
    /**
     * Method to render the needle pointer of the ciruclar gauge.
     *
     * @param {Axis} axis - Specifies the axis
     * @param {number} axisIndex - Specifies the axis index.
     * @param {number} index - Specifies the index.
     * @param {Element} parentElement - Specifies the parent element.
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @returns {void}
     */
    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {
        var pointer = axis.pointers[index];
        var needle = pointer.needleTail;
        var cap = pointer.cap;
        var pointerRadius;
        var location;
        var direction;
        var needleStartWidth = pointer.needleStartWidth;
        var needleEndWidth = pointer.needleEndWidth;
        var mid = gauge.midPoint;
        var width = pointer.pointerWidth / 2;
        var rectDirection;
        var gradientColor;
        var gradientTailColor;
        var gradientCapColor;
        // To render the needle
        location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(0, pointer.currentRadius, mid);
        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {
            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +
                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';
        }
        else {
            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +
                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';
        }
        if (gauge.gradientModule) {
            gradientColor = gauge.gradientModule.getGradientColorString(pointer);
        }
        pointer.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :
            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));
        // eslint-disable-next-line prefer-const
        pointerRadius = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(pointer.needleTail.length, pointer.currentRadius);
        // To render the rect element for touch
        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +
            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);
        // To render the needle tail
        if (gauge.gradientModule) {
            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);
        }
        if (pointerRadius) {
            location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(180, pointerRadius, gauge.midPoint);
            direction = 'M ' + mid.x + ' ' + (mid.y - width) +
                ' L ' + (location.x) + ' ' + (mid.y - width) +
                ' L ' + (location.x) + ' ' + (mid.y + width) +
                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';
            pointer.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));
            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);
        }
        // To render the cap
        if (gauge.gradientModule) {
            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);
        }
        if (pointer.cap.radius) {
            pointer.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"])(mid, 'Circle', new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Size"](pointer.cap.radius * 2, pointer.cap.radius * 2), '', new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));
        }
        pointer.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));
    };
    /**
     * Method to set the pointer value of the circular gauge.
     *
     * @param {Axis} axis - Specifies the axis.
     * @param {Pointer} pointer - Specifies the pointer.
     * @param {number} value - Specifies the value.
     * @returns {void}
     * @private
     */
    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {
        var _this = this;
        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';
        var location = this.gauge.midPoint;
        var isClockWise = axis.direction === 'ClockWise';
        var startAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var endAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);
        if (isClockWise) {
            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;
        }
        else {
            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]
                : [startAngle, startAngle = endAngle][0];
        }
        var radius = pointer.roundedCornerRadius;
        var minRadius = (radius * 0.25);
        if (value <= minRadius) {
            // eslint-disable-next-line no-constant-condition
            radius = value === 1 || 2 ? 8 : radius;
            radius /= 2;
            minRadius = radius * 0.25;
        }
        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -
            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;
        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +
            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;
        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +
            radius) / (pointer.currentRadius)) * 180) / Math.PI;
        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -
            radius) / (pointer.currentRadius)) * 180) / Math.PI;
        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= radius && pointer.type === 'RangeBar') {
            roundStartAngle = startAngle;
            roundEndAngle = endAngle;
        }
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(pointer.currentRadius)) {
            this.calculatePointerRadius(axis, pointer);
        }
        pointer.pathElement.map(function (element) {
            if (pointer.type === 'RangeBar') {
                if (pointer.roundedCornerRadius && value && !checkMinValue) {
                    element.setAttribute('d', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getRoundedPathArc"])(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));
                    radius = 0;
                }
                else {
                    element.setAttribute('d', Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["getCompleteArc"])(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));
                }
            }
            else {
                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {
                    var textangle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(pointer.value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');
                    var textlocation = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])((pointer.markerShape === 'Text') ? textangle : 0, pointer.currentRadius, _this.gauge.midPoint);
                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');
                    element.setAttribute('x', String(textlocation.x));
                    element.setAttribute('y', String(textlocation.y));
                }
                else {
                    element.setAttribute('transform', 'rotate(' + Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');
                }
            }
            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());
        });
    };
    /**
     * Method to render the marker pointer of the ciruclar gauge.
     *
     * @param {Axis} axis - Specifies the axis
     * @param {number} axisIndex - Specifies the axis index.
     * @param {number} index - Specifies the index.
     * @param {Element} parentElement - Specifies the parent element.
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @returns {void}
     */
    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {
        var pointer = axis.pointers[index];
        var min = axis.visibleRange.min;
        var max = axis.visibleRange.max;
        var gradientMarkerColor;
        var angle = Math.round(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));
        var shapeBasedOnPosition = pointer.markerShape;
        if (gauge.gradientModule) {
            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);
        }
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(pointer.radius) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||
            pointer.markerShape === 'Triangle')) {
            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?
                'InvertedTriangle' : (pointer.position === 'Inside' &&
                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));
        }
        var location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);
        if (pointer.markerShape === 'Text') {
            var textOption = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["TextOption"](gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +
                (location.x) + ',' + location.y + ')', 'auto');
            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["textElement"])(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');
        }
        else {
            pointer.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"])(location, shapeBasedOnPosition, new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Size"](pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));
        }
    };
    /**
     * Method to render the range bar pointer of the ciruclar gauge.
     *
     * @param {Axis} axis - Specifies the axis
     * @param {number} axisIndex - Specifies the axis index.
     * @param {number} index - Specifies the index.
     * @param {Element} parentElement - Specifies the parent element.
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @returns {void}
     */
    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {
        var pointer = axis.pointers[index];
        var gradientBarColor;
        if (gauge.gradientModule) {
            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);
        }
        pointer.pathElement.push(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :
            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));
    };
    /**
     * Method to perform the animation of the pointer in circular gauge.
     *
     * @param {Pointer} pointer - Specifies the pointer.
     * @param {Axis} axis - Specifies the axis.
     * @returns {void}
     */
    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {
        var _this = this;
        var startValue = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;
        var endValue = pointer.currentValue;
        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {
            pointer.pathElement.map(function (element) {
                if (pointer.type === 'RangeBar') {
                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));
                }
                else {
                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));
                }
            });
        }
    };
    /**
     * Perform the needle and marker pointer animation for circular gauge.
     *
     * @param {HTMLElement} element - Specifies the element
     * @param {number} start - Specifies the start
     * @param {number} end - Specifies the end
     * @param {Axis} axis - Specifies the axis
     * @param {Pointer} pointer - Specifies the pointer
     * @param {number} radius - Specifies the radius
     * @param {number} innerRadius - Specifies the innerRadius
     * @returns {void}
     * @private
     */
    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {
        var _this = this;
        var isClockWise = axis.direction === 'ClockWise';
        var startAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var pointAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;
        var sweepAngle;
        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Animation"]({}).animate(element, {
            duration: pointer.animation.duration,
            progress: function (args) {
                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?
                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :
                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);
                element.style.animation = 'None';
                if (start !== end) {
                    element.setAttribute('transform', 'rotate(' + Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["linear"])(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +
                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');
                }
            },
            end: function (model) {
                _this.setPointerValue(axis, pointer, end);
                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {
                    _this.gauge.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_3__["animationComplete"], { axis: axis, pointer: pointer });
                }
            }
        });
    };
    /**
     * Perform the range bar pointer animation for circular gauge.
     *
     * @param {HTMLElement} element - Specifies the element.
     * @param {number} start - Specifies the start.
     * @param {number} end - Specifies the end.
     * @param {Axis} axis - Specifies the axis.
     * @param {Pointer} pointer - Specifies the pointer.
     * @param {number} radius - Specifies the radius.
     * @param {number} innerRadius - Specifies the innerRadius.
     * @returns {void}
     * @private
     */
    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {
        var _this = this;
        var isClockWise = axis.direction === 'ClockWise';
        var startAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var minAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var pointAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"])(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var roundRadius = pointer.roundedCornerRadius;
        var sweepAngle;
        var endAngle;
        var oldStart;
        var minRadius = (radius * 0.25);
        if (roundRadius) {
            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +
                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;
            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -
                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;
            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -
                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;
        }
        // eslint-disable-next-line prefer-const
        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;
        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Animation"]({}).animate(element, {
            duration: pointer.animation.duration,
            progress: function (arg) {
                element.style.animation = 'None';
                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?
                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :
                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);
                if (isClockWise) {
                    if (!roundRadius) {
                        element.setAttribute('d', Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["getCompleteArc"])(_this.gauge.midPoint, minAngle, Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["linear"])(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));
                    }
                    else {
                        element.setAttribute('d', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getRoundedPathArc"])(_this.gauge.midPoint, Math.floor(minAngle), Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["linear"])(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["linear"])(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));
                    }
                }
                else {
                    if (!roundRadius) {
                        element.setAttribute('d', Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["getCompleteArc"])(_this.gauge.midPoint, Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["linear"])(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));
                    }
                    else {
                        sweepAngle += roundRadius;
                        element.setAttribute('d', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getRoundedPathArc"])(_this.gauge.midPoint, Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["linear"])(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, Object(_utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_1__["linear"])(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));
                    }
                }
            },
            end: function (model) {
                _this.setPointerValue(axis, pointer, end);
                _this.gauge.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_3__["animationComplete"], { axis: axis, pointer: pointer });
            }
        });
    };
    return PointerRenderer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/circular-gauge.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/circular-gauge.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: CircularGauge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircularGauge", function() { return CircularGauge; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/index.js");
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/helper-circular-gauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-circular-gauge.js");
/* harmony import */ var _model_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./model/base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/base.js");
/* harmony import */ var _axes_axis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./axes/axis */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis.js");
/* harmony import */ var _annotations_annotations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./annotations/annotations */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/annotations/annotations.js");
/* harmony import */ var _user_interaction_tooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./user-interaction/tooltip */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/user-interaction/tooltip.js");
/* harmony import */ var _model_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./model/constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js");
/* harmony import */ var _axes_axis_panel__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./axes/axis-panel */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis-panel.js");
/* harmony import */ var _model_theme__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./model/theme */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/theme.js");
/* harmony import */ var _legend_legend__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./legend/legend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/legend/legend.js");
/* harmony import */ var _model_pdf_export__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./model/pdf-export */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/pdf-export.js");
/* harmony import */ var _model_image_export__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./model/image-export */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/image-export.js");
/* harmony import */ var _model_print__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./model/print */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/print.js");
/* harmony import */ var _axes_gradient__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./axes/gradient */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/gradient.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/* eslint-disable max-len */
/* eslint-disable brace-style */
/**
 * Circular Gauge
 */





















/**
 * Represents the circular gauge control.
 * ```html
 * <div id="gauge"/>
 * <script>
 *   var gaugeObj = new CircularGauge();
 *   gaugeObj.appendTo("#gauge");
 * </script>
 * ```
 */
var CircularGauge = /** @class */ (function (_super) {
    __extends(CircularGauge, _super);
    /**
     * Constructor for creating the widget
     *
     * @param {CircularGaugeModel} options - Specifies the options
     * @param {string} element - Specifies the element
     * @hidden
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function CircularGauge(options, element) {
        var _this = _super.call(this, options, element) || this;
        /** @private */
        _this.isRangeUpdate = false;
        /** @private */
        _this.isDrag = false;
        /**
         * @private
         */
        _this.gradientCount = 0;
        return _this;
    }
    /**
     * To create svg object, renderer and binding events for the container.
     *
     * @returns {void}
     */
    CircularGauge.prototype.preRender = function () {
        this.unWireEvents();
        this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["load"], { gauge: this });
        this.initPrivateVariable();
        this.setCulture();
        this.createSvg();
        this.wireEvents();
    };
    /**
     * To render the circular gauge elements
     *
     * @returns {void}
     */
    CircularGauge.prototype.render = function () {
        this.setTheme();
        this.calculateBounds();
        this.renderElements();
        this.renderComplete();
    };
    CircularGauge.prototype.setTheme = function () {
        this.themeStyle = Object(_model_theme__WEBPACK_IMPORTED_MODULE_10__["getThemeStyle"])(this.theme);
    };
    /**
     * Method to unbind events for circular gauge
     *
     * @returns {void}
     */
    CircularGauge.prototype.unWireEvents = function () {
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchStartEvent, this.gaugeOnMouseDown);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchMoveEvent, this.mouseMove);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].remove(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchEndEvent, this.mouseEnd);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].remove(this.element, 'click', this.gaugeOnMouseClick);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].remove(this.element, 'contextmenu', this.gaugeRightClick);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].remove(this.element, (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);
        window.removeEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);
    };
    /**
     * Method to bind events for circular gauge
     *
     * @returns {void}
     */
    CircularGauge.prototype.wireEvents = function () {
        /*! Bind the Event handler */
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchStartEvent, this.gaugeOnMouseDown, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchMoveEvent, this.mouseMove, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].add(this.element, _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchEndEvent, this.mouseEnd, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].add(this.element, 'click', this.gaugeOnMouseClick, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].add(this.element, 'contextmenu', this.gaugeRightClick, this);
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["EventHandler"].add(this.element, (_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);
        window.addEventListener((_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));
        /*! Apply the style for circular gauge */
        this.setGaugeStyle(this.element);
    };
    /**
     * Handles the mouse click on accumulation chart.
     *
     * @param {PointerEvent} e - Specifies the pointer event
     * @returns {boolean} - Returns the boolean value
     * @private
     */
    CircularGauge.prototype.gaugeOnMouseClick = function (e) {
        this.setMouseXY(e);
        if (this.legendModule && this.legendSettings.visible) {
            this.legendModule.click(e);
        }
        return false;
    };
    /**
     * Handles the mouse move.
     *
     * @param {PointerEvent} e - Specifies the pointer event
     * @returns {boolean} - Returns the boolean value
     * @private
     */
    CircularGauge.prototype.mouseMove = function (e) {
        var _this = this;
        this.setMouseXY(e);
        var args = this.getMouseArgs(e, 'touchmove', _model_constants__WEBPACK_IMPORTED_MODULE_8__["gaugeMouseMove"]);
        this.trigger('gaugeMouseMove', args, function (observedArgs) {
            var dragArgs;
            var tooltip = _this.tooltipModule;
            if (!args.cancel) {
                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {
                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {
                        _this.svgObject.setAttribute('cursor', 'pointer');
                    }
                    else {
                        _this.svgObject.setAttribute('cursor', 'auto');
                    }
                }
                var svgElement = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getElement"])(_this.element.id + '_svg');
                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;
                if (_this.enablePointerDrag && _this.activePointer) {
                    _this.isDrag = true;
                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);
                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);
                    dragArgs = {
                        axis: _this.activeAxis,
                        pointer: _this.activePointer,
                        previousValue: _this.activePointer.currentValue,
                        name: _model_constants__WEBPACK_IMPORTED_MODULE_8__["dragMove"],
                        type: _model_constants__WEBPACK_IMPORTED_MODULE_8__["pointerMove"],
                        currentValue: null,
                        axisIndex: dragAxisInd,
                        pointerIndex: dragPointInd
                    };
                    _this.pointerDrag(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["GaugeLocation"](args.x + extraWidth, args.y), dragAxisInd, dragPointInd);
                    dragArgs.currentValue = _this.activePointer.currentValue;
                    _this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["dragMove"], dragArgs);
                    _this.activeRange = null;
                }
                else if (_this.enableRangeDrag && _this.activeRange) {
                    _this.isDrag = true;
                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);
                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);
                    dragArgs = {
                        axis: _this.activeAxis,
                        name: _model_constants__WEBPACK_IMPORTED_MODULE_8__["dragMove"],
                        type: _model_constants__WEBPACK_IMPORTED_MODULE_8__["rangeMove"],
                        range: _this.activeRange,
                        axisIndex: dragAxisInd,
                        rangeIndex: dragRangeInd
                    };
                    _this.rangeDrag(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["GaugeLocation"](args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);
                    _this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["dragMove"], dragArgs);
                }
            }
        });
        if (!this.isTouch) {
            if (this.legendModule && this.legendSettings.visible) {
                this.legendModule.move(e);
            }
        }
        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchMoveEvent, e);
        return false;
    };
    /**
     * Handles the mouse leave.
     *
     * @param {PointerEvent} e - Specifies the pointer event
     * @returns {boolean} - Returns the boolean value
     * @private
     */
    CircularGauge.prototype.mouseLeave = function (e) {
        this.setMouseXY(e);
        this.activeAxis = null;
        this.activePointer = null;
        this.activeRange = null;
        this.svgObject.setAttribute('cursor', 'auto');
        var args = this.getMouseArgs(e, 'touchmove', _model_constants__WEBPACK_IMPORTED_MODULE_8__["gaugeMouseLeave"]);
        this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["gaugeMouseLeave"], args);
        return false;
    };
    /**
     * Handles the mouse right click.
     *
     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.
     * @returns {boolean} - Returns the boolean value.
     * @private
     */
    CircularGauge.prototype.gaugeRightClick = function (event) {
        if (event.buttons === 2 || event.pointerType === 'touch') {
            event.preventDefault();
            event.stopPropagation();
            return false;
        }
        return true;
    };
    /**
     * Handles the pointer draf while mouse move on gauge.
     *
     * @param {GaugeLocation} location - Specifies the location of the gauge
     * @param {number} axisIndex - Specifies the axis index
     * @param {number} pointerIndex - Specifies the pointer index
     * @returns {void}
     * @private
     */
    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {
        var axis = this.activeAxis;
        var range = axis.visibleRange;
        var value = Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["getValueFromAngle"])(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getAngleFromLocation"])(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');
        if (value >= range.min && value <= range.max) {
            this.axes[axisIndex].pointers[pointerIndex].value = value;
            this.activePointer.currentValue = value;
            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);
        }
    };
    /**
     * Handles the range draf while mouse move on gauge.
     *
     * @param {GaugeLocation} location - Specifies the gauge location
     * @param {number} axisIndex - Specifies the axis index
     * @param {number} rangeIndex - Specifies the range index
     * @returns {void}
     * @private
     */
    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {
        if (this.activeAxis) {
            var axis = this.activeAxis;
            var range = axis.visibleRange;
            var value = Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["getValueFromAngle"])(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getAngleFromLocation"])(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');
            if (value >= range.min && value <= range.max) {
                var previousValue1 = this.activeRange.currentValue;
                this.activeRange.currentValue = value;
                var add = (this.activeRange.end - this.activeRange.start);
                var div = add / 2;
                var avg = parseFloat(this.activeRange.start.toString()) + div;
                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.start : this.activeRange.end));
                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.end : this.activeRange.start)) : value;
                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;
                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;
            }
        }
    };
    /**
     * Handles the mouse down on gauge.
     *
     * @param {PointerEvent} e - Specifies the pointer event
     * @returns {boolean} - Returns the boolean value
     * @private
     */
    CircularGauge.prototype.gaugeOnMouseDown = function (e) {
        var _this = this;
        this.setMouseXY(e);
        var currentPointer;
        var currentRange;
        var args = this.getMouseArgs(e, 'touchstart', _model_constants__WEBPACK_IMPORTED_MODULE_8__["gaugeMouseDown"]);
        this.trigger('gaugeMouseDown', args, function (observedArgs) {
            if (!args.cancel &&
                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&
                args.target.id.indexOf('_Pointer_') >= 0) {
                currentPointer = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getPointer"])(args.target.id, _this);
                _this.activeAxis = _this.axes[currentPointer.axisIndex];
                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];
                if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.activePointer.pathElement)) {
                    _this.activePointer.pathElement = [e.target];
                }
                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {
                    _this.activePointer.pathElement = [e.target];
                }
                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);
                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);
                _this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["dragStart"], {
                    axis: _this.activeAxis,
                    name: _model_constants__WEBPACK_IMPORTED_MODULE_8__["dragStart"],
                    type: _model_constants__WEBPACK_IMPORTED_MODULE_8__["pointerStart"],
                    pointer: _this.activePointer,
                    currentValue: _this.activePointer.currentValue,
                    pointerIndex: pointInd,
                    axisIndex: axisInd
                });
                if (_this.enablePointerDrag) {
                    _this.svgObject.setAttribute('cursor', 'grabbing');
                }
            }
            else if (!args.cancel &&
                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&
                args.target.id.indexOf('_Range_') >= 0) {
                currentRange = Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["getRange"])(args.target.id, _this);
                _this.activeAxis = _this.axes[currentRange.axisIndex];
                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];
                if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(_this.activeRange.pathElement)) {
                    _this.activeRange.pathElement = [e.target];
                }
                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);
                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);
                _this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["dragStart"], {
                    axis: _this.activeAxis,
                    name: _model_constants__WEBPACK_IMPORTED_MODULE_8__["dragStart"],
                    type: _model_constants__WEBPACK_IMPORTED_MODULE_8__["rangeStart"],
                    range: _this.activeRange,
                    axisIndex: axisInd,
                    rangeIndex: rangeInd
                });
                if (_this.enableRangeDrag) {
                    _this.svgObject.setAttribute('cursor', 'grabbing');
                }
            }
        });
        return false;
    };
    /**
     * Handles the mouse end.
     *
     * @param {PointerEvent} e - Specifies the pointer event
     * @returns {boolean} - Returns the boolean value
     * @private
     */
    CircularGauge.prototype.mouseEnd = function (e) {
        this.setMouseXY(e);
        var args = this.getMouseArgs(e, 'touchend', _model_constants__WEBPACK_IMPORTED_MODULE_8__["gaugeMouseUp"]);
        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';
        var tooltip = this.tooltipModule;
        this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["gaugeMouseUp"], args);
        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {
            this.svgObject.setAttribute('cursor', 'auto');
            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);
            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);
            this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["dragEnd"], {
                name: _model_constants__WEBPACK_IMPORTED_MODULE_8__["dragEnd"],
                type: _model_constants__WEBPACK_IMPORTED_MODULE_8__["pointerEnd"],
                axis: this.activeAxis,
                pointer: this.activePointer,
                currentValue: this.activePointer.currentValue,
                axisIndex: axisInd,
                pointerIndex: pointerInd
            });
            this.activeAxis = null;
            this.activePointer = null;
            this.isDrag = false;
        }
        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {
            this.svgObject.setAttribute('cursor', 'auto');
            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);
            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);
            this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["dragEnd"], {
                name: _model_constants__WEBPACK_IMPORTED_MODULE_8__["dragEnd"],
                type: _model_constants__WEBPACK_IMPORTED_MODULE_8__["rangeEnd"],
                axis: this.activeAxis,
                range: this.activeRange,
                axisIndex: axisInd,
                rangeIndex: rangeInd
            });
            this.activeAxis = null;
            this.activeRange = null;
            this.isDrag = false;
        }
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.activePointer)) {
            this.activePointer = null;
        }
        this.svgObject.setAttribute('cursor', 'auto');
        this.notify(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].touchEndEvent, e);
        return false;
    };
    /**
     * Handles the mouse event arguments.
     *
     * @param {PointerEvent} e - Specifies the pointer event
     * @param {string} type - Specifies the type
     * @param {string} name - Specifies the name
     * @returns {IMouseEventArgs} - Returns the mouse event args
     * @private
     */
    CircularGauge.prototype.getMouseArgs = function (e, type, name) {
        var rect = this.element.getBoundingClientRect();
        var location = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["GaugeLocation"](-rect.left, -rect.top);
        var isTouch = (e.type === type);
        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;
        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;
        return {
            cancel: false, name: name,
            x: location.x, y: location.y,
            target: isTouch ? e.target : e.target
        };
    };
    /**
     * Handles the gauge resize.
     *
     * @param {Event} e - Specifies the event
     * @returns {boolean} - Returns the boolean value
     * @private
     */
    CircularGauge.prototype.gaugeResize = function (e) {
        var _this = this;
        var args = {
            gauge: this,
            previousSize: new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Size"](this.availableSize.width, this.availableSize.height),
            name: _model_constants__WEBPACK_IMPORTED_MODULE_8__["resized"],
            currentSize: new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Size"](0, 0)
        };
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.element)) {
            if (this.element.classList.contains('e-circulargauge')) {
                this.createSvg();
                this.calculateBounds();
                this.renderElements();
            }
            args.currentSize = this.availableSize;
            this.animatePointer = false;
            if (this.resizeTo) {
                clearTimeout(this.resizeTo);
            }
            else if (this.element.classList.contains('e-circulargauge')) {
                this.resizeTo = window.setTimeout(function () {
                    _this.createSvg();
                    _this.calculateBounds();
                    _this.renderElements();
                    args.currentSize = _this.availableSize;
                    _this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["resized"], args);
                }, 500);
            }
        }
        return false;
    };
    /**
     * Applying styles for circular gauge elements
     *
     * @param {HTMLElement} element - Specifies the html element
     * @returns {void}
     */
    CircularGauge.prototype.setGaugeStyle = function (element) {
        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';
        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';
        element.style.msContentZooming = 'none';
        element.style.msUserSelect = 'none';
        element.style.webkitUserSelect = 'none';
        element.style.position = 'relative';
    };
    /**
     * Method to set culture for gauge
     *
     * @returns {void}
     */
    CircularGauge.prototype.setCulture = function () {
        this.intl = new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Internationalization"]();
    };
    /**
     * Methods to create svg element for circular gauge.
     *
     * @returns {void}
     */
    CircularGauge.prototype.createSvg = function () {
        this.removeSvg();
        this.calculateSvgSize();
        this.svgObject = this.renderer.createSvg({
            id: this.element.id + '_svg',
            width: this.availableSize.width,
            height: this.availableSize.height
        });
    };
    /**
     * To Remove the SVG from circular gauge.
     *
     * @returns {void}
     * @private
     */
    CircularGauge.prototype.removeSvg = function () {
        Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["removeElement"])(this.element.id + '_Secondary_Element');
        if (this.svgObject) {
            while (this.svgObject.childNodes.length > 0) {
                this.svgObject.removeChild(this.svgObject.firstChild);
            }
            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["remove"])(this.svgObject);
            }
        }
        Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["removeElement"])(this.element.id + '_svg');
        this.clearTemplate();
    };
    /**
     * To initialize the circular gauge private variable.
     *
     * @returns {void}
     * @private
     */
    CircularGauge.prototype.initPrivateVariable = function () {
        if (this.element.id === '') {
            var collection = document.getElementsByClassName('e-circulargauge').length;
            this.element.id = 'circulargauge_control_' + collection;
        }
        this.renderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__["SvgRenderer"](this.element.id);
        this.gaugeAxisLayoutPanel = new _axes_axis_panel__WEBPACK_IMPORTED_MODULE_9__["AxisLayoutPanel"](this);
        this.animatePointer = true;
    };
    /**
     * To calculate the size of the circular gauge element.
     *
     * @returns {void}
     */
    CircularGauge.prototype.calculateSvgSize = function () {
        var containerWidth = this.element.offsetWidth;
        var containerHeight = this.element.offsetHeight;
        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;
        var width = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["stringToNumber"])(this.width, containerWidth) || containerWidth || 600;
        var height = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["stringToNumber"])(this.height, containerHeight) || containerHeight || 450;
        width = !isNaN(borderWidth) ? (width - borderWidth) : width;
        height = !isNaN(borderWidth) ? (height - borderWidth) : height;
        this.availableSize = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Size"](width, height);
    };
    /**
     * To calculate the spacing of the circular gauge element.
     *
     * @param {number} top - Specifies the top value
     * @param {number} left - Specifies the left value
     * @param {number} width - Specifies the width
     * @param {number} height - Specifies the height
     * @param {number} radius - Specifies the radius
     * @param {number} titleHeight - Specifies the titleHeight
     * @param {number} isUpperAngle - Specifies the isUpperAngle
     * @param {number} isLowerAngle - Specifies the isLowerAngle
     * @param {number} isFullPercent - Specifies the boolean value
     * @param {number} isUpper - Specifies the boolean value
     * @param {number} isLower - Specifies the boolean value
     * @returns {void}
     */
    /* eslint-disable max-len */
    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {
        var rect;
        var bottom = this.margin.bottom + this.border.width;
        var minRadius;
        var widthRadius;
        var centerX;
        var centerY;
        if (this.moveToCenter && this.axes.length === 1 &&
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.centerXpoint) && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.centerYpoint)) {
            rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"](left, top, width, height);
        }
        else {
            if (!this.allowMargin) {
                if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {
                    minRadius = Math.min(width, height) / 2;
                    rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"]((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);
                }
                else {
                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {
                        widthRadius = ((width) / 2);
                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));
                        if (widthRadius > heightValue) {
                            widthRadius = heightValue;
                        }
                        rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"]((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);
                    }
                    else {
                        if (height > width) {
                            var heightRadius = height / 2;
                            rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"]((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);
                        }
                        else {
                            rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"]((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);
                        }
                    }
                }
            }
            else {
                rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"]((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);
            }
        }
        this.gaugeRect = rect;
        if (this.legendModule && this.legendSettings.visible) {
            this.legendModule.getLegendOptions(this.axes);
            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);
        }
        if (!this.allowMargin) {
            if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {
                var difference = height - this.gaugeRect.height;
                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);
                this.gaugeRect.y = this.gaugeRect.y - difference;
                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);
            }
            else if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {
                var difference = this.gaugeRect.height - this.gaugeRect.width;
                this.gaugeRect.x = this.legendSettings.position === 'Right'
                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;
                this.gaugeRect.width = this.legendSettings.position === 'Left' ?
                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))
                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);
            }
            centerX = this.centerXpoint !== null ?
                Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["stringToNumber"])(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);
            if ((isUpperAngle || isLowerAngle) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.legendModule)) {
                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')
                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :
                    centerX;
            }
            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?
                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))
                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));
            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;
            if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.axes) && this.axes.length > 1 && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.midPoint)) {
                isUpper = isUpperAngle ? isUpperAngle : isUpper;
                isLower = isLowerAngle ? isLowerAngle : isLower;
                if (isUpper && isLower) {
                    centerY = (this.availableSize.height / 2) - bottom;
                }
            }
        }
        else {
            centerX = this.centerXpoint !== null ?
                Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["stringToNumber"])(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);
            centerY = this.centerYpoint !== null ?
                Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["stringToNumber"])(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);
        }
        this.midPoint = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["GaugeLocation"](centerX, centerY);
    };
    /**
     * Method to calculate the availble size for circular gauge.
     *
     * @returns {void}
     */
    CircularGauge.prototype.calculateBounds = function () {
        var padding = 5;
        var rect;
        var margin = this.margin;
        var titleHeight = 0;
        if (this.title) {
            titleHeight = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["measureText"])(this.title, this.titleStyle).height + padding;
        }
        var top = margin.top + titleHeight + this.border.width;
        var bottom = margin.bottom + this.border.width;
        var left = margin.left + this.border.width;
        var isUpper = false;
        var isLower = false;
        var width = this.availableSize.width - left - margin.right - this.border.width;
        var height = this.availableSize.height - top - this.border.width - margin.bottom;
        var radius = Math.min(width, height) / 2;
        this.centerXpoint = (this.centerX === '') ? null : this.centerX;
        this.centerYpoint = (this.centerY === '') ? null : this.centerY;
        if (this.moveToCenter && this.axes.length === 1 &&
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.centerXpoint) && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.centerYpoint)) {
            rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"](left, top, width, height);
        }
        if (!this.allowMargin) {
            for (var j = 0; j < this.axes.length; j++) {
                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&
                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;
                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&
                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&
                    360 !== this.axes[j].endAngle;
                isUpper = isUpperAngle ? isUpperAngle : isUpper;
                isLower = isLowerAngle ? isLowerAngle : isLower;
                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;
                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;
                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);
            }
        }
        else {
            rect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"]((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);
            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);
        }
        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);
    };
    /**
     * To render elements for circular gauge
     *
     * @param {boolean} animate - Specifies whether animation is true or false
     * @returns {void}
     */
    CircularGauge.prototype.renderElements = function (animate) {
        if (animate === void 0) { animate = true; }
        this.renderBorder();
        this.renderTitle();
        this.gaugeAxisLayoutPanel.renderAxes(animate);
        this.renderLegend();
        this.element.appendChild(this.svgObject);
        this.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_8__["loaded"], { gauge: this });
        Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["removeElement"])('gauge-measuretext');
    };
    /**
     * Method to render legend for accumulation chart
     *
     * @returns {void}
     */
    CircularGauge.prototype.renderLegend = function () {
        if (!this.legendModule || !this.legendSettings.visible) {
            return null;
        }
        if (this.legendModule.legendCollection.length) {
            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);
        }
    };
    /**
     * Method to render the title for circular gauge.
     *
     * @returns {void}
     */
    CircularGauge.prototype.renderTitle = function () {
        if (this.title) {
            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;
            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;
            this.titleStyle.fontWeight = this.titleStyle.fontWeight || this.themeStyle.titleFontWeight;
            var titleSize = this.titleStyle.size;
            if (!isNaN(Number(titleSize))) {
                this.titleStyle.size = titleSize + 'px';
            }
            var size = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["measureText"])(this.title, this.titleStyle);
            var options = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["TextOption"](this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);
            var element = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["textElement"])(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');
            element.setAttribute('aria-label', this.description || this.title);
            element.setAttribute('tabindex', this.tabIndex.toString());
        }
    };
    /**
     * Method to render the border for circular gauge.
     *
     * @returns {void}
     */
    CircularGauge.prototype.renderBorder = function () {
        var borderWidth = this.border.width;
        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {
            this.svgObject.appendChild(this.renderer.drawRectangle(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["RectOption"](this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new _utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["Rect"](borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));
        }
    };
    /* eslint-disable valid-jsdoc */
    /**
     * This method is used to set the pointer value dynamically for circular gauge.
     *
     * @param axisIndex - Specifies the index value for the axis in circular gauge.
     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.
     * @param value - Specifies the value for the pointer in circular gauge.
     */
    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {
        var _this = this;
        var axis = this.axes[axisIndex];
        var pointer = axis.pointers[pointerIndex];
        var pointerRadius = pointer.currentRadius;
        var enableAnimation = pointer.animation.enable;
        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;
        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;
        pointer.pathElement.map(function (element) {
            if (pointer.type === 'RangeBar') {
                Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["setStyles"])(element, pointer.color, pointer.border);
                if (enableAnimation) {
                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));
                }
                else {
                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);
                }
            }
            else {
                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {
                    Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["setStyles"])(element, pointer.cap.color, pointer.cap.border);
                }
                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {
                    Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["setStyles"])(element, pointer.needleTail.color, pointer.needleTail.border);
                }
                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {
                    Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["setStyles"])(element, 'transparent', { color: 'transparent', width: 0 });
                }
                else {
                    Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["setStyles"])(element, pointer.color, pointer.border);
                }
                if (enableAnimation) {
                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));
                }
                else {
                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);
                }
            }
        });
        this.isProtectedOnChange = true;
        pointer.previousValue = pointer.currentValue;
        pointer.currentValue = value;
        pointer.value = value;
        this.isProtectedOnChange = false;
    };
    // eslint-disable-next-line valid-jsdoc
    /**
     * This method is used to set the annotation content dynamically for circular gauge.
     *
     * @param axisIndex - Specifies the index value for the axis in circular gauge.
     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.
     * @param content - Specifies the content for the annotation in circular gauge.
     */
    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {
        var isElementExist = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getElement"])(this.element.id + '_Annotations_' + axisIndex) !== null;
        var element = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getElement"])(this.element.id + '_Annotations_' + axisIndex) ||
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('div', {
                id: this.element.id + '_Annotations_' + axisIndex
            });
        var annotation = this.axes[axisIndex].annotations[annotationIndex];
        if (content !== null) {
            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["removeElement"])(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);
            annotation.content = content;
            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);
            var secondaryElement = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getElement"])(this.element.id + '_Secondary_Element');
            if (!isElementExist && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(secondaryElement)) {
                secondaryElement.appendChild(element);
            }
        }
    };
    /**
     * This method is used to print the rendered circular gauge.
     *
     * @param id - Specifies the element to print the circular gauge.
     */
    CircularGauge.prototype.print = function (id) {
        if (this.allowPrint && this.printModule) {
            this.printModule.print(id);
        }
    };
    /**
     * This method is used to perform the export functionality for the circular gauge.
     *
     * @param type - Specifies the type of the export.
     * @param fileName - Specifies the file name for the exported file.
     * @param  orientation - Specified the orientation for the exported pdf document.
     * @param allowDownload - Specifies whether to download as a file.
     */
    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {
        var _this = this;
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(allowDownload)) {
            allowDownload = true;
        }
        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            return new Promise(function (resolve, reject) {
                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));
            });
        }
        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            return new Promise(function (resolve, reject) {
                resolve(_this.imageExportModule.export(type, fileName, allowDownload));
            });
        }
        return null;
    };
    /**
     * Method to set mouse x, y from events
     *
     * @param {PointerEvent} e - Specifies the pointer event
     * @returns {void}
     */
    CircularGauge.prototype.setMouseXY = function (e) {
        var pageX;
        var pageY;
        var svgRect = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getElement"])(this.element.id + '_svg').getBoundingClientRect();
        var rect = this.element.getBoundingClientRect();
        if (e.type.indexOf('touch') > -1) {
            this.isTouch = true;
            var touchArg = e;
            pageY = touchArg.changedTouches[0].clientY;
            pageX = touchArg.changedTouches[0].clientX;
        }
        else {
            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';
            pageX = e.clientX;
            pageY = e.clientY;
        }
        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);
        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);
    };
    /**
     * This method is used to set the range values dynamically for circular gauge.
     *
     * @param axisIndex - Specifies the index value for the axis in circular gauge.
     * @param rangeIndex - Specifies the index value for the range in circular gauge.
     * @param start - Specifies the start value for the current range in circular gauge.
     * @param end - Specifies the end value for the current range i circular gauge.
     */
    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {
        var element = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getElement"])(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);
        var axis = this.axes[axisIndex];
        var range = axis.ranges[rangeIndex];
        var axisRange = axis.visibleRange;
        var isClockWise = axis.direction === 'ClockWise';
        var startValue = Math.min(Math.max(start, axisRange.min), end);
        var endValue = Math.min(Math.max(start, end), axisRange.max);
        var oldRangeStart = range.start;
        var oldRangeEnd = range.end;
        range.start = start;
        range.end = end;
        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {
            this.legendModule.getLegendOptions(this.axes);
            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;
            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;
            var rect = this.gaugeRect;
            var position = this.legendModule.position;
            if (position === 'Bottom') {
                rect.height = rect.height + height;
            }
            if (position === 'Top') {
                rect.height = rect.height + height;
                rect.y = rect.y - height;
            }
            if (position === 'Left') {
                rect.width = rect.width + width;
                rect.x = rect.x - width;
            }
            if (position === 'Right') {
                rect.width = rect.width + width;
            }
            this.legendModule.calculateLegendBounds(rect, this.availableSize);
            if (this.legendModule.legendCollection.length) {
                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);
            }
        }
        this.isRangeUpdate = true;
        var startAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getAngleFromValue"])(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var endAngle = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getAngleFromValue"])(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);
        var startWidth;
        if (range.startWidth.length > 0) {
            startWidth = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["toPixel"])(range.startWidth, range.currentRadius);
        }
        else {
            startWidth = range.startWidth;
        }
        var endWidth;
        if (range.endWidth.length > 0) {
            endWidth = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["toPixel"])(range.endWidth, range.currentRadius);
        }
        else {
            endWidth = range.endWidth;
        }
        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];
        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];
        element.setAttribute('d', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_2__["getPathArc"])(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));
        Object(_utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_3__["setStyles"])(element, (range.color ? range.color : range.rangeColor), {
            color: (range.color ? range.color : range.rangeColor),
            width: 0
        });
    };
    /**
     * To destroy the widget
     *
     * @method destroy
     * @return {void}
     * @member of Circular-Gauge
     */
    CircularGauge.prototype.destroy = function () {
        this.unWireEvents();
        this.removeSvg();
        _super.prototype.destroy.call(this);
    };
    /**
     * To provide the array of modules needed for control rendering
     *
     * @returns {ModuleDeclaration[]} - Returns the modules
     * @private
     */
    CircularGauge.prototype.requiredModules = function () {
        var modules = [];
        var annotationEnable = false;
        var axes = this.axes;
        axes.map(function (axis) {
            axis.annotations.map(function (annotation) {
                annotationEnable = annotationEnable || annotation.content !== null;
            });
        });
        if (annotationEnable) {
            modules.push({
                member: 'Annotations',
                args: [this, _annotations_annotations__WEBPACK_IMPORTED_MODULE_6__["Annotations"]]
            });
        }
        if (this.tooltip.enable) {
            modules.push({
                member: 'Tooltip',
                args: [this, _user_interaction_tooltip__WEBPACK_IMPORTED_MODULE_7__["GaugeTooltip"]]
            });
        }
        if (this.allowPrint) {
            modules.push({
                member: 'Print',
                args: [this, _model_print__WEBPACK_IMPORTED_MODULE_14__["Print"]]
            });
        }
        if (this.allowImageExport) {
            modules.push({
                member: 'ImageExport',
                args: [this, _model_image_export__WEBPACK_IMPORTED_MODULE_13__["ImageExport"]]
            });
        }
        if (this.allowPdfExport) {
            modules.push({
                member: 'PdfExport',
                args: [this, _model_pdf_export__WEBPACK_IMPORTED_MODULE_12__["PdfExport"]]
            });
        }
        if (this.legendSettings.visible) {
            modules.push({
                member: 'Legend',
                args: [this, _legend_legend__WEBPACK_IMPORTED_MODULE_11__["Legend"]]
            });
        }
        modules.push({
            member: 'Gradient',
            args: [this, _axes_gradient__WEBPACK_IMPORTED_MODULE_15__["Gradient"]]
        });
        return modules;
    };
    /**
     * Get the properties to be maintained in the persisted state.
     *
     * @returns {string} - Returns the string
     * @private
     */
    CircularGauge.prototype.getPersistData = function () {
        return this.addOnPersist([]);
    };
    /**
     * Called internally if any of the property value changed.
     *
     * @param {CircularGaugeModel} newProp - Specifies the new property
     * @param {CircularGaugeModel} oldProp - Specifies the old property
     * @returns {void}
     * @private
     */
    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {
        // property method calculated
        var renderer = false;
        var refreshBounds = false;
        var refreshWithoutAnimation = false;
        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&
            !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.activePointer));
        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {
            var prop = _a[_i];
            switch (prop) {
                case 'height':
                case 'width':
                case 'centerX':
                case 'centerY':
                case 'margin':
                    this.createSvg();
                    refreshBounds = true;
                    break;
                case 'title':
                    refreshBounds = (newProp.title === '' || oldProp.title === '');
                    renderer = !(newProp.title === '' || oldProp.title === '');
                    break;
                case 'titleStyle':
                    if (newProp.titleStyle && newProp.titleStyle.size) {
                        refreshBounds = true;
                    }
                    else {
                        renderer = true;
                    }
                    break;
                case 'border':
                    renderer = true;
                    break;
                case 'background':
                    renderer = true;
                    break;
                case 'legendSettings':
                    refreshWithoutAnimation = true;
                    break;
                case 'axes':
                    refreshWithoutAnimation = true;
                    break;
            }
        }
        if (!isPointerValueSame && !this.isRangeUpdate) {
            if (!refreshBounds && renderer) {
                this.removeSvg();
                this.renderElements();
            }
            if (refreshBounds) {
                this.removeSvg();
                this.calculateBounds();
                this.renderElements();
            }
            if (refreshWithoutAnimation && !renderer && !refreshBounds) {
                this.removeSvg();
                this.calculateBounds();
                this.renderElements(false);
            }
        }
        this.isRangeUpdate = false;
    };
    /**
     * Get component name for circular gauge
     *
     * @returns {string} - Returns the module name
     * @private
     */
    CircularGauge.prototype.getModuleName = function () {
        return 'circulargauge';
    };
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], CircularGauge.prototype, "width", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], CircularGauge.prototype, "height", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ color: 'transparent', width: 0 }, _model_base__WEBPACK_IMPORTED_MODULE_4__["Border"])
    ], CircularGauge.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], CircularGauge.prototype, "background", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], CircularGauge.prototype, "title", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ size: '15px', color: null, fontWeight: null }, _model_base__WEBPACK_IMPORTED_MODULE_4__["Font"])
    ], CircularGauge.prototype, "titleStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, _model_base__WEBPACK_IMPORTED_MODULE_4__["Margin"])
    ], CircularGauge.prototype, "margin", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Collection"])([{}], _axes_axis__WEBPACK_IMPORTED_MODULE_5__["Axis"])
    ], CircularGauge.prototype, "axes", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, _model_base__WEBPACK_IMPORTED_MODULE_4__["TooltipSettings"])
    ], CircularGauge.prototype, "tooltip", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], CircularGauge.prototype, "enablePointerDrag", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], CircularGauge.prototype, "enableRangeDrag", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], CircularGauge.prototype, "allowPrint", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], CircularGauge.prototype, "allowImageExport", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], CircularGauge.prototype, "allowPdfExport", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], CircularGauge.prototype, "centerX", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], CircularGauge.prototype, "centerY", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], CircularGauge.prototype, "moveToCenter", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Material')
    ], CircularGauge.prototype, "theme", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], CircularGauge.prototype, "useGroupingSeparator", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], CircularGauge.prototype, "description", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1)
    ], CircularGauge.prototype, "tabIndex", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], CircularGauge.prototype, "allowMargin", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, _legend_legend__WEBPACK_IMPORTED_MODULE_11__["LegendSettings"])
    ], CircularGauge.prototype, "legendSettings", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "loaded", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "load", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "animationComplete", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "axisLabelRender", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "radiusCalculate", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "annotationRender", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "legendRender", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "tooltipRender", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "dragStart", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "dragMove", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "dragEnd", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "gaugeMouseMove", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "gaugeMouseLeave", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "gaugeMouseDown", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "gaugeMouseUp", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "resized", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], CircularGauge.prototype, "beforePrint", void 0);
    CircularGauge = __decorate([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["NotifyPropertyChanges"]
    ], CircularGauge);
    return CircularGauge;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Component"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/index.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/index.js ***!
  \***********************************************************************************************************************************/
/*! exports provided: CircularGauge, Annotations, Line, Label, Range, Tick, Cap, NeedleTail, Animation, Annotation, Pointer, Axis, Border, Font, RangeTooltip, AnnotationTooltip, Margin, TooltipSettings, GaugeTooltip, measureText, toPixel, getFontStyle, textElement, appendPath, isCompleteAngle, getDegree, getAngleFromValue, getAngleFromLocation, getLocationFromAngle, getPathArc, arcPath, arcRoundedPath, arcWidthPath, getRangePath, arcWidthPathCalculation, roundedArcWidthPathCalculation, getRoundedPathArc, getCirclePath, getTemplateFunction, removeElement, getElement, stringToNumber, getPointer, getLabelFormat, calculateShapes, CustomizeOption, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption, VisibleLabels, getRangeColor, calculateSum, setStyles, getValueFromAngle, getRange, textTrim, showTooltip, linear, getCompleteArc, getCompletePath, getMousePosition, getElementSize, Location, LegendSettings, Legend, Index, LegendOptions, ImageExport, PdfExport, Print, ColorStop, GradientPosition, LinearGradient, RadialGradient, Gradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _circular_gauge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./circular-gauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/circular-gauge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CircularGauge", function() { return _circular_gauge__WEBPACK_IMPORTED_MODULE_0__["CircularGauge"]; });

/* harmony import */ var _annotations_annotations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./annotations/annotations */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/annotations/annotations.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotations", function() { return _annotations_annotations__WEBPACK_IMPORTED_MODULE_1__["Annotations"]; });

/* harmony import */ var _axes_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./axes/axis */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/axis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Line"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Label"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Tick"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Cap", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Cap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NeedleTail", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["NeedleTail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotation", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Annotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pointer", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Pointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return _axes_axis__WEBPACK_IMPORTED_MODULE_2__["Axis"]; });

/* harmony import */ var _model_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./model/base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Border", function() { return _model_base__WEBPACK_IMPORTED_MODULE_3__["Border"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Font", function() { return _model_base__WEBPACK_IMPORTED_MODULE_3__["Font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeTooltip", function() { return _model_base__WEBPACK_IMPORTED_MODULE_3__["RangeTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnnotationTooltip", function() { return _model_base__WEBPACK_IMPORTED_MODULE_3__["AnnotationTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Margin", function() { return _model_base__WEBPACK_IMPORTED_MODULE_3__["Margin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipSettings", function() { return _model_base__WEBPACK_IMPORTED_MODULE_3__["TooltipSettings"]; });

/* harmony import */ var _user_interaction_tooltip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./user-interaction/tooltip */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/user-interaction/tooltip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeTooltip", function() { return _user_interaction_tooltip__WEBPACK_IMPORTED_MODULE_4__["GaugeTooltip"]; });

/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["measureText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPixel", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["toPixel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFontStyle", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getFontStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["textElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "appendPath", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["appendPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCompleteAngle", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["isCompleteAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDegree", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getDegree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromValue", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getAngleFromValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromLocation", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getAngleFromLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLocationFromAngle", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getLocationFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPathArc", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcPath", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["arcPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcRoundedPath", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["arcRoundedPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPath", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["arcWidthPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangePath", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getRangePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPathCalculation", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["arcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundedArcWidthPathCalculation", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["roundedArcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRoundedPathArc", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getRoundedPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCirclePath", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getCirclePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTemplateFunction", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getTemplateFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["removeElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringToNumber", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["stringToNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPointer", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getPointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLabelFormat", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["getLabelFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["calculateShapes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["CustomizeOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["PathOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectOption", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["RectOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeLocation", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["GaugeLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["Rect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["TextOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisibleLabels", function() { return _utils_helper_common__WEBPACK_IMPORTED_MODULE_5__["VisibleLabels"]; });

/* harmony import */ var _utils_helper_axis_renderer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/helper-axis-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-renderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangeColor", function() { return _utils_helper_axis_renderer__WEBPACK_IMPORTED_MODULE_6__["getRangeColor"]; });

/* harmony import */ var _utils_helper_axis_panel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/helper-axis-panel */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-panel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateSum", function() { return _utils_helper_axis_panel__WEBPACK_IMPORTED_MODULE_7__["calculateSum"]; });

/* harmony import */ var _utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/helper-circular-gauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-circular-gauge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setStyles", function() { return _utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_8__["setStyles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getValueFromAngle", function() { return _utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_8__["getValueFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRange", function() { return _utils_helper_circular_gauge__WEBPACK_IMPORTED_MODULE_8__["getRange"]; });

/* harmony import */ var _utils_helper_legend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/helper-legend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-legend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textTrim", function() { return _utils_helper_legend__WEBPACK_IMPORTED_MODULE_9__["textTrim"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "showTooltip", function() { return _utils_helper_legend__WEBPACK_IMPORTED_MODULE_9__["showTooltip"]; });

/* harmony import */ var _utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/helper-pointer-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-pointer-renderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return _utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_10__["linear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompleteArc", function() { return _utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_10__["getCompleteArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompletePath", function() { return _utils_helper_pointer_renderer__WEBPACK_IMPORTED_MODULE_10__["getCompletePath"]; });

/* harmony import */ var _utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/helper-tooltip */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-tooltip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMousePosition", function() { return _utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_11__["getMousePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElementSize", function() { return _utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_11__["getElementSize"]; });

/* harmony import */ var _legend_legend__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./legend/legend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/legend/legend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return _legend_legend__WEBPACK_IMPORTED_MODULE_12__["Location"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return _legend_legend__WEBPACK_IMPORTED_MODULE_12__["LegendSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return _legend_legend__WEBPACK_IMPORTED_MODULE_12__["Legend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return _legend_legend__WEBPACK_IMPORTED_MODULE_12__["Index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendOptions", function() { return _legend_legend__WEBPACK_IMPORTED_MODULE_12__["LegendOptions"]; });

/* harmony import */ var _model_image_export__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./model/image-export */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/image-export.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageExport", function() { return _model_image_export__WEBPACK_IMPORTED_MODULE_13__["ImageExport"]; });

/* harmony import */ var _model_pdf_export__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./model/pdf-export */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/pdf-export.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfExport", function() { return _model_pdf_export__WEBPACK_IMPORTED_MODULE_14__["PdfExport"]; });

/* harmony import */ var _model_print__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./model/print */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/print.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Print", function() { return _model_print__WEBPACK_IMPORTED_MODULE_15__["Print"]; });

/* harmony import */ var _axes_gradient__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./axes/gradient */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/axes/gradient.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorStop", function() { return _axes_gradient__WEBPACK_IMPORTED_MODULE_16__["ColorStop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GradientPosition", function() { return _axes_gradient__WEBPACK_IMPORTED_MODULE_16__["GradientPosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinearGradient", function() { return _axes_gradient__WEBPACK_IMPORTED_MODULE_16__["LinearGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadialGradient", function() { return _axes_gradient__WEBPACK_IMPORTED_MODULE_16__["RadialGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return _axes_gradient__WEBPACK_IMPORTED_MODULE_16__["Gradient"]; });

/**
 * Circular Gauge component exported items
 */



















/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/legend/legend.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/legend/legend.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: Location, LegendSettings, Legend, Index, LegendOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return Location; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return LegendSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return Legend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return Index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendOptions", function() { return LegendOptions; });
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _utils_helper_legend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper-legend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-legend.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _model_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../model/base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/base.js");
/* harmony import */ var _model_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../model/theme */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/theme.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





/**
 * Sets and gets the location of the legend in circular gauge.
 */
var Location = /** @class */ (function (_super) {
    __extends(Location, _super);
    function Location() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(0)
    ], Location.prototype, "x", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(0)
    ], Location.prototype, "y", void 0);
    return Location;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["ChildProperty"]));

/**
 * Sets and gets the options to customize the legend for the ranges in the circular gauge.
 */
var LegendSettings = /** @class */ (function (_super) {
    __extends(LegendSettings, _super);
    function LegendSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(false)
    ], LegendSettings.prototype, "visible", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(true)
    ], LegendSettings.prototype, "toggleVisibility", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])('Center')
    ], LegendSettings.prototype, "alignment", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Complex"])({}, _model_base__WEBPACK_IMPORTED_MODULE_3__["Border"])
    ], LegendSettings.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Complex"])({}, _model_base__WEBPACK_IMPORTED_MODULE_3__["Border"])
    ], LegendSettings.prototype, "shapeBorder", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(8)
    ], LegendSettings.prototype, "padding", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(1)
    ], LegendSettings.prototype, "opacity", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])('Auto')
    ], LegendSettings.prototype, "position", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])('Circle')
    ], LegendSettings.prototype, "shape", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(null)
    ], LegendSettings.prototype, "height", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(null)
    ], LegendSettings.prototype, "width", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Complex"])(_model_theme__WEBPACK_IMPORTED_MODULE_4__["Theme"].legendLabelFont, _model_base__WEBPACK_IMPORTED_MODULE_3__["Font"])
    ], LegendSettings.prototype, "textStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(10)
    ], LegendSettings.prototype, "shapeHeight", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(10)
    ], LegendSettings.prototype, "shapeWidth", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])(5)
    ], LegendSettings.prototype, "shapePadding", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Complex"])({ x: 0, y: 0 }, Location)
    ], LegendSettings.prototype, "location", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Property"])('transparent')
    ], LegendSettings.prototype, "background", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["Complex"])({ left: 0, right: 0, top: 0, bottom: 0 }, _model_base__WEBPACK_IMPORTED_MODULE_3__["Margin"])
    ], LegendSettings.prototype, "margin", void 0);
    return LegendSettings;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["ChildProperty"]));

/*
 * Sets and gets the module to add the legend in the circular gauge.
 */
var Legend = /** @class */ (function () {
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function Legend(gauge) {
        this.legendRegions = [];
        this.rowCount = 0; // legend row counts per page
        this.pageButtonSize = 8;
        this.pageXCollections = []; // pages of x locations
        this.maxColumns = 0;
        this.maxWidth = 0;
        this.currentPage = 1;
        this.pagingRegions = [];
        /**
         * @private
         */
        this.position = 'Auto';
        this.gauge = gauge;
        this.toggledIndexes = [];
        this.legend = this.gauge.legendSettings;
        this.legendID = this.gauge.element.id + '_gauge_legend';
        this.addEventListener();
    }
    /**
     * Binding events for legend module.
     *
     * @returns {void}
     */
    Legend.prototype.addEventListener = function () {
        if (this.gauge.isDestroyed) {
            return;
        }
        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);
        this.gauge.on('click', this.click, this);
        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);
    };
    /**
     * UnBinding events for legend module.
     *
     * @returns {void}
     */
    Legend.prototype.removeEventListener = function () {
        if (this.gauge.isDestroyed) {
            return;
        }
        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);
        this.gauge.off('click', this.click);
        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);
    };
    /**
     * Get the legend options.
     *
     * @param {Axis[]} axes - Specifies the axes.
     * @returns {void}
     * @private
     */
    Legend.prototype.getLegendOptions = function (axes) {
        this.legendCollection = [];
        var range;
        var text = '';
        for (var i = 0; i < axes.length; i++) {
            for (var j = 0; j < axes[i].ranges.length; j++) {
                range = axes[i].ranges[j];
                if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(range.start) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(range.end) && (range.start !== range.end)) {
                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;
                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));
                }
            }
        }
    };
    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {
        var legend = this.legend;
        this.position = (legend.position !== 'Auto') ? legend.position :
            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');
        this.legendBounds = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Rect"](rect.x, rect.y, 0, 0);
        this.isVertical = (this.position === 'Left' || this.position === 'Right');
        if (this.isVertical) {
            this.legendBounds.height = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;
            this.legendBounds.width = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(legend.width || '20%', availableSize.width);
        }
        else {
            this.legendBounds.width = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(legend.width, availableSize.width) || rect.width;
            this.legendBounds.height = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"])(legend.height || '20%', availableSize.height);
        }
        this.getLegendBounds(availableSize, this.legendBounds, legend);
        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);
    };
    /**
     * To find legend alignment for chart and accumulation chart
     *
     * @param {number} start - Specifies the start.
     * @param {number} size - Specifies the size.
     * @param {number} legendSize - Specifies the  legendSize.
     * @param {Alignment} alignment - Specifies the alignment.
     * @returns {number} - Returns the start value.
     */
    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {
        switch (alignment) {
            case 'Far':
                start = (size - legendSize) - start;
                break;
            case 'Center':
                start = ((size - legendSize) / 2);
                break;
        }
        return start;
    };
    /**
     * To find legend location based on position, alignment for chart and accumulation chart
     *
     * @param {LegendPosition} position - Specifies the position.
     * @param {Alignment} alignment - Specifies the alignment.
     * @param {Rect} legendBounds - Specifies the legendBounds.
     * @param {Rect} rect - Specifies the rect.
     * @param {Size} availableSize - Specifies the availableSize.
     * @returns {void}
     */
    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {
        var padding = this.legend.border.width;
        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;
        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;
        var marginBottom = this.gauge.margin.bottom;
        if (position === 'Bottom') {
            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);
            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;
            this.subtractThickness(rect, 0, 0, 0, legendHeight);
        }
        else if (position === 'Top') {
            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);
            legendBounds.y = rect.y + padding + this.legend.margin.top;
            this.subtractThickness(rect, 0, 0, legendHeight, 0);
        }
        else if (position === 'Right') {
            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;
            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);
            this.subtractThickness(rect, 0, legendWidth, 0, 0);
        }
        else {
            legendBounds.x = legendBounds.x + this.legend.margin.left;
            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);
            this.subtractThickness(rect, legendWidth, 0, 0, 0);
        }
    };
    /**
     * Renders the legend.
     *
     * @param {LegendSettingsModel} legend - Specifies the legend.
     * @param {Rect} legendBounds - Specifies the legendBounds.
     * @param {boolean} redraw - Specifies the redraw.
     * @returns {void}
     * @private
     */
    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {
        var firstLegend = this.findFirstLegendPosition(this.legendCollection);
        var padding = legend.padding;
        this.legendRegions = [];
        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);
        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });
        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);
        if (firstLegend !== this.legendCollection.length) {
            this.totalPages = 0;
            var legendAxisGroup = void 0; // legendItem group for each series group element
            // starting shape center x,y position && to resolve lint error used new line for declaration
            var start = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["GaugeLocation"](legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);
            var textOptions = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["TextOption"]('', start.x, start.y, 'start');
            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;
            var count = 0;
            this.pageXCollections = [];
            this.legendCollection[firstLegend].location = start;
            var previousLegend = this.legendCollection[firstLegend];
            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {
                var legendOption = _a[_i];
                if (legendOption.render && legendOption.text !== '') {
                    legendAxisGroup = this.gauge.renderer.createGroup({
                        id: this.legendID + '_g_' + count
                    });
                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);
                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);
                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);
                    if (legendAxisGroup) {
                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));
                    }
                    if (legendTranslateGroup) {
                        legendTranslateGroup.appendChild(legendAxisGroup);
                    }
                    previousLegend = legendOption;
                }
                count++;
            }
            if (this.isPaging) {
                this.renderPagingElements(legendBounds, textOptions, legendGroup);
            }
            else {
                this.totalPages = 1;
            }
        }
        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);
        this.setStyles(this.toggledIndexes);
    };
    /**
     * To render legend paging elements for chart and accumulation chart
     *
     * @param {Rect} bounds - Specifies the bounds.
     * @param {TextOption} textOption - Specifies the textOption.
     * @param {Element} legendGroup - Specifies the legendGroup.
     * @returns {void}
     */
    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {
        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });
        this.pagingRegions = [];
        legendGroup.appendChild(paginggroup);
        var grayColor = '#545454';
        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here
        var padding = 8; // const padding for paging elements
        if (!this.isVertical) {
            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));
        }
        else {
            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);
        }
        var symbolOption = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');
        var iconSize = this.pageButtonSize;
        if (paginggroup) {
            paginggroup.setAttribute('style', 'cursor: pointer');
        }
        // Page left arrow drawing calculation started here
        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);
        this.clipRect.setAttribute('height', this.clipPathHeight.toString());
        var x = bounds.x + iconSize / 2;
        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);
        var size = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["measureText"])(this.totalPages + '/' + this.totalPages, legend.textStyle);
        Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"])({ x: x, y: y }, 'LeftArrow', new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Size"](iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');
        this.pagingRegions.push(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Rect"](x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));
        // Page numbering rendering calculation started here
        textOption.x = x + (iconSize / 2) + padding;
        textOption.y = y + (size.height / 4);
        textOption.id = this.legendID + '_pagenumber';
        textOption.text = '1/' + this.totalPages;
        var pageTextElement = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["textElement"])(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);
        x = (textOption.x + padding + (iconSize / 2) + size.width);
        symbolOption.id = this.legendID + '_pagedown';
        Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"])({ x: x, y: y }, 'RightArrow', new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Size"](iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');
        this.pagingRegions.push(new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Rect"](x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));
        //placing the navigation buttons and page numbering in legend right corner
        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +
            padding + size.width)) + ', ' + 0 + ')');
        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);
    };
    /**
     * To translate legend pages for chart and accumulation chart
     *
     * @param {Element} pagingText - Specifies the pagingText.
     * @param {number} page - Specifies the page.
     * @param {number} pageNumber - Specifies the pageNumber.
     * @returns {number} - Returns the size.
     */
    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {
        var size = (this.clipPathHeight) * page;
        var translate = 'translate(0,-' + size + ')';
        if (this.isVertical) {
            var pageLength = page * this.maxColumns;
            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;
            size = size < 0 ? 0 : size; // to avoid small pixel variation
            translate = 'translate(-' + size + ',0)';
        }
        this.legendTranslateGroup.setAttribute('transform', translate);
        pagingText.textContent = (pageNumber) + '/' + this.totalPages;
        this.currentPage = pageNumber;
        return size;
    };
    /**
     * To render legend text for chart and accumulation chart
     *
     * @param {LegendOptions} legendOption - Specifies the legendOption.
     * @param {Element} group - Specifies the group.
     * @param {TextOption} textOptions - Specifies the textOptions.
     * @param {number} axisIndex - Specifies the axisIndex.
     * @param {number} rangeIndex - Specifies the rangeIndex.
     * @returns {void}
     */
    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {
        var legend = this.gauge.legendSettings;
        var hiddenColor = '#D3D3D3';
        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;
        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;
        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;
        textOptions.text = legendOption.text;
        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;
        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;
        var element = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["textElement"])(textOptions, legend.textStyle, fontcolor, group, '');
    };
    /**
     * To render legend symbols for chart and accumulation chart
     *
     * @param {LegendOptions} legendOption - Specifies the legendOption.
     * @param {Element} group - Specifies the group.
     * @param {number} axisIndex - Specifies the axisIndex.
     * @param {number} rangeIndex - Specifies the rangeIndex.
     * @returns {void}
     */
    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {
        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;
        Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["appendPath"])(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"])(legendOption.location, legendOption.shape, new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["Size"](legendOption.shapeWidth, legendOption.shapeHeight), '', new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["PathOption"](this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');
    };
    /**
     * To find legend rendering locations from legend options.
     *
     * @param {LegendOptions} legendOption - Specifies the legendOption.
     * @param {GaugeLocation} start - Specifies the start.
     * @param {number} textPadding - Specifies the textPadding.
     * @param {LegendOptions} prevLegend - Specifies the prevLegend.
     * @param {Rect} rect - Specifies the rect.
     * @param {number} count - Specifies the count.
     * @param {number} firstLegend - Specifies the firstLegend.
     * @returns {void}
     * @private
     */
    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {
        var padding = this.legend.padding;
        if (this.isVertical) {
            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {
                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);
                legendOption.location.y = start.y;
                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);
                this.totalPages++;
            }
            else {
                legendOption.location.x = prevLegend.location.x;
                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;
            }
        }
        else {
            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);
            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {
                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :
                    prevLegend.location.y + this.maxItemHeight + padding;
                legendOption.location.x = start.x;
            }
            else {
                legendOption.location.y = prevLegend.location.y;
                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;
            }
            this.totalPages = this.totalRowCount;
        }
        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);
        legendOption.text = Object(_utils_helper_legend__WEBPACK_IMPORTED_MODULE_1__["textTrim"])(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);
    };
    // eslint-disable-next-line valid-jsdoc
    /**
     * To show or hide the legend on clicking the legend.
     *
     * @returns {void}
     */
    Legend.prototype.click = function (event) {
        var targetId = event.target.id;
        var legendItemsId = ['_text_', '_Shape_'];
        var index;
        var toggledIndex = -1;
        if (targetId.indexOf(this.legendID) > -1) {
            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {
                var id = legendItemsId_1[_i];
                if (targetId.indexOf(id) > -1) {
                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);
                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);
                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {
                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);
                        index = new Index(axisIndex, rangeIndex, !legendOption.render);
                        if (this.toggledIndexes.length === 0) {
                            this.toggledIndexes.push(index);
                        }
                        else {
                            for (var i = 0; i < this.toggledIndexes.length; i++) {
                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&
                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {
                                    toggledIndex = i;
                                    break;
                                }
                                else {
                                    toggledIndex = -1;
                                }
                            }
                            if (toggledIndex === -1) {
                                this.toggledIndexes.push(index);
                            }
                            else {
                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;
                            }
                        }
                        this.setStyles(this.toggledIndexes);
                    }
                }
            }
        }
        if (targetId.indexOf(this.legendID + '_pageup') > -1) {
            this.changePage(event, true);
        }
        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {
            this.changePage(event, false);
        }
    };
    /**
     * Set toggled legend styles.
     *
     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.
     * @returns {void}
     */
    Legend.prototype.setStyles = function (toggledIndexes) {
        for (var i = 0; i < toggledIndexes.length; i++) {
            var count = 0;
            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {
                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;
                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;
                if (rangeStart == rangeEnd) {
                    count++;
                }
            }
            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;
            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;
            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;
            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);
            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);
            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);
            if (toggledIndexes[i].isToggled) {
                if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(rangeElement)) {
                    rangeElement.style.visibility = 'visible';
                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);
                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);
                }
            }
            else {
                var hiddenColor = '#D3D3D3';
                if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_2__["isNullOrUndefined"])(rangeElement)) {
                    rangeElement.style.visibility = 'hidden';
                    shapeElement.setAttribute('fill', hiddenColor);
                    textElement_1.setAttribute('fill', hiddenColor);
                }
            }
        }
    };
    /**
     * To get legend by index
     *
     * @param {number} axisIndex - Specifies the axisIndex.
     * @param {number} rangeIndex - Specifies the rangeIndex.
     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.
     * @returns {LegendOptions} - Specifies the LegendOptions.
     */
    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {
        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {
            var legend = legendCollections_1[_i];
            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {
                return legend;
            }
        }
        return null;
    };
    /**
     * To change legend pages for chart and accumulation chart
     *
     * @param {Event} event - Specifies the event.
     * @param {boolean} pageUp - Specifies the pageUp.
     * @returns {void}
     */
    Legend.prototype.changePage = function (event, pageUp) {
        var pageText = document.getElementById(this.legendID + '_pagenumber');
        var page = parseInt(pageText.textContent.split('/')[0], 10);
        if (pageUp && page > 1) {
            this.translatePage(pageText, (page - 2), (page - 1));
        }
        else if (!pageUp && page < this.totalPages) {
            this.translatePage(pageText, page, (page + 1));
        }
    };
    /**
     * To find available width from legend x position.
     *
     * @param {number} tx - Specifies the tx value.
     * @param {number} width - Specifies the width.
     * @param {number} legendX - Specifies the legendX.
     * @returns {number} - Returns the number.
     */
    Legend.prototype.getAvailWidth = function (tx, width, legendX) {
        if (this.isVertical) {
            width = this.maxWidth;
        }
        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);
    };
    /**
     * To create legend rendering elements for chart and accumulation chart
     *
     * @param {Rect} legendBounds - Specifies the legendBounds.
     * @param {Element} legendGroup - Specifies the legendGroup.
     * @param {LegendSettingsModel} legend - Specifies the legend.
     * @param {string} id - Specifies the id.
     * @param {boolean} redraw - Specifies the redraw.
     * @returns {Element} - Returns the element.
     */
    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {
        var padding = legend.padding;
        var options = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["RectOption"](id + '_element', legend.background, legend.border, legend.opacity, legendBounds);
        options.width = this.isVertical ? this.maxWidth : legendBounds.width;
        // eslint-disable-next-line max-len
        // eslint-disable-next-line @typescript-eslint/no-unused-expressions
        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);
        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });
        legendGroup.appendChild(legendItemsGroup);
        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });
        legendItemsGroup.appendChild(this.legendTranslateGroup);
        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });
        options.id += '_clipPath_rect';
        options.width = this.isVertical ? options.width - padding : options.width;
        this.clipRect = this.gauge.renderer.drawRectangle(options);
        clippath.appendChild(this.clipRect);
        this.appendChildElement(this.gauge.svgObject, clippath, redraw);
        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');
        return this.legendTranslateGroup;
    };
    /**
     * Method to append child element
     *
     * @param {Element} parent - Specifies the element.
     * @param {Element} childElement - Specifies the child element.
     * @param {boolean} redraw - Specifies the boolean value.
     * @param {boolean} isAnimate - Specifies the boolean value.
     * @param {string} x - Specifies the x value.
     * @param {string} y - Specifies the y value.
     * @param {GaugeLocation} start - Specifies the start value.
     * @param {string} direction - Specifies the direction.
     * @param {boolean} forceAnimate - Specifies the boolean value.
     * @param {boolean} isRect - Specifies the rect value.
     * @param {Rect} previousRect - Specifies the previous rect value.
     * @param {number} animateDuration - Specifies the animate duration.
     * @returns {void}
     */
    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {
        if (isAnimate === void 0) { isAnimate = false; }
        if (x === void 0) { x = 'x'; }
        if (y === void 0) { y = 'y'; }
        if (forceAnimate === void 0) { forceAnimate = false; }
        if (isRect === void 0) { isRect = false; }
        if (previousRect === void 0) { previousRect = null; }
        var existChild = parent.querySelector('#' + childElement.id);
        var element = (existChild || Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getElement"])(childElement.id));
        var child = childElement;
        var duration = animateDuration ? animateDuration : 300;
        if (existChild) {
            parent.replaceChild(child, element);
        }
        else {
            parent.appendChild(child);
        }
    };
    /**
     * To find first valid legend text index for chart and accumulation chart
     *
     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.
     * @returns {number} - Returns the count.
     */
    Legend.prototype.findFirstLegendPosition = function (legendCollection) {
        var count = 0;
        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {
            var legend = legendCollection_1[_i];
            if (legend.render && legend.text !== '') {
                break;
            }
            count++;
        }
        return count;
    };
    /**
     * To find legend bounds for accumulation chart.
     *
     * @param {Size} availableSize - Specifies the availableSize.
     * @param {Rect} legendBounds - Specifies the legendBounds.
     * @param {LegendSettingsModel} legend - Specifies the legend.
     * @returns {void}
     * @private
     */
    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {
        var extraWidth = 0;
        var extraHeight = 0;
        var padding = legend.padding;
        if (!this.isVertical) {
            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;
        }
        else {
            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;
        }
        legendBounds.width += extraWidth;
        legendBounds.height += extraHeight;
        var maximumWidth = 0;
        var rowWidth = 0;
        var rowCount = 0;
        var columnWidth = [];
        var columnHeight = 0;
        var legendWidth = 0;
        this.maxItemHeight = Math.max(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["measureText"])('MeasureText', legend.textStyle).height, legend.shapeHeight);
        var legendEventArgs;
        var render = false;
        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {
            var legendOption = _a[_i];
            legendEventArgs = {
                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,
                name: 'legendRender', cancel: false
            };
            this.gauge.trigger('legendRender', legendEventArgs);
            legendOption.render = !legendEventArgs.cancel;
            legendOption.text = legendEventArgs.text;
            legendOption.fill = legendEventArgs.fill;
            legendOption.shape = legendEventArgs.shape;
            legendOption.textSize = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["measureText"])(legendOption.text, legend.textStyle);
            if (legendOption.render && legendOption.text !== '') {
                render = true;
                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);
                if (this.isVertical) {
                    ++rowCount;
                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;
                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {
                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);
                        rowWidth = rowWidth + maximumWidth;
                        columnWidth.push(maximumWidth);
                        this.totalPages = Math.max(rowCount, this.totalPages || 1);
                        maximumWidth = 0;
                        rowCount = 1;
                    }
                    maximumWidth = Math.max(legendWidth, maximumWidth);
                }
                else {
                    rowWidth = rowWidth + legendWidth;
                    if (legendBounds.width < (padding + rowWidth)) {
                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));
                        if (rowCount === 0 && (legendWidth !== rowWidth)) {
                            rowCount = 1;
                        }
                        rowWidth = legendWidth;
                        rowCount++;
                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;
                    }
                }
            }
        }
        if (this.isVertical) {
            rowWidth = rowWidth + maximumWidth;
            this.isPaging = legendBounds.width < (rowWidth + padding);
            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);
            this.isPaging = this.isPaging && (this.totalPages > 1);
            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {
                columnWidth.push(maximumWidth);
            }
        }
        else {
            this.isPaging = legendBounds.height < columnHeight;
            this.totalPages = this.totalRowCount = rowCount;
            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);
        }
        this.maxColumns = 0; // initialization for max columns
        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :
            Math.max(rowWidth + padding, maximumWidth);
        if (render) { // if any legends not skipped in event check
            this.setBounds(width, columnHeight, legend, legendBounds);
        }
        else {
            this.setBounds(0, 0, legend, legendBounds);
        }
    };
    /**
     * @param {Rect} rect - Specifies the rect.
     * @param {number} left - Specifies the left.
     * @param {number} right - Specifies the right.
     * @param {number} top - Specifies the top.
     * @param {number} bottom - Specifies the bottom.
     * @returns {Rect} - Returns the rect.
     * @private
     */
    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {
        rect.x += left;
        rect.y += top;
        rect.width -= left + right;
        rect.height -= top + bottom;
        return rect;
    };
    /**
     * To set bounds for chart and accumulation chart
     *
     * @param {number} computedWidth - Specifies compute width.
     * @param {number} computedHeight - Specifies compute height.
     * @param {LegendSettingsModel} legend - Specifies the legend.
     * @param {Rect} legendBounds - Specifies the legend bounds.
     * @returns {void}
     */
    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {
        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;
        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;
        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;
        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;
        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));
    };
    /**
     * To find maximum column size for legend
     *
     * @param {number[]} columns - Specifies the columns
     * @param {number} width - Specifies the width
     * @param {number} padding - Specifies the padding
     * @param {number} rowWidth - Specifies the row width
     * @returns {number} - Returns the number
     */
    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {
        var maxPageColumn = padding;
        this.maxColumnWidth = Math.max.apply(null, columns);
        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {
            var column = columns_1[_i];
            maxPageColumn += this.maxColumnWidth;
            this.maxColumns++;
            if (maxPageColumn + padding > width) {
                maxPageColumn -= this.maxColumnWidth;
                this.maxColumns--;
                break;
            }
        }
        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);
        if (maxPageColumn === padding) {
            maxPageColumn = width;
        }
        this.maxColumns = Math.max(1, this.maxColumns);
        this.maxWidth = maxPageColumn;
        return maxPageColumn;
    };
    /**
     * To show or hide trimmed text tooltip for legend.
     *
     * @param {Event} event - Specifies the event.
     * @returns {void}
     * @private
     */
    Legend.prototype.move = function (event) {
        var x = this.gauge.mouseX;
        var y = this.gauge.mouseY;
        var targetId = event.target.id;
        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {
            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);
            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);
            var text = '';
            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {
                var legends = _a[_i];
                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {
                    text = legends.originalText;
                }
            }
            Object(_utils_helper_legend__WEBPACK_IMPORTED_MODULE_1__["showTooltip"])(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["getElement"])(this.gauge.element.id + '_Secondary_Element'));
        }
        else {
            Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["removeElement"])(this.gauge.element.id + '_EJ2_Legend_Tooltip');
        }
    };
    /**
     * Get module name.
     *
     * @returns {string} - Returns the module name.
     */
    Legend.prototype.getModuleName = function () {
        return 'Legend';
    };
    /**
     * To destroy the legend.
     *
     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge
     * @returns {void}
     * @private
     */
    Legend.prototype.destroy = function (circulargauge) {
        /**
         * Destroy method performed here
         */
        this.removeEventListener();
    };
    return Legend;
}());

/**
 * @private
 */
var Index = /** @class */ (function () {
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function Index(axisIndex, rangeIndex, isToggled) {
        this.axisIndex = axisIndex;
        this.rangeIndex = rangeIndex;
        this.isToggled = isToggled;
    }
    return Index;
}());

/**
 * Class for legend options
 *
 * @private
 */
var LegendOptions = /** @class */ (function () {
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {
        this.location = { x: 0, y: 0 };
        this.text = text;
        this.originalText = originalText;
        this.fill = fill;
        this.shape = shape;
        this.visible = visible;
        this.border = border;
        this.shapeBorder = shapeBorder;
        this.shapeWidth = shapeWidth;
        this.shapeHeight = shapeHeight;
        this.rangeIndex = rangeIndex;
        this.axisIndex = axisIndex;
    }
    return LegendOptions;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/base.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/base.js ***!
  \****************************************************************************************************************************************/
/*! exports provided: Border, Font, RangeTooltip, AnnotationTooltip, Margin, TooltipSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Border", function() { return Border; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Font", function() { return Font; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RangeTooltip", function() { return RangeTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnnotationTooltip", function() { return AnnotationTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Margin", function() { return Margin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipSettings", function() { return TooltipSettings; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

/**
 * Sets and gets the options to customize the color and width of the borders in circular gauge.
 */
var Border = /** @class */ (function (_super) {
    __extends(Border, _super);
    function Border() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], Border.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1)
    ], Border.prototype, "width", void 0);
    return Border;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the font style for the circular gauge.
 */
var Font = /** @class */ (function (_super) {
    __extends(Font, _super);
    function Font() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('16px')
    ], Font.prototype, "size", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], Font.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('segoe UI')
    ], Font.prototype, "fontFamily", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Normal')
    ], Font.prototype, "fontWeight", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Normal')
    ], Font.prototype, "fontStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1)
    ], Font.prototype, "opacity", void 0);
    return Font;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the options to customize the tooltip properties for range tooltip.
 */
var RangeTooltip = /** @class */ (function (_super) {
    __extends(RangeTooltip, _super);
    function RangeTooltip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], RangeTooltip.prototype, "fill", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ size: '13px' }, Font)
    ], RangeTooltip.prototype, "textStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], RangeTooltip.prototype, "format", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], RangeTooltip.prototype, "template", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], RangeTooltip.prototype, "enableAnimation", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, Border)
    ], RangeTooltip.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], RangeTooltip.prototype, "showAtMousePosition", void 0);
    return RangeTooltip;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the options to customize the tooltip for annotation in circular gauge.
 */
var AnnotationTooltip = /** @class */ (function (_super) {
    __extends(AnnotationTooltip, _super);
    function AnnotationTooltip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], AnnotationTooltip.prototype, "fill", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ size: '13px' }, Font)
    ], AnnotationTooltip.prototype, "textStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], AnnotationTooltip.prototype, "format", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], AnnotationTooltip.prototype, "template", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], AnnotationTooltip.prototype, "enableAnimation", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, Border)
    ], AnnotationTooltip.prototype, "border", void 0);
    return AnnotationTooltip;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the margin of circular gauge.
 */
var Margin = /** @class */ (function (_super) {
    __extends(Margin, _super);
    function Margin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(10)
    ], Margin.prototype, "left", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(10)
    ], Margin.prototype, "right", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(10)
    ], Margin.prototype, "top", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(10)
    ], Margin.prototype, "bottom", void 0);
    return Margin;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Sets and gets the options to customize the tooltip of the circular gauge.
 */
var TooltipSettings = /** @class */ (function (_super) {
    __extends(TooltipSettings, _super);
    function TooltipSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], TooltipSettings.prototype, "enable", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], TooltipSettings.prototype, "fill", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ size: '13px' }, Font)
    ], TooltipSettings.prototype, "textStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, RangeTooltip)
    ], TooltipSettings.prototype, "rangeSettings", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, AnnotationTooltip)
    ], TooltipSettings.prototype, "annotationSettings", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], TooltipSettings.prototype, "format", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], TooltipSettings.prototype, "template", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], TooltipSettings.prototype, "enableAnimation", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({}, Border)
    ], TooltipSettings.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], TooltipSettings.prototype, "showAtMousePosition", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Pointer')
    ], TooltipSettings.prototype, "type", void 0);
    return TooltipSettings;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js ***!
  \*********************************************************************************************************************************************/
/*! exports provided: loaded, load, animationComplete, axisLabelRender, radiusCalculate, tooltipRender, annotationRender, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, gaugeMouseUp, dragStart, dragMove, dragEnd, resized, beforePrint, pointerStart, pointerMove, pointerEnd, rangeStart, rangeMove, rangeEnd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loaded", function() { return loaded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "load", function() { return load; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "animationComplete", function() { return animationComplete; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "axisLabelRender", function() { return axisLabelRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radiusCalculate", function() { return radiusCalculate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tooltipRender", function() { return tooltipRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "annotationRender", function() { return annotationRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gaugeMouseMove", function() { return gaugeMouseMove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gaugeMouseLeave", function() { return gaugeMouseLeave; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gaugeMouseDown", function() { return gaugeMouseDown; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gaugeMouseUp", function() { return gaugeMouseUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dragStart", function() { return dragStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dragMove", function() { return dragMove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dragEnd", function() { return dragEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resized", function() { return resized; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "beforePrint", function() { return beforePrint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointerStart", function() { return pointerStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointerMove", function() { return pointerMove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointerEnd", function() { return pointerEnd; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeStart", function() { return rangeStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeMove", function() { return rangeMove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rangeEnd", function() { return rangeEnd; });
/**
 * Specifies the gauge constant value
 */
/**
 * Sets and gets loaded event name in the circular gauge component.
 *
 * @private
 */
var loaded = 'loaded';
/**
 * Sets and gets load event name in the circular gauge component.
 *
 * @private
 */
var load = 'load';
/**
 * Sets and gets animation complete event name in the circular gauge component.
 *
 * @private
 */
var animationComplete = 'animationComplete';
/**
 * Sets and gets axis label render event name in the circular gauge component.
 *
 * @private
 */
var axisLabelRender = 'axisLabelRender';
/**
 * Sets and gets radius calculate event name in the circular gauge component.
 *
 * @private
 */
var radiusCalculate = 'radiusCalculate';
/**
 * Sets and gets tooltip render event name in the circular gauge component.
 *
 * @private
 */
var tooltipRender = 'tooltipRender';
/**
 * Sets and gets annotation render event name in the circular gauge component.
 *
 * @private
 */
var annotationRender = 'annotationRender';
/**
 * Sets and gets gauge mouse move event name in the circular gauge component.
 *
 * @private
 */
var gaugeMouseMove = 'gaugeMouseMove';
/**
 * Sets and gets gauge mouse leave event name in the circular gauge component.
 *
 * @private
 */
var gaugeMouseLeave = 'gaugeMouseLeave';
/**
 * Sets and gets gauge mouse down event name in the circular gauge component.
 *
 * @private
 */
var gaugeMouseDown = 'gaugeMouseDown';
/**
 * Sets and gets gauge mouse up event name in circular gauge component.
 *
 * @private
 */
var gaugeMouseUp = 'gaugeMouseUp';
/**
 * Sets and gets drag start event name in the circular gauge component.
 *
 * @private
 */
var dragStart = 'dragStart';
/**
 * Sets and gets drag move event name in the circular gauge component.
 *
 * @private
 */
var dragMove = 'dragMove';
/**
 * Sets and gets drag end event name in the circular gauge component.
 *
 * @private
 */
var dragEnd = 'dragEnd';
/**
 * Sets and gets resize event name in the circular gauge component.
 *
 * @private
 */
var resized = 'resized';
/**
 * Sets and gets before print event name in the circular gauge component.
 *
 * @private
 */
var beforePrint = 'beforePrint';
/**
 * Sets and gets pointer start event name in the circular gauge component.
 *
 * @private
 */
var pointerStart = 'pointerStart';
/**
 * Sets and gets pointer move event name in the circular gauge component.
 *
 * @private
 */
var pointerMove = 'pointerMove';
/**
 * Sets and gets pointer end event name in the circular gauge component.
 *
 * @private
 */
var pointerEnd = 'pointerEnd';
/**
 * Sets and gets range start event name in the circular gauge component.
 *
 * @private
 */
var rangeStart = 'rangeStart';
/**
 * Sets and gets range move event name in the circular gauge component.
 *
 * @private
 */
var rangeMove = 'rangeMove';
/**
 * Sets and gets range end event name in the circular gauge component.
 *
 * @private
 */
var rangeEnd = 'rangeEnd';


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/image-export.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/image-export.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: ImageExport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageExport", function() { return ImageExport; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");

/**
 * Represent the Image Export for gauge
 *
 * @hidden
 */
var ImageExport = /** @class */ (function () {
    /**
     * Constructor for gauge
     *
     * @param {CircularGauge} control - Specfies the instance of the gauge
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function ImageExport(control) {
        this.control = control;
    }
    /**
     * To export the file as image/svg format
     *
     * @param {ExportType} type - Specifies the type of the image file.
     * @param {string} fileName - Specifies the file name of the image file.
     * @param {boolean} allowDownload - Specifies whether to download the image file or not.
     * @returns {Promise<string>} - Returns promise string.
     * @private
     */
    ImageExport.prototype.export = function (type, fileName, allowDownload) {
        var _this = this;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var promise = new Promise(function (resolve, reject) {
            var isDownload = !(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].userAgent.toString().indexOf('HeadlessChrome') > -1);
            var element = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('canvas', {
                id: 'ej2-canvas',
                attrs: {
                    'width': _this.control.availableSize.width.toString(),
                    'height': _this.control.availableSize.height.toString()
                }
            });
            var svgData = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">' +
                _this.control.svgObject.outerHTML +
                '</svg>';
            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :
                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));
            if (type === 'SVG') {
                if (allowDownload) {
                    _this.triggerDownload(fileName, type, url, isDownload);
                }
                else {
                    resolve(null);
                }
            }
            else {
                var image_1 = new Image();
                var context_1 = element.getContext('2d');
                image_1.onload = (function () {
                    context_1.drawImage(image_1, 0, 0);
                    window.URL.revokeObjectURL(url);
                    if (allowDownload) {
                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);
                    }
                    else {
                        if (type === 'JPEG') {
                            resolve(element.toDataURL('image/jpeg'));
                        }
                        else if (type === 'PNG') {
                            resolve(element.toDataURL('image/png'));
                        }
                    }
                });
                image_1.src = url;
            }
        });
        return promise;
    };
    ImageExport.prototype.getModuleName = function () {
        // Returns te module name
        return 'ImageExport';
    };
    /**
     * To destroy the ImageExport.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @returns {void}
     * @private
     */
    ImageExport.prototype.destroy = function (gauge) {
        // Destroy method performed here
    };
    /**
    * To trigger the download element
    *
    * @param {string} fileName - Specifies the file name.
    * @param {ExportType} type - Specifies the export type.
    * @param {string} url - Specifies the url.
    * @param {boolean} isDownload - Specifies the boolean value.
    * @returns {void}
    */
    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('a', {
            attrs: {
                'download': fileName + '.' + type.toLocaleLowerCase(),
                'href': url
            }
        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {
            view: window,
            bubbles: false,
            cancelable: true
        }));
    };
    return ImageExport;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/pdf-export.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/pdf-export.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: PdfExport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfExport", function() { return PdfExport; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-pdf-export */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/index.js");


/**
 * Represent the Pdf export for gauge
 *
 * @hidden
 */
var PdfExport = /** @class */ (function () {
    /**
     * Constructor for gauge
     *
     * @param {CircularGauge} control - Specfies the instance of the gauge.
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function PdfExport(control) {
        this.control = control;
    }
    /**
     * To export the file as image/svg format
     *
     * @param {ExportType} type - Specifies the type of the document.
     * @param {string} fileName Specfies the file name of the document.
     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.
     * @param {boolean} allowDownload - Specfies whether to download the document or not.
     * @returns {Promise<string>} - Returns the promise string
     * @private
     */
    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {
        var _this = this;
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var promise = new Promise(function (resolve, reject) {
            var element = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('canvas', {
                id: 'ej2-canvas',
                attrs: {
                    'width': _this.control.availableSize.width.toString(),
                    'height': _this.control.availableSize.height.toString()
                }
            });
            var isDownload = !(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].userAgent.toString().indexOf('HeadlessChrome') > -1);
            orientation = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(orientation) ? _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__["PdfPageOrientation"].Landscape : orientation;
            var exportElement = _this.control.svgObject.cloneNode(true);
            var backgroundElement = exportElement.childNodes[0];
            var backgroundColor = backgroundElement.getAttribute('fill');
            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Bootstrap5Dark')
                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {
                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');
            }
            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));
            var image = new Image();
            var context = element.getContext('2d');
            image.onload = (function () {
                context.drawImage(image, 0, 0);
                window.URL.revokeObjectURL(url);
                var document = new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__["PdfDocument"]();
                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');
                document.pageSettings.orientation = orientation;
                imageString = imageString.slice(imageString.indexOf(',') + 1);
                document.pages.add().graphics.
                    drawImage(new _syncfusion_ej2_pdf_export__WEBPACK_IMPORTED_MODULE_1__["PdfBitmap"](imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);
                if (allowDownload) {
                    document.save(fileName + '.pdf');
                    document.destroy();
                }
                else {
                    resolve(null);
                }
            });
            image.src = url;
        });
        return promise;
    };
    PdfExport.prototype.getModuleName = function () {
        // Returns te module name
        return 'PdfExport';
    };
    /**
     * To destroy the PdfExport.
     *
     * @param {CircularGauge} gauge - Specfies the instance of the gauge
     * @returns {void}
     * @private
     */
    PdfExport.prototype.destroy = function (gauge) {
        // Destroy method performed here
    };
    return PdfExport;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/print.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/print.js ***!
  \*****************************************************************************************************************************************/
/*! exports provided: Print */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Print", function() { return Print; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js");



/**
 * Represent the print for gauge
 *
 * @hidden
 */
var Print = /** @class */ (function () {
    /**
     * Constructor for gauge
     *
     * @param {CircularGauge} control - Specifies the instance of the gauge.
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function Print(control) {
        this.control = control;
    }
    /**
     * To print the gauge
     *
     * @param {string[] | string | Element} elements - Specifies the element.
     * @returns {void}
     * @private
     */
    Print.prototype.print = function (elements) {
        var _this = this;
        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');
        this.printWindow.moveTo(0, 0);
        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);
        var argsData = {
            cancel: false, htmlContent: this.getHTMLContent(elements), name: _constants__WEBPACK_IMPORTED_MODULE_2__["beforePrint"]
        };
        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {
            if (!argsData.cancel) {
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["print"])(argsData.htmlContent, _this.printWindow);
            }
        });
    };
    /**
     * To get the html string of the gauge
     *
     * @param { string[] | string | Element} elements - Specifies the element.
     * @returns {Element} - Returns the div element.
     * @private
     */
    Print.prototype.getHTMLContent = function (elements) {
        var div = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('div');
        if (elements) {
            if (elements instanceof Array) {
                elements.forEach(function (value) {
                    div.appendChild(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getElement"])(value).cloneNode(true));
                });
            }
            else if (elements instanceof Element) {
                div.appendChild(elements.cloneNode(true));
            }
            else {
                div.appendChild(Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getElement"])(elements).cloneNode(true));
            }
        }
        else {
            div.appendChild(this.control.element.cloneNode(true));
        }
        return div;
    };
    Print.prototype.getModuleName = function () {
        // Returns te module name
        return 'Print';
    };
    /**
     * To destroy the Print.
     *
     * @param {CircularGauge} gauge - Specfies the instance of the gauge
     * @returns {void}
     * @private
     */
    Print.prototype.destroy = function (gauge) {
        // Destroy method performed here
    };
    return Print;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/theme.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/theme.js ***!
  \*****************************************************************************************************************************************/
/*! exports provided: Theme, getRangePalette, getThemeStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Theme", function() { return Theme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRangePalette", function() { return getRangePalette; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getThemeStyle", function() { return getThemeStyle; });
/**
 * Specifies gauge Themes
 */
var Theme;
(function (Theme) {
    /** @private */
    Theme.axisLabelFont = {
        size: '12px',
        fontWeight: 'Normal',
        color: null,
        fontStyle: 'Normal',
        fontFamily: null
    };
    Theme.legendLabelFont = {
        size: '12px',
        fontWeight: 'Normal',
        color: null,
        fontStyle: 'Normal',
        fontFamily: null
    };
})(Theme || (Theme = {}));
/**
 * @param {string} theme theme
 * @returns {string[]} palette
 * @private */
function getRangePalette(theme) {
    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];
    switch (theme.toLowerCase()) {
        case 'tailwind':
            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',
                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];
            break;
        case 'tailwinddark':
            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',
                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];
            break;
        case 'bootstrap5':
            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',
                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];
            break;
        case 'bootstrap5dark':
            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',
                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];
            break;
        case 'fluentui':
            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',
                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];
            break;
        case 'fluentuidark':
            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',
                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];
            break;
    }
    return palette;
}
/**
 * Function to get ThemeStyle
 *
 * @param {GaugeTheme} theme theme
 * @returns {IThemeStyle} style
 * @private */
function getThemeStyle(theme) {
    var style;
    switch (theme.toLowerCase()) {
        case 'materialdark':
        case 'fabricdark':
        case 'bootstrapdark':
            style = {
                backgroundColor: '#333232',
                titleFontColor: '#ffffff',
                tooltipFillColor: '#FFFFFF',
                tooltipFontColor: '#000000',
                labelColor: '#DADADA',
                lineColor: '#C8C8C8',
                majorTickColor: '#C8C8C8',
                minorTickColor: '#9A9A9A',
                pointerColor: '#9A9A9A',
                capColor: '#9A9A9A',
                needleColor: '#9A9A9A',
                needleTailColor: '#9A9A9A',
                labelFontFamily: 'Segoe UI',
                titleFontWeight: 'Normal'
            };
            break;
        case 'highcontrast':
            style = {
                backgroundColor: '#000000',
                titleFontColor: '#FFFFFF',
                tooltipFillColor: '#ffffff',
                tooltipFontColor: '#000000',
                labelColor: '#FFFFFF',
                lineColor: '#FFFFFF',
                majorTickColor: '#FFFFFF',
                minorTickColor: '#FFFFFF',
                pointerColor: '#FFFFFF',
                capColor: '#FFFFFF',
                needleColor: '#FFFFFF',
                needleTailColor: '#FFFFFF',
                labelFontFamily: 'Segoe UI',
                titleFontWeight: 'Normal'
            };
            break;
        case 'bootstrap4':
            style = {
                backgroundColor: '#FFFFFF',
                titleFontColor: '#212529',
                tooltipFillColor: '#000000',
                tooltipFontColor: '#FFFFFF',
                labelColor: '#212529',
                lineColor: '#DEE2E6',
                majorTickColor: '#ADB5BD',
                minorTickColor: '#CED4DA',
                pointerColor: '#6C757D',
                capColor: '#6C757D',
                needleColor: '#6C757D',
                needleTailColor: '#6C757D',
                fontFamily: 'HelveticaNeue-Medium',
                fontSize: '16px',
                labelFontFamily: 'HelveticaNeue',
                tooltipFillOpacity: 1,
                tooltipTextOpacity: 0.9,
                titleFontWeight: 'Normal'
            };
            break;
        case 'tailwind':
            style = {
                backgroundColor: 'rgba(255,255,255, 0.0)',
                titleFontColor: '#374151',
                tooltipFillColor: '#111827',
                tooltipFontColor: '#F9FAFB',
                labelColor: '#6B7280',
                lineColor: '#E5E7EB',
                majorTickColor: '#9CA3AF',
                minorTickColor: '#9CA3AF',
                pointerColor: '#1F2937',
                capColor: '#1F2937',
                needleColor: '#1F2937',
                needleTailColor: '#1F2937',
                fontFamily: 'Inter',
                fontSize: '14px',
                labelFontFamily: 'Inter',
                tooltipFillOpacity: 1,
                tooltipTextOpacity: 0.9,
                titleFontWeight: '500'
            };
            break;
        case 'tailwinddark':
            style = {
                backgroundColor: 'rgba(255,255,255, 0.0)',
                titleFontColor: '#D1D5DB',
                tooltipFillColor: '#F9FAFB',
                tooltipFontColor: '#1F2937',
                labelColor: '#9CA3AF',
                lineColor: '#374151',
                majorTickColor: '#6B7280',
                minorTickColor: '#6B7280',
                pointerColor: '#9CA3AF',
                capColor: '#9CA3AF',
                needleColor: '#9CA3AF',
                needleTailColor: '#9CA3AF',
                fontFamily: 'Inter',
                fontSize: '14px',
                labelFontFamily: 'Inter',
                tooltipFillOpacity: 1,
                tooltipTextOpacity: 0.9,
                titleFontWeight: '500'
            };
            break;
        case 'bootstrap5':
            style = {
                backgroundColor: 'rgba(255,255,255, 0.0)',
                titleFontColor: '#343A40',
                tooltipFillColor: '#212529',
                tooltipFontColor: '#F9FAFB',
                labelColor: '#495057',
                lineColor: '#E5E7EB',
                majorTickColor: '#9CA3AF',
                minorTickColor: '#9CA3AF',
                pointerColor: '#1F2937',
                capColor: '#1F2937',
                needleColor: '#1F2937',
                needleTailColor: '#1F2937',
                fontFamily: 'Helvetica Neue',
                fontSize: '14px',
                labelFontFamily: 'Helvetica Neue',
                tooltipFillOpacity: 1,
                tooltipTextOpacity: 1,
                titleFontWeight: '500'
            };
            break;
        case 'bootstrap5dark':
            style = {
                backgroundColor: 'rgba(255,255,255, 0.0)',
                titleFontColor: '#E9ECEF',
                tooltipFillColor: '#E9ECEF',
                tooltipFontColor: '#212529',
                labelColor: '#CED4DA',
                lineColor: '#343A40',
                majorTickColor: '#6C757D',
                minorTickColor: '#6C757D',
                pointerColor: '#ADB5BD',
                capColor: '#ADB5BD',
                needleColor: '#ADB5BD',
                needleTailColor: '#ADB5BD',
                fontFamily: 'Helvetica Neue',
                fontSize: '14px',
                labelFontFamily: 'Helvetica Neue',
                tooltipFillOpacity: 1,
                tooltipTextOpacity: 1,
                titleFontWeight: '500'
            };
            break;
        case 'fluentui':
            style = {
                backgroundColor: 'rgba(255,255,255, 0.0)',
                titleFontColor: '#201F1E',
                tooltipFillColor: '#FFFFFF',
                tooltipFontColor: '#323130',
                labelColor: '#3B3A39',
                lineColor: '#EDEBE9',
                majorTickColor: '#C8C6C4',
                minorTickColor: '#C8C6C4',
                pointerColor: '#A19F9D',
                capColor: '#A19F9D',
                needleColor: '#A19F9D',
                needleTailColor: '#A19F9D',
                fontFamily: 'Segoe UI',
                fontSize: '14px',
                labelFontFamily: 'Segoe UI',
                tooltipFillOpacity: 1,
                tooltipTextOpacity: 1,
                titleFontWeight: '600'
            };
            break;
        case 'fluentuidark':
            style = {
                backgroundColor: 'rgba(255,255,255, 0.0)',
                titleFontColor: '#F3F2F1',
                tooltipFillColor: '#252423',
                tooltipFontColor: '#F3F2F1',
                labelColor: '#C8C6C4',
                lineColor: '#292827',
                majorTickColor: '#484644',
                minorTickColor: '#484644',
                pointerColor: '#797775',
                capColor: '#797775',
                needleColor: '#797775',
                needleTailColor: '#797775',
                fontFamily: 'Segoe UI',
                fontSize: '14px',
                labelFontFamily: 'Segoe UI',
                tooltipFillOpacity: 1,
                tooltipTextOpacity: 1,
                titleFontWeight: '600'
            };
            break;
        default:
            style = {
                backgroundColor: '#FFFFFF',
                titleFontColor: '#424242',
                tooltipFillColor: '#363F4C',
                tooltipFontColor: '#ffffff',
                labelColor: '#212121',
                lineColor: '#E0E0E0',
                majorTickColor: '#9E9E9E',
                minorTickColor: '#9E9E9E',
                pointerColor: '#757575',
                capColor: '#757575',
                needleColor: '#757575',
                needleTailColor: '#757575',
                labelFontFamily: 'Segoe UI',
                titleFontWeight: 'Normal'
            };
            break;
    }
    return style;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/user-interaction/tooltip.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/user-interaction/tooltip.js ***!
  \******************************************************************************************************************************************************/
/*! exports provided: GaugeTooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeTooltip", function() { return GaugeTooltip; });
/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/index.js");
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/helper-tooltip */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-tooltip.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _model_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../model/constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/model/constants.js");





/**
 * Sets and gets the module that handles the tooltip of the circular gauge
 */
var GaugeTooltip = /** @class */ (function () {
    /**
     * Constructor for Tooltip module.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @private.
     */
    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility
    function GaugeTooltip(gauge) {
        this.gauge = gauge;
        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';
        this.tooltip = gauge.tooltip;
        this.textStyle = {
            color: this.tooltip.textStyle.color, opacity: this.tooltip.textStyle.opacity,
            fontFamily: this.tooltip.textStyle.fontFamily, fontStyle: this.tooltip.textStyle.fontStyle,
            fontWeight: this.tooltip.textStyle.fontWeight, size: this.tooltip.textStyle.size
        };
        this.borderStyle = this.tooltip.border;
        this.addEventListener();
    }
    // eslint-disable-next-line valid-jsdoc
    /**
     * Method to render the tooltip for circular gauge.
     */
    GaugeTooltip.prototype.renderTooltip = function (e) {
        var _this = this;
        this.gaugeId = this.gauge.element.getAttribute('id');
        var pageX;
        var pageY;
        var target;
        var touchArg;
        var location;
        var samePointerEle = false;
        var isTooltipRender = false;
        if (e.type.indexOf('touch') !== -1) {
            touchArg = e;
            target = touchArg.target;
            pageX = touchArg.changedTouches[0].pageX;
            pageY = touchArg.changedTouches[0].pageY;
        }
        else {
            target = e.target;
            pageX = e.pageX;
            pageY = e.pageY;
        }
        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&
            (target.id.indexOf(this.gaugeId) >= 0)) {
            if (this.pointerEle !== null) {
                samePointerEle = (this.pointerEle === target);
            }
            isTooltipRender = true;
            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();
            var elementRect = this.gauge.element.getBoundingClientRect();
            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();
            var rect_1 = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);
            var currentPointer = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getPointer"])(target.id, this.gauge);
            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];
            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];
            var angle_1 = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getAngleFromValue"])(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;
            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;
            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var format = this.gauge.intl.getNumberFormat({
                format: Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLabelFormat"])(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator
            });
            this.tooltipElement();
            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {
                return null;
            }
            var roundValue = this.roundedValue(this.currentPointer.currentValue);
            var pointerContent_1 = customLabelFormat ?
                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :
                format(roundValue);
            location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);
            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||
                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;
            var tooltipArgs = {
                name: _model_constants__WEBPACK_IMPORTED_MODULE_4__["tooltipRender"], cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,
                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'
            };
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var pointerTooltip = function (tooltipArgs) {
                var template = tooltipArgs.tooltip.template;
                if (template !== null && template.length === 1) {
                    template = template[template[0]];
                }
                if (!tooltipArgs.tooltip.showAtMousePosition) {
                    if (template) {
                        var elementSize = Object(_utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_2__["getElementSize"])(template, _this.gauge, _this.tooltipEle);
                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?
                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;
                    }
                    else {
                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);
                    }
                }
                else {
                    tooltipArgs.location = Object(_utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_2__["getMousePosition"])(pageX, pageY, _this.gauge.svgObject);
                    _this.tooltipRect = rect_1;
                }
                if (!tooltipArgs.cancel && !samePointerEle) {
                    _this.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;
                    _this.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;
                    _this.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||
                        tooltipArgs.tooltip.textStyle.opacity;
                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, _this.textStyle, tooltipArgs.tooltip.border);
                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;
                    _this.svgTooltip.appendTo(_this.tooltipEle);
                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {
                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';
                    }
                }
            };
            this.gauge.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_4__["tooltipRender"], tooltipArgs, pointerTooltip);
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            this.gauge.renderReactTemplates();
        }
        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&
            (target.id.indexOf(this.gaugeId) >= 0)) {
            isTooltipRender = true;
            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();
            var rangeElementRect = this.gauge.element.getBoundingClientRect();
            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();
            var rect_2 = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);
            var currentRange = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getPointer"])(target.id, this.gauge);
            this.currentAxis = this.gauge.axes[currentRange.axisIndex];
            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];
            var rangeAngle_1 = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getAngleFromValue"])((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;
            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;
            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||
                rangeTooltipFormat.match('{start}') !== null);
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var rangeFormat = this.gauge.intl.getNumberFormat({
                format: Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLabelFormat"])(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator
            });
            this.tooltipElement();
            var roundStartValue = this.roundedValue(this.currentRange.start);
            var roundEndValue = this.roundedValue(this.currentRange.end);
            var startData_1 = (this.currentRange.start).toString();
            var endData_1 = (this.currentRange.end).toString();
            var rangeContent_1 = customLabelFormat ?
                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :
                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);
            location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);
            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||
                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||
                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;
            var rangeTooltipArgs = {
                name: _model_constants__WEBPACK_IMPORTED_MODULE_4__["tooltipRender"], cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,
                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'
            };
            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,
                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,
                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size
            };
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var rangeTooltip = function (rangeTooltipArgs) {
                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;
                if (rangeTemplate !== null && rangeTemplate.length === 1) {
                    rangeTemplate = rangeTemplate[rangeTemplate[0]];
                }
                if (rangeTemplate) {
                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);
                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);
                }
                if (!_this.tooltip.rangeSettings.showAtMousePosition) {
                    if (rangeTemplate) {
                        var elementSize = Object(_utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_2__["getElementSize"])(rangeTemplate, _this.gauge, _this.tooltipEle);
                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?
                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;
                    }
                    else {
                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);
                    }
                }
                else {
                    rangeTooltipArgs.location = Object(_utils_helper_tooltip__WEBPACK_IMPORTED_MODULE_2__["getMousePosition"])(pageX, pageY, _this.gauge.svgObject);
                    _this.tooltipRect = rect_2;
                }
                if (!rangeTooltipArgs.cancel) {
                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||
                        _this.gauge.themeStyle.tooltipFontColor;
                    rangeTooltipTextStyle_1.fontFamily = _this.gauge.themeStyle.fontFamily ||
                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;
                    rangeTooltipTextStyle_1.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||
                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;
                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);
                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;
                    _this.svgTooltip.appendTo(_this.tooltipEle);
                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {
                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';
                    }
                }
            };
            this.gauge.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_4__["tooltipRender"], rangeTooltipArgs, rangeTooltip);
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            this.gauge.renderReactTemplates();
        }
        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&
            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {
            isTooltipRender = true;
            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();
            var annotationElementRect = this.gauge.element.getBoundingClientRect();
            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();
            var rect_3 = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);
            var currentAnnotation = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getPointer"])(this.annotationTargetElement.id, this.gauge);
            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];
            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];
            var annotationAngle = (this.currentAnnotation.angle - 90);
            this.tooltipElement();
            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);
            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?
                this.gauge.tooltip.annotationSettings.format : '';
            location = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["getLocationFromAngle"])(annotationAngle, Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["stringToNumber"])(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);
            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||
                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?
                (location.x + 10) : location.x;
            var annotationTooltipArgs = {
                name: _model_constants__WEBPACK_IMPORTED_MODULE_4__["tooltipRender"], cancel: false, content: annotationContent, location: location, axis: this.currentAxis,
                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,
                type: 'Annotation'
            };
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var annotationTooltip = function (annotationTooltipArgs) {
                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;
                if (annotationTemplate !== null && annotationTemplate.length === 1) {
                    annotationTemplate = annotationTemplate[annotationTemplate[0]];
                }
                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();
                _this.tooltipPosition = 'RightTop';
                _this.arrowInverted = true;
                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);
                _this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect_3.x, rect_3.y, rect_3.width, rect_3.height);
                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||
                    _this.gauge.tooltip.annotationSettings.template !== null)) {
                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||
                        _this.gauge.themeStyle.tooltipFontColor;
                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||
                        annotationTooltipArgs.tooltip.textStyle.fontFamily;
                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||
                        annotationTooltipArgs.tooltip.textStyle.opacity;
                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);
                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;
                    _this.svgTooltip.appendTo(_this.tooltipEle);
                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {
                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';
                    }
                }
            };
            this.gauge.trigger(_model_constants__WEBPACK_IMPORTED_MODULE_4__["tooltipRender"], annotationTooltipArgs, annotationTooltip);
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            this.gauge.renderReactTemplates();
        }
        else {
            this.removeTooltip();
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            this.gauge.clearTemplate();
        }
        var gaugeElement = document.getElementById(this.gaugeId);
        var gaugeRect = gaugeElement.getBoundingClientRect();
        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;
        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {
            var tooltipLeft = this.tooltipEle.style.left.split("px")[0];
            this.tooltipEle.style.left = parseInt(tooltipLeft) + (gaugeRect.left - tooltipRect.left) + 'px';
        }
        if (isTooltipRender && tooltipRect.top < 0) {
            this.tooltipEle.style.top = 0 + 'px';
        }
    };
    /**
     * Method to create tooltip svg element.
     *
     * @param {Tooltip} svgTooltip - Specifies the tooltip element.
     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.
     * @param {string} template - Specifies the tooltip template.
     * @param {boolean} arrowInverted - Specifies the boolean value.
     * @param {Rect} tooltipRect - Specifies the rect element.
     * @param {CircularGauge} gauge - Specifies the gauge instance.
     * @param {string} fill - Spcifies the fill color of the tooltip.
     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.
     * @param {BorderModel} border - Specifies the border of the tooltip.
     * @returns {Tooltip} - Returns the tooltip.
     */
    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {
        svgTooltip = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_0__["Tooltip"]({
            enable: true,
            data: { value: tooltipArg.content },
            template: template,
            enableAnimation: tooltipArg.tooltip.enableAnimation,
            content: [tooltipArg.content],
            location: tooltipArg.location,
            inverted: arrowInverted,
            areaBounds: tooltipRect,
            fill: fill || gauge.themeStyle.tooltipFillColor,
            textStyle: textStyle,
            availableSize: gauge.availableSize,
            border: border
        });
        return svgTooltip;
    };
    /**
     * Method to create or modify tolltip element.
     *
     * @returns {void}
     */
    GaugeTooltip.prototype.tooltipElement = function () {
        if (document.getElementById(this.tooltipId)) {
            this.tooltipEle = document.getElementById(this.tooltipId);
        }
        else {
            this.tooltipEle = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["createElement"])('div', {
                id: this.tooltipId,
                className: 'EJ2-CircularGauge-Tooltip',
                styles: 'position: absolute;pointer-events:none;'
            });
            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);
        }
    };
    /**
     * Method to get parent annotation element.
     *
     * @param {Element} child - Specifies the annotation element.
     * @returns {boolean} - Returns the boolean value.
     */
    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {
        this.annotationTargetElement = child.parentElement;
        while (this.annotationTargetElement != null) {
            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {
                child = this.annotationTargetElement;
                return true;
            }
            this.annotationTargetElement = this.annotationTargetElement.parentElement;
        }
        return false;
    };
    /**
     * Method to apply label rounding places.
     *
     * @param {number} currentValue - Specifies the current value.
     * @returns {number} - Returns the round number.
     */
    GaugeTooltip.prototype.roundedValue = function (currentValue) {
        var roundNumber = this.currentAxis.roundingPlaces ?
            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :
            currentValue;
        return roundNumber;
    };
    /**
     * Method to find the position of the tooltip anchor for circular gauge.
     *
     * @param {Rect} rect - Specifies the rect element.
     * @param {number} angle - Specifies the angle.
     * @param {string} text - Specifies the text.
     * @param {GaugeLocation} location - Specifies the location.
     * @returns {Rect} - Returns the rect element.
     */
    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {
        var addLeft;
        var addTop;
        var addHeight;
        var addWidth;
        switch (true) {
            case (angle >= 0 && angle < 45):
                this.arrowInverted = true;
                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x, rect.y + addTop, rect.width, rect.height);
                this.tooltipPosition = 'RightBottom';
                break;
            case (angle >= 45 && angle < 90):
                this.arrowInverted = false;
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x, rect.y + location.y, rect.width, rect.height);
                this.tooltipPosition = 'BottomRight';
                break;
            case (angle >= 90 && angle < 135):
                this.arrowInverted = false;
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x, rect.y + location.y, rect.width, rect.height);
                this.tooltipPosition = 'BottomLeft';
                break;
            case (angle >= 135 && angle < 180):
                this.arrowInverted = true;
                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x - rect.width, rect.y + addTop, rect.width, rect.height);
                this.tooltipPosition = 'LeftBottom';
                break;
            case (angle >= 180 && angle < 225):
                this.arrowInverted = true;
                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x - rect.width, rect.y, rect.width, addHeight);
                this.tooltipPosition = 'LeftTop';
                break;
            case (angle >= 225 && angle < 270):
                this.arrowInverted = false;
                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x, rect.y, addWidth, rect.height);
                this.tooltipPosition = 'TopLeft';
                break;
            case (angle >= 270 && angle < 315):
                this.arrowInverted = false;
                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x + addLeft, rect.y, rect.width, rect.height);
                this.tooltipPosition = 'TopRight';
                break;
            case (angle >= 315 && angle <= 360):
                this.arrowInverted = true;
                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;
                this.tooltipRect = new _utils_helper_common__WEBPACK_IMPORTED_MODULE_1__["Rect"](rect.x, rect.y, rect.width, addHeight);
                this.tooltipPosition = 'RightTop';
                break;
        }
        return this.tooltipRect;
    };
    GaugeTooltip.prototype.removeTooltip = function () {
        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {
            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];
            if (tooltip) {
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["remove"])(tooltip);
            }
            this.pointerEle = null;
        }
    };
    GaugeTooltip.prototype.mouseUpHandler = function (e) {
        this.renderTooltip(e);
        clearTimeout(this.clearTimeout);
        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);
    };
    // eslint-disable-next-line valid-jsdoc
    /**
     * To bind events for tooltip module
     */
    GaugeTooltip.prototype.addEventListener = function () {
        if (this.gauge.isDestroyed) {
            return;
        }
        this.gauge.on(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["Browser"].touchMoveEvent, this.renderTooltip, this);
        this.gauge.on(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["Browser"].touchEndEvent, this.mouseUpHandler, this);
        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);
    };
    // eslint-disable-next-line valid-jsdoc
    /**
     * To unbind events for tooltip module
     */
    GaugeTooltip.prototype.removeEventListener = function () {
        if (this.gauge.isDestroyed) {
            return;
        }
        this.gauge.off(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["Browser"].touchMoveEvent, this.renderTooltip);
        this.gauge.off(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_3__["Browser"].touchEndEvent, this.mouseUpHandler);
    };
    /**
     * Get module name.
     *
     * @returns {string} - Returns the module name
     */
    GaugeTooltip.prototype.getModuleName = function () {
        // Returns te module name
        return 'Tooltip';
    };
    /**
     * To destroy the tooltip.
     *
     * @param {CircularGauge} gauge - Specifies the instance of the gauge.
     * @returns {void}
     * @private
     */
    GaugeTooltip.prototype.destroy = function (gauge) {
        // Destroy method performed here
        this.removeEventListener();
    };
    return GaugeTooltip;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-panel.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-panel.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: calculateSum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateSum", function() { return calculateSum; });
/* eslint-disable max-len */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/**
 * Specifies Circular-Gauge axis-panel Helper methods
 */
/**
 * Function to calculate the sum of array values.
 *
 * @param {number} from - Specifies the from value.
 * @param {number} to - Specifies the to value.
 * @param {number[]} values - Specifies the number.
 * @returns {number} - Returns the number.
 * @private
 */
function calculateSum(from, to, values) {
    var sum = 0;
    var length = values.length;
    for (; from < length; from++) {
        sum += values[from];
    }
    return sum;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-renderer.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-axis-renderer.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: getRangeColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRangeColor", function() { return getRangeColor; });
/* eslint-disable max-len */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/**
 * Specifies Circular-Gauge axis-render Helper methods
 */
/**
 * Function to get range color from value for circular gauge.
 *
 * @param {number} value - Specifies the value.
 * @param {Range[]} ranges - Specifies the ranges.
 * @param {string} color - Specifies the color.
 * @returns {string} - Returns the color.
 * @private
 */
function getRangeColor(value, ranges, color) {
    var min = 0;
    var max = 0;
    var currentRange = ranges.filter(function (range) {
        min = Math.min(range.start, range.end);
        max = Math.max(range.start, range.end);
        return (value >= min && max >= value);
    });
    return currentRange.length ? currentRange[0].rangeColor : color;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-circular-gauge.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-circular-gauge.js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: setStyles, getValueFromAngle, getRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setStyles", function() { return setStyles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getValueFromAngle", function() { return getValueFromAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRange", function() { return getRange; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _helper_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* eslint-disable max-len */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/**
 * Specifies Circular-Gauge Helper methods
 */


/**
 * Function to set style to the element.
 *
 * @param {HTMLElement} element - Specifies the element.
 * @param {string} fill - Specifies the fill of the element.
 * @param {BorderModel} border - Specifies the border of the element.
 * @returns {void}
 * @private
 */
function setStyles(element, fill, border) {
    Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["setStyleAttribute"])(element, {
        'stroke': border.color, 'stroke-width': border.width,
        'fill': fill
    });
}
/**
 * Function to get the value from angle for circular gauge.
 *
 * @param {number} angle - Specifies the angle.
 * @param {number} maximumValue - Specifies the maximumValue.
 * @param {number} minimumValue - Specifies the minimumValue.
 * @param {number} startAngle - Specifies the startAngle.
 * @param {number} endAngle - Specifies the endAngle.
 * @param {boolean} isClockWise - Specifies the isClockWise.
 * @returns {number} - Returs the number.
 * @private
 */
function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {
    endAngle -= Object(_helper_common__WEBPACK_IMPORTED_MODULE_1__["isCompleteAngle"])(startAngle, endAngle) ? 0.0001 : 0;
    angle = angle < startAngle ? (angle + 360) : angle;
    if (isClockWise) {
        return (((angle - startAngle) / Object(_helper_common__WEBPACK_IMPORTED_MODULE_1__["getDegree"])(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;
    }
    else {
        return maximumValue - ((((angle - startAngle) / Object(_helper_common__WEBPACK_IMPORTED_MODULE_1__["getDegree"])(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);
    }
}
/**
 * Function to get current point for circular gauge using element id.
 *
 * @param {string} targetId - Specifies the target id.
 * @param {CircularGauge} gauge - Specifies the gauge instance.
 * @returns {IVisibleRange} - Returns the current point.
 * @private
 */
function getRange(targetId, gauge) {
    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];
    return {
        axisIndex: +tempString[0],
        rangeIndex: +tempString.split('Range_')[1]
    };
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: measureText, toPixel, getFontStyle, textElement, appendPath, isCompleteAngle, getDegree, getAngleFromValue, getAngleFromLocation, getLocationFromAngle, getPathArc, arcPath, arcRoundedPath, arcWidthPath, getRangePath, arcWidthPathCalculation, roundedArcWidthPathCalculation, getRoundedPathArc, getCirclePath, getTemplateFunction, removeElement, getElement, stringToNumber, getPointer, getLabelFormat, calculateShapes, CustomizeOption, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption, VisibleLabels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return measureText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toPixel", function() { return toPixel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFontStyle", function() { return getFontStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return textElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "appendPath", function() { return appendPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isCompleteAngle", function() { return isCompleteAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDegree", function() { return getDegree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAngleFromValue", function() { return getAngleFromValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAngleFromLocation", function() { return getAngleFromLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLocationFromAngle", function() { return getLocationFromAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPathArc", function() { return getPathArc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arcPath", function() { return arcPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arcRoundedPath", function() { return arcRoundedPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arcWidthPath", function() { return arcWidthPath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRangePath", function() { return getRangePath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arcWidthPathCalculation", function() { return arcWidthPathCalculation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "roundedArcWidthPathCalculation", function() { return roundedArcWidthPathCalculation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRoundedPathArc", function() { return getRoundedPathArc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCirclePath", function() { return getCirclePath; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTemplateFunction", function() { return getTemplateFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return removeElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return getElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stringToNumber", function() { return stringToNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPointer", function() { return getPointer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getLabelFormat", function() { return getLabelFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return calculateShapes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return CustomizeOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return PathOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RectOption", function() { return RectOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return Size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeLocation", function() { return GaugeLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return Rect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return TextOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisibleLabels", function() { return VisibleLabels; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-svg-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/index.js");
/* eslint-disable max-len */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/**
 * Specifies Circular-Gauge Common Helper methods
 */
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Function to measure the height and width of the text.
 *
 * @param  {string} text - Specifies the text.
 * @param  {FontModel} font - Specifies the font.
 * @param  {string} id - Specifies the id of the text.
 * @returns {Size} - Returns the size of the text.
 * @private
 */
function measureText(text, font) {
    var htmlObject = document.getElementById('gauge-measuretext');
    if (htmlObject === null) {
        htmlObject = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('text', { id: 'gauge-measuretext' });
        document.body.appendChild(htmlObject);
    }
    var style = 'position: absolute; visibility: hidden;' +
        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);
    htmlObject.innerHTML = text;
    htmlObject.setAttribute('style', style);
    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);
}
/**
 * Function to find number from string
 *
 * @param {string} value - Specifies the value.
 * @param {number} maxDimension - Specifies the  maximum dimension.
 * @returns {number} - Returns the number.
 * @private
 */
function toPixel(value, maxDimension) {
    if (value !== null && value !== undefined) {
        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);
    }
    return null;
}
/**
 * Function to get the style from FontModel.
 *
 * @param {FontModel} font - Specifies the font.
 * @returns {string} - Returns the string.
 * @private
 */
function getFontStyle(font) {
    var style = '';
    style = 'font-size:' + font.size +
        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +
        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +
        '; color:' + font.color + ';';
    return style;
}
/**
 * Function to create the text element.
 *
 * @param {TextOption} options - Specifies the options.
 * @param {FontModel} font - Specifies the font.
 * @param {string} color - Specifies the color.
 * @param {HTMLElement | Element} parent - Specifies the html element.
 * @param {string} styles - Specifies the style.
 * @returns {Element} - Returns the element.
 * @private
 */
function textElement(options, font, color, parent, styles) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var renderOptions = {};
    var renderer = new _syncfusion_ej2_svg_base__WEBPACK_IMPORTED_MODULE_1__["SvgRenderer"]('');
    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +
        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';
    renderOptions = {
        'id': options.id,
        'x': options.x,
        'y': options.y,
        'fill': color,
        'text-anchor': options.anchor,
        'transform': options.transform,
        'opacity': font.opacity,
        'dominant-baseline': options.baseLine,
        'style': style
    };
    var htmlObject = renderer.createText(renderOptions, options.text);
    parent.appendChild(htmlObject);
    return htmlObject;
}
/**
 * Function to append the path to the element.
 *
 * @param {PathOption} options - Specifies the options.
 * @param {Element} element - Specifies the element.
 * @param {CircularGauge} gauge - Specifies the gauge.
 * @param {string} functionName - Specifies the function name.
 * @returns {Element} - Returns the element.
 * @private
 */
function appendPath(options, element, gauge, functionName) {
    functionName = functionName ? functionName : 'Path';
    var htmlObject = gauge.renderer['draw' + functionName](options);
    htmlObject.setAttribute('transform', options.transform);
    htmlObject.setAttribute('style', options.style);
    element.appendChild(htmlObject);
    return htmlObject;
}
/**
 * Function to check whether it's a complete circle for circular gauge.
 *
 * @param {number} startAngle - Specifies the startAngle.
 * @param {number} endAngle - Specifies the endAngle.
 * @returns {boolean} Returns the boolean value.
 * @private
 */
function isCompleteAngle(startAngle, endAngle) {
    var totalAngle = endAngle - startAngle;
    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;
    return Math.floor(totalAngle / 360) !== 0;
}
/**
 * Function to get the degree for circular gauge.
 *
 * @param {number} startAngle - Specifies the startAngle.
 * @param {number} endAngle - Specifies the endAngle.
 * @returns {number} - Returns the number.
 * @private
 */
function getDegree(startAngle, endAngle) {
    var degree = endAngle - startAngle;
    return degree < 0 ? (degree + 360) : degree;
}
/**
 * Function to get the angle from value for circular gauge.
 *
 * @param {number} value - Specifies the value.
 * @param {number} maximumValue - Specifies the maximumValue.
 * @param {number} minimumValue - Specifies the minimumValue.
 * @param {number} startAngle - Specifies the startAngle.
 * @param {number} endAngle - Specifies the endAngle.
 * @param {boolean} isClockWise - Specifies the isClockWise.
 * @returns {number} - Returns the number.
 * @private
 */
function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {
    var angle;
    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;
    startAngle -= 90;
    endAngle -= 90;
    if (isClockWise) {
        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;
    }
    else {
        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));
        angle = angle < 0 ? 360 + angle : angle;
    }
    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;
    return angle;
}
/**
 * Function to get angle from location for circular gauge.
 *
 * @param {GaugeLocation} center - Specifies the center.
 * @param {GaugeLocation} point - Specifies the point.
 * @returns {number} - Returns the number.
 * @private
 */
function getAngleFromLocation(center, point) {
    var angle = Math.atan2((point.y - center.y), (point.x - center.x));
    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;
    angle += angle < 0 ? 360 : 0;
    return angle;
}
/**
 * Function to get the location from angle for circular gauge.
 *
 * @param {number} degree - Specifies the degree.
 * @param {number} radius - Specifies the radius.
 * @param {GaugeLocation} center - Specifies the center.
 * @returns {GaugeLocation} - Returns the gauge location.
 * @private
 */
function getLocationFromAngle(degree, radius, center) {
    var radian = (degree * Math.PI) / 180;
    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);
}
/**
 * Function to get the path direction of the circular gauge.
 *
 * @param {GaugeLocation} center - Specifies the center.
 * @param {number} start - Specifies the start.
 * @param {number} end - Specifies the end.
 * @param {number} radius - Specifies the radius.
 * @param {number} startWidth - Specifies the startWidth.
 * @param {number} endWidth - Specifies the endWidth.
 * @param {Range} range - Specifies the range.
 * @param {Axis} axis - Specifies the axis.
 * @returns {string} - Returns the string.
 * @private
 */
function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {
    if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range) || (range.start !== range.end)) {
        end -= isCompleteAngle(start, end) ? 0.0001 : 0;
    }
    var degree = getDegree(start, end);
    var startRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient
        ? radius + startWidth : range.position === 'Cross'
        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;
    var endRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range) ? (range.position === 'Outside'
        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&
        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;
    var arcRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient
        ? radius + ((startWidth + endWidth) / 2) :
        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)
            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);
    var insideArcRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range) && range.position === 'Cross' ?
        radius + ((startWidth + endWidth) / 4)
            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;
    var insideEndRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?
        radius - ((startWidth - endWidth) / 2) : radius;
    var insideStartRadius = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?
        radius + ((startWidth - endWidth) / 2) : radius;
    if (startWidth !== undefined && endWidth !== undefined) {
        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;
        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);
    }
    else {
        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);
    }
}
/**
 * Function to get the range path arc direction of the circular gauge.
 *
 * @param {GaugeLocation} start - Specifies the start.
 * @param {GaugeLocation} end - Specifies the end.
 * @param {number} radius - Specifies the radius.
 * @param {number} arcStartOne - Specifies the arcStartOne.
 * @param {number} arcEndOne - Specifies the arcEndOne.
 * @param {number} arcStartTwo - Specifies the arcStartTwo.
 * @param {number} arcEndTwo - Specifies the arcEndTwo.
 * @param {number} clockWise - Specifies the clockWise.
 * @param {GaugeLocation} innerStart - Specifies the innerStart.
 * @param {GaugeLocation} innerEnd - Specifies the innerEnd.
 * @param {GaugeLocation} pointPosition - Specifies the pointPosition.
 * @returns {string} - Returns the string.
 * @private
 */
function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {
    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +
        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +
        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x
        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo
        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';
}
/**
 * Function to get the range path arc direction of the circular gauge.
 *
 * @param {GaugeLocation} start - Specifies the start.
 * @param {GaugeLocation} end - Specifies the end.
 * @param {number} radius - Specifies the radius.
 * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.
 * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.
 * @param {number} arcStartOne - Specifies the arcStartOne.
 * @param {number} arcEndOne - Specifies the arcEndOne.
 * @param {number} arcStartTwo - Specifies the arcStartTwo.
 * @param {number} arcEndTwo - Specifies the arcEndTwo.
 * @param {number} clockWise - Specifies the clockWise.
 * @param {GaugeLocation} innerStart - Specifies the innerStart.
 * @param {GaugeLocation} innerEnd - Specifies the innerEnd.
 * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.
 * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.
 * @param {GaugeLocation} pointPosition - Specifies the pointPosition.
 * @returns {string} - Returns the string.
 * @private
 */
function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {
    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +
        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +
        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;
    if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(arcStartTwo) && Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(arcEndTwo)) {
        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '
            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +
            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';
    }
    else {
        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '
            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '
            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +
            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';
    }
}
/**
 * Function to get the range path direction for different start and end width of the circular gauge.
 *
 * @param {GaugeLocation} start - Specifies the options.
 * @param {GaugeLocation} end - Specifies the end.
 * @param {GaugeLocation} innerStart - Specifies the innerStart.
 * @param {GaugeLocation} innerEnd - Specifies the innerEnd.
 * @param {number} radius - Specifies the radius.
 * @param {number} startRadius - Specifies the startRadius.
 * @param {number} endRadius - Specifies the endRadius.
 * @param {number} clockWise - Specifies the clockWise.
 * @returns {string} - Returns the string.
 * @private
 */
function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {
    return 'M ' + start.x + ' ' + start.y +
        ' A ' + radius + ' ' + radius + ' 0 ' +
        clockWise + ' 1 ' + end.x + ' ' + end.y +
        ' L ' + innerEnd.x + ' ' + innerEnd.y +
        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +
        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';
}
/**
 * Function to get the range path direction of the circular gauge.
 *
 * @param {GaugeLocation} start - Specifies the start values.
 * @param {GaugeLocation} end - Specifies the end values.
 * @param {GaugeLocation} innerStart - Specifies the innerStart values.
 * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.
 * @param {number} radius - Specifies the radius value.
 * @param {number} startRadius - Specifies the startRadius value.
 * @param {number} endRadius - Specifies the endRadius value.
 * @param {number} arcRadius - Specifies the arcRadius value.
 * @param {number} clockWise - Specifies the clockWise value.
 * @param {GaugeLocation} center - Specifies the center value.
 * @param {number} degree - Specifies the degree value.
 * @param {Range} range - Specifies the range value.
 * @param {Axis} axis - Specifies the axis value.
 * @returns {string} - Returns the string value.
 * @private
 */
function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {
    var startWidth = range.startWidth;
    var endWidth = range.endWidth;
    var widthDifference = Math.abs(startWidth - endWidth);
    var endArc;
    var startArc;
    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {
        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));
        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));
        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);
    }
    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {
        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));
        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));
        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);
    }
    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {
        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);
    }
    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {
        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);
    }
    else {
        if (range.position === 'Cross' || range.position === 'Outside') {
            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);
        }
        else {
            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);
        }
    }
}
/**
 * Function to get start and end width range path calculation to the circular gauge.
 *
 * @param {GaugeLocation} start - Specifies the start value.
 * @param {GaugeLocation} end - Specifies the end value.
 * @param {GaugeLocation} innerStart - Specifies the innerStart value.
 * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.
 * @param {number} radius - Specifies the radius value.
 * @param {number} startRadius - Specifies the startRadius value.
 * @param {number} endRadius - Specifies the endRadius value.
 * @param {number} arcRadius - Specifies the arcRadius value.
 * @param {number} clockWise - Specifies the clockWise value.
 * @param {GaugeLocation} center - Specifies the center value.
 * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.
 * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.
 * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.
 * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.
 * @param {number} startWidth - Specifies the startWidth value.
 * @param {number} endWidth - Specifies the endWidth value.
 * @param {number} degree - Specifies the degree value.
 * @param {Range} range - Specifies the range value.
 * @param {Axis} axis - Specifies the axis value.
 * @returns {string} - Returns the svg path.
 * @private
 */
function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {
    if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(range)) {
        var arcStartOne = void 0;
        var arcEndOne = void 0;
        var widthDifference = Math.abs(startWidth - endWidth);
        var arcStartTwo = void 0;
        var arcEndTwo = void 0;
        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');
        var pointPosition = (startWidth < ((endWidth))) ?
            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);
        // eslint-disable-next-line max-len
        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));
        var endRadii = endDistance / 2;
        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));
        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));
        if (range.roundedCornerRadius <= 0) {
            widthDifference = widthDifference === 0 ? 1 : widthDifference;
            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?
                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;
            var degreeValue = range.position === 'Cross' ? 330 : 325;
            if (((degreeValue <= degree && degree <= 360))) {
                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)
                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))
                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))
                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));
                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)
                    : range.position === 'Cross' ?
                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :
                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?
                            (startRadius - (widthDifference) - (endWidth / 4))
                            : (startRadius - (widthDifference / 2))
                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));
                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);
            }
            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {
                var arcStart = (arcRadius - (widthDifference / 2));
                var arcEnd = (arcRadius - (widthDifference / 2));
                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;
                if (degree < 310) {
                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);
                }
                else if (degree >= 310 || angleValueDirection) {
                    arcStart = (arcRadius - (widthDifference));
                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);
                }
                else {
                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);
                }
            }
            else {
                if (range.position === 'Cross') {
                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?
                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius
                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?
                        endRadius + (widthDifference / 4) - (startWidth / 4) :
                        endRadius + (widthDifference / 4) - (startWidth / 2);
                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)
                        - (widthDifference / 4) : startRadius - (widthDifference / 4)
                        : startRadius : startRadius - (widthDifference / 4);
                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);
                }
                else if (range.position === 'Outside') {
                    if (degree < 325 && degree > 285) {
                        var arcTwo = void 0;
                        var startGreater = startWidth / 2;
                        var endGreater = endWidth / 2;
                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;
                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?
                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;
                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);
                    }
                    else {
                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);
                    }
                }
                else {
                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);
                }
            }
        }
        else {
            var degreeAngle = axis.endAngle < 4 ? 356 : 360;
            clockWise = degree > degreeAngle ? 0 : clockWise;
            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;
            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;
            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {
                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);
            }
            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {
                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :
                    endRadii - (widthDifference / 4) : endRadii;
                arcStartTwo = (centerDistance / 2);
                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :
                    (centerStartDistance / 2);
                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);
            }
            else if (degree > 270 && degree < degreeValueTwo) {
                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);
                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);
                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));
                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);
                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);
            }
            else {
                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);
            }
        }
    }
    else {
        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);
    }
}
/**
 * Function to get start and end width range rounded path calculation to the circular gauge.
 *
 * @param {GaugeLocation} start - Specifies the start value.
 * @param {GaugeLocation} end - Specifies the end value.
 * @param {GaugeLocation} innerStart - Specifies the innerStart value.
 * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.
 * @param {number} radius - Specifies the radius value.
 * @param {number} startRadius - Specifies the startRadius value.
 * @param {number} endRadius - Specifies the endRadius value.
 * @param {number} clockWise - Specifies the clockWise value.
 * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.
 * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.
 * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.
 * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.
 * @returns {string} - Returns the path value.
 * @private
 */
function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {
    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +
        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +
        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +
        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +
        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +
        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +
        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';
}
/**
 * Function to get the rounded path direction of the circular gauge.
 *
 * @param {GaugeLocation} center - Specifies the center value.
 * @param {number} actualStart - Specifies the actualStart value.
 * @param {number} actualEnd - Specifies the actualEnd value.
 * @param {number} oldStart - Specifies the oldStart value.
 * @param {number} oldEnd - Specifies the oldEnd value.
 * @param {number} radius - Specifies the radius value.
 * @param {number} startWidth - Specifies the startWidth value.
 * @param {number} endWidth - Specifies the endWidth value.
 * @param {Range} range - Specifies the range value.
 * @param {Axis} axis - Specifies the axis value.
 * @returns {string} - Returns the path value.
 * @private
 */
function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {
    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;
    var degree = getDegree(actualStart, actualEnd);
    var startRadius = radius - startWidth;
    var endRadius = radius - endWidth;
    var arcRadius = radius - ((startWidth + endWidth) / 2);
    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);
}
/**
 * Function to get the circular path direction of the circular gauge.
 *
 * @param {GaugeLocation} start - Specifies the start value.
 * @param {GaugeLocation} end - Specifies the end value.
 * @param {number} radius - Specifies the radius value.
 * @param {number} clockWise - Specifies the clockWise.
 * @returns {string} - Returns the path.
 * @private
 */
function getCirclePath(start, end, radius, clockWise) {
    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +
        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;
}
/**
 * Function to compile the template function for circular gauge.
 *
 * @param {string} template - Specifies the template.
 * @param {CircularGauge} gauge - Specifies the gauge instance.
 * @returns {Function} - Returns the template function.
 * @private
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function getTemplateFunction(template, gauge) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var templateFn = null;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var e;
    try {
        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {
            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {
                templateFn = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["compile"])(document.querySelector(template).innerHTML.trim());
            }
        }
    }
    catch (e) {
        templateFn = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["compile"])(template);
    }
    return templateFn;
}
/**
 * Function to remove the element from id.
 *
 * @param {string} id Specifies the id
 * @returns {void}
 * @private
 */
function removeElement(id) {
    var element = getElement(id);
    if (element) {
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["remove"])(element);
    }
}
/**
 * Function to get element from id.
 *
 * @param {string} id - Specifies the id.
 * @returns {Element} - Returns the element.
 * @private
 */
function getElement(id) {
    return document.getElementById(id);
}
/**
 * Function to convert the number from string.
 *
 * @param {string} value - Specifies the value.
 * @param {number} containerSize - Specifies the container size.
 * @returns {number} - Returns the number.
 * @private
 */
function stringToNumber(value, containerSize) {
    if (value !== null && value !== undefined) {
        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);
    }
    return null;
}
/**
 * Function to get current point for circular gauge using element id.
 *
 * @param {string} targetId - Specifies the target id.
 * @param {CircularGauge} gauge - Specifies the gauge instance.
 * @returns {IVisiblePointer} - Returns the pointer and axis index.
 * @private
 */
function getPointer(targetId, gauge) {
    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];
    return {
        axisIndex: +tempString[0],
        pointerIndex: +tempString[tempString.length - 1]
    };
}
/**
 * Function to convert the label using format for cirular gauge.
 *
 * @param {string} format - Specifies the format.
 * @returns {string} - Returns th string.
 * @private
 */
function getLabelFormat(format) {
    var customLabelFormat = format && format.match('{value}') !== null;
    var skeleton = customLabelFormat ? '' : format;
    return skeleton;
}
/**
 * Function to calculate the marker shape for circular gauge.
 *
 * @param {GaugeLocation} location - Specifies the location.
 * @param {string} shape - Specifies the shape.
 * @param {Size} size - Specifies the size.
 * @param {string} url - Specifies the url.
 * @param {PathOption} options - Specifies the path option.
 * @returns {PathOption} - Returns the path.
 * @private
 */
function calculateShapes(location, shape, size, url, options) {
    var path;
    var width = size.width;
    var height = size.height;
    var locX = location.x;
    var locY = location.y;
    var x = location.x + (-width / 2);
    var y = location.y + (-height / 2);
    var isLegend = options.id.indexOf('Shape') > -1;
    var space;
    switch (shape) {
        case 'Circle':
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });
            break;
        case 'Diamond':
            path = 'M' + ' ' + x + ' ' + locY + ' ' +
                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +
                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + x + ' ' + locY + ' Z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'd': path });
            break;
        case 'Rectangle':
            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'd': path });
            break;
        case 'Triangle':
            if (isLegend) {
                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +
                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';
            }
            else {
                path = 'M' + ' ' + locX + ' ' + locY + ' ' +
                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +
                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';
            }
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'd': path });
            break;
        case 'InvertedTriangle':
            if (isLegend) {
                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +
                    'L' + ' ' + x + ' ' + (y) + ' Z';
            }
            else {
                path = 'M' + ' ' + locX + ' ' + locY + ' ' +
                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +
                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';
            }
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'd': path });
            break;
        case 'Image':
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });
            break;
        case 'RightArrow':
            space = 2;
            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +
                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +
                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +
                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'd': path });
            break;
        case 'LeftArrow':
            options.fill = options.stroke;
            options.stroke = 'transparent';
            space = 2;
            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +
                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +
                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +
                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))
                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["merge"])(options, { 'd': path });
            break;
    }
    return options;
}
/** @private */
var CustomizeOption = /** @class */ (function () {
    function CustomizeOption(id) {
        this.id = id;
    }
    return CustomizeOption;
}());

/** @private */
var PathOption = /** @class */ (function (_super) {
    __extends(PathOption, _super);
    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {
        if (transform === void 0) { transform = ''; }
        if (style === void 0) { style = ''; }
        var _this = _super.call(this, id) || this;
        _this.opacity = opacity;
        _this.fill = fill;
        _this.stroke = color;
        _this['stroke-width'] = width;
        _this['stroke-dasharray'] = dashArray;
        _this.d = d;
        _this.transform = transform;
        _this.style = style;
        return _this;
    }
    return PathOption;
}(CustomizeOption));

/** @private */
var RectOption = /** @class */ (function (_super) {
    __extends(RectOption, _super);
    function RectOption(id, fill, border, opacity, rect) {
        var _this = _super.call(this, id) || this;
        _this.y = rect.y;
        _this.x = rect.x;
        _this.height = rect.height;
        _this.width = rect.width;
        _this.opacity = opacity;
        _this.fill = fill;
        _this.stroke = border.color;
        _this['stroke-width'] = border.width;
        return _this;
    }
    return RectOption;
}(CustomizeOption));

/**
 * Internal class size
 */
var Size = /** @class */ (function () {
    function Size(width, height) {
        this.width = width;
        this.height = height;
    }
    return Size;
}());

/**
 * Internal use of circular gauge location
 */
var GaugeLocation = /** @class */ (function () {
    function GaugeLocation(x, y) {
        this.x = x;
        this.y = y;
    }
    return GaugeLocation;
}());

/** @private */
var Rect = /** @class */ (function () {
    function Rect(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }
    return Rect;
}());

/** @private */
var TextOption = /** @class */ (function (_super) {
    __extends(TextOption, _super);
    function TextOption(id, x, y, anchor, text, transform, baseLine) {
        if (transform === void 0) { transform = ''; }
        var _this = _super.call(this, id) || this;
        _this.transform = '';
        _this.baseLine = 'auto';
        _this.x = x;
        _this.y = y;
        _this.anchor = anchor;
        _this.text = text;
        _this.transform = transform;
        _this.baseLine = baseLine;
        return _this;
    }
    return TextOption;
}(CustomizeOption));

/** @private */
var VisibleLabels = /** @class */ (function () {
    function VisibleLabels(text, value, size) {
        this.text = text;
        this.value = value;
        this.size = size;
    }
    return VisibleLabels;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-legend.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-legend.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: textTrim, showTooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textTrim", function() { return textTrim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "showTooltip", function() { return showTooltip; });
/* harmony import */ var _utils_helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* eslint-disable max-len */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/**
 * Specifies Circular-Gauge Common Helper methods
 */


/**
 * @param {number} maxWidth - Specifies the maximum width.
 * @param {string} text - Specifies the text.
 * @param {FontModel} font - Specifies the font.
 * @returns {string} - Returns the label.
 * @private */
function textTrim(maxWidth, text, font) {
    var label = text;
    var size = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["measureText"])(text, font).width;
    if (size > maxWidth) {
        var textLength = text.length;
        for (var i = textLength - 1; i >= 0; --i) {
            label = text.substring(0, i) + '...';
            size = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["measureText"])(label, font).width;
            if (size <= maxWidth) {
                return label;
            }
        }
    }
    return label;
}
/**
 * @param {string} text - Specifies the text.
 * @param {number} x - Specifies the x value.
 * @param {number} y - Specifies the y value.
 * @param {number} areaWidth - Specifies the area width.
 * @param {string} id - Specifies the id.
 * @param {Element} element - Specifies the element.
 * @returns {void}
 * @private */
function showTooltip(text, x, y, areaWidth, id, element) {
    //let id1: string = 'EJ2_legend_tooltip';
    var tooltip = document.getElementById(id);
    var width = Object(_utils_helper_common__WEBPACK_IMPORTED_MODULE_0__["measureText"])(text, {
        fontFamily: 'Segoe UI', size: '12px',
        fontStyle: 'Normal', fontWeight: 'Regular'
    }).width + 5;
    x = (x + width > areaWidth) ? x - width : x;
    if (!tooltip) {
        tooltip = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["createElement"])('div', {
            innerHTML: text,
            id: id,
            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +
                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +
                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +
                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: "Segoe UI"'
        });
        element.appendChild(tooltip);
    }
    else {
        tooltip.innerHTML = text;
        tooltip.style.top = (y + 15).toString() + 'px';
        tooltip.style.left = (x + 15).toString() + 'px';
    }
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-pointer-renderer.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-pointer-renderer.js ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: linear, getCompleteArc, getCompletePath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return linear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCompleteArc", function() { return getCompleteArc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCompletePath", function() { return getCompletePath; });
/* harmony import */ var _helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* eslint-disable max-len */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/**
 * Specifies Circular-Gauge pointer-render Helper methods
 */

/**
 * Function to calculate the value for linear animation effect
 *
 * @param {number} currentTime - Specifies the currentTime.
 * @param {number} startValue - Specifies the startValue.
 * @param {number} endValue - Specifies the endValue.
 * @param {number} duration - Specifies the duration.
 * @returns {number} - Returns the number.
 * @private
 */
function linear(currentTime, startValue, endValue, duration) {
    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;
}
/**
 * Function to calculate the complete path arc of the circular gauge.
 *
 * @param {GaugeLocation} center - Specifies the center value.
 * @param {number} start - Specifies the start value.
 * @param {number} end - Specifies the end value.
 * @param {number} radius - Specifies the radius value.
 * @param {number} innerRadius - Specifies the innerRadius value.
 * @param {boolean} checkMinValue - Specifies the checkMinValue value.
 * @returns {string} - Returns the path value.
 * @private
 */
function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {
    end -= Object(_helper_common__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"])(start, end) && !checkMinValue ? 0.0001 : 0;
    var degree = Object(_helper_common__WEBPACK_IMPORTED_MODULE_0__["getDegree"])(start, end);
    return getCompletePath(center, Object(_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(start, radius, center), Object(_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(end, radius, center), radius, Object(_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(start, innerRadius, center), Object(_helper_common__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"])(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);
}
/**
 * Function to get the complete path direction of the circular gauge.
 *
 * @param {GaugeLocation} center - Specifies the center value.
 * @param {GaugeLocation} start - Specifies the start value.
 * @param {GaugeLocation} end - Specifies the end value.
 * @param {number} radius - Specifies the radius value.
 * @param {GaugeLocation} innerStart - Specifies the innerStart value.
 * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.
 * @param {number} innerRadius - Specifies the innerRadius value.
 * @param {number} clockWise - Specifies the clockWise.
 * @returns {string} - Returns the path.
 * @private
 */
function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {
    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +
        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +
        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-tooltip.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-tooltip.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: getMousePosition, getElementSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMousePosition", function() { return getMousePosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElementSize", function() { return getElementSize; });
/* harmony import */ var _helper_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper-common */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/utils/helper-common.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* eslint-disable max-len */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/**
 * Specifies Circular-Gauge Tooltip Helper methods
 */


/**
 * Function to get the mouse position
 *
 * @param {number} pageX - Specifies the pageX value.
 * @param {number} pageY - Specifies the pageY value.
 * @param {Element} element - Specifies the element.
 * @returns {GaugeLocation} - Returns the location.
 */
function getMousePosition(pageX, pageY, element) {
    var elementRect = element.getBoundingClientRect();
    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;
    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;
    var clientTop = element.ownerDocument.documentElement.clientTop;
    var clientLeft = element.ownerDocument.documentElement.clientLeft;
    var positionX = elementRect.left + pageXOffset - clientLeft;
    var positionY = elementRect.top + pageYOffset - clientTop;
    return new _helper_common__WEBPACK_IMPORTED_MODULE_0__["GaugeLocation"]((pageX - positionX), (pageY - positionY));
}
function getElementSize(template, gauge, parent) {
    var elementSize;
    var element;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var templateFn = Object(_helper_common__WEBPACK_IMPORTED_MODULE_0__["getTemplateFunction"])(template, gauge);
    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];
    if (templateFn && tooltipData.length) {
        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });
        gauge.element.appendChild(element);
        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');
        var templateLength = templateElement.length;
        while (templateLength > 0) {
            element.appendChild(templateElement[0]);
            templateLength--;
        }
        parent.appendChild(element);
        elementSize = new _helper_common__WEBPACK_IMPORTED_MODULE_0__["Size"](parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["remove"])(element);
    }
    return elementSize;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/index.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/index.js ***!
  \********************************************************************************************************************/
/*! exports provided: CircularGauge, Annotations, Line, Label, Range, Tick, Cap, NeedleTail, Animation, Annotation, Pointer, Axis, Border, Font, RangeTooltip, AnnotationTooltip, Margin, TooltipSettings, GaugeTooltip, measureText, toPixel, getFontStyle, textElement, appendPath, isCompleteAngle, getDegree, getAngleFromValue, getAngleFromLocation, getLocationFromAngle, getPathArc, arcPath, arcRoundedPath, arcWidthPath, getRangePath, arcWidthPathCalculation, roundedArcWidthPathCalculation, getRoundedPathArc, getCirclePath, getTemplateFunction, removeElement, getElement, stringToNumber, getPointer, getLabelFormat, calculateShapes, CustomizeOption, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption, VisibleLabels, getRangeColor, calculateSum, setStyles, getValueFromAngle, getRange, textTrim, showTooltip, linear, getCompleteArc, getCompletePath, getMousePosition, getElementSize, Location, LegendSettings, Legend, Index, LegendOptions, ImageExport, PdfExport, Print, ColorStop, GradientPosition, LinearGradient, RadialGradient, Gradient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./circular-gauge/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-circulargauge/src/circular-gauge/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CircularGauge", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["CircularGauge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotations", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Annotations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Line", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Line"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Label", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Label"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Range", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Range"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Tick"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Cap", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Cap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NeedleTail", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["NeedleTail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Animation", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Animation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Annotation", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Annotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pointer", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Pointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Axis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Border", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Border"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Font", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Font"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RangeTooltip", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["RangeTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnnotationTooltip", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["AnnotationTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Margin", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Margin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipSettings", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["TooltipSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeTooltip", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["GaugeTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["measureText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "toPixel", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["toPixel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getFontStyle", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getFontStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["textElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "appendPath", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["appendPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isCompleteAngle", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["isCompleteAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getDegree", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getDegree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromValue", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getAngleFromValue"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getAngleFromLocation", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getAngleFromLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLocationFromAngle", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getLocationFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPathArc", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcPath", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["arcPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcRoundedPath", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["arcRoundedPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPath", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["arcWidthPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangePath", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getRangePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arcWidthPathCalculation", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["arcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "roundedArcWidthPathCalculation", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["roundedArcWidthPathCalculation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRoundedPathArc", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getRoundedPathArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCirclePath", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getCirclePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTemplateFunction", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getTemplateFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["removeElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "stringToNumber", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["stringToNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getPointer", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getPointer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getLabelFormat", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getLabelFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["CustomizeOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["PathOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectOption", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["RectOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeLocation", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["GaugeLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Rect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["TextOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisibleLabels", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["VisibleLabels"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRangeColor", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getRangeColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateSum", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["calculateSum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setStyles", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["setStyles"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getValueFromAngle", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getValueFromAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getRange", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getRange"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textTrim", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["textTrim"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "showTooltip", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["showTooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["linear"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompleteArc", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getCompleteArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCompletePath", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getCompletePath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getMousePosition", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getMousePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElementSize", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["getElementSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Location"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["LegendSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Legend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Index", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendOptions", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["LegendOptions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageExport", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["ImageExport"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfExport", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["PdfExport"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Print", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Print"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColorStop", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["ColorStop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GradientPosition", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["GradientPosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinearGradient", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["LinearGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadialGradient", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["RadialGradient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gradient", function() { return _circular_gauge_index__WEBPACK_IMPORTED_MODULE_0__["Gradient"]; });

/**
 * Circular Gauge component exported.
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/index.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/index.js ***!
  \**************************************************************************************************************/
/*! exports provided: ZipArchive, ZipArchiveItem, CompressedStreamWriter, CompressorHuffmanTree, ChecksumCalculator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZipArchive", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ZipArchive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZipArchiveItem", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ZipArchiveItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompressedStreamWriter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CompressedStreamWriter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompressorHuffmanTree", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CompressorHuffmanTree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChecksumCalculator", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ChecksumCalculator"]; });

/**
 * index
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/compression-writer.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/compression-writer.js ***!
  \*******************************************************************************************************************************/
/*! exports provided: CompressedStreamWriter, CompressorHuffmanTree, ChecksumCalculator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompressedStreamWriter", function() { return CompressedStreamWriter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CompressorHuffmanTree", function() { return CompressorHuffmanTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecksumCalculator", function() { return ChecksumCalculator; });
/* harmony import */ var _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-file-utils */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/index.js");

/**
 * array literal codes
 */
var ARR_LITERAL_CODES = new Int16Array(286);
var ARR_LITERAL_LENGTHS = new Uint8Array(286);
var ARR_DISTANCE_CODES = new Int16Array(30);
var ARR_DISTANCE_LENGTHS = new Uint8Array(30);
/**
 * represent compression stream writer
 * ```typescript
 * let compressedWriter = new CompressedStreamWriter();
 * let text: string = 'Hello world!!!';
 * compressedWriter.write(text, 0, text.length);
 * compressedWriter.close();
 * ```
 */
var CompressedStreamWriter = /** @class */ (function () {
    /**
     * Initializes compressor and writes ZLib header if needed.
     * @param {boolean} noWrap - optional if true, ZLib header and checksum will not be written.
     */
    function CompressedStreamWriter(noWrap) {
        this.pendingBuffer = new Uint8Array(1 << 16);
        this.pendingBufLength = 0;
        this.pendingBufCache = 0;
        this.pendingBufBitsInCache = 0;
        this.bufferPosition = 0;
        this.extraBits = 0;
        this.currentHash = 0;
        this.matchStart = 0;
        this.matchLength = 0;
        this.matchPrevAvail = false;
        this.blockStart = 0;
        this.stringStart = 0;
        this.lookAhead = 0;
        this.totalBytesIn = 0;
        this.inputOffset = 0;
        this.inputEnd = 0;
        this.windowSize = 1 << 15;
        this.windowMask = this.windowSize - 1;
        this.hashSize = 1 << 15;
        this.hashMask = this.hashSize - 1;
        this.hashShift = Math.floor((15 + 3 - 1) / 3);
        this.maxDist = this.windowSize - 262;
        this.checkSum = 1;
        this.noWrap = false;
        if (!CompressedStreamWriter.isHuffmanTreeInitiated) {
            CompressedStreamWriter.initHuffmanTree();
            CompressedStreamWriter.isHuffmanTreeInitiated = true;
        }
        this.treeLiteral = new CompressorHuffmanTree(this, 286, 257, 15);
        this.treeDistances = new CompressorHuffmanTree(this, 30, 1, 15);
        this.treeCodeLengths = new CompressorHuffmanTree(this, 19, 4, 7);
        this.arrDistances = new Uint16Array((1 << 14));
        this.arrLiterals = new Uint8Array((1 << 14));
        this.stream = [];
        this.dataWindow = new Uint8Array(2 * this.windowSize);
        this.hashHead = new Int16Array(this.hashSize);
        this.hashPrevious = new Int16Array(this.windowSize);
        this.blockStart = this.stringStart = 1;
        this.noWrap = noWrap;
        if (!noWrap) {
            this.writeZLibHeader();
        }
    }
    Object.defineProperty(CompressedStreamWriter.prototype, "compressedData", {
        /**
         * get compressed data
         */
        get: function () {
            return this.stream;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompressedStreamWriter.prototype, "getCompressedString", {
        get: function () {
            var compressedString = '';
            if (this.stream !== undefined) {
                for (var i = 0; i < this.stream.length; i++) {
                    compressedString += String.fromCharCode.apply(null, this.stream[i]);
                }
            }
            return compressedString;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Compresses data and writes it to the stream.
     * @param {Uint8Array} data - data to compress
     * @param {number} offset - offset in data
     * @param {number} length - length of the data
     * @returns {void}
     */
    CompressedStreamWriter.prototype.write = function (data, offset, length) {
        if (data === undefined || data === null) {
            throw new Error('ArgumentException: data cannot null or undefined');
        }
        var end = offset + length;
        if (0 > offset || offset > end || end > data.length) {
            throw new Error('ArgumentOutOfRangeException: Offset or length is incorrect');
        }
        if (typeof data === 'string') {
            var encode = new _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_0__["Encoding"](false);
            encode.type = 'Utf8';
            data = new Uint8Array(encode.getBytes(data, 0, data.length));
            end = offset + data.length;
        }
        this.inputBuffer = data;
        this.inputOffset = offset;
        this.inputEnd = end;
        if (!this.noWrap) {
            this.checkSum = ChecksumCalculator.checksumUpdate(this.checkSum, this.inputBuffer, this.inputOffset, end);
        }
        while (!(this.inputEnd === this.inputOffset) || !(this.pendingBufLength === 0)) {
            this.pendingBufferFlush();
            this.compressData(false);
        }
    };
    /**
     * write ZLib header to the compressed data
     * @return {void}
     */
    CompressedStreamWriter.prototype.writeZLibHeader = function () {
        /* Initialize header.*/
        var headerDate = (8 + (7 << 4)) << 8;
        /* Save compression level.*/
        headerDate |= ((5 >> 2) & 3) << 6;
        /* Align header.*/
        headerDate += 31 - (headerDate % 31);
        /* Write header to stream.*/
        this.pendingBufferWriteShortBytes(headerDate);
    };
    /**
     *  Write Most Significant Bytes in to stream
     * @param {number} s - check sum value
     */
    CompressedStreamWriter.prototype.pendingBufferWriteShortBytes = function (s) {
        this.pendingBuffer[this.pendingBufLength++] = s >> 8;
        this.pendingBuffer[this.pendingBufLength++] = s;
    };
    CompressedStreamWriter.prototype.compressData = function (finish) {
        var success;
        do {
            this.fillWindow();
            var canFlush = (finish && this.inputEnd === this.inputOffset);
            success = this.compressSlow(canFlush, finish);
        } while (this.pendingBufLength === 0 && success);
        return success;
    };
    CompressedStreamWriter.prototype.compressSlow = function (flush, finish) {
        if (this.lookAhead < 262 && !flush) {
            return false;
        }
        while (this.lookAhead >= 262 || flush) {
            if (this.lookAhead === 0) {
                return this.lookAheadCompleted(finish);
            }
            if (this.stringStart >= 2 * this.windowSize - 262) {
                this.slideWindow();
            }
            var prevMatch = this.matchStart;
            var prevLen = this.matchLength;
            if (this.lookAhead >= 3) {
                this.discardMatch();
            }
            if (prevLen >= 3 && this.matchLength <= prevLen) {
                prevLen = this.matchPreviousBest(prevMatch, prevLen);
            }
            else {
                this.matchPreviousAvailable();
            }
            if (this.bufferPosition >= (1 << 14)) {
                return this.huffmanIsFull(finish);
            }
        }
        return true;
    };
    CompressedStreamWriter.prototype.discardMatch = function () {
        var hashHead = this.insertString();
        if (hashHead !== 0 && this.stringStart - hashHead <= this.maxDist && this.findLongestMatch(hashHead)) {
            if (this.matchLength <= 5 && (this.matchLength === 3 && this.stringStart - this.matchStart > 4096)) {
                this.matchLength = 3 - 1;
            }
        }
    };
    CompressedStreamWriter.prototype.matchPreviousAvailable = function () {
        if (this.matchPrevAvail) {
            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);
        }
        this.matchPrevAvail = true;
        this.stringStart++;
        this.lookAhead--;
    };
    CompressedStreamWriter.prototype.matchPreviousBest = function (prevMatch, prevLen) {
        this.huffmanTallyDist(this.stringStart - 1 - prevMatch, prevLen);
        prevLen -= 2;
        do {
            this.stringStart++;
            this.lookAhead--;
            if (this.lookAhead >= 3) {
                this.insertString();
            }
        } while (--prevLen > 0);
        this.stringStart++;
        this.lookAhead--;
        this.matchPrevAvail = false;
        this.matchLength = 3 - 1;
        return prevLen;
    };
    CompressedStreamWriter.prototype.lookAheadCompleted = function (finish) {
        if (this.matchPrevAvail) {
            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);
        }
        this.matchPrevAvail = false;
        this.huffmanFlushBlock(this.dataWindow, this.blockStart, this.stringStart - this.blockStart, finish);
        this.blockStart = this.stringStart;
        return false;
    };
    CompressedStreamWriter.prototype.huffmanIsFull = function (finish) {
        var len = this.stringStart - this.blockStart;
        if (this.matchPrevAvail) {
            len--;
        }
        var lastBlock = (finish && this.lookAhead === 0 && !this.matchPrevAvail);
        this.huffmanFlushBlock(this.dataWindow, this.blockStart, len, lastBlock);
        this.blockStart += len;
        return !lastBlock;
    };
    CompressedStreamWriter.prototype.fillWindow = function () {
        if (this.stringStart >= this.windowSize + this.maxDist) {
            this.slideWindow();
        }
        while (this.lookAhead < 262 && this.inputOffset < this.inputEnd) {
            var more = 2 * this.windowSize - this.lookAhead - this.stringStart;
            if (more > this.inputEnd - this.inputOffset) {
                more = this.inputEnd - this.inputOffset;
            }
            this.dataWindow.set(this.inputBuffer.subarray(this.inputOffset, this.inputOffset + more), this.stringStart + this.lookAhead);
            this.inputOffset += more;
            this.totalBytesIn += more;
            this.lookAhead += more;
        }
        if (this.lookAhead >= 3) {
            this.updateHash();
        }
    };
    CompressedStreamWriter.prototype.slideWindow = function () {
        this.dataWindow.set(this.dataWindow.subarray(this.windowSize, this.windowSize + this.windowSize), 0);
        this.matchStart -= this.windowSize;
        this.stringStart -= this.windowSize;
        this.blockStart -= this.windowSize;
        for (var i = 0; i < this.hashSize; ++i) {
            var m = this.hashHead[i] & 0xffff;
            this.hashHead[i] = (((m >= this.windowSize) ? (m - this.windowSize) : 0));
        }
        for (var i = 0; i < this.windowSize; i++) {
            var m = this.hashPrevious[i] & 0xffff;
            this.hashPrevious[i] = ((m >= this.windowSize) ? (m - this.windowSize) : 0);
        }
    };
    CompressedStreamWriter.prototype.insertString = function () {
        var match;
        var hash = ((this.currentHash << this.hashShift) ^ this.dataWindow[this.stringStart + (3 - 1)]) & this.hashMask;
        this.hashPrevious[this.stringStart & this.windowMask] = match = this.hashHead[hash];
        this.hashHead[hash] = this.stringStart;
        this.currentHash = hash;
        return match & 0xffff;
    };
    CompressedStreamWriter.prototype.findLongestMatch = function (curMatch) {
        var chainLen = 4096;
        var niceLen = 258;
        var scan = this.stringStart;
        var match;
        var bestEnd = this.stringStart + this.matchLength;
        var bestLength = Math.max(this.matchLength, 3 - 1);
        var limit = Math.max(this.stringStart - this.maxDist, 0);
        var stringEnd = this.stringStart + 258 - 1;
        var scanEnd1 = this.dataWindow[bestEnd - 1];
        var scanEnd = this.dataWindow[bestEnd];
        var data = this.dataWindow;
        if (bestLength >= 32) {
            chainLen >>= 2;
        }
        if (niceLen > this.lookAhead) {
            niceLen = this.lookAhead;
        }
        do {
            if (data[curMatch + bestLength] !== scanEnd ||
                data[curMatch + bestLength - 1] !== scanEnd1 ||
                data[curMatch] !== data[scan] ||
                data[curMatch + 1] !== data[scan + 1]) {
                continue;
            }
            match = curMatch + 2;
            scan += 2;
            /* tslint:disable */
            while (data[++scan] === data[++match] && data[++scan] === data[++match] &&
                data[++scan] === data[++match] && data[++scan] === data[++match] &&
                data[++scan] === data[++match] && data[++scan] === data[++match] &&
                data[++scan] === data[++match] && data[++scan] === data[++match] && scan < stringEnd) {
                /* tslint:disable */
            }
            if (scan > bestEnd) {
                this.matchStart = curMatch;
                bestEnd = scan;
                bestLength = scan - this.stringStart;
                if (bestLength >= niceLen) {
                    break;
                }
                scanEnd1 = data[bestEnd - 1];
                scanEnd = data[bestEnd];
            }
            scan = this.stringStart;
        } while ((curMatch = (this.hashPrevious[curMatch & this.windowMask] & 0xffff)) > limit && --chainLen !== 0);
        this.matchLength = Math.min(bestLength, this.lookAhead);
        return this.matchLength >= 3;
    };
    CompressedStreamWriter.prototype.updateHash = function () {
        this.currentHash = (this.dataWindow[this.stringStart] << this.hashShift) ^ this.dataWindow[this.stringStart + 1];
    };
    CompressedStreamWriter.prototype.huffmanTallyLit = function (literal) {
        this.arrDistances[this.bufferPosition] = 0;
        this.arrLiterals[this.bufferPosition++] = literal;
        this.treeLiteral.codeFrequencies[literal]++;
        return this.bufferPosition >= (1 << 14);
    };
    CompressedStreamWriter.prototype.huffmanTallyDist = function (dist, len) {
        this.arrDistances[this.bufferPosition] = dist;
        this.arrLiterals[this.bufferPosition++] = (len - 3);
        var lc = this.huffmanLengthCode(len - 3);
        this.treeLiteral.codeFrequencies[lc]++;
        if (lc >= 265 && lc < 285) {
            this.extraBits += Math.floor((lc - 261) / 4);
        }
        var dc = this.huffmanDistanceCode(dist - 1);
        this.treeDistances.codeFrequencies[dc]++;
        if (dc >= 4) {
            this.extraBits += Math.floor((dc / 2 - 1));
        }
        return this.bufferPosition >= (1 << 14);
    };
    CompressedStreamWriter.prototype.huffmanFlushBlock = function (stored, storedOffset, storedLength, lastBlock) {
        this.treeLiteral.codeFrequencies[256]++;
        this.treeLiteral.buildTree();
        this.treeDistances.buildTree();
        this.treeLiteral.calculateBLFreq(this.treeCodeLengths);
        this.treeDistances.calculateBLFreq(this.treeCodeLengths);
        this.treeCodeLengths.buildTree();
        var blTreeCodes = 4;
        for (var i = 18; i > blTreeCodes; i--) {
            if (this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[i]] > 0) {
                blTreeCodes = i + 1;
            }
        }
        var opt_len = 14 + blTreeCodes * 3 + this.treeCodeLengths.getEncodedLength() +
            this.treeLiteral.getEncodedLength() + this.treeDistances.getEncodedLength() + this.extraBits;
        var static_len = this.extraBits;
        for (var i = 0; i < 286; i++) {
            static_len += this.treeLiteral.codeFrequencies[i] * ARR_LITERAL_LENGTHS[i];
        }
        for (var i = 0; i < 30; i++) {
            static_len += this.treeDistances.codeFrequencies[i] * ARR_DISTANCE_LENGTHS[i];
        }
        if (opt_len >= static_len) {
            // Force static trees.
            opt_len = static_len;
        }
        if (storedOffset >= 0 && storedLength + 4 < opt_len >> 3) {
            this.huffmanFlushStoredBlock(stored, storedOffset, storedLength, lastBlock);
        }
        else if (opt_len == static_len) {
            // Encode with static tree.
            this.pendingBufferWriteBits((1 << 1) + (lastBlock ? 1 : 0), 3);
            this.treeLiteral.setStaticCodes(ARR_LITERAL_CODES, ARR_LITERAL_LENGTHS);
            this.treeDistances.setStaticCodes(ARR_DISTANCE_CODES, ARR_DISTANCE_LENGTHS);
            this.huffmanCompressBlock();
            this.huffmanReset();
        }
        else {
            this.pendingBufferWriteBits((2 << 1) + (lastBlock ? 1 : 0), 3);
            this.huffmanSendAllTrees(blTreeCodes);
            this.huffmanCompressBlock();
            this.huffmanReset();
        }
    };
    CompressedStreamWriter.prototype.huffmanFlushStoredBlock = function (stored, storedOffset, storedLength, lastBlock) {
        this.pendingBufferWriteBits((0 << 1) + (lastBlock ? 1 : 0), 3);
        this.pendingBufferAlignToByte();
        this.pendingBufferWriteShort(storedLength);
        this.pendingBufferWriteShort(~storedLength);
        this.pendingBufferWriteByteBlock(stored, storedOffset, storedLength);
        this.huffmanReset();
    };
    CompressedStreamWriter.prototype.huffmanLengthCode = function (len) {
        if (len === 255) {
            return 285;
        }
        var code = 257;
        while (len >= 8) {
            code += 4;
            len >>= 1;
        }
        return code + len;
    };
    CompressedStreamWriter.prototype.huffmanDistanceCode = function (distance) {
        var code = 0;
        while (distance >= 4) {
            code += 2;
            distance >>= 1;
        }
        return code + distance;
    };
    CompressedStreamWriter.prototype.huffmanSendAllTrees = function (blTreeCodes) {
        this.treeCodeLengths.buildCodes();
        this.treeLiteral.buildCodes();
        this.treeDistances.buildCodes();
        this.pendingBufferWriteBits(this.treeLiteral.treeLength - 257, 5);
        this.pendingBufferWriteBits(this.treeDistances.treeLength - 1, 5);
        this.pendingBufferWriteBits(blTreeCodes - 4, 4);
        for (var rank = 0; rank < blTreeCodes; rank++) {
            this.pendingBufferWriteBits(this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[rank]], 3);
        }
        this.treeLiteral.writeTree(this.treeCodeLengths);
        this.treeDistances.writeTree(this.treeCodeLengths);
    };
    CompressedStreamWriter.prototype.huffmanReset = function () {
        this.bufferPosition = 0;
        this.extraBits = 0;
        this.treeLiteral.reset();
        this.treeDistances.reset();
        this.treeCodeLengths.reset();
    };
    CompressedStreamWriter.prototype.huffmanCompressBlock = function () {
        for (var i = 0; i < this.bufferPosition; i++) {
            var literalLen = this.arrLiterals[i] & 255;
            var dist = this.arrDistances[i];
            if (dist-- !== 0) {
                var lc = this.huffmanLengthCode(literalLen);
                this.treeLiteral.writeCodeToStream(lc);
                var bits = Math.floor((lc - 261) / 4);
                if (bits > 0 && bits <= 5) {
                    this.pendingBufferWriteBits(literalLen & ((1 << bits) - 1), bits);
                }
                var dc = this.huffmanDistanceCode(dist);
                this.treeDistances.writeCodeToStream(dc);
                bits = Math.floor(dc / 2 - 1);
                if (bits > 0) {
                    this.pendingBufferWriteBits(dist & ((1 << bits) - 1), bits);
                }
            }
            else {
                this.treeLiteral.writeCodeToStream(literalLen);
            }
        }
        this.treeLiteral.writeCodeToStream(256);
    };
    /**
     * write bits in to internal buffer
     * @param {number} b - source of bits
     * @param {number} count - count of bits to write
     */
    CompressedStreamWriter.prototype.pendingBufferWriteBits = function (b, count) {
        var uint = new Uint32Array(1);
        uint[0] = this.pendingBufCache | (b << this.pendingBufBitsInCache);
        this.pendingBufCache = uint[0];
        this.pendingBufBitsInCache += count;
        this.pendingBufferFlushBits();
    };
    CompressedStreamWriter.prototype.pendingBufferFlush = function (isClose) {
        this.pendingBufferFlushBits();
        if (this.pendingBufLength > 0) {
            var array = new Uint8Array(this.pendingBufLength);
            array.set(this.pendingBuffer.subarray(0, this.pendingBufLength), 0);
            this.stream.push(array);
        }
        this.pendingBufLength = 0;
    };
    CompressedStreamWriter.prototype.pendingBufferFlushBits = function () {
        var result = 0;
        while (this.pendingBufBitsInCache >= 8 && this.pendingBufLength < (1 << 16)) {
            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;
            this.pendingBufCache >>= 8;
            this.pendingBufBitsInCache -= 8;
            result++;
        }
        return result;
    };
    CompressedStreamWriter.prototype.pendingBufferWriteByteBlock = function (data, offset, length) {
        var array = data.subarray(offset, offset + length);
        this.pendingBuffer.set(array, this.pendingBufLength);
        this.pendingBufLength += length;
    };
    CompressedStreamWriter.prototype.pendingBufferWriteShort = function (s) {
        this.pendingBuffer[this.pendingBufLength++] = s;
        this.pendingBuffer[this.pendingBufLength++] = (s >> 8);
    };
    CompressedStreamWriter.prototype.pendingBufferAlignToByte = function () {
        if (this.pendingBufBitsInCache > 0) {
            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;
        }
        this.pendingBufCache = 0;
        this.pendingBufBitsInCache = 0;
    };
    /**
     * Huffman Tree literal calculation
     * @private
     */
    CompressedStreamWriter.initHuffmanTree = function () {
        var i = 0;
        while (i < 144) {
            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x030 + i) << 8);
            ARR_LITERAL_LENGTHS[i++] = 8;
        }
        while (i < 256) {
            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x190 - 144 + i) << 7);
            ARR_LITERAL_LENGTHS[i++] = 9;
        }
        while (i < 280) {
            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x000 - 256 + i) << 9);
            ARR_LITERAL_LENGTHS[i++] = 7;
        }
        while (i < 286) {
            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x0c0 - 280 + i) << 8);
            ARR_LITERAL_LENGTHS[i++] = 8;
        }
        for (i = 0; i < 30; i++) {
            ARR_DISTANCE_CODES[i] = CompressorHuffmanTree.bitReverse(i << 11);
            ARR_DISTANCE_LENGTHS[i] = 5;
        }
    };
    /**
     * close the stream and write all pending buffer in to stream
     * @returns {void}
     */
    CompressedStreamWriter.prototype.close = function () {
        do {
            this.pendingBufferFlush(true);
            if (!this.compressData(true)) {
                this.pendingBufferFlush(true);
                this.pendingBufferAlignToByte();
                if (!this.noWrap) {
                    this.pendingBufferWriteShortBytes(this.checkSum >> 16);
                    this.pendingBufferWriteShortBytes(this.checkSum & 0xffff);
                }
                this.pendingBufferFlush(true);
            }
        } while (!(this.inputEnd === this.inputOffset) ||
            !(this.pendingBufLength === 0));
    };
    /**
     * release allocated un-managed resource
     * @returns {void}
     */
    CompressedStreamWriter.prototype.destroy = function () {
        this.stream = [];
        this.stream = undefined;
        this.pendingBuffer = undefined;
        this.treeLiteral = undefined;
        this.treeDistances = undefined;
        this.treeCodeLengths = undefined;
        this.arrLiterals = undefined;
        this.arrDistances = undefined;
        this.hashHead = undefined;
        this.hashPrevious = undefined;
        this.dataWindow = undefined;
        this.inputBuffer = undefined;
        this.pendingBufLength = undefined;
        this.pendingBufCache = undefined;
        this.pendingBufBitsInCache = undefined;
        this.bufferPosition = undefined;
        this.extraBits = undefined;
        this.currentHash = undefined;
        this.matchStart = undefined;
        this.matchLength = undefined;
        this.matchPrevAvail = undefined;
        this.blockStart = undefined;
        this.stringStart = undefined;
        this.lookAhead = undefined;
        this.totalBytesIn = undefined;
        this.inputOffset = undefined;
        this.inputEnd = undefined;
        this.windowSize = undefined;
        this.windowMask = undefined;
        this.hashSize = undefined;
        this.hashMask = undefined;
        this.hashShift = undefined;
        this.maxDist = undefined;
        this.checkSum = undefined;
        this.noWrap = undefined;
    };
    CompressedStreamWriter.isHuffmanTreeInitiated = false;
    return CompressedStreamWriter;
}());

/**
 * represent the Huffman Tree
 */
var CompressorHuffmanTree = /** @class */ (function () {
    /**
     * Create new Huffman Tree
     * @param {CompressedStreamWriter} writer instance
     * @param {number} elementCount - element count
     * @param {number} minCodes - minimum count
     * @param {number} maxLength - maximum count
     */
    function CompressorHuffmanTree(writer, elementCount, minCodes, maxLength) {
        this.writer = writer;
        this.codeMinCount = minCodes;
        this.maxLength = maxLength;
        this.codeFrequency = new Uint16Array(elementCount);
        this.lengthCount = new Int32Array(maxLength);
    }
    Object.defineProperty(CompressorHuffmanTree.prototype, "treeLength", {
        get: function () {
            return this.codeCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompressorHuffmanTree.prototype, "codeLengths", {
        get: function () {
            return this.codeLength;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CompressorHuffmanTree.prototype, "codeFrequencies", {
        get: function () {
            return this.codeFrequency;
        },
        enumerable: true,
        configurable: true
    });
    CompressorHuffmanTree.prototype.setStaticCodes = function (codes, lengths) {
        var temp = new Int16Array(codes.length);
        temp.set(codes, 0);
        this.codes = temp;
        var lengthTemp = new Uint8Array(lengths.length);
        lengthTemp.set(lengths, 0);
        this.codeLength = lengthTemp;
    };
    /**
     * reset all code data in tree
     * @returns {void}
     */
    CompressorHuffmanTree.prototype.reset = function () {
        for (var i = 0; i < this.codeFrequency.length; i++) {
            this.codeFrequency[i] = 0;
        }
        this.codes = undefined;
        this.codeLength = undefined;
    };
    /**
     * write code to the compressor output stream
     * @param {number} code - code to be written
     * @returns {void}
     */
    CompressorHuffmanTree.prototype.writeCodeToStream = function (code) {
        this.writer.pendingBufferWriteBits(this.codes[code] & 0xffff, this.codeLength[code]);
    };
    /**
     * calculate code from their frequencies
     * @returns {void}
     */
    CompressorHuffmanTree.prototype.buildCodes = function () {
        var nextCode = new Int32Array(this.maxLength);
        this.codes = new Int16Array(this.codeCount);
        var code = 0;
        for (var bitsCount = 0; bitsCount < this.maxLength; bitsCount++) {
            nextCode[bitsCount] = code;
            code += this.lengthCount[bitsCount] << (15 - bitsCount);
        }
        for (var i = 0; i < this.codeCount; i++) {
            var bits = this.codeLength[i];
            if (bits > 0) {
                this.codes[i] = CompressorHuffmanTree.bitReverse(nextCode[bits - 1]);
                nextCode[bits - 1] += 1 << (16 - bits);
            }
        }
    };
    CompressorHuffmanTree.bitReverse = function (value) {
        return (CompressorHuffmanTree.reverseBits[value & 15] << 12
            | CompressorHuffmanTree.reverseBits[(value >> 4) & 15] << 8
            | CompressorHuffmanTree.reverseBits[(value >> 8) & 15] << 4
            | CompressorHuffmanTree.reverseBits[value >> 12]);
    };
    /**
     * calculate length of compressed data
     * @returns {number}
     */
    CompressorHuffmanTree.prototype.getEncodedLength = function () {
        var len = 0;
        for (var i = 0; i < this.codeFrequency.length; i++) {
            len += this.codeFrequency[i] * this.codeLength[i];
        }
        return len;
    };
    /**
     * calculate code frequencies
     * @param {CompressorHuffmanTree} blTree
     * @returns {void}
     */
    CompressorHuffmanTree.prototype.calculateBLFreq = function (blTree) {
        var maxCount;
        var minCount;
        var count;
        var curLen = -1;
        var i = 0;
        while (i < this.codeCount) {
            count = 1;
            var nextLen = this.codeLength[i];
            if (nextLen === 0) {
                maxCount = 138;
                minCount = 3;
            }
            else {
                maxCount = 6;
                minCount = 3;
                if (curLen !== nextLen) {
                    blTree.codeFrequency[nextLen]++;
                    count = 0;
                }
            }
            curLen = nextLen;
            i++;
            while (i < this.codeCount && curLen === this.codeLength[i]) {
                i++;
                if (++count >= maxCount) {
                    break;
                }
            }
            if (count < minCount) {
                blTree.codeFrequency[curLen] += count;
            }
            else if (curLen !== 0) {
                blTree.codeFrequency[16]++;
            }
            else if (count <= 10) {
                blTree.codeFrequency[17]++;
            }
            else {
                blTree.codeFrequency[18]++;
            }
        }
    };
    /**
     * @param {CompressorHuffmanTree} blTree - write tree to output stream
     * @returns {void}
     */
    CompressorHuffmanTree.prototype.writeTree = function (blTree) {
        var maxRepeatCount;
        var minRepeatCount;
        var currentRepeatCount;
        var currentCodeLength = -1;
        var i = 0;
        while (i < this.codeCount) {
            currentRepeatCount = 1;
            var nextLen = this.codeLength[i];
            if (nextLen === 0) {
                maxRepeatCount = 138;
                minRepeatCount = 3;
            }
            else {
                maxRepeatCount = 6;
                minRepeatCount = 3;
                if (currentCodeLength !== nextLen) {
                    blTree.writeCodeToStream(nextLen);
                    currentRepeatCount = 0;
                }
            }
            currentCodeLength = nextLen;
            i++;
            while (i < this.codeCount && currentCodeLength === this.codeLength[i]) {
                i++;
                if (++currentRepeatCount >= maxRepeatCount) {
                    break;
                }
            }
            if (currentRepeatCount < minRepeatCount) {
                while (currentRepeatCount-- > 0) {
                    blTree.writeCodeToStream(currentCodeLength);
                }
            }
            else if (currentCodeLength !== 0) {
                blTree.writeCodeToStream(16);
                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 2);
            }
            else if (currentRepeatCount <= 10) {
                blTree.writeCodeToStream(17);
                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 3);
            }
            else {
                blTree.writeCodeToStream(18);
                this.writer.pendingBufferWriteBits(currentRepeatCount - 11, 7);
            }
        }
    };
    /**
     * Build huffman tree
     * @returns {void}
     */
    CompressorHuffmanTree.prototype.buildTree = function () {
        var codesCount = this.codeFrequency.length;
        var arrTree = new Int32Array(codesCount);
        var treeLength = 0;
        var maxCount = 0;
        for (var n = 0; n < codesCount; n++) {
            var freq = this.codeFrequency[n];
            if (freq !== 0) {
                var pos = treeLength++;
                var pPos = 0;
                while (pos > 0 && this.codeFrequency[arrTree[pPos = Math.floor((pos - 1) / 2)]] > freq) {
                    arrTree[pos] = arrTree[pPos];
                    pos = pPos;
                }
                arrTree[pos] = n;
                maxCount = n;
            }
        }
        while (treeLength < 2) {
            arrTree[treeLength++] =
                (maxCount < 2) ? ++maxCount : 0;
        }
        this.codeCount = Math.max(maxCount + 1, this.codeMinCount);
        var leafsCount = treeLength;
        var nodesCount = leafsCount;
        var child = new Int32Array(4 * treeLength - 2);
        var values = new Int32Array(2 * treeLength - 1);
        for (var i = 0; i < treeLength; i++) {
            var node = arrTree[i];
            var iIndex = 2 * i;
            child[iIndex] = node;
            child[iIndex + 1] = -1;
            values[i] = (this.codeFrequency[node] << 8);
            arrTree[i] = i;
        }
        this.constructHuffmanTree(arrTree, treeLength, values, nodesCount, child);
        this.buildLength(child);
    };
    CompressorHuffmanTree.prototype.constructHuffmanTree = function (arrTree, treeLength, values, nodesCount, child) {
        do {
            var first = arrTree[0];
            var last = arrTree[--treeLength];
            var lastVal = values[last];
            var pPos = 0;
            var path = 1;
            while (path < treeLength) {
                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {
                    path++;
                }
                arrTree[pPos] = arrTree[path];
                pPos = path;
                path = pPos * 2 + 1;
            }
            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {
                arrTree[path] = arrTree[pPos];
            }
            arrTree[path] = last;
            var second = arrTree[0];
            last = nodesCount++;
            child[2 * last] = first;
            child[2 * last + 1] = second;
            var minDepth = Math.min(values[first] & 0xff, values[second] & 0xff);
            values[last] = lastVal = values[first] + values[second] - minDepth + 1;
            pPos = 0;
            path = 1;
            /* tslint:disable */
            while (path < treeLength) {
                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {
                    path++;
                }
                arrTree[pPos] = arrTree[path];
                pPos = path;
                path = pPos * 2 + 1;
            } /* tslint:disable */
            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {
                arrTree[path] = arrTree[pPos];
            }
            arrTree[path] = last;
        } while (treeLength > 1);
    };
    CompressorHuffmanTree.prototype.buildLength = function (child) {
        this.codeLength = new Uint8Array(this.codeFrequency.length);
        var numNodes = Math.floor(child.length / 2);
        var numLeafs = Math.floor((numNodes + 1) / 2);
        var overflow = 0;
        for (var i = 0; i < this.maxLength; i++) {
            this.lengthCount[i] = 0;
        }
        overflow = this.calculateOptimalCodeLength(child, overflow, numNodes);
        if (overflow === 0) {
            return;
        }
        var iIncreasableLength = this.maxLength - 1;
        do {
            while (this.lengthCount[--iIncreasableLength] === 0) {
                /* tslint:disable */
            }
            do {
                this.lengthCount[iIncreasableLength]--;
                this.lengthCount[++iIncreasableLength]++;
                overflow -= (1 << (this.maxLength - 1 - iIncreasableLength));
            } while (overflow > 0 && iIncreasableLength < this.maxLength - 1);
        } while (overflow > 0);
        this.recreateTree(child, overflow, numLeafs);
    };
    CompressorHuffmanTree.prototype.recreateTree = function (child, overflow, numLeafs) {
        this.lengthCount[this.maxLength - 1] += overflow;
        this.lengthCount[this.maxLength - 2] -= overflow;
        var nodePtr = 2 * numLeafs;
        for (var bits = this.maxLength; bits !== 0; bits--) {
            var n = this.lengthCount[bits - 1];
            while (n > 0) {
                var childPtr = 2 * child[nodePtr++];
                if (child[childPtr + 1] === -1) {
                    this.codeLength[child[childPtr]] = bits;
                    n--;
                }
            }
        }
    };
    CompressorHuffmanTree.prototype.calculateOptimalCodeLength = function (child, overflow, numNodes) {
        var lengths = new Int32Array(numNodes);
        lengths[numNodes - 1] = 0;
        for (var i = numNodes - 1; i >= 0; i--) {
            var childIndex = 2 * i + 1;
            if (child[childIndex] !== -1) {
                var bitLength = lengths[i] + 1;
                if (bitLength > this.maxLength) {
                    bitLength = this.maxLength;
                    overflow++;
                }
                lengths[child[childIndex - 1]] = lengths[child[childIndex]] = bitLength;
            }
            else {
                var bitLength = lengths[i];
                this.lengthCount[bitLength - 1]++;
                this.codeLength[child[childIndex - 1]] = lengths[i];
            }
        }
        return overflow;
    };
    CompressorHuffmanTree.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];
    CompressorHuffmanTree.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
    return CompressorHuffmanTree;
}());

/**
 * Checksum calculator, based on Adler32 algorithm.
 */
var ChecksumCalculator = /** @class */ (function () {
    function ChecksumCalculator() {
    }
    /**
     * Updates checksum by calculating checksum of the
     * given buffer and adding it to current value.
     * @param {number} checksum - current checksum.
     * @param {Uint8Array} buffer - data byte array.
     * @param {number} offset - offset in the buffer.
     * @param {number} length - length of data to be used from the stream.
     * @returns {number}
     */
    ChecksumCalculator.checksumUpdate = function (checksum, buffer, offset, length) {
        var uint = new Uint32Array(1);
        uint[0] = checksum;
        var checksum_uint = uint[0];
        var s1 = uint[0] = checksum_uint & 65535;
        var s2 = uint[0] = checksum_uint >> ChecksumCalculator.checkSumBitOffset;
        while (length > 0) {
            var steps = Math.min(length, ChecksumCalculator.checksumIterationCount);
            length -= steps;
            while (--steps >= 0) {
                s1 = s1 + (uint[0] = (buffer[offset++] & 255));
                s2 = s2 + s1;
            }
            s1 %= ChecksumCalculator.checksumBase;
            s2 %= ChecksumCalculator.checksumBase;
        }
        checksum_uint = (s2 << ChecksumCalculator.checkSumBitOffset) | s1;
        return checksum_uint;
    };
    ChecksumCalculator.checkSumBitOffset = 16;
    ChecksumCalculator.checksumBase = 65521;
    ChecksumCalculator.checksumIterationCount = 3800;
    return ChecksumCalculator;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/index.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/index.js ***!
  \******************************************************************************************************************/
/*! exports provided: ZipArchive, ZipArchiveItem, CompressedStreamWriter, CompressorHuffmanTree, ChecksumCalculator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _zip_archive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zip-archive */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/zip-archive.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZipArchive", function() { return _zip_archive__WEBPACK_IMPORTED_MODULE_0__["ZipArchive"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZipArchiveItem", function() { return _zip_archive__WEBPACK_IMPORTED_MODULE_0__["ZipArchiveItem"]; });

/* harmony import */ var _compression_writer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compression-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/compression-writer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompressedStreamWriter", function() { return _compression_writer__WEBPACK_IMPORTED_MODULE_1__["CompressedStreamWriter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CompressorHuffmanTree", function() { return _compression_writer__WEBPACK_IMPORTED_MODULE_1__["CompressorHuffmanTree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChecksumCalculator", function() { return _compression_writer__WEBPACK_IMPORTED_MODULE_1__["ChecksumCalculator"]; });

/**
 * export ZipArchive class
 */




/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/zip-archive.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/zip-archive.js ***!
  \************************************************************************************************************************/
/*! exports provided: ZipArchive, ZipArchiveItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipArchive", function() { return ZipArchive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipArchiveItem", function() { return ZipArchiveItem; });
/* harmony import */ var _compression_writer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compression-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/src/compression-writer.js");
/* harmony import */ var _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-file-utils */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/index.js");


var CRC32TABLE = [];
/**
 * class provide compression library
 * ```typescript
 * let archive = new ZipArchive();
 * archive.compressionLevel = 'Normal';
 * let archiveItem = new ZipArchiveItem(archive, 'directoryName\fileName.txt');
 * archive.addItem(archiveItem);
 * archive.save(fileName.zip);
 * ```
 */
var ZipArchive = /** @class */ (function () {
    /**
     * constructor for creating ZipArchive instance
     */
    function ZipArchive() {
        if (CRC32TABLE.length === 0) {
            ZipArchive.initCrc32Table();
        }
        this.files = [];
        this.level = 'Normal';
        _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_1__["Save"].isMicrosoftBrowser = !(!navigator.msSaveBlob);
    }
    Object.defineProperty(ZipArchive.prototype, "compressionLevel", {
        /**
         * gets compression level
         */
        get: function () {
            return this.level;
        },
        /**
         * sets compression level
         */
        set: function (level) {
            this.level = level;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ZipArchive.prototype, "length", {
        /**
         * gets items count
         */
        get: function () {
            if (this.files === undefined) {
                return 0;
            }
            return this.files.length;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * add new item to archive
     * @param {ZipArchiveItem} item - item to be added
     * @returns {void}
     */
    ZipArchive.prototype.addItem = function (item) {
        if (item === null || item === undefined) {
            throw new Error('ArgumentException: item cannot be null or undefined');
        }
        for (var i = 0; i < this.files.length; i++) {
            var file = this.files[i];
            if (file instanceof ZipArchiveItem) {
                if (file.name === item.name) {
                    throw new Error('item with same name already exist');
                }
            }
        }
        this.files.push(item);
    };
    /**
     * add new directory to archive
     * @param directoryName directoryName to be created
     * @returns {void}
     */
    ZipArchive.prototype.addDirectory = function (directoryName) {
        if (directoryName === null || directoryName === undefined) {
            throw new Error('ArgumentException: string cannot be null or undefined');
        }
        if (directoryName.length === 0) {
            throw new Error('ArgumentException: string cannot be empty');
        }
        if (directoryName.slice(-1) !== '/') {
            directoryName += '/';
        }
        if (this.files.indexOf(directoryName) !== -1) {
            throw new Error('item with same name already exist');
        }
        this.files.push(directoryName);
    };
    /**
     * gets item at specified index
     * @param {number} index - item index
     * @returns {ZipArchiveItem}
     */
    ZipArchive.prototype.getItem = function (index) {
        if (index >= 0 && index < this.files.length) {
            return this.files[index];
        }
        return undefined;
    };
    /**
     * determines whether an element is in the collection
     * @param {string | ZipArchiveItem} item - item to search
     * @returns {boolean}
     */
    ZipArchive.prototype.contains = function (item) {
        return this.files.indexOf(item) !== -1 ? true : false;
    };
    /**
     * save archive with specified file name
     * @param {string} fileName save archive with specified file name
     * @returns {Promise<ZipArchive>}
     */
    ZipArchive.prototype.save = function (fileName) {
        if (fileName === null || fileName === undefined || fileName.length === 0) {
            throw new Error('ArgumentException: fileName cannot be null or undefined');
        }
        if (this.files.length === 0) {
            throw new Error('InvalidOperation');
        }
        var zipArchive = this;
        var promise;
        return promise = new Promise(function (resolve, reject) {
            zipArchive.saveInternal(fileName, false).then(function () {
                resolve(zipArchive);
            });
        });
    };
    /**
     * Save archive as blob
     * @return {Promise<Blob>}
     */
    ZipArchive.prototype.saveAsBlob = function () {
        var zipArchive = this;
        var promise;
        return promise = new Promise(function (resolve, reject) {
            zipArchive.saveInternal('', true).then(function (blob) {
                resolve(blob);
            });
        });
    };
    ZipArchive.prototype.saveInternal = function (fileName, skipFileSave) {
        var _this = this;
        var zipArchive = this;
        var promise;
        return promise = new Promise(function (resolve, reject) {
            var zipData = [];
            var dirLength = 0;
            for (var i = 0; i < zipArchive.files.length; i++) {
                var compressedObject = _this.getCompressedData(_this.files[i]);
                compressedObject.then(function (data) {
                    dirLength = zipArchive.constructZippedObject(zipData, data, dirLength, data.isDirectory);
                    if (zipData.length === zipArchive.files.length) {
                        var blob = zipArchive.writeZippedContent(fileName, zipData, dirLength, skipFileSave);
                        resolve(blob);
                    }
                });
            }
        });
    };
    /**
     * release allocated un-managed resource
     * @returns {void}
     */
    ZipArchive.prototype.destroy = function () {
        if (this.files !== undefined && this.files.length > 0) {
            for (var i = 0; i < this.files.length; i++) {
                var file = this.files[i];
                if (file instanceof ZipArchiveItem) {
                    file.destroy();
                }
                file = undefined;
            }
            this.files = [];
        }
        this.files = undefined;
        this.level = undefined;
    };
    ZipArchive.prototype.getCompressedData = function (item) {
        var zipArchive = this;
        var promise = new Promise(function (resolve, reject) {
            if (item instanceof ZipArchiveItem) {
                var reader_1 = new FileReader();
                reader_1.onload = function () {
                    var input = new Uint8Array(reader_1.result);
                    var data = {
                        fileName: item.name, crc32Value: 0, compressedData: [],
                        compressedSize: undefined, uncompressedDataSize: input.length, compressionType: undefined,
                        isDirectory: false
                    };
                    if (zipArchive.level === 'Normal') {
                        zipArchive.compressData(input, data, CRC32TABLE);
                        var length_1 = 0;
                        for (var i = 0; i < data.compressedData.length; i++) {
                            length_1 += data.compressedData[i].length;
                        }
                        data.compressedSize = length_1;
                        data.compressionType = '\x08\x00'; //Deflated = 8
                    }
                    else {
                        data.compressedSize = input.length;
                        data.crc32Value = zipArchive.calculateCrc32Value(0, input, CRC32TABLE);
                        data.compressionType = '\x00\x00'; // Stored = 0
                        data.compressedData.push(input);
                    }
                    resolve(data);
                };
                reader_1.readAsArrayBuffer(item.data);
            }
            else {
                var data = {
                    fileName: item, crc32Value: 0, compressedData: '', compressedSize: 0, uncompressedDataSize: 0,
                    compressionType: '\x00\x00', isDirectory: true
                };
                resolve(data);
            }
        });
        return promise;
    };
    ZipArchive.prototype.compressData = function (input, data, crc32Table) {
        var compressor = new _compression_writer__WEBPACK_IMPORTED_MODULE_0__["CompressedStreamWriter"](true);
        var currentIndex = 0;
        var nextIndex = 0;
        do {
            if (currentIndex >= input.length) {
                compressor.close();
                break;
            }
            nextIndex = Math.min(input.length, currentIndex + 16384);
            var subArray = input.subarray(currentIndex, nextIndex);
            data.crc32Value = this.calculateCrc32Value(data.crc32Value, subArray, crc32Table);
            compressor.write(subArray, 0, nextIndex - currentIndex);
            currentIndex = nextIndex;
        } while (currentIndex <= input.length);
        data.compressedData = compressor.compressedData;
        compressor.destroy();
    };
    ZipArchive.prototype.constructZippedObject = function (zipParts, data, dirLength, isDirectory) {
        var extFileAttr = 0;
        var date = new Date();
        if (isDirectory) {
            extFileAttr = extFileAttr | 0x00010; // directory flag
        }
        extFileAttr = extFileAttr | (0 & 0x3F);
        var header = this.writeHeader(data, date);
        var localHeader = 'PK\x03\x04' + header + data.fileName;
        var centralDir = this.writeCentralDirectory(data, header, dirLength, extFileAttr);
        zipParts.push({ localHeader: localHeader, centralDir: centralDir, compressedData: data });
        return dirLength + localHeader.length + data.compressedSize;
    };
    ZipArchive.prototype.writeHeader = function (data, date) {
        var zipHeader = '';
        zipHeader += '\x0A\x00' + '\x00\x00'; // version needed to extract & general purpose bit flag
        zipHeader += data.compressionType; // compression method Deflate=8,Stored=0
        zipHeader += this.getBytes(this.getModifiedTime(date), 2); // last modified Time
        zipHeader += this.getBytes(this.getModifiedDate(date), 2); // last modified date
        zipHeader += this.getBytes(data.crc32Value, 4); // crc-32 value
        zipHeader += this.getBytes(data.compressedSize, 4); // compressed file size
        zipHeader += this.getBytes(data.uncompressedDataSize, 4); // uncompressed file size
        zipHeader += this.getBytes(data.fileName.length, 2); // file name length
        zipHeader += this.getBytes(0, 2); // extra field length
        return zipHeader;
    };
    ZipArchive.prototype.writeZippedContent = function (fileName, zipData, localDirLen, skipFileSave) {
        var cenDirLen = 0;
        var buffer = [];
        for (var i = 0; i < zipData.length; i++) {
            var item = zipData[i];
            cenDirLen += item.centralDir.length;
            buffer.push(this.getArrayBuffer(item.localHeader));
            while (item.compressedData.compressedData.length) {
                buffer.push(item.compressedData.compressedData.shift().buffer);
            }
        }
        for (var i = 0; i < zipData.length; i++) {
            buffer.push(this.getArrayBuffer(zipData[i].centralDir));
        }
        buffer.push(this.getArrayBuffer(this.writeFooter(zipData, cenDirLen, localDirLen)));
        var blob = new Blob(buffer, { type: 'application/zip' });
        if (!skipFileSave) {
            _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_1__["Save"].save(fileName, blob);
        }
        return blob;
    };
    ZipArchive.prototype.writeCentralDirectory = function (data, localHeader, offset, externalFileAttribute) {
        var directoryHeader = 'PK\x01\x02' +
            this.getBytes(0x0014, 2) + localHeader + // inherit from file header
            this.getBytes(0, 2) + // comment length
            '\x00\x00' + '\x00\x00' + // internal file attributes 
            this.getBytes(externalFileAttribute, 4) + // external file attributes
            this.getBytes(offset, 4) + // local fileHeader relative offset
            data.fileName;
        return directoryHeader;
    };
    ZipArchive.prototype.writeFooter = function (zipData, centralLength, localLength) {
        var dirEnd = 'PK\x05\x06' + '\x00\x00' + '\x00\x00' +
            this.getBytes(zipData.length, 2) + this.getBytes(zipData.length, 2) +
            this.getBytes(centralLength, 4) + this.getBytes(localLength, 4) +
            this.getBytes(0, 2);
        return dirEnd;
    };
    ZipArchive.prototype.getArrayBuffer = function (input) {
        var a = new Uint8Array(input.length);
        for (var j = 0; j < input.length; ++j) {
            a[j] = input.charCodeAt(j) & 0xFF;
        }
        return a.buffer;
    };
    ZipArchive.prototype.getBytes = function (value, offset) {
        var bytes = '';
        for (var i = 0; i < offset; i++) {
            bytes += String.fromCharCode(value & 0xff);
            value = value >>> 8;
        }
        return bytes;
    };
    ZipArchive.prototype.getModifiedTime = function (date) {
        var modTime = date.getHours();
        modTime = modTime << 6;
        modTime = modTime | date.getMinutes();
        modTime = modTime << 5;
        return modTime = modTime | date.getSeconds() / 2;
    };
    ZipArchive.prototype.getModifiedDate = function (date) {
        var modiDate = date.getFullYear() - 1980;
        modiDate = modiDate << 4;
        modiDate = modiDate | (date.getMonth() + 1);
        modiDate = modiDate << 5;
        return modiDate = modiDate | date.getDate();
    };
    ZipArchive.prototype.calculateCrc32Value = function (crc32Value, input, crc32Table) {
        crc32Value ^= -1;
        for (var i = 0; i < input.length; i++) {
            crc32Value = (crc32Value >>> 8) ^ crc32Table[(crc32Value ^ input[i]) & 0xFF];
        }
        return (crc32Value ^ (-1));
    };
    /**
     * construct cyclic redundancy code table
     * @private
     */
    ZipArchive.initCrc32Table = function () {
        var i;
        for (var j = 0; j < 256; j++) {
            i = j;
            for (var k = 0; k < 8; k++) {
                i = ((i & 1) ? (0xEDB88320 ^ (i >>> 1)) : (i >>> 1));
            }
            CRC32TABLE[j] = i;
        }
    };
    return ZipArchive;
}());

/**
 * Class represent unique ZipArchive item
 * ```typescript
 * let archiveItem = new ZipArchiveItem(archive, 'directoryName\fileName.txt');
 * ```
 */
var ZipArchiveItem = /** @class */ (function () {
    /**
     * constructor for creating {ZipArchiveItem} instance
     * @param {Blob|ArrayBuffer} data file data
     * @param {itemName} itemName absolute file path
     */
    function ZipArchiveItem(data, itemName) {
        if (data === null || data === undefined) {
            throw new Error('ArgumentException: data cannot be null or undefined');
        }
        if (itemName === null || itemName === undefined) {
            throw new Error('ArgumentException: string cannot be null or undefined');
        }
        if (itemName.length === 0) {
            throw new Error('string cannot be empty');
        }
        this.data = data;
        this.name = itemName;
    }
    Object.defineProperty(ZipArchiveItem.prototype, "name", {
        /**
         * Get the name of archive item
         * @returns string
         */
        get: function () {
            return this.fileName;
        },
        /**
         * Set the name of archive item
         * @param  {string} value
         */
        set: function (value) {
            this.fileName = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * release allocated un-managed resource
     * @returns {void}
     */
    ZipArchiveItem.prototype.destroy = function () {
        this.fileName = undefined;
        this.data = undefined;
    };
    return ZipArchiveItem;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/index.js ***!
  \*************************************************************************************************************/
/*! exports provided: XmlWriter, Namespace, XmlElement, XmlAttribute, StreamWriter, Encoding, validateNullOrUndefined, Save */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XmlWriter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["XmlWriter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Namespace", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Namespace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XmlElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["XmlElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XmlAttribute", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["XmlAttribute"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StreamWriter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["StreamWriter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Encoding", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Encoding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validateNullOrUndefined", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["validateNullOrUndefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Save", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Save"]; });

/**
 * index
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/encoding.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/encoding.js ***!
  \********************************************************************************************************************/
/*! exports provided: Encoding, validateNullOrUndefined */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Encoding", function() { return Encoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateNullOrUndefined", function() { return validateNullOrUndefined; });
/**
 * Encoding class: Contains the details about encoding type, whether to write a Unicode byte order mark (BOM).
 * ```typescript
 * let encoding : Encoding = new Encoding();
 * encoding.type = 'Utf8';
 * encoding.getBytes('Encoding', 0, 5);
 * ```
 */
var Encoding = /** @class */ (function () {
    /**
     * Initializes a new instance of the Encoding class. A parameter specifies whether to write a Unicode byte order mark
     * @param  {boolean} includeBom?-true to specify that a Unicode byte order mark is written; otherwise, false.
     */
    function Encoding(includeBom) {
        this.emitBOM = true;
        this.encodingType = 'Ansi';
        this.initBOM(includeBom);
    }
    Object.defineProperty(Encoding.prototype, "includeBom", {
        /**
         * Gets a value indicating whether to write a Unicode byte order mark
         * @returns boolean- true to specify that a Unicode byte order mark is written; otherwise, false
         */
        get: function () {
            return this.emitBOM;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Encoding.prototype, "type", {
        /**
         * Gets the encoding type.
         * @returns EncodingType
         */
        get: function () {
            return this.encodingType;
        },
        /**
         * Sets the encoding type.
         * @param  {EncodingType} value
         */
        set: function (value) {
            this.encodingType = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Initialize the includeBom to emit BOM or Not
     * @param  {boolean} includeBom
     */
    Encoding.prototype.initBOM = function (includeBom) {
        if (includeBom === undefined || includeBom === null) {
            this.emitBOM = true;
        }
        else {
            this.emitBOM = includeBom;
        }
    };
    /**
     * Calculates the number of bytes produced by encoding the characters in the specified string
     * @param  {string} chars - The string containing the set of characters to encode
     * @returns {number} - The number of bytes produced by encoding the specified characters
     */
    Encoding.prototype.getByteCount = function (chars) {
        var byteCount = 0;
        validateNullOrUndefined(chars, 'string');
        if (chars === '') {
            var byte = this.utf8Len(chars.charCodeAt(0));
            return byte;
        }
        if (this.type === null || this.type === undefined) {
            this.type = 'Ansi';
        }
        return this.getByteCountInternal(chars, 0, chars.length);
    };
    /**
     * Return the Byte of character
     * @param  {number} codePoint
     * @returns {number}
     */
    Encoding.prototype.utf8Len = function (codePoint) {
        var bytes = codePoint <= 0x7F ? 1 :
            codePoint <= 0x7FF ? 2 :
                codePoint <= 0xFFFF ? 3 :
                    codePoint <= 0x1FFFFF ? 4 : 0;
        return bytes;
    };
    /**
     * for 4 byte character return surrogate pair true, otherwise false
     * @param  {number} codeUnit
     * @returns {boolean}
     */
    Encoding.prototype.isHighSurrogate = function (codeUnit) {
        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;
    };
    /**
     * for 4byte character generate the surrogate pair
     * @param  {number} highCodeUnit
     * @param  {number} lowCodeUnit
     */
    Encoding.prototype.toCodepoint = function (highCodeUnit, lowCodeUnit) {
        highCodeUnit = (0x3FF & highCodeUnit) << 10;
        var u = highCodeUnit | (0x3FF & lowCodeUnit);
        return u + 0x10000;
    };
    /**
     * private method to get the byte count for specific charindex and count
     * @param  {string} chars
     * @param  {number} charIndex
     * @param  {number} charCount
     */
    Encoding.prototype.getByteCountInternal = function (chars, charIndex, charCount) {
        var byteCount = 0;
        if (this.encodingType === 'Utf8' || this.encodingType === 'Unicode') {
            var isUtf8 = this.encodingType === 'Utf8';
            for (var i = 0; i < charCount; i++) {
                var charCode = chars.charCodeAt(isUtf8 ? charIndex : charIndex++);
                if (this.isHighSurrogate(charCode)) {
                    if (isUtf8) {
                        var high = charCode;
                        var low = chars.charCodeAt(++charIndex);
                        byteCount += this.utf8Len(this.toCodepoint(high, low));
                    }
                    else {
                        byteCount += 4;
                        ++i;
                    }
                }
                else {
                    if (isUtf8) {
                        byteCount += this.utf8Len(charCode);
                    }
                    else {
                        byteCount += 2;
                    }
                }
                if (isUtf8) {
                    charIndex++;
                }
            }
            return byteCount;
        }
        else {
            byteCount = charCount;
            return byteCount;
        }
    };
    /**
     * Encodes a set of characters from the specified string into the ArrayBuffer.
     * @param  {string} s- The string containing the set of characters to encode
     * @param  {number} charIndex-The index of the first character to encode.
     * @param  {number} charCount- The number of characters to encode.
     * @returns {ArrayBuffer} - The ArrayBuffer that contains the resulting sequence of bytes.
     */
    Encoding.prototype.getBytes = function (s, charIndex, charCount) {
        validateNullOrUndefined(s, 'string');
        validateNullOrUndefined(charIndex, 'charIndex');
        validateNullOrUndefined(charCount, 'charCount');
        if (charIndex < 0 || charCount < 0) {
            throw new RangeError('Argument Out Of Range Exception: charIndex or charCount is less than zero');
        }
        if (s.length - charIndex < charCount) {
            throw new RangeError('Argument Out Of Range Exception: charIndex and charCount do not denote a valid range in string');
        }
        var bytes;
        if (s === '') {
            bytes = new ArrayBuffer(0);
            return bytes;
        }
        if (this.type === null || this.type === undefined) {
            this.type = 'Ansi';
        }
        var byteCount = this.getByteCountInternal(s, charIndex, charCount);
        switch (this.type) {
            case 'Utf8':
                bytes = this.getBytesOfUtf8Encoding(byteCount, s, charIndex, charCount);
                return bytes;
            case 'Unicode':
                bytes = this.getBytesOfUnicodeEncoding(byteCount, s, charIndex, charCount);
                return bytes;
            default:
                bytes = this.getBytesOfAnsiEncoding(byteCount, s, charIndex, charCount);
                return bytes;
        }
    };
    /**
     * Decodes a sequence of bytes from the specified ArrayBuffer into the string.
     * @param  {ArrayBuffer} bytes- The ArrayBuffer containing the sequence of bytes to decode.
     * @param  {number} index- The index of the first byte to decode.
     * @param  {number} count- The number of bytes to decode.
     * @returns {string} - The string that contains the resulting set of characters.
     */
    Encoding.prototype.getString = function (bytes, index, count) {
        validateNullOrUndefined(bytes, 'bytes');
        validateNullOrUndefined(index, 'index');
        validateNullOrUndefined(count, 'count');
        if (index < 0 || count < 0) {
            throw new RangeError('Argument Out Of Range Exception: index or count is less than zero');
        }
        if (bytes.byteLength - index < count) {
            throw new RangeError('Argument Out Of Range Exception: index and count do not denote a valid range in bytes');
        }
        if (bytes.byteLength === 0 || count === 0) {
            return '';
        }
        if (this.type === null || this.type === undefined) {
            this.type = 'Ansi';
        }
        var out = '';
        var byteCal = new Uint8Array(bytes);
        switch (this.type) {
            case 'Utf8':
                var s = this.getStringOfUtf8Encoding(byteCal, index, count);
                return s;
            case 'Unicode':
                var byteUnicode = new Uint16Array(bytes);
                out = this.getStringofUnicodeEncoding(byteUnicode, index, count);
                return out;
            default:
                var j = index;
                for (var i = 0; i < count; i++) {
                    var c = byteCal[j];
                    out += String.fromCharCode(c); // 1 byte(ASCII) character                  
                    j++;
                }
                return out;
        }
    };
    Encoding.prototype.getBytesOfAnsiEncoding = function (byteCount, s, charIndex, charCount) {
        var bytes = new ArrayBuffer(byteCount);
        var bufview = new Uint8Array(bytes);
        var k = 0;
        for (var i = 0; i < charCount; i++) {
            var charcode = s.charCodeAt(charIndex++);
            if (charcode < 0x800) {
                bufview[k] = charcode;
            }
            else {
                bufview[k] = 63; //replacement character '?'
            }
            k++;
        }
        return bytes;
    };
    Encoding.prototype.getBytesOfUtf8Encoding = function (byteCount, s, charIndex, charCount) {
        var bytes = new ArrayBuffer(byteCount);
        var uint = new Uint8Array(bytes);
        var index = charIndex;
        var j = 0;
        for (var i = 0; i < charCount; i++) {
            var charcode = s.charCodeAt(index);
            if (charcode <= 0x7F) { // 1 byte character 2^7
                uint[j] = charcode;
            }
            else if (charcode < 0x800) { // 2 byte character 2^11
                uint[j] = 0xc0 | (charcode >> 6);
                uint[++j] = 0x80 | (charcode & 0x3f);
            }
            else if ((charcode < 0xd800 || charcode >= 0xe000)) { // 3 byte character 2^16        
                uint[j] = 0xe0 | (charcode >> 12);
                uint[++j] = 0x80 | ((charcode >> 6) & 0x3f);
                uint[++j] = 0x80 | (charcode & 0x3f);
            }
            else {
                uint[j] = 0xef;
                uint[++j] = 0xbf;
                uint[++j] = 0xbd; // U+FFFE "replacement character"
            }
            ++j;
            ++index;
        }
        return bytes;
    };
    Encoding.prototype.getBytesOfUnicodeEncoding = function (byteCount, s, charIndex, charCount) {
        var bytes = new ArrayBuffer(byteCount);
        var uint16 = new Uint16Array(bytes);
        for (var i = 0; i < charCount; i++) {
            var charcode = s.charCodeAt(i);
            uint16[i] = charcode;
        }
        return bytes;
    };
    Encoding.prototype.getStringOfUtf8Encoding = function (byteCal, index, count) {
        var j = 0;
        var i = index;
        var s = '';
        for (j; j < count; j++) {
            var c = byteCal[i++];
            while (i > byteCal.length) {
                return s;
            }
            if (c > 127) {
                if (c > 191 && c < 224 && i < count) {
                    c = (c & 31) << 6 | byteCal[i] & 63;
                }
                else if (c > 223 && c < 240 && i < byteCal.byteLength) {
                    c = (c & 15) << 12 | (byteCal[i] & 63) << 6 | byteCal[++i] & 63;
                }
                else if (c > 239 && c < 248 && i < byteCal.byteLength) {
                    c = (c & 7) << 18 | (byteCal[i] & 63) << 12 | (byteCal[++i] & 63) << 6 | byteCal[++i] & 63;
                }
                ++i;
            }
            s += String.fromCharCode(c); // 1 byte(ASCII) character                          
        }
        return s;
    };
    Encoding.prototype.getStringofUnicodeEncoding = function (byteUni, index, count) {
        if (count > byteUni.length) {
            throw new RangeError('ArgumentOutOfRange_Count');
        }
        var byte16 = new Uint16Array(count);
        var out = '';
        for (var i = 0; i < count && i < byteUni.length; i++) {
            byte16[i] = byteUni[index++];
        }
        out = String.fromCharCode.apply(null, byte16);
        return out;
    };
    /**
     * To clear the encoding instance
     * @return {void}
     */
    Encoding.prototype.destroy = function () {
        this.emitBOM = undefined;
        this.encodingType = undefined;
    };
    return Encoding;
}());

/**
 * To check the object is null or undefined and throw error if it is null or undefined
 * @param {Object} value - object to check is null or undefined
 * @return {boolean}
 * @throws {ArgumentException} - if the value is null or undefined
 * @private
 */
function validateNullOrUndefined(value, message) {
    if (value === null || value === undefined) {
        throw new Error('ArgumentException: ' + message + ' cannot be null or undefined');
    }
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/index.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/index.js ***!
  \*****************************************************************************************************************/
/*! exports provided: XmlWriter, Namespace, XmlElement, XmlAttribute, StreamWriter, Encoding, validateNullOrUndefined, Save */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _xml_writer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./xml-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/xml-writer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XmlWriter", function() { return _xml_writer__WEBPACK_IMPORTED_MODULE_0__["XmlWriter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Namespace", function() { return _xml_writer__WEBPACK_IMPORTED_MODULE_0__["Namespace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XmlElement", function() { return _xml_writer__WEBPACK_IMPORTED_MODULE_0__["XmlElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XmlAttribute", function() { return _xml_writer__WEBPACK_IMPORTED_MODULE_0__["XmlAttribute"]; });

/* harmony import */ var _stream_writer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stream-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/stream-writer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StreamWriter", function() { return _stream_writer__WEBPACK_IMPORTED_MODULE_1__["StreamWriter"]; });

/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./encoding */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/encoding.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Encoding", function() { return _encoding__WEBPACK_IMPORTED_MODULE_2__["Encoding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validateNullOrUndefined", function() { return _encoding__WEBPACK_IMPORTED_MODULE_2__["validateNullOrUndefined"]; });

/* harmony import */ var _save__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./save */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/save.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Save", function() { return _save__WEBPACK_IMPORTED_MODULE_3__["Save"]; });

// export all modules from current location
// example: export * from './module'
/**
 * file utils modules
 */






/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/save.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/save.js ***!
  \****************************************************************************************************************/
/*! exports provided: Save */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Save", function() { return Save; });
/**
 * Save class provide method to save file
 * ```typescript
 * let blob : Blob = new Blob([''], { type: 'text/plain' });
 * Save.save('fileName.txt',blob);
 */
var Save = /** @class */ (function () {
    /**
     * Initialize new instance of {save}
     */
    function Save() {
        // tslint:disable
    }
    /**
     * Saves the file with specified name and sends the file to client browser
     * @param  {string} fileName- file name to save.
     * @param  {Blob} buffer- the content to write in file
     * @param  {boolean} isMicrosoftBrowser- specify whether microsoft browser or not
     * @returns {void}
     */
    Save.save = function (fileName, buffer) {
        if (fileName === null || fileName === undefined || fileName === '') {
            throw new Error('ArgumentException: fileName cannot be undefined, null or empty');
        }
        var extension = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);
        var mimeType = this.getMimeType(extension);
        if (mimeType !== '') {
            buffer = new Blob([buffer], { type: mimeType });
        }
        if (this.isMicrosoftBrowser) {
            navigator.msSaveBlob(buffer, fileName);
        }
        else {
            var downloadLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');
            this.saveInternal(fileName, extension, buffer, downloadLink, 'download' in downloadLink);
        }
    };
    Save.saveInternal = function (fileName, extension, buffer, downloadLink, hasDownloadAttribute) {
        if (hasDownloadAttribute) {
            downloadLink.download = fileName;
            var dataUrl_1 = window.URL.createObjectURL(buffer);
            downloadLink.href = dataUrl_1;
            var event_1 = document.createEvent('MouseEvent');
            event_1.initEvent('click', true, true);
            downloadLink.dispatchEvent(event_1);
            setTimeout(function () {
                window.URL.revokeObjectURL(dataUrl_1);
                dataUrl_1 = undefined;
            });
        }
        else {
            if (extension !== 'docx' && extension !== 'xlsx') {
                var url = window.URL.createObjectURL(buffer);
                var isPopupBlocked = window.open(url, '_blank');
                if (!isPopupBlocked) {
                    window.location.href = url;
                }
            }
            else {
                var reader_1 = new FileReader();
                reader_1.onloadend = function () {
                    var isPopupBlocked = window.open(reader_1.result, '_blank');
                    if (!isPopupBlocked) {
                        window.location.href = reader_1.result;
                    }
                };
                reader_1.readAsDataURL(buffer);
            }
        }
    };
    /**
     *
     * @param {string} extension - get mime type of the specified extension
     * @private
     */
    Save.getMimeType = function (extension) {
        var mimeType = '';
        switch (extension) {
            case 'html':
                mimeType = 'text/html';
                break;
            case 'pdf':
                mimeType = 'application/pdf';
                break;
            case 'docx':
                mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
                break;
            case 'xlsx':
                mimeType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
                break;
            case 'txt':
                mimeType = 'text/plain';
                break;
        }
        return mimeType;
    };
    return Save;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/stream-writer.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/stream-writer.js ***!
  \*************************************************************************************************************************/
/*! exports provided: StreamWriter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StreamWriter", function() { return StreamWriter; });
/* harmony import */ var _encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encoding */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/encoding.js");
/* harmony import */ var _save__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./save */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/save.js");


/**
 * StreamWriter class contains the implementation for writing characters to a file in a particular encoding
 * ```typescript
 * let writer = new StreamWriter();
 * writer.write('Hello World');
 * writer.save('Sample.txt');
 * writer.dispose();
 * ```
 */
var StreamWriter = /** @class */ (function () {
    /**
     * Initializes a new instance of the StreamWriter class by using the specified encoding.
     * @param  {Encoding} encoding?- The character encoding to use.
     */
    function StreamWriter(encoding) {
        this.bufferBlob = new Blob(['']);
        this.bufferText = '';
        this.init(encoding);
        _save__WEBPACK_IMPORTED_MODULE_1__["Save"].isMicrosoftBrowser = !(!navigator.msSaveBlob);
    }
    Object.defineProperty(StreamWriter.prototype, "buffer", {
        /**
         * Gets the content written to the StreamWriter as Blob.
         * @returns Blob
         */
        get: function () {
            this.flush();
            return this.bufferBlob;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StreamWriter.prototype, "encoding", {
        /**
         * Gets the encoding.
         * @returns Encoding
         */
        get: function () {
            return this.enc;
        },
        enumerable: true,
        configurable: true
    });
    StreamWriter.prototype.init = function (encoding) {
        if (encoding === null || encoding === undefined) {
            this.enc = new _encoding__WEBPACK_IMPORTED_MODULE_0__["Encoding"](false);
            this.enc.type = 'Utf8';
        }
        else {
            this.enc = encoding;
            this.setBomByte();
        }
    };
    /**
     * Private method to set Byte Order Mark(BOM) value based on EncodingType
     */
    StreamWriter.prototype.setBomByte = function () {
        if (this.encoding.includeBom) {
            switch (this.encoding.type) {
                case 'Unicode':
                    var arrayUnicode = new ArrayBuffer(2);
                    var uint8 = new Uint8Array(arrayUnicode);
                    uint8[0] = 255;
                    uint8[1] = 254;
                    this.bufferBlob = new Blob([arrayUnicode]);
                    break;
                case 'Utf8':
                    var arrayUtf8 = new ArrayBuffer(3);
                    var utf8 = new Uint8Array(arrayUtf8);
                    utf8[0] = 239;
                    utf8[1] = 187;
                    utf8[2] = 191;
                    this.bufferBlob = new Blob([arrayUtf8]);
                    break;
                default:
                    this.bufferBlob = new Blob(['']);
                    break;
            }
        }
    };
    /**
     * Saves the file with specified name and sends the file to client browser
     * @param  {string} fileName - The file name to save
     * @returns {void}
     */
    StreamWriter.prototype.save = function (fileName) {
        if (this.bufferText !== '') {
            this.flush();
        }
        _save__WEBPACK_IMPORTED_MODULE_1__["Save"].save(fileName, this.buffer);
    };
    /**
     * Writes the specified string.
     * @param  {string} value - The string to write. If value is null or undefined, nothing is written.
     * @returns {void}
     */
    StreamWriter.prototype.write = function (value) {
        if (this.encoding === undefined) {
            throw new Error('Object Disposed Exception: current writer is disposed');
        }
        Object(_encoding__WEBPACK_IMPORTED_MODULE_0__["validateNullOrUndefined"])(value, 'string');
        this.bufferText += value;
        if (this.bufferText.length >= 10240) {
            this.flush();
        }
    };
    StreamWriter.prototype.flush = function () {
        if (this.bufferText === undefined || this.bufferText === null || this.bufferText.length === 0) {
            return;
        }
        var bufferArray = this.encoding.getBytes(this.bufferText, 0, this.bufferText.length);
        this.bufferText = '';
        this.bufferBlob = new Blob([this.bufferBlob, bufferArray]);
    };
    /**
     * Writes the specified string followed by a line terminator
     * @param  {string} value - The string to write. If value is null or undefined, nothing is written
     * @returns {void}
     */
    StreamWriter.prototype.writeLine = function (value) {
        if (this.encoding === undefined) {
            throw new Error('Object Disposed Exception: current writer is disposed');
        }
        Object(_encoding__WEBPACK_IMPORTED_MODULE_0__["validateNullOrUndefined"])(value, 'string');
        this.bufferText = this.bufferText + value + '\r\n';
        if (this.bufferText.length >= 10240) {
            this.flush();
        }
    };
    /**
     * Releases the resources used by the StreamWriter
     * @returns {void}
     */
    StreamWriter.prototype.destroy = function () {
        this.bufferBlob = undefined;
        this.bufferText = undefined;
        if (this.enc instanceof _encoding__WEBPACK_IMPORTED_MODULE_0__["Encoding"]) {
            this.enc.destroy();
        }
        this.enc = undefined;
    };
    return StreamWriter;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/xml-writer.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/xml-writer.js ***!
  \**********************************************************************************************************************/
/*! exports provided: XmlWriter, Namespace, XmlElement, XmlAttribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XmlWriter", function() { return XmlWriter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Namespace", function() { return Namespace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XmlElement", function() { return XmlElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XmlAttribute", function() { return XmlAttribute; });
/* harmony import */ var _save__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./save */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/src/save.js");

/**
 * XmlWriter class provide method to create XML data
 */
var XmlWriter = /** @class */ (function () {
    /**
     * Initialize new instance of {XmlWriter}
     */
    function XmlWriter() {
        this.contentPos = 0;
        this.bufferText = '';
        this.bufferBlob = new Blob([''], { type: 'text/plain' });
        this.currentState = 'Initial';
        this.namespaceStack = [];
        this.namespaceStack.push(new Namespace());
        this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');
        this.namespaceStack.push(new Namespace());
        this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');
        this.namespaceStack.push(new Namespace());
        this.namespaceStack[2].set('', '', 'Implied');
        this.elementStack = [];
        this.elementStack.push(new XmlElement());
        this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);
        this.attributeStack = [];
        _save__WEBPACK_IMPORTED_MODULE_0__["Save"].isMicrosoftBrowser = !(!navigator.msSaveBlob);
    }
    Object.defineProperty(XmlWriter.prototype, "buffer", {
        /**
         * Gets the content written to the {XmlWriter} as Blob.
         * @returns {Blob}
         */
        get: function () {
            this.flush();
            return this.bufferBlob;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Writes processing instruction with a space between the name and text
     * @param {string} name - name of the processing instruction
     * @param {string} text - text to write in the processing instruction
     * @throws ArgumentException
     * @throws InvalidArgumentException
     * @throws InvalidOperationException
     */
    XmlWriter.prototype.writeProcessingInstruction = function (name, text) {
        if (name === undefined || name === null || name.length === 0) {
            throw new Error('ArgumentException: name should not be undefined, null or empty');
        }
        this.checkName(name);
        if (text === undefined || text === null) {
            text = '';
        }
        if (name.length === 3 && name === 'xml') {
            if (this.currentState !== 'Initial') {
                // tslint:disable-next-line:max-line-length
                throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');
            }
        }
        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {
            throw new Error('InvalidOperationException: Wrong Token');
        }
        else {
            this.writeStartDocument();
            this.writeProcessingInstructionInternal(name, text);
        }
    };
    /**
     * Writes Xml declaration with version and standalone attribute
     * @param {boolean} standalone - if true it write standalone=yes else standalone=no
     * @throws InvalidOperation
     */
    XmlWriter.prototype.writeStartDocument = function (standalone) {
        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {
            throw new Error('InvalidOperationException: Wrong Token');
        }
        this.currentState = 'StartDocument';
        this.rawText('<?xml version="1.0" encoding="utf-8');
        if (standalone !== null && standalone !== undefined) {
            this.rawText('" standalone="');
            this.rawText(standalone ? 'yes' : 'no');
        }
        this.rawText('"?>');
    };
    /**
     * Closes any open tag or attribute and write the state back to start
     */
    XmlWriter.prototype.writeEndDocument = function () {
        while (this.elementStack.length - 1 > 0) {
            this.writeEndElement();
        }
        this.currentState = 'EndDocument';
        this.flush();
    };
    /**
     * Writes the specified start tag and associates it with the given namespace and prefix.
     * @param {string} prefix - namespace prefix of element
     * @param {string} localName -localName of element
     * @param {string} namespace - namespace URI associate with element
     * @throws ArgumentException
     * @throws InvalidOperationException
     */
    XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {
        if (this.bufferBlob === undefined) {
            throw new Error('InvalidOperationException: Wrong Token');
        }
        if (localName === undefined || localName === null || localName.length === 0) {
            throw new Error('ArgumentException: localName cannot be undefined, null or empty');
        }
        this.checkName(localName);
        if (this.currentState === 'Initial') {
            this.writeStartDocument();
        }
        if (this.currentState === 'StartElement') {
            this.startElementContent();
        }
        this.currentState = 'StartElement';
        if (prefix === undefined || prefix === null) {
            if (namespace !== undefined && namespace !== null) {
                prefix = this.lookupPrefix(namespace);
            }
            if (prefix === undefined || prefix === null) {
                prefix = '';
            }
        }
        else if (prefix.length > 0) {
            if (namespace === undefined || namespace === null) {
                namespace = this.lookupNamespace(prefix);
            }
            if (namespace === undefined || namespace === null || (namespace !== undefined && namespace.length === 0)) {
                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');
            }
        }
        if (namespace === undefined || namespace === null) {
            namespace = this.lookupNamespace(prefix);
        }
        this.writeStartElementInternal(prefix, localName, namespace);
    };
    /**
     * Closes one element and pop corresponding namespace scope
     */
    XmlWriter.prototype.writeEndElement = function () {
        if (this.currentState === 'StartElement') {
            this.startElementContent();
            this.currentState = 'ElementContent';
        }
        else if (this.currentState === 'ElementContent') {
            this.currentState = 'ElementContent';
        }
        this.currentState = 'EndElement';
        var top = this.elementStack.length - 1;
        this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);
        this.namespaceStack.splice(this.elementStack[top].previousTop + 1);
        this.elementStack.splice(top);
        if (this.bufferText.length > 10240) {
            this.flush();
        }
    };
    /**
     * Writes an element with the specified prefix, local name, namespace URI, and value.
     * @param {string} prefix - namespace prefix of element
     * @param {string} localName - localName of element
     * @param {string} namespace - namespace URI associate with element
     * @param {string} value - value of element
     */
    XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {
        this.writeStartElement(prefix, localName, namespace);
        if (value !== undefined && value !== null && value.length !== 0) {
            this.writeString(value);
        }
        this.writeEndElement();
    };
    /**
     * Writes out the attribute with the specified prefix, local name, namespace URI, and value
     * @param {string} prefix - namespace prefix of element
     * @param {string} localName - localName of element
     * @param {string} namespace - namespace URI associate with element
     * @param {string} value - value of element
     */
    XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {
        this.writeStartAttribute(prefix, localName, namespace, value);
        this.writeStringInternal(value, true);
        this.writeEndAttribute();
    };
    /**
     * Writes the given text content
     * @param {string} text - text to write
     * @throws InvalidOperationException
     */
    XmlWriter.prototype.writeString = function (text) {
        this.writeInternal(text, false);
    };
    /**
     * Write given text as raw data
     * @param {string} text - text to write
     * @throws InvalidOperationException
     */
    XmlWriter.prototype.writeRaw = function (text) {
        this.writeInternal(text, true);
    };
    XmlWriter.prototype.writeInternal = function (text, isRawString) {
        if (text === undefined || text === null) {
            return;
        }
        else {
            if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {
                throw new Error('InvalidOperationException: Wrong Token');
            }
            if (this.currentState === 'StartElement') {
                this.startElementContent();
            }
            this.currentState = 'ElementContent';
            if (isRawString) {
                this.rawText(text);
            }
            else {
                this.writeStringInternal(text, false);
            }
        }
    };
    /**
     * Saves the file with specified name and sends the file to client browser
     * @param {string} fileName - file name
     */
    XmlWriter.prototype.save = function (fileName) {
        while (this.elementStack.length - 1 > 0) {
            this.writeEndElement();
        }
        if (this.bufferText !== '') {
            this.flush();
        }
        _save__WEBPACK_IMPORTED_MODULE_0__["Save"].save(fileName, this.buffer);
    };
    /**
     * Releases the resources used by XmlWriter.
     */
    XmlWriter.prototype.destroy = function () {
        this.bufferBlob = undefined;
        for (var i = 0; i < this.namespaceStack.length; i++) {
            this.namespaceStack[i].destroy();
        }
        this.namespaceStack = [];
        for (var i = 0; i < this.elementStack.length; i++) {
            this.elementStack[i].destroy();
        }
        this.elementStack = [];
        this.bufferText = '';
        this.contentPos = 0;
    };
    XmlWriter.prototype.flush = function () {
        if (this.bufferBlob === undefined) {
            return;
        }
        this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], { type: 'text/plain' });
        this.bufferText = '';
    };
    XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {
        this.bufferText += '<?';
        this.rawText(name);
        if (text.length > 0) {
            this.bufferText += ' ';
            text = text.replace(/\?\>/g, '? >');
            this.bufferText += text;
        }
        this.bufferText += '?';
        this.bufferText += '>';
    };
    XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {
        if (localName === undefined || localName === null || localName.length === 0) {
            if (prefix === 'xmlns') {
                localName = 'xmlns';
                prefix = '';
            }
            else {
                throw new Error('ArgumentException: localName cannot be undefined, null or empty');
            }
        }
        if (this.currentState !== 'StartElement') {
            throw new Error('InvalidOperationException: Wrong Token');
        }
        this.checkName(localName);
        this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);
    };
    XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {
        if (prefix === undefined || prefix === null) {
            if (namespace !== undefined && namespace !== null) {
                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {
                    prefix = this.lookupPrefix(namespace);
                }
            }
            if (prefix === undefined || prefix === null) {
                prefix = '';
            }
        }
        if (namespace === undefined || namespace === null) {
            if (prefix !== undefined && prefix !== null && prefix.length > 0) {
                namespace = this.lookupNamespace(prefix);
            }
            if (namespace === undefined || namespace === null) {
                namespace = '';
            }
        }
        this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);
    };
    XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {
        if (prefix.length === 0) {
            if (localName[0] === 'x' && localName === 'xmlns') {
                this.skipPushAndWrite(prefix, localName, namespace);
                this.pushNamespaceExplicit('', value);
                return;
            }
            else if (namespace.length > 0) {
                prefix = this.lookupPrefix(namespace);
            }
        }
        else {
            if (prefix[0] === 'x') {
                if (prefix === 'xmlns') {
                    this.skipPushAndWrite(prefix, localName, namespace);
                    this.pushNamespaceExplicit(localName, value);
                    return;
                }
                else if (prefix === 'xml') {
                    if (localName === 'space' || localName === 'lang') {
                        this.skipPushAndWrite(prefix, localName, namespace);
                        return;
                    }
                }
            }
            if (namespace.length === 0) {
                prefix = '';
            }
        }
        if (prefix !== undefined && prefix !== null && prefix.length !== 0) {
            this.pushNamespaceImplicit(prefix, namespace);
        }
        this.skipPushAndWrite(prefix, localName, namespace);
    };
    XmlWriter.prototype.writeEndAttribute = function () {
        this.currentState = 'StartElement';
        this.bufferText += '"';
    };
    XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {
        this.bufferText += '<';
        if (prefix.length > 0) {
            this.rawText(prefix);
            this.bufferText += ':';
        }
        this.rawText(localName);
        var top = this.elementStack.length;
        this.elementStack.push(new XmlElement());
        this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);
        this.pushNamespaceImplicit(prefix, namespace);
        for (var i = 0; i < this.attributeStack.length; i++) {
            this.attributeStack[i].destroy();
        }
        this.attributeStack = [];
    };
    XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {
        if (this.contentPos !== this.bufferText.length + 1) {
            this.bufferText += '</';
            if (prefix !== undefined && prefix !== null && prefix.length !== 0) {
                this.rawText(prefix);
                this.bufferText += ':';
            }
            this.rawText(localName);
            this.bufferText += '>';
        }
        else {
            this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);
            this.bufferText += ' />';
        }
    };
    XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {
        this.bufferText += ' ';
        if (prefix !== undefined && prefix !== null && prefix.length > 0) {
            this.rawText(prefix);
            this.bufferText += ':';
        }
        this.rawText(localName);
        this.bufferText += '=';
        this.bufferText += '"';
    };
    XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {
        this.writeStartNamespaceDeclaration(prefix);
        this.writeStringInternal(namespaceUri, true);
        this.bufferText += '"';
    };
    XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {
        if (prefix === undefined || prefix === null || prefix.length === 0) {
            this.rawText(' xmlns=\"');
        }
        else {
            this.rawText(' xmlns:');
            this.rawText(prefix);
            this.bufferText += '=';
            this.bufferText += '"';
        }
    };
    XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {
        if (text === null || text === undefined) {
            text = '';
        }
        var tempText = '';
        text = text.replace(/\&/g, '&amp;');
        text = text.replace(/\</g, '&lt;');
        text = text.replace(/\>/g, '&gt;');
        if (inAttributeValue) {
            text = text.replace(/\"/g, '&quot;');
        }
        this.bufferText += text;
        if (!inAttributeValue) {
            this.contentPos = 0;
        }
    };
    XmlWriter.prototype.startElementContent = function () {
        var start = this.elementStack[this.elementStack.length - 1].previousTop;
        for (var i = this.namespaceStack.length - 1; i > start; i--) {
            if (this.namespaceStack[i].kind === 'NeedToWrite') {
                this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);
            }
        }
        this.bufferText += '>';
        this.contentPos = this.bufferText.length + 1;
    };
    XmlWriter.prototype.rawText = function (text) {
        this.bufferText += text;
    };
    XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {
        var top = this.namespaceStack.length;
        this.namespaceStack.push(new Namespace());
        this.namespaceStack[top].set(prefix, ns, kind);
    };
    XmlWriter.prototype.lookupPrefix = function (namespace) {
        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {
            if (this.namespaceStack[i].namespaceUri === namespace) {
                return this.namespaceStack[i].prefix;
            }
        }
        return undefined;
    };
    XmlWriter.prototype.lookupNamespace = function (prefix) {
        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {
            if (this.namespaceStack[i].prefix === prefix) {
                return this.namespaceStack[i].namespaceUri;
            }
        }
        return undefined;
    };
    XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {
        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {
            if (this.namespaceStack[i].prefix === prefix) {
                return i;
            }
        }
        return -1;
    };
    XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {
        var kind;
        var existingNsIndex = this.lookupNamespaceIndex(prefix);
        if (existingNsIndex !== -1) {
            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {
                if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {
                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');
                }
                return;
            }
            else {
                if (this.namespaceStack[existingNsIndex].kind === 'Special') {
                    if (prefix === 'xml') {
                        if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {
                            throw new Error('InvalidArgumentException: Xml String');
                        }
                        else {
                            kind = 'Implied';
                        }
                    }
                    else {
                        throw new Error('InvalidArgumentException: Prefix "xmlns" is reserved for use by XML.');
                    }
                }
                else {
                    kind = (this.namespaceStack[existingNsIndex].namespaceUri === ns) ? 'Implied' : 'NeedToWrite';
                }
            }
        }
        else {
            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||
                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {
                throw new Error('InvalidArgumentException');
            }
            kind = 'NeedToWrite';
        }
        this.addNamespace(prefix, ns, kind);
    };
    XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {
        var existingNsIndex = this.lookupNamespaceIndex(prefix);
        if (existingNsIndex !== -1) {
            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {
                this.namespaceStack[existingNsIndex].kind = 'Written';
                return;
            }
        }
        this.addNamespace(prefix, ns, 'Written');
        return;
    };
    XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {
        var top = this.attributeStack.length;
        this.attributeStack.push(new XmlAttribute());
        this.attributeStack[top].set(prefix, localName, namespaceName);
        for (var i = 0; i < top; i++) {
            if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {
                throw new Error('XmlException: duplicate attribute name');
            }
        }
    };
    XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {
        this.addAttribute(prefix, localName, namespace);
        this.writeStartAttributeInternal(prefix, localName, namespace);
    };
    XmlWriter.prototype.checkName = function (text) {
        var format = /[ !@#$%^&*()+\=\[\]{};':"\\|,<>\/?]/;
        if (format.test(text)) {
            throw new Error('InvalidArgumentException: invalid name character');
        }
    };
    return XmlWriter;
}());

/**
 * class for managing namespace collection
 */
var Namespace = /** @class */ (function () {
    function Namespace() {
    }
    /**
     * set value for current namespace instance
     * @param {string} prefix namespace's prefix
     * @param {string} namespaceUri namespace URI
     * @param {string} kind namespace kind
     */
    Namespace.prototype.set = function (prefix, namespaceUri, kind) {
        this.prefix = prefix;
        this.namespaceUri = namespaceUri;
        this.kind = kind;
    };
    /**
     * Releases the resources used by Namespace
     */
    Namespace.prototype.destroy = function () {
        this.prefix = undefined;
        this.namespaceUri = undefined;
        this.kind = undefined;
    };
    return Namespace;
}());

/**
 * class for managing element collection
 */
var XmlElement = /** @class */ (function () {
    function XmlElement() {
    }
    /**
     * set value of current element
     * @param {string} prefix - element prefix
     * @param {string} localName - element local name
     * @param {string} namespaceUri -namespace URI
     * @param {string} previousTop - previous namespace top
     */
    XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {
        this.previousTop = previousTop;
        this.prefix = prefix;
        this.namespaceUri = namespaceUri;
        this.localName = localName;
    };
    /**
     * Releases the resources used by XmlElement
     */
    XmlElement.prototype.destroy = function () {
        this.previousTop = undefined;
        this.prefix = undefined;
        this.localName = undefined;
        this.namespaceUri = undefined;
    };
    return XmlElement;
}());

/**
 * class for managing attribute collection
 */
var XmlAttribute = /** @class */ (function () {
    function XmlAttribute() {
    }
    /**
     * set value of current attribute
     * @param {string} prefix - namespace's prefix
     * @param {string} namespaceUri - namespace URI
     * @param {string} localName - attribute localName
     */
    XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {
        this.prefix = prefix;
        this.namespaceUri = namespaceUri;
        this.localName = localName;
    };
    /**
     * get whether the attribute is duplicate or not
     * @param {string} prefix - namespace's prefix
     * @param {string} namespaceUri - namespace URI
     * @param {string} localName - attribute localName
     */
    XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {
        return ((this.localName === localName) && ((this.prefix === prefix) || (this.namespaceUri === namespaceUri)));
    };
    /**
     * Releases the resources used by XmlAttribute
     */
    XmlAttribute.prototype.destroy = function () {
        this.prefix = undefined;
        this.namespaceUri = undefined;
        this.localName = undefined;
    };
    return XmlAttribute;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/index.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/index.js ***!
  \*************************************************************************************************************/
/*! exports provided: PdfAction, PdfUriAction, PdfActionLinkAnnotation, PdfAnnotation, PdfAnnotationCollection, PdfDocumentLinkAnnotation, PdfLinkAnnotation, PdfTextWebLink, PdfUriAnnotation, Dictionary, defaultToString, PdfCatalog, PdfDocument, PdfDocumentBase, PdfDocumentTemplate, PdfPageNumberField, PdfCompositeField, PdfPageCountField, PointF, SizeF, RectangleF, Rectangle, PdfCacheCollection, PdfCollection, PdfDestination, PdfFunction, PdfSampledFunction, PdfDestinationMode, ProcedureSets, PdfHorizontalAlignment, PdfVerticalAlignment, PdfTextAlignment, TextRenderingMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode, PdfColorSpace, PdfBlendMode, PdfGraphicsUnit, PdfGridImagePosition, PdfTextDirection, PdfColor, PdfGraphics, GetResourceEventHandler, PdfGraphicsState, PdfMargins, PdfPen, PdfResources, Guid, PdfTransformationMatrix, Matrix, PdfBrush, PdfBrushes, PdfSolidBrush, PdfLinearGradientBrush, PdfRadialGradientBrush, PdfTilingBrush, PdfGradientBrush, PdfColorBlend, PdfBlend, PdfTemplate, PdfLayoutElement, PdfPath, PdfArc, PdfTextElement, ElementLayouter, PdfLayoutFormat, PdfLayoutParams, PdfLayoutResult, TextLayouter, TextPageLayoutResult, PdfTextLayoutResult, PdfLayoutType, PdfLayoutBreakType, PathPointType, PdfFontStyle, PdfFontFamily, PdfFontType, PdfWordWrapType, PdfSubSuperScript, FontEncoding, TtfCmapFormat, TtfCmapEncoding, TtfPlatformID, TtfMicrosoftEncodingID, TtfMacintoshEncodingID, FontDescriptorFlags, TtfCompositeGlyphFlags, PdfFont, PdfFontMetrics, WidthTable, StandardWidthTable, PdfStandardFont, PdfStandardFontMetricsFactory, PdfStringFormat, PdfStringLayouter, PdfStringLayoutResult, LineInfo, LineType, StringTokenizer, PdfTrueTypeFont, RtlRenderer, ArabicShapeRenderer, ArabicShape, Bidi, RtlCharacters, ByteArray, ImageFormat, ImageDecoder, PdfBitmap, PdfImage, PdfTransparency, ObjectStatus, ObjectType, PdfCrossTable, RegisteredObject, DictionaryProperties, PdfMainObjectCollection, ObjectInfo, Operators, PdfStreamWriter, PdfWriter, PdfPageOrientation, PdfPageRotateAngle, PdfNumberStyle, PdfDockStyle, PdfAlignmentStyle, TemplateType, PageAddedEventArgs, PdfDocumentPageCollection, PdfPage, PdfPageBase, PdfPageLayer, PdfPageLayerCollection, PdfPageSettings, PdfPageSize, PdfPageTemplateElement, PdfSection, PageSettingsState, PdfSectionCollection, PdfSectionPageCollection, PdfSectionTemplate, PdfArray, PdfDictionary, SaveSectionCollectionEventHandler, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler, SaveAnnotationEventHandler, SaveSectionEventHandler, SaveTemplateEventHandler, PdfName, PdfNumber, PdfReference, PdfReferenceHolder, PdfStream, SaveCmapEventHandler, SaveFontProgramEventHandler, InternalEnum, PdfString, PdfGridStyleBase, PdfGridStyle, PdfGridCellStyle, PdfGridRowStyle, PdfHorizontalOverflowType, PdfBorders, PdfPaddings, PdfBorderOverlapStyle, PdfGridLayouter, PdfGridLayoutResult, PdfGridLayoutFormat, GridCellEventArgs, PdfGridBeginCellDrawEventArgs, PdfGridEndCellDrawEventArgs, PdfCancelEventArgs, BeginPageLayoutEventArgs, EndPageLayoutEventArgs, PdfGridBeginPageLayoutEventArgs, PdfGridEndPageLayoutEventArgs, RowLayoutResult, PdfGrid, PdfGridColumn, PdfGridColumnCollection, PdfGridRow, PdfGridRowCollection, PdfGridHeaderCollection, PdfGridCell, PdfGridCellCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAction", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfAction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfUriAction", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfUriAction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfActionLinkAnnotation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfActionLinkAnnotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfAnnotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotationCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfAnnotationCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentLinkAnnotation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDocumentLinkAnnotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLinkAnnotation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLinkAnnotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextWebLink", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTextWebLink"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfUriAnnotation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfUriAnnotation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultToString", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["defaultToString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCatalog", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfCatalog"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocument", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDocument"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDocumentBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentTemplate", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDocumentTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageNumberField", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageNumberField"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCompositeField", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfCompositeField"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageCountField", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageCountField"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PointF", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PointF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SizeF", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SizeF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectangleF", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RectangleF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Rectangle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCacheCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfCacheCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDestination", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDestination"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFunction", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSampledFunction", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfSampledFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDestinationMode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDestinationMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProcedureSets", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ProcedureSets"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalAlignment", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfHorizontalAlignment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfVerticalAlignment", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfVerticalAlignment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextAlignment", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextRenderingMode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLineJoin", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLineJoin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLineCap", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLineCap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDashStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDashStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFillMode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfFillMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfColorSpace", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBlendMode", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfBlendMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsUnit", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGraphicsUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridImagePosition", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridImagePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextDirection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTextDirection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfColor", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGraphics", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGraphics"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetResourceEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["GetResourceEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsState", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGraphicsState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfMargins", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfMargins"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPen", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPen"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfResources", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfResources"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Guid", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Guid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTransformationMatrix", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTransformationMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Matrix", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Matrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBrush", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfBrush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBrushes", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfBrushes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSolidBrush", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfSolidBrush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLinearGradientBrush", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLinearGradientBrush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfRadialGradientBrush", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfRadialGradientBrush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTilingBrush", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTilingBrush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGradientBrush", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGradientBrush"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfColorBlend", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfColorBlend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBlend", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfBlend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTemplate", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPath", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPath"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfArc", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfArc"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTextElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ElementLayouter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ElementLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutFormat", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutParams", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutResult", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextLayouter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TextLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextPageLayoutResult", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TextPageLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextLayoutResult", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTextLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutBreakType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutBreakType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathPointType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PathPointType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontFamily", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfFontType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfWordWrapType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfWordWrapType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSubSuperScript", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfSubSuperScript"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FontEncoding", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["FontEncoding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfCmapFormat", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TtfCmapFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfCmapEncoding", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TtfCmapEncoding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfPlatformID", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TtfPlatformID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfMicrosoftEncodingID", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TtfMicrosoftEncodingID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfMacintoshEncodingID", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TtfMacintoshEncodingID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FontDescriptorFlags", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["FontDescriptorFlags"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfCompositeGlyphFlags", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TtfCompositeGlyphFlags"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFont", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfFont"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontMetrics", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfFontMetrics"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WidthTable", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["WidthTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StandardWidthTable", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["StandardWidthTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFont", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfStandardFont"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFontMetricsFactory", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfStandardFontMetricsFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStringFormat", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfStringFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayouter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfStringLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayoutResult", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfStringLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LineInfo", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["LineInfo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LineType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["LineType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StringTokenizer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["StringTokenizer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTrueTypeFont", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTrueTypeFont"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RtlRenderer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RtlRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArabicShapeRenderer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ArabicShapeRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArabicShape", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ArabicShape"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bidi", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Bidi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RtlCharacters", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RtlCharacters"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ByteArray", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ByteArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageFormat", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ImageFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageDecoder", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ImageDecoder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBitmap", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfBitmap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfImage", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfImage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTransparency", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfTransparency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectStatus", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ObjectStatus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ObjectType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCrossTable", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfCrossTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegisteredObject", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RegisteredObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DictionaryProperties", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["DictionaryProperties"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfMainObjectCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfMainObjectCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectInfo", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ObjectInfo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Operators", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Operators"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStreamWriter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfStreamWriter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfWriter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfWriter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageOrientation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageOrientation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageRotateAngle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageRotateAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfNumberStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfNumberStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDockStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAlignmentStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TemplateType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TemplateType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageAddedEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PageAddedEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentPageCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDocumentPageCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPage", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayerCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageLayerCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageSettings", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageSize", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageSize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageTemplateElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPageTemplateElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfSection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageSettingsState", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PageSettingsState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSectionCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfSectionCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSectionPageCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfSectionPageCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSectionTemplate", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfSectionTemplate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfArray", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDictionary", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveSectionCollectionEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveSectionCollectionEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveDescendantFontEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveDescendantFontEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveFontDictionaryEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveFontDictionaryEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveAnnotationEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveAnnotationEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveSectionEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveSectionEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveTemplateEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveTemplateEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfName", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfName"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfNumber", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfReference", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfReference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfReferenceHolder", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfReferenceHolder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStream", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfStream"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveCmapEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveCmapEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveFontProgramEventHandler", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SaveFontProgramEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InternalEnum", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["InternalEnum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfString", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyleBase", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridStyleBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridCellStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridRowStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalOverflowType", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfHorizontalOverflowType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBorders", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfBorders"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPaddings", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfPaddings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBorderOverlapStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfBorderOverlapStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayouter", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutResult", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutFormat", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridLayoutFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GridCellEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["GridCellEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginCellDrawEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridBeginCellDrawEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndCellDrawEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridEndCellDrawEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCancelEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfCancelEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BeginPageLayoutEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["BeginPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EndPageLayoutEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["EndPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginPageLayoutEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridBeginPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndPageLayoutEventArgs", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridEndPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RowLayoutResult", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["RowLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGrid", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumn", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridColumn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumnCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridColumnCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridRow", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridRow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridRowCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridHeaderCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridHeaderCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridCell", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridCell"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellCollection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PdfGridCellCollection"]; });

/**
 * index
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/action.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/action.js ***!
  \*****************************************************************************************************************************************/
/*! exports provided: PdfAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfAction", function() { return PdfAction; });
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");




/**
 * `PdfAction` class represents base class for all action types.
 * @private
 */
var PdfAction = /** @class */ (function () {
    // Constructors
    /**
     * Initialize instance for `Action` class.
     * @private
     */
    function PdfAction() {
        /**
         * Specifies the Next `action` to perform.
         * @private
         */
        this.action = null;
        /**
         * Specifies the Internal variable to store `dictionary properties`.
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__["DictionaryProperties"]();
        // super(); -> Object()
        this.initialize();
    }
    Object.defineProperty(PdfAction.prototype, "next", {
        // Properties
        /**
         * Gets and Sets the `Next` action to perform.
         * @private
         */
        get: function () {
            return this.action;
        },
        set: function (value) {
            // if (this.action !== value) {
            this.action = value;
            this.dictionary.items.setValue(this.dictionaryProperties.next, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_1__["PdfReferenceHolder"](this.action));
            // }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAction.prototype, "dictionary", {
        /**
         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.
         * @private
         */
        get: function () {
            if (typeof this.pdfDictionary === 'undefined') {
                this.pdfDictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
            }
            return this.pdfDictionary;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Initialize` the action type.
     * @private
     */
    PdfAction.prototype.initialize = function () {
        this.dictionary.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"](this.dictionaryProperties.action));
    };
    Object.defineProperty(PdfAction.prototype, "element", {
        // IPdfWrapper Members
        /**
         * Gets the `Element` as IPdfPrimitive class.
         * @private
         */
        get: function () {
            return this.dictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAction;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/uri-action.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/uri-action.js ***!
  \*********************************************************************************************************************************************/
/*! exports provided: PdfUriAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfUriAction", function() { return PdfUriAction; });
/* harmony import */ var _action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/action.js");
/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * `PdfUriAction` class for initialize the uri related internals.
 * @private
 */
var PdfUriAction = /** @class */ (function (_super) {
    __extends(PdfUriAction, _super);
    function PdfUriAction(uri) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Specifies the `uri` string.
         * @default ''.
         * @private
         */
        _this.uniformResourceIdentifier = '';
        return _this;
    }
    Object.defineProperty(PdfUriAction.prototype, "uri", {
        // Properties
        /**
         * Gets and Sets the value of `Uri`.
         * @private
         */
        get: function () {
            return this.uniformResourceIdentifier;
        },
        set: function (value) {
            this.uniformResourceIdentifier = value;
            this.dictionary.items.setValue(this.dictionaryProperties.uri, new _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_1__["PdfString"](this.uniformResourceIdentifier));
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Initialize` the internals.
     * @private
     */
    PdfUriAction.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.dictionary.items.setValue(this.dictionaryProperties.s, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"](this.dictionaryProperties.uri));
    };
    return PdfUriAction;
}(_action__WEBPACK_IMPORTED_MODULE_0__["PdfAction"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/action-link-annotation.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/action-link-annotation.js ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: PdfActionLinkAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfActionLinkAnnotation", function() { return PdfActionLinkAnnotation; });
/* harmony import */ var _link_annotation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./link-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/link-annotation.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * Represents base class for `link annotations` with associated action.
 * @private
 */
var PdfActionLinkAnnotation = /** @class */ (function (_super) {
    __extends(PdfActionLinkAnnotation, _super);
    // Constructors
    /**
     * Specifies the constructor for `ActionLinkAnnotation`.
     * @private
     */
    function PdfActionLinkAnnotation(rectangle) {
        var _this = _super.call(this, rectangle) || this;
        // Fields
        /**
         * Internal variable to store annotation's `action`.
         * @default null
         * @private
         */
        _this.pdfAction = null;
        return _this;
    }
    //Public method
    /**
     * get and set the `action`.
     * @hidden
     */
    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {
        if (typeof value === 'undefined') {
            return this.pdfAction;
        }
        else {
            this.pdfAction = value;
        }
    };
    return PdfActionLinkAnnotation;
}(_link_annotation__WEBPACK_IMPORTED_MODULE_0__["PdfLinkAnnotation"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation-collection.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation-collection.js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: PdfAnnotationCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotationCollection", function() { return PdfAnnotationCollection; });
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../graphics/fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");






/**
 * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.
 * @private
 */
var PdfAnnotationCollection = /** @class */ (function () {
    function PdfAnnotationCollection(page) {
        // Constants
        /**
         * `Error` constant message.
         * @private
         */
        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';
        /**
         * `Error` constant message.
         * @private
         */
        this.missingAnnotationException = 'Annotation is not contained in collection.';
        /**
         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__["DictionaryProperties"]();
        /**
         * Array of the `annotations`.
         * @private
         */
        this.internalAnnotations = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__["PdfArray"]();
        /**
         * privte `list` for the annotations.
         * @private
         */
        this.lists = [];
        if (typeof page !== 'undefined') {
            this.page = page;
        }
    }
    Object.defineProperty(PdfAnnotationCollection.prototype, "annotations", {
        /**
         * Gets the `PdfAnnotation` object at the specified index. Read-Only.
         * @private
         */
        get: function () {
            return this.internalAnnotations;
        },
        set: function (value) {
            this.internalAnnotations = value;
        },
        enumerable: true,
        configurable: true
    });
    // Public methods
    /**
     * `Adds` a new annotation to the collection.
     * @private
     */
    PdfAnnotationCollection.prototype.add = function (annotation) {
        // this.SetPrint(annotation);
        this.doAdd(annotation);
    };
    /**
     * `Adds` a Annotation to collection.
     * @private
     */
    /* tslint:disable */
    PdfAnnotationCollection.prototype.doAdd = function (annotation) {
        if (typeof annotation.destination !== 'undefined') {
            var layout = new _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_4__["PdfStringLayouter"]();
            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["SizeF"]((annotation.bounds.width), 0), false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["SizeF"](0, 0));
            var lastPosition = annotation.bounds.y;
            if (layoutResult.lines.length === 1) {
                var size = annotation.font.measureString(layoutResult.lines[0].text);
                annotation.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"](annotation.bounds.x, lastPosition), size);
                annotation.text = layoutResult.lines[0].text;
                //Draw Annotation Text.
                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);
                //Add annotation to dictionary.
                annotation.setPage(this.page);
                this.setColor(annotation);
                this.internalAnnotations.add(new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_1__["PdfReferenceHolder"](annotation));
                this.lists.push(annotation);
            }
            else {
                for (var i = 0; i < layoutResult.lines.length; i++) {
                    var size = annotation.font.measureString(layoutResult.lines[i].text);
                    if (i === 0) {
                        annotation.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"](annotation.bounds.x, lastPosition, size.width, size.height);
                        annotation.text = layoutResult.lines[i].text;
                        //Draw Annotation Text.
                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);
                        //Add annotation to dictionary.
                        annotation.setPage(this.page);
                        this.setColor(annotation);
                        this.internalAnnotations.add(new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_1__["PdfReferenceHolder"](annotation));
                        this.lists.push(annotation);
                        //Update y for drawing next line of the text.
                        lastPosition += annotation.bounds.height;
                    }
                    else {
                        var annot = annotation.clone();
                        annot.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"](annotation.bounds.x, lastPosition), size);
                        annot.text = layoutResult.lines[i].text;
                        //Draw Annotation Text.
                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);
                        //Add annotation to dictionary.
                        annot.setPage(this.page);
                        this.setColor(annot);
                        this.internalAnnotations.add(new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_1__["PdfReferenceHolder"](annot));
                        this.lists.push(annot);
                        //Update y for drawing next line of the text.
                        lastPosition += annot.bounds.height;
                    }
                }
            }
        }
        else {
            annotation.setPage(this.page);
            this.internalAnnotations.add(new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_1__["PdfReferenceHolder"](annotation));
            return this.lists.push(annotation);
        }
    };
    /* tslint:enable */
    /**
     * `Set a color of an annotation`.
     * @private
     */
    PdfAnnotationCollection.prototype.setColor = function (annotation) {
        var cs = _graphics_enum__WEBPACK_IMPORTED_MODULE_5__["PdfColorSpace"].Rgb;
        var colours = annotation.color.toArray(cs);
        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);
    };
    Object.defineProperty(PdfAnnotationCollection.prototype, "element", {
        // IPdfWrapper Members
        /**
         * Gets the `Element` representing this object.
         * @private
         */
        get: function () {
            return this.internalAnnotations;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAnnotationCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: PdfAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotation", function() { return PdfAnnotation; });
/* harmony import */ var _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../graphics/pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../graphics/brushes/pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/* harmony import */ var _graphics_fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../graphics/fonts/pdf-standard-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font.js");
/* harmony import */ var _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../graphics/fonts/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../graphics/fonts/pdf-string-format */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js");
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");














/**
 * `PdfAnnotation` class represents the base class for annotation objects.
 * @private
 */
var PdfAnnotation = /** @class */ (function () {
    function PdfAnnotation(arg1) {
        // Fields
        /**
         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__["DictionaryProperties"]();
        /**
         * `Color` of the annotation
         * @private
         */
        this.pdfColor = new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 255);
        /**
         * `Bounds` of the annotation.
         * @private
         */
        this.rectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](0, 0, 0, 0);
        /**
         * Parent `page` of the annotation.
         * @private
         */
        this.pdfPage = null;
        /**
         * `Brush of the text` of the annotation.
         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))
         * @private
         */
        this.textBrush = new _graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_9__["PdfSolidBrush"](new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](0, 0, 0));
        /**
         * `Font of the text` of the annotation.
         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)
         * @private
         */
        this.textFont = new _graphics_fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_10__["PdfStandardFont"](_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_11__["PdfFontFamily"].TimesRoman, 10);
        /**
         * `StringFormat of the text` of the annotation.
         * @default new PdfStringFormat(PdfTextAlignment.Left)
         * @private
         */
        this.format = new _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_12__["PdfStringFormat"](_graphics_enum__WEBPACK_IMPORTED_MODULE_13__["PdfTextAlignment"].Left);
        /**
         * `Text` of the annotation.
         * @private
         */
        this.content = '';
        /**
         * Internal variable to store `dictionary`.
         * @private
         */
        this.pdfDictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["PdfDictionary"]();
        /**
         * To specifying the `Inner color` with which to fill the annotation
         * @private
         */
        this.internalColor = new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"]();
        /**
         * `opacity or darkness` of the annotation.
         * @private
         * @default 1.0
         */
        this.darkness = 1.0;
        if (typeof arg1 === 'undefined') {
            this.initialize();
        }
        else {
            this.initialize();
            this.bounds = arg1;
        }
    }
    Object.defineProperty(PdfAnnotation.prototype, "color", {
        // Properties
        /**
         * `Color` of the annotation
         * @private
         */
        get: function () {
            return this.pdfColor;
        },
        set: function (value) {
            this.pdfColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "innerColor", {
        /**
         * To specifying the `Inner color` with which to fill the annotation
         * @private
         */
        get: function () {
            return this.internalColor;
        },
        set: function (value) {
            this.internalColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "bounds", {
        /**
         * `bounds` of the annotation.
         * @private
         */
        get: function () {
            return this.rectangle;
        },
        set: function (value) {
            this.rectangle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "page", {
        /**
         * Parent `page` of the annotation.
         * @private
         */
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "font", {
        /**
         * To specifying the `Font of the text` in the annotation.
         * @private
         */
        get: function () {
            return this.textFont;
        },
        set: function (value) {
            this.textFont = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "stringFormat", {
        /**
         * To specifying the `StringFormat of the text` in the annotation.
         * @private
         */
        get: function () {
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "brush", {
        /**
         * To specifying the `Brush of the text` in the annotation.
         * @private
         */
        get: function () {
            return this.textBrush;
        },
        set: function (value) {
            this.textBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "text", {
        /**
         * `Text` of the annotation.
         * @private
         */
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.content = value;
            this.dictionary.items.setValue(this.dictionaryProperties.contents, new _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_6__["PdfString"](this.content));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAnnotation.prototype, "dictionary", {
        /**
         * Internal variable to store `dictionary`.
         * @hidden
         */
        get: function () {
            return this.pdfDictionary;
        },
        set: function (value) {
            this.pdfDictionary = value;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Initialize` the annotation event handler and specifies the type of the annotation.
     * @private
     */
    PdfAnnotation.prototype.initialize = function () {
        this.pdfDictionary.annotationBeginSave = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["SaveAnnotationEventHandler"](this);
        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_8__["PdfName"](this.dictionaryProperties.annot));
    };
    /**
     * Sets related `page` of the annotation.
     * @private
     */
    PdfAnnotation.prototype.setPage = function (page) {
        this.pdfPage = page;
        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_5__["PdfReferenceHolder"](this.pdfPage));
    };
    /**
     * Handles the `BeginSave` event of the Dictionary.
     * @private
     */
    PdfAnnotation.prototype.beginSave = function () {
        this.save();
    };
    /**
     * `Saves` an annotation.
     * @private
     */
    /* tslint:disable */
    PdfAnnotation.prototype.save = function () {
        var nativeRectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);
        var section = this.pdfPage.section;
        var initialHeight = nativeRectangle.height;
        var tempLoacation = section.pointToNativePdf(this.page, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](nativeRectangle.x, nativeRectangle.y));
        nativeRectangle.x = tempLoacation.x;
        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;
        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);
        nativeRectangle.height = nativeRectangle.y - initialHeight;
        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_3__["PdfArray"].fromRectangle(nativeRectangle));
        this.dictionary.items.setValue(this.dictionaryProperties.ca, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](this.darkness));
    };
    Object.defineProperty(PdfAnnotation.prototype, "element", {
        /* tslint:enable */
        // IPdfWrapper Members
        /**
         * Gets the `element`.
         * @private
         */
        get: function () {
            return this.pdfDictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAnnotation;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/document-link-annotation.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/document-link-annotation.js ***!
  \***************************************************************************************************************************************************************/
/*! exports provided: PdfDocumentLinkAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentLinkAnnotation", function() { return PdfDocumentLinkAnnotation; });
/* harmony import */ var _link_annotation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./link-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/link-annotation.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

/**
 * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // create new pages
 * let page1 : PdfPage = document.pages.add();
 * let page2 : PdfPage = document.pages.add();
 * // create a new rectangle
 * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});
 * //
 * // create a new document link annotation
 * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);
 * // set the annotation text
 * documentLinkAnnotation.text = 'Document link annotation';
 * // set the destination
 * documentLinkAnnotation.destination = new PdfDestination(page2);
 * // set the documentlink annotation location
 * documentLinkAnnotation.destination.location = new PointF(10, 0);
 * // add this annotation to a new page
 * page1.annotations.add(documentLinkAnnotation);
 * //
 * // save the document to disk
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfDocumentLinkAnnotation = /** @class */ (function (_super) {
    __extends(PdfDocumentLinkAnnotation, _super);
    function PdfDocumentLinkAnnotation(rectangle, destination) {
        var _this = _super.call(this, rectangle) || this;
        // Fields
        /**
         * `Destination` of the annotation.
         * @default null
         * @private
         */
        _this.pdfDestination = null;
        if (typeof destination !== 'undefined') {
            _this.destination = destination;
        }
        return _this;
    }
    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, "destination", {
        // Properties
        /**
         * Gets or sets the `destination` of the annotation.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // create new pages
         * let page1 : PdfPage = document.pages.add();
         * let page2 : PdfPage = document.pages.add();
         * // create a new rectangle
         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});
         * //
         * // create a new document link annotation
         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);
         * // set the annotation text
         * documentLinkAnnotation.text = 'Document link annotation';
         * // set the destination
         * documentLinkAnnotation.destination = new PdfDestination(page2);
         * // set the documentlink annotation location
         * documentLinkAnnotation.destination.location = new PointF(10, 0);
         * // add this annotation to a new page
         * page1.annotations.add(documentLinkAnnotation);
         * //
         * // save the document to disk
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         * @default null
         */
        get: function () {
            return this.pdfDestination;
        },
        set: function (value) {
            // if (this.pdfDestination !== value) {
            this.pdfDestination = value;
            // }
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Saves` annotation object.
     * @private
     */
    PdfDocumentLinkAnnotation.prototype.save = function () {
        _super.prototype.save.call(this);
        if (this.pdfDestination != null) {
            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);
        }
    };
    /**
     * `Clone` the document link annotation.
     * @private
     */
    PdfDocumentLinkAnnotation.prototype.clone = function () {
        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);
        annot.color = this.color;
        annot.brush = this.brush;
        annot.destination = this.destination;
        annot.font = this.font;
        return annot;
    };
    return PdfDocumentLinkAnnotation;
}(_link_annotation__WEBPACK_IMPORTED_MODULE_0__["PdfLinkAnnotation"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/link-annotation.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/link-annotation.js ***!
  \******************************************************************************************************************************************************/
/*! exports provided: PdfLinkAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLinkAnnotation", function() { return PdfLinkAnnotation; });
/* harmony import */ var _annotation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * `PdfLinkAnnotation` class represents the ink annotation class.
 * @private
 */
var PdfLinkAnnotation = /** @class */ (function (_super) {
    __extends(PdfLinkAnnotation, _super);
    function PdfLinkAnnotation(rectangle) {
        return _super.call(this, rectangle) || this;
    }
    // Implementation
    /**
     * `Initializes` annotation object.
     * @private
     */
    PdfLinkAnnotation.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_1__["PdfName"](this.dictionaryProperties.link));
    };
    return PdfLinkAnnotation;
}(_annotation__WEBPACK_IMPORTED_MODULE_0__["PdfAnnotation"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: PdfTextWebLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTextWebLink", function() { return PdfTextWebLink; });
/* harmony import */ var _pages_pdf_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pages/pdf-page */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_figures_text_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../graphics/figures/text-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/text-element.js");
/* harmony import */ var _uri_annotation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uri-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/uri-annotation.js");
/* harmony import */ var _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../graphics/fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../graphics/fonts/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();









/**
 * `PdfTextWebLink` class represents the class for text web link annotation.
 * ```typescript
 * // create a new PDF document.
 * let document : PdfDocument = new PdfDocument();
 * // add a page to the document.
 * let page1 : PdfPage = document.pages.add();
 * // create the font
 * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
 * //
 * // create the Text Web Link
 * let textLink : PdfTextWebLink = new PdfTextWebLink();
 * // set the hyperlink
 * textLink.url = 'http://www.google.com';
 * // set the link text
 * textLink.text = 'Google';
 * // set the font
 * textLink.font = font;
 * // draw the hyperlink in PDF page
 * textLink.draw(page1, new PointF(10, 40));
 * //
 * // save the document.
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfTextWebLink = /** @class */ (function (_super) {
    __extends(PdfTextWebLink, _super);
    // Constructors
    /**
     * Initializes a new instance of the `PdfTextWebLink` class.
     * @private
     */
    function PdfTextWebLink() {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Internal variable to store `Url`.
         * @default ''
         * @private
         */
        _this.uniformResourceLocator = '';
        /**
         * Internal variable to store `Uri Annotation` object.
         * @default null
         * @private
         */
        _this.uriAnnotation = null;
        /**
         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.
         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).
         * @private
         * @hidden
         */
        _this.recalculateBounds = false;
        _this.defaultBorder = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_7__["PdfArray"]();
        for (var i = 0; i < 3; i++) {
            _this.defaultBorder.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_8__["PdfNumber"](0));
        }
        return _this;
    }
    Object.defineProperty(PdfTextWebLink.prototype, "url", {
        // Properties
        /**
         * Gets or sets the `Uri address`.
         * ```typescript
         * // create a new PDF document.
         * let document : PdfDocument = new PdfDocument();
         * // add a page to the document.
         * let page1 : PdfPage = document.pages.add();
         * // create the font
         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
         * // create the Text Web Link
         * let textLink : PdfTextWebLink = new PdfTextWebLink();
         * //
         * // set the hyperlink
         * textLink.url = 'http://www.google.com';
         * //
         * // set the link text
         * textLink.text = 'Google';
         * // set the font
         * textLink.font = font;
         * // draw the hyperlink in PDF page
         * textLink.draw(page1, new PointF(10, 40));
         * // save the document.
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            return this.uniformResourceLocator;
        },
        set: function (value) {
            if (value.length === 0) {
                throw new Error('ArgumentException : Url - string can not be empty');
            }
            this.uniformResourceLocator = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfTextWebLink.prototype.draw = function (arg1, arg2) {
        if (arg1 instanceof _pages_pdf_page__WEBPACK_IMPORTED_MODULE_0__["PdfPage"]) {
            var layout = new _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_4__["PdfStringLayouter"]();
            var previousFontStyle = this.font.style;
            if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"]) {
                this.recalculateBounds = true;
                this.font.style = _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_5__["PdfFontStyle"].Underline;
                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"]((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);
                if (layoutResult.lines.length === 1) {
                    var textSize = this.font.measureString(this.value);
                    var rect = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](arg2, textSize);
                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);
                    this.uriAnnotation = new _uri_annotation__WEBPACK_IMPORTED_MODULE_3__["PdfUriAnnotation"](rect, this.url);
                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
                    arg1.annotations.add(this.uriAnnotation);
                    var result = this.drawText(arg1, arg2);
                    this.font.style = previousFontStyle;
                    return result;
                }
                else {
                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);
                    this.font.style = previousFontStyle;
                    return result;
                }
            }
            else {
                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"](arg2.width, 0), false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"](0, 0));
                this.font.style = _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_5__["PdfFontStyle"].Underline;
                if (layoutResult.lines.length === 1) {
                    var textSize = this.font.measureString(this.value);
                    var rect = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](arg2.x, arg2.y), textSize);
                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);
                    this.uriAnnotation = new _uri_annotation__WEBPACK_IMPORTED_MODULE_3__["PdfUriAnnotation"](rect, this.url);
                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
                    arg1.annotations.add(this.uriAnnotation);
                    var returnValue = this.drawText(arg1, arg2);
                    this.font.style = previousFontStyle;
                    return returnValue;
                }
                else {
                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);
                    this.font.style = previousFontStyle;
                    return returnValue;
                }
            }
        }
        else {
            var page = new _pages_pdf_page__WEBPACK_IMPORTED_MODULE_0__["PdfPage"]();
            page = arg1.page;
            return this.draw(page, arg2);
        }
    };
    /* tslint:enable */
    //Private methods
    /**
     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.
     * @private
     */
    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {
        var layoutResult;
        for (var i = 0; i < result.layoutLines.length; i++) {
            var size = this.font.measureString(result.lines[i].text);
            var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](location, size);
            if (i !== 0) {
                bounds.x = 0;
            }
            this.text = result.lines[i].text;
            if (bounds.y + size.height > page.graphics.clientSize.height) {
                if (i !== 0) {
                    page = page.graphics.getNextPage();
                    bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](0, 0, page.graphics.clientSize.width, size.height);
                    location.y = 0;
                }
                else {
                    break;
                }
            }
            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);
            this.uriAnnotation = new _uri_annotation__WEBPACK_IMPORTED_MODULE_3__["PdfUriAnnotation"](bounds, this.url);
            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
            page.annotations.add(this.uriAnnotation);
            if (i !== 0) {
                layoutResult = this.drawText(page, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](0, bounds.y));
            }
            else {
                layoutResult = this.drawText(page, bounds.x, bounds.y);
            }
            location.y += size.height;
        }
        return layoutResult;
    };
    /**
     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.
     * @private
     */
    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {
        var layoutResult;
        for (var i = 0; i < result.layoutLines.length; i++) {
            var size = this.font.measureString(result.lines[i].text);
            var internalBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](bounds.x, bounds.y), size);
            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);
            this.text = result.lines[i].text;
            if (bounds.y + size.height > page.graphics.clientSize.height) {
                if (i !== 0) {
                    page = page.graphics.getNextPage();
                    bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](bounds.x, 0, bounds.width, size.height);
                    internalBounds.y = 0;
                }
                else {
                    break;
                }
            }
            this.uriAnnotation = new _uri_annotation__WEBPACK_IMPORTED_MODULE_3__["PdfUriAnnotation"](internalBounds, this.url);
            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);
            page.annotations.add(this.uriAnnotation);
            layoutResult = this.drawText(page, bounds);
            bounds.y += size.height;
        }
        return layoutResult;
    };
    /* tslint:disable */
    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {
        var shift = 0;
        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfTextAlignment"].Center) {
            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;
            currentBounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfTextAlignment"].Right) {
            currentBounds.x = startPosition + (maximumWidth - lineWidth);
            currentBounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfTextAlignment"].Justify) {
            currentBounds.x = startPosition;
            currentBounds.width = maximumWidth;
        }
        else {
            currentBounds.width = startPosition;
            currentBounds.width = lineWidth;
        }
        return currentBounds;
    };
    return PdfTextWebLink;
}(_graphics_figures_text_element__WEBPACK_IMPORTED_MODULE_2__["PdfTextElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/uri-annotation.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/uri-annotation.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: PdfUriAnnotation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfUriAnnotation", function() { return PdfUriAnnotation; });
/* harmony import */ var _action_link_annotation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action-link-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/action-link-annotation.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _actions_uri_action__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../actions/uri-action */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/uri-action.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * `PdfUriAnnotation` class represents the Uri annotation.
 * @private
 */
var PdfUriAnnotation = /** @class */ (function (_super) {
    __extends(PdfUriAnnotation, _super);
    function PdfUriAnnotation(rectangle, uri) {
        var _this = _super.call(this, rectangle) || this;
        if (typeof uri !== 'undefined') {
            _this.uri = uri;
        }
        return _this;
    }
    Object.defineProperty(PdfUriAnnotation.prototype, "uriAction", {
        /**
         * Get `action` of the annotation.
         * @private
         */
        get: function () {
            if (typeof this.pdfUriAction === 'undefined') {
                this.pdfUriAction = new _actions_uri_action__WEBPACK_IMPORTED_MODULE_2__["PdfUriAction"]();
            }
            return this.pdfUriAction;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfUriAnnotation.prototype, "uri", {
        // Properties
        /**
         * Gets or sets the `Uri` address.
         * @private
         */
        get: function () {
            return this.uriAction.uri;
        },
        set: function (value) {
            if (this.uriAction.uri !== value) {
                this.uriAction.uri = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfUriAnnotation.prototype, "action", {
        /**
         * Gets or sets the `action`.
         * @private
         */
        get: function () {
            return this.getSetAction();
        },
        set: function (value) {
            this.getSetAction(value);
            this.uriAction.next = value;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Initializes` annotation object.
     * @private
     */
    PdfUriAnnotation.prototype.initialize = function () {
        _super.prototype.initialize.call(this);
        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_1__["PdfName"](this.dictionaryProperties.link));
        var tempPrimitive = this.uriAction.element;
        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);
    };
    return PdfUriAnnotation;
}(_action_link_annotation__WEBPACK_IMPORTED_MODULE_0__["PdfActionLinkAnnotation"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: Dictionary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return Dictionary; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/utils.js");
/**
 * Dictionary.ts class for EJ2-PDF
 * @private
 * @hidden
 */

/**
 * @private
 * @hidden
 */
var Dictionary = /** @class */ (function () {
    /**
     * @private
     * @hidden
     */
    function Dictionary(toStringFunction) {
        this.table = {};
        this.nElements = 0;
        this.toStr = toStringFunction || _utils__WEBPACK_IMPORTED_MODULE_0__["defaultToString"];
    }
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.getValue = function (key) {
        var pair = this.table['$' + this.toStr(key)];
        if (typeof pair === 'undefined') {
            return undefined;
        }
        return pair.value;
    };
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.setValue = function (key, value) {
        // if (typeof key === 'undefined' || typeof value === 'undefined') {
        //     return undefined;
        // }
        var ret;
        var k = '$' + this.toStr(key);
        var previousElement = this.table[k];
        // if (typeof previousElement === 'undefined') {
        this.nElements++;
        ret = undefined;
        // }
        this.table[k] = {
            key: key,
            value: value
        };
        return ret;
    };
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.remove = function (key) {
        var k = '$' + this.toStr(key);
        var previousElement = this.table[k];
        // if (typeof previousElement !== 'undefined') {
        delete this.table[k];
        this.nElements--;
        return previousElement.value;
        // }
        // return undefined;
    };
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.keys = function () {
        var keysArray = [];
        var namesOfKeys = Object.keys(this.table);
        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {
            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {
            var pair1 = this.table[namesOfKeys[index1]];
            keysArray.push(pair1.key);
            // }
        }
        return keysArray;
    };
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.values = function () {
        var valuesArray = [];
        var namesOfValues = Object.keys(this.table);
        for (var index2 = 0; index2 < namesOfValues.length; index2++) {
            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {
            var pair2 = this.table[namesOfValues[index2]];
            valuesArray.push(pair2.value);
            // }
        }
        return valuesArray;
    };
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.containsKey = function (key) {
        var retutnValue = true;
        if (typeof this.getValue(key) === 'undefined') {
            retutnValue = true;
        }
        else {
            retutnValue = false;
        }
        return !retutnValue;
    };
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.clear = function () {
        this.table = {};
        this.nElements = 0;
    };
    /**
     * @private
     * @hidden
     */
    Dictionary.prototype.size = function () {
        return this.nElements;
    };
    return Dictionary;
}()); // End of dictionary



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js ***!
  \********************************************************************************************************************************************************************/
/*! exports provided: TemporaryDictionary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemporaryDictionary", function() { return TemporaryDictionary; });
/**
 * Dictionary class
 * @private
 * @hidden
 */
var TemporaryDictionary = /** @class */ (function () {
    function TemporaryDictionary() {
        /**
         * @hidden
         * @private
         */
        this.mKeys = [];
        /**
         * @hidden
         * @private
         */
        this.mValues = [];
    }
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.size = function () {
        return this.mKeys.length;
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.add = function (key, value) {
        if (key === undefined || key === null || value === undefined || value === null) {
            throw new ReferenceError('Provided key or value is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            this.mKeys.push(key);
            this.mValues.push(value);
            return 1;
        }
        else {
            throw new RangeError('An item with the same key has already been added.');
        }
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.keys = function () {
        return this.mKeys;
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.values = function () {
        return this.mValues;
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.getValue = function (key) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            throw new RangeError('No item with the specified key has been added.');
        }
        else {
            return this.mValues[index];
        }
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.setValue = function (key, value) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            this.mKeys.push(key);
            this.mValues.push(value);
        }
        else {
            this.mValues[index] = value;
        }
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.remove = function (key) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            throw new RangeError('No item with the specified key has been added.');
        }
        else {
            this.mKeys.splice(index, 1);
            this.mValues.splice(index, 1);
            return true;
        }
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.containsKey = function (key) {
        if (key === undefined || key === null) {
            throw new ReferenceError('Provided key is not valid.');
        }
        var index = this.mKeys.indexOf(key);
        if (index < 0) {
            return false;
        }
        return true;
    };
    /**
     * @hidden
     * @private
     */
    TemporaryDictionary.prototype.clear = function () {
        this.mKeys = [];
        this.mValues = [];
    };
    return TemporaryDictionary;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/utils.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/utils.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: defaultToString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultToString", function() { return defaultToString; });
/**
 * @private
 * @hidden
 */
function defaultToString(item) {
    // if (item === null) {
    //     return 'COLLECTION_NULL';
    // } else if (typeof item === 'undefined') {
    //     return 'COLLECTION_UNDEFINED';
    // } else if (Object.prototype.toString.call(item) === '[object String]') {
    if (Object.prototype.toString.call(item) === '[object String]') {
        return '$s' + item;
    }
    else {
        return '$o' + item.toString();
    }
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info-collection.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info-collection.js ***!
  \************************************************************************************************************************************************************************************/
/*! exports provided: PdfAutomaticFieldInfoCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfAutomaticFieldInfoCollection", function() { return PdfAutomaticFieldInfoCollection; });
/**
 * Represent a `collection of automatic fields information`.
 * @private
 */
var PdfAutomaticFieldInfoCollection = /** @class */ (function () {
    /**
     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.
     * @private
     */
    function PdfAutomaticFieldInfoCollection() {
        /**
         * Internal variable to store instance of `pageNumberFields` class.
         * @private
         */
        this.automaticFieldsInformation = [];
        //
    }
    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, "automaticFields", {
        /**
         * Gets the `page number fields collection`.
         * @private
         */
        get: function () {
            return this.automaticFieldsInformation;
        },
        enumerable: true,
        configurable: true
    });
    // Public methods
    /// Adds the specified field info.
    /**
     * Add page number field into collection.
     * @private
     */
    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {
        return this.automaticFields.push(fieldInfo);
    };
    return PdfAutomaticFieldInfoCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info.js ***!
  \*************************************************************************************************************************************************************************/
/*! exports provided: PdfAutomaticFieldInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfAutomaticFieldInfo", function() { return PdfAutomaticFieldInfo; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _automatic_field__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./automatic-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field.js");
/**
 * PdfAutomaticFieldInfo.ts class for EJ2-PDF
 * @private
 */


/**
 * Represents information about the automatic field.
 * @private
 */
var PdfAutomaticFieldInfo = /** @class */ (function () {
    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {
        // Fields
        /**
         * Internal variable to store location of the field.
         * @private
         */
        this.pageNumberFieldLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"]();
        /**
         * Internal variable to store field.
         * @private
         */
        this.pageNumberField = null;
        /**
         * Internal variable to store x scaling factor.
         * @private
         */
        this.scaleX = 1;
        /**
         * Internal variable to store y scaling factor.
         * @private
         */
        this.scaleY = 1;
        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {
            this.pageNumberField = field.field;
            this.pageNumberFieldLocation = field.location;
            this.scaleX = field.scalingX;
            this.scaleY = field.scalingY;
        }
        else if (typeof scaleX === 'undefined' && location instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"] && field instanceof _automatic_field__WEBPACK_IMPORTED_MODULE_1__["PdfAutomaticField"]) {
            this.pageNumberField = field;
            this.pageNumberFieldLocation = location;
        }
        else {
            this.pageNumberField = field;
            this.pageNumberFieldLocation = location;
            this.scaleX = scaleX;
            this.scaleY = scaleY;
        }
    }
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "location", {
        /* tslint:enable */
        // Properties
        /**
         * Gets or sets the location.
         * @private
         */
        get: function () {
            return this.pageNumberFieldLocation;
        },
        set: function (value) {
            this.pageNumberFieldLocation = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "field", {
        /**
         * Gets or sets the field.
         * @private
         */
        get: function () {
            return this.pageNumberField;
        },
        set: function (value) {
            this.pageNumberField = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "scalingX", {
        /**
         * Gets or sets the scaling X factor.
         * @private
         */
        get: function () {
            return this.scaleX;
        },
        set: function (value) {
            this.scaleX = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticFieldInfo.prototype, "scalingY", {
        /**
         * Gets or sets the scaling Y factor.
         * @private
         */
        get: function () {
            return this.scaleY;
        },
        set: function (value) {
            this.scaleY = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfAutomaticFieldInfo;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field.js ***!
  \********************************************************************************************************************************************************************/
/*! exports provided: PdfAutomaticField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfAutomaticField", function() { return PdfAutomaticField; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../graphics/brushes/pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/* harmony import */ var _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../graphics/pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _pdf_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../pdf-document */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js");
/* harmony import */ var _graphics_figures_base_graphics_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../graphics/figures/base/graphics-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/graphics-element.js");
/* harmony import */ var _automatic_field_info__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./automatic-field-info */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfAutomaticField.ts class for EJ2-PDF
 */






/**
 * Represents a fields which is calculated before the document saves.
 */
var PdfAutomaticField = /** @class */ (function (_super) {
    __extends(PdfAutomaticField, _super);
    // Constructors
    function PdfAutomaticField() {
        var _this = _super.call(this) || this;
        // Fields
        _this.internalBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"](0, 0, 0, 0);
        _this.internalTemplateSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](0, 0);
        return _this;
    }
    Object.defineProperty(PdfAutomaticField.prototype, "bounds", {
        // Properties
        get: function () {
            return this.internalBounds;
        },
        set: function (value) {
            this.internalBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "size", {
        get: function () {
            return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](this.bounds.width, this.bounds.height);
        },
        set: function (value) {
            this.bounds.width = value.width;
            this.bounds.height = value.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "location", {
        get: function () {
            return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](this.bounds.x, this.bounds.y);
        },
        set: function (value) {
            this.bounds.x = value.x;
            this.bounds.y = value.y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "font", {
        get: function () {
            return this.internalFont;
        },
        set: function (value) {
            this.internalFont = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "brush", {
        get: function () {
            return this.internalBrush;
        },
        set: function (value) {
            this.internalBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "pen", {
        get: function () {
            return this.internalPen;
        },
        set: function (value) {
            this.internalPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfAutomaticField.prototype, "stringFormat", {
        get: function () {
            return this.internalStringFormat;
        },
        set: function (value) {
            this.internalStringFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {
        if (this.bounds.height === 0 || this.bounds.width === 0) {
            var text = this.getValue(graphics);
            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);
        }
    };
    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {
        if (typeof arg2 === 'undefined') {
            var location_1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](0, 0);
            this.draw(arg1, location_1);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"]) {
            this.draw(arg1, arg2.x, arg2.y);
        }
        else {
            this.drawHelper(arg1, arg2, arg3);
            var info = new _automatic_field_info__WEBPACK_IMPORTED_MODULE_5__["PdfAutomaticFieldInfo"](this, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](arg2, arg3));
            arg1.automaticFields.add(info);
        }
    };
    PdfAutomaticField.prototype.getSize = function () {
        if (this.bounds.height === 0 || this.bounds.width === 0) {
            return this.internalTemplateSize;
        }
        else {
            return this.size;
        }
    };
    PdfAutomaticField.prototype.drawInternal = function (graphics) {
        //
    };
    /* tslint:disable */
    PdfAutomaticField.prototype.getBrush = function () {
        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new _graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_1__["PdfSolidBrush"](new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_2__["PdfColor"](0, 0, 0)) : this.internalBrush;
    };
    PdfAutomaticField.prototype.getFont = function () {
        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? _pdf_document__WEBPACK_IMPORTED_MODULE_3__["PdfDocument"].defaultFont : this.internalFont;
    };
    /* tslint:enable */
    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {
        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {
            var page = graphics.page;
            return page;
        }
        else {
            var page = graphics.currentPage;
            return page;
        }
    };
    return PdfAutomaticField;
}(_graphics_figures_base_graphics_element__WEBPACK_IMPORTED_MODULE_4__["PdfGraphicsElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/composite-field.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/composite-field.js ***!
  \********************************************************************************************************************************************************************/
/*! exports provided: PdfCompositeField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfCompositeField", function() { return PdfCompositeField; });
/* harmony import */ var _multiple_value_field__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multiple-value-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/multiple-value-field.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfCompositeField.ts class for EJ2-PDF
 */

/**
 * Represents class which can concatenate multiple automatic fields into single string.
 */
var PdfCompositeField = /** @class */ (function (_super) {
    __extends(PdfCompositeField, _super);
    // Constructor
    /**
     * Initialize a new instance of `PdfCompositeField` class.
     * @param font Font of the field.
     * @param brush Color of the field.
     * @param text Content of the field.
     * @param list List of the automatic fields in specific order based on the text content.
     */
    function PdfCompositeField(font, brush, text) {
        var list = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            list[_i - 3] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Stores the array of automatic fields.
         * @private
         */
        _this.internalAutomaticFields = null;
        /**
         * Stores the text value of the field.
         * @private
         */
        _this.internalText = '';
        _this.font = font;
        _this.brush = brush;
        _this.text = text;
        _this.automaticFields = list;
        return _this;
    }
    Object.defineProperty(PdfCompositeField.prototype, "text", {
        // Properties
        /**
         * Gets and sets the content of the field.
         * @public
         */
        get: function () {
            return this.internalText;
        },
        set: function (value) {
            this.internalText = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCompositeField.prototype, "automaticFields", {
        /**
         * Gets and sets the list of the field to drawn.
         * @public
         */
        get: function () {
            return this.internalAutomaticFields;
        },
        set: function (value) {
            this.internalAutomaticFields = value;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * Return the actual value generated from the list of automatic fields.
     * @public
     */
    PdfCompositeField.prototype.getValue = function (graphics) {
        var values = [];
        var text = this.text.toString();
        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {
            for (var i = 0; i < this.automaticFields.length; i++) {
                var automaticField = this.automaticFields[i];
                text = text.replace('{' + i + '}', automaticField.getValue(graphics));
            }
        }
        return text;
    };
    return PdfCompositeField;
}(_multiple_value_field__WEBPACK_IMPORTED_MODULE_0__["PdfMultipleValueField"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/multiple-value-field.js":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/multiple-value-field.js ***!
  \*************************************************************************************************************************************************************************/
/*! exports provided: PdfMultipleValueField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfMultipleValueField", function() { return PdfMultipleValueField; });
/* harmony import */ var _automatic_field__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./automatic-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field.js");
/* harmony import */ var _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../collections/object-object-pair/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js");
/* harmony import */ var _pdf_template_value_pair__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-template-value-pair */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-template-value-pair.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../graphics/figures/pdf-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfAutomaticField.ts class for EJ2-PDF
 */





/**
 * Represents automatic field which has the same value within the `PdfGraphics`.
 */
var PdfMultipleValueField = /** @class */ (function (_super) {
    __extends(PdfMultipleValueField, _super);
    function PdfMultipleValueField() {
        var _this = _super.call(this) || this;
        //  Fields
        /**
         * Stores the instance of dictionary values of `graphics and template value pair`.
         * @private
         */
        _this.list = new _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_1__["TemporaryDictionary"]();
        return _this;
    }
    // Implementation
    /* tslint:disable */
    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {
        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);
        var value = this.getValue(graphics);
        var template = new _graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_4__["PdfTemplate"](this.getSize());
        this.list.setValue(graphics, new _pdf_template_value_pair__WEBPACK_IMPORTED_MODULE_2__["PdfTemplateValuePair"](template, value));
        var g = template.graphics;
        var size = this.getSize();
        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);
        var drawLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"](location.x + this.location.x, location.y + this.location.y);
        graphics.drawPdfTemplate(template, drawLocation, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["SizeF"](template.width * scalingX, template.height * scalingY));
    };
    return PdfMultipleValueField;
}(_automatic_field__WEBPACK_IMPORTED_MODULE_0__["PdfAutomaticField"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/page-count-field.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/page-count-field.js ***!
  \*********************************************************************************************************************************************************************/
/*! exports provided: PdfPageCountField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageCountField", function() { return PdfPageCountField; });
/* harmony import */ var _single_value_field__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./single-value-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/single-value-field.js");
/* harmony import */ var _pages_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../pages/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");
/* harmony import */ var _graphics_brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../graphics/brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _pdf_numbers_convertor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-numbers-convertor */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-numbers-convertor.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfPageCountField.ts class for EJ2-PDF
 */




/**
 * Represents total PDF document page count automatic field.
 */
var PdfPageCountField = /** @class */ (function (_super) {
    __extends(PdfPageCountField, _super);
    function PdfPageCountField(font, arg2) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Stores the number style of the field.
         * @private
         */
        _this.internalNumberStyle = _pages_enum__WEBPACK_IMPORTED_MODULE_1__["PdfNumberStyle"].Numeric;
        if (typeof arg2 === 'undefined') {
            _this.font = font;
        }
        else if (arg2 instanceof _graphics_brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_2__["PdfBrush"]) {
            _this.font = font;
            _this.brush = arg2;
        }
        else {
            _this.font = font;
            _this.bounds = arg2;
        }
        return _this;
    }
    Object.defineProperty(PdfPageCountField.prototype, "numberStyle", {
        // Properties
        /**
         * Gets and sets the number style of the field.
         * @public
         */
        get: function () {
            return this.internalNumberStyle;
        },
        set: function (value) {
            this.internalNumberStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * Return the actual value of the content to drawn.
     * @public
     */
    PdfPageCountField.prototype.getValue = function (graphics) {
        var result = null;
        var page = this.getPageFromGraphics(graphics);
        var document = page.section.parent.document;
        var count = document.pages.count;
        result = _pdf_numbers_convertor__WEBPACK_IMPORTED_MODULE_3__["PdfNumbersConvertor"].convert(count, this.numberStyle);
        return result;
    };
    return PdfPageCountField;
}(_single_value_field__WEBPACK_IMPORTED_MODULE_0__["PdfSingleValueField"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-numbers-convertor.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-numbers-convertor.js ***!
  \**************************************************************************************************************************************************************************/
/*! exports provided: PdfNumbersConvertor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfNumbersConvertor", function() { return PdfNumbersConvertor; });
/* harmony import */ var _pages_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../pages/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");
/**
 * PdfNumbersConvertor.ts class for EJ2-PDF
 * @private
 */

/**
 * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,
 * @private
 */
var PdfNumbersConvertor = /** @class */ (function () {
    function PdfNumbersConvertor() {
    }
    // Static methods
    /**
     * Convert string value from page number with correct format.
     * @private
     */
    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {
        var result = '';
        switch (numberStyle) {
            case _pages_enum__WEBPACK_IMPORTED_MODULE_0__["PdfNumberStyle"].None:
                result = '';
                break;
            case _pages_enum__WEBPACK_IMPORTED_MODULE_0__["PdfNumberStyle"].Numeric:
                result = intArabic.toString();
                break;
            case _pages_enum__WEBPACK_IMPORTED_MODULE_0__["PdfNumberStyle"].LowerLatin:
                result = this.arabicToLetter(intArabic).toLowerCase();
                break;
            case _pages_enum__WEBPACK_IMPORTED_MODULE_0__["PdfNumberStyle"].LowerRoman:
                result = this.arabicToRoman(intArabic).toLowerCase();
                break;
            case _pages_enum__WEBPACK_IMPORTED_MODULE_0__["PdfNumberStyle"].UpperLatin:
                result = this.arabicToLetter(intArabic);
                break;
            case _pages_enum__WEBPACK_IMPORTED_MODULE_0__["PdfNumberStyle"].UpperRoman:
                result = this.arabicToRoman(intArabic);
                break;
        }
        return result;
    };
    /**
     * Converts `arabic to roman` letters.
     * @private
     */
    PdfNumbersConvertor.arabicToRoman = function (intArabic) {
        var retval = '';
        var retvalM = this.generateNumber(intArabic, 1000, 'M');
        retval += retvalM.returnValue;
        intArabic = retvalM.intArabic;
        var retvalCM = this.generateNumber(intArabic, 900, 'CM');
        retval += retvalCM.returnValue;
        intArabic = retvalCM.intArabic;
        var retvalD = this.generateNumber(intArabic, 500, 'D');
        retval += retvalD.returnValue;
        intArabic = retvalD.intArabic;
        var retvalCD = this.generateNumber(intArabic, 400, 'CD');
        retval += retvalCD.returnValue;
        intArabic = retvalCD.intArabic;
        var retvalC = this.generateNumber(intArabic, 100, 'C');
        retval += retvalC.returnValue;
        intArabic = retvalC.intArabic;
        var retvalXC = this.generateNumber(intArabic, 90, 'XC');
        retval += retvalXC.returnValue;
        intArabic = retvalXC.intArabic;
        var retvalL = this.generateNumber(intArabic, 50, 'L');
        retval += retvalL.returnValue;
        intArabic = retvalL.intArabic;
        var retvalXL = this.generateNumber(intArabic, 40, 'XL');
        retval += retvalXL.returnValue;
        intArabic = retvalXL.intArabic;
        var retvalX = this.generateNumber(intArabic, 10, 'X');
        retval += retvalX.returnValue;
        intArabic = retvalX.intArabic;
        var retvalIX = this.generateNumber(intArabic, 9, 'IX');
        retval += retvalIX.returnValue;
        intArabic = retvalIX.intArabic;
        var retvalV = this.generateNumber(intArabic, 5, 'V');
        retval += retvalV.returnValue;
        intArabic = retvalV.intArabic;
        var retvalIV = this.generateNumber(intArabic, 4, 'IV');
        retval += retvalIV.returnValue;
        intArabic = retvalIV.intArabic;
        var retvalI = this.generateNumber(intArabic, 1, 'I');
        retval += retvalI.returnValue;
        intArabic = retvalI.intArabic;
        return retval.toString();
    };
    /**
     * Converts `arabic to normal letters`.
     * @private
     */
    PdfNumbersConvertor.arabicToLetter = function (arabic) {
        var stack = this.convertToLetter(arabic);
        var result = '';
        while (stack.length > 0) {
            var num = stack.pop();
            result = this.appendChar(result, num);
        }
        return result.toString();
    };
    /**
     * Generate a string value of an input number.
     * @private
     */
    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {
        var numberstring = '';
        while (value >= magnitude) {
            value -= magnitude;
            numberstring += letter;
        }
        return { returnValue: numberstring.toString(), intArabic: value };
    };
    /**
     * Convert a input number into letters.
     * @private
     */
    PdfNumbersConvertor.convertToLetter = function (arabic) {
        if (arabic <= 0) {
            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');
        }
        var stack = [];
        while (arabic > this.letterLimit) {
            var remainder = arabic % this.letterLimit;
            if (remainder === 0.0) {
                arabic = arabic / this.letterLimit - 1;
                remainder = this.letterLimit;
            }
            else {
                arabic /= this.letterLimit;
            }
            stack.push(remainder);
        }
        stack.push(arabic);
        return stack;
    };
    /**
     * Convert number to actual string value.
     * @private
     */
    PdfNumbersConvertor.appendChar = function (builder, value) {
        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);
        builder += letter;
        return builder;
    };
    // Fields
    /**
     * numbers of letters in english [readonly].
     * @default = 26.0
     * @private
     */
    PdfNumbersConvertor.letterLimit = 26.0;
    /**
     * Resturns `acsii start index` value.
     * @default 64
     * @private
     */
    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);
    return PdfNumbersConvertor;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-page-number-field.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-page-number-field.js ***!
  \**************************************************************************************************************************************************************************/
/*! exports provided: PdfPageNumberField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageNumberField", function() { return PdfPageNumberField; });
/* harmony import */ var _graphics_brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../graphics/brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _pages_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../pages/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");
/* harmony import */ var _pdf_numbers_convertor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-numbers-convertor */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-numbers-convertor.js");
/* harmony import */ var _multiple_value_field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./multiple-value-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/multiple-value-field.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




/**
 * Represents PDF document `page number field`.
 * @public
 */
var PdfPageNumberField = /** @class */ (function (_super) {
    __extends(PdfPageNumberField, _super);
    function PdfPageNumberField(font, arg2) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Stores the number style of the page number field.
         * @private
         */
        _this.internalNumberStyle = _pages_enum__WEBPACK_IMPORTED_MODULE_1__["PdfNumberStyle"].Numeric;
        if (typeof arg2 === 'undefined') {
            _this.font = font;
        }
        else if (arg2 instanceof _graphics_brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_0__["PdfBrush"]) {
            _this.font = font;
            _this.brush = arg2;
        }
        else {
            _this.font = font;
            _this.bounds = arg2;
        }
        return _this;
    }
    Object.defineProperty(PdfPageNumberField.prototype, "numberStyle", {
        // Properties
        /**
         * Gets and sets the number style of the page number field.
         * @private
         */
        get: function () {
            return this.internalNumberStyle;
        },
        set: function (value) {
            this.internalNumberStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Return the `string` value of page number field.
     * @public
     */
    PdfPageNumberField.prototype.getValue = function (graphics) {
        var result = null;
        var page = this.getPageFromGraphics(graphics);
        result = this.internalGetValue(page);
        return result;
    };
    /**
     * Internal method to `get actual value of page number`.
     * @private
     */
    PdfPageNumberField.prototype.internalGetValue = function (page) {
        var document = page.document;
        var pageIndex = document.pages.indexOf(page) + 1;
        return _pdf_numbers_convertor__WEBPACK_IMPORTED_MODULE_2__["PdfNumbersConvertor"].convert(pageIndex, this.numberStyle);
    };
    return PdfPageNumberField;
}(_multiple_value_field__WEBPACK_IMPORTED_MODULE_3__["PdfMultipleValueField"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-template-value-pair.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-template-value-pair.js ***!
  \****************************************************************************************************************************************************************************/
/*! exports provided: PdfTemplateValuePair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTemplateValuePair", function() { return PdfTemplateValuePair; });
/**
 * Represent class to store information about `template and value pairs`.
 * @private
 */
var PdfTemplateValuePair = /** @class */ (function () {
    function PdfTemplateValuePair(template, value) {
        // Fields
        /**
         * Internal variable to store template.
         * @default null
         * @private
         */
        this.pdfTemplate = null;
        /**
         * Intenal variable to store value.
         * @private
         */
        this.content = '';
        if (typeof template === 'undefined') {
            //
        }
        else {
            this.template = template;
            this.value = value;
        }
    }
    Object.defineProperty(PdfTemplateValuePair.prototype, "template", {
        // Properties
        /**
         * Gets or sets the template.
         * @private
         */
        get: function () {
            return this.pdfTemplate;
        },
        set: function (value) {
            this.pdfTemplate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplateValuePair.prototype, "value", {
        /**
         * Gets or sets the value.
         * @private
         */
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.content = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTemplateValuePair;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/single-value-field.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/single-value-field.js ***!
  \***********************************************************************************************************************************************************************/
/*! exports provided: PdfSingleValueField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSingleValueField", function() { return PdfSingleValueField; });
/* harmony import */ var _automatic_field__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./automatic-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field.js");
/* harmony import */ var _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../collections/object-object-pair/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js");
/* harmony import */ var _pdf_template_value_pair__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-template-value-pair */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-template-value-pair.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../graphics/figures/pdf-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfSingleValueField.ts class for EJ2-PDF
 */





/**
 * Represents automatic field which has the same value in the whole document.
 */
var PdfSingleValueField = /** @class */ (function (_super) {
    __extends(PdfSingleValueField, _super);
    // Constructors
    function PdfSingleValueField() {
        var _this = _super.call(this) || this;
        // Fields
        /* tslint:disable */
        _this.list = new _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_1__["TemporaryDictionary"]();
        /* tslint:enable */
        _this.painterGraphics = [];
        return _this;
    }
    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {
        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);
        var page = this.getPageFromGraphics(graphics);
        var document = page.document;
        var textValue = this.getValue(graphics);
        /* tslint:disable */
        if (this.list.containsKey(document)) {
            var pair = this.list.getValue(document);
            var drawLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"](location.x + this.location.x, location.y + this.location.y);
            graphics.drawPdfTemplate(pair.template, drawLocation, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["SizeF"](pair.template.width * scalingX, pair.template.height * scalingY));
            this.painterGraphics.push(graphics);
        }
        else {
            var size = this.getSize();
            var template = new _graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_4__["PdfTemplate"](size);
            this.list.setValue(document, new _pdf_template_value_pair__WEBPACK_IMPORTED_MODULE_2__["PdfTemplateValuePair"](template, textValue));
            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);
            var drawLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"](location.x + this.location.x, location.y + this.location.y);
            graphics.drawPdfTemplate(template, drawLocation, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["SizeF"](template.width * scalingX, template.height * scalingY));
            this.painterGraphics.push(graphics);
        }
        /* tslint:enable */
    };
    return PdfSingleValueField;
}(_automatic_field__WEBPACK_IMPORTED_MODULE_0__["PdfAutomaticField"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-catalog.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-catalog.js ***!
  \***********************************************************************************************************************************************/
/*! exports provided: PdfCatalog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfCatalog", function() { return PdfCatalog; });
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfCatalog.ts class for EJ2-PDF
 */




/**
 * `PdfCatalog` class represents internal catalog of the Pdf document.
 * @private
 */
var PdfCatalog = /** @class */ (function (_super) {
    __extends(PdfCatalog, _super);
    //constructor
    /**
     * Initializes a new instance of the `PdfCatalog` class.
     * @private
     */
    function PdfCatalog() {
        var _this = _super.call(this) || this;
        //fields
        /**
         * Internal variable to store collection of `sections`.
         * @default null
         * @private
         */
        _this.sections = null;
        /**
         * Internal variable for accessing fields from `DictionryProperties` class.
         * @private
         */
        _this.tempDictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_1__["DictionaryProperties"]();
        _this.items.setValue(new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_1__["DictionaryProperties"]().type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"]('Catalog'));
        return _this;
    }
    Object.defineProperty(PdfCatalog.prototype, "pages", {
        //Properties
        /**
         * Gets or sets the sections, which contain `pages`.
         * @private
         */
        get: function () {
            return this.sections;
        },
        set: function (value) {
            var dictionary = value.element;
            // if (this.sections !== value) {
            //     this.sections = value;
            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));
            // }
            this.sections = value;
            this.items.setValue(this.tempDictionaryProperties.pages, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_3__["PdfReferenceHolder"](value));
        },
        enumerable: true,
        configurable: true
    });
    return PdfCatalog;
}(_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-base.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-base.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: PdfDocumentBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentBase", function() { return PdfDocumentBase; });
/* harmony import */ var _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-file-utils */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-file-utils/index.js");
/* harmony import */ var _pdf_document__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-document */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js");



/**
 * `PdfDocumentBase` class represent common properties of PdfDocument classes.
 * @private
 */
var PdfDocumentBase = /** @class */ (function () {
    function PdfDocumentBase(document) {
        /**
         * If the stream is copied,  then it specifies true.
         * @private
         */
        this.isStreamCopied = false;
        if (document instanceof _pdf_document__WEBPACK_IMPORTED_MODULE_1__["PdfDocument"]) {
            this.document = document;
        }
    }
    Object.defineProperty(PdfDocumentBase.prototype, "pdfObjects", {
        //Prpperties
        /**
         * Gets the `PDF objects` collection, which stores all objects and references to it..
         * @private
         */
        get: function () {
            return this.objects;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentBase.prototype, "crossTable", {
        /**
         * Gets the `cross-reference` table.
         * @private
         */
        get: function () {
            return this.pdfCrossTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentBase.prototype, "currentSavingObj", {
        /**
         * Gets or sets the current saving `object number`.
         * @private
         */
        get: function () {
            return this.currentSavingObject;
        },
        set: function (value) {
            this.currentSavingObject = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentBase.prototype, "catalog", {
        /**
         * Gets the PDF document `catalog`.
         * @private
         */
        get: function () {
            return this.pdfCatalog;
        },
        set: function (value) {
            this.pdfCatalog = value;
        },
        enumerable: true,
        configurable: true
    });
    //Public methods
    /**
     * Sets the `main object collection`.
     * @private
     */
    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {
        this.objects = mainObjectCollection;
    };
    /**
     * Sets the `cross table`.
     * @private
     */
    PdfDocumentBase.prototype.setCrossTable = function (cTable) {
        this.pdfCrossTable = cTable;
    };
    /**
     * Sets the `catalog`.
     * @private
     */
    PdfDocumentBase.prototype.setCatalog = function (catalog) {
        this.pdfCatalog = catalog;
    };
    PdfDocumentBase.prototype.save = function (filename) {
        var _this = this;
        var encoding = new _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_0__["Encoding"](true);
        var SW = new _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_0__["StreamWriter"](encoding);
        if (typeof filename === 'undefined') {
            var encoding_1 = new _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_0__["Encoding"](true);
            var SW_1 = new _syncfusion_ej2_file_utils__WEBPACK_IMPORTED_MODULE_0__["StreamWriter"](encoding_1);
            return new Promise(function (resolve, reject) {
                /* tslint:disable-next-line:no-any */
                var obj = {};
                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });
                resolve(obj);
            });
        }
        else {
            this.document.docSave(SW, filename, true);
        }
    };
    /**
     * `Clone` of parent object - PdfDocument.
     * @private
     */
    PdfDocumentBase.prototype.clone = function () {
        return this.document;
    };
    return PdfDocumentBase;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-template.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-template.js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: PdfDocumentTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentTemplate", function() { return PdfDocumentTemplate; });
/* harmony import */ var _pages_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pages/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");

// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;
/**
 * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.
 * @private
 */
var PdfDocumentTemplate = /** @class */ (function () {
    // Constructors
    /**
     * Initializes a new instance of the `PdfDocumentTemplate` class.
     * @public
     */
    function PdfDocumentTemplate() {
        //
    }
    Object.defineProperty(PdfDocumentTemplate.prototype, "left", {
        // private m_stamps : PdfStampCollection;
        // Properties
        /**
         * `Left` page template object.
         * @public
         */
        get: function () {
            return this.leftTemplate;
        },
        set: function (value) {
            this.leftTemplate = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Left);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "top", {
        /**
         * `Top` page template object.
         * @public
         */
        get: function () {
            return this.topTemplate;
        },
        set: function (value) {
            this.topTemplate = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Top);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "right", {
        /**
         * `Right` page template object.
         * @public
         */
        get: function () {
            return this.rightTemplate;
        },
        set: function (value) {
            this.rightTemplate = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Right);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "bottom", {
        /**
         * `Bottom` page template object.
         * @public
         */
        get: function () {
            return this.bottomTemplate;
        },
        set: function (value) {
            this.bottomTemplate = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Bottom);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenLeft", {
        /**
         * `EvenLeft` page template object.
         * @public
         */
        get: function () {
            return this.evenLeft;
        },
        set: function (value) {
            this.evenLeft = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Left);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenTop", {
        /**
         * `EvenTop` page template object.
         * @public
         */
        get: function () {
            return this.evenTop;
        },
        set: function (value) {
            this.evenTop = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Top);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenRight", {
        /**
         * `EvenRight` page template object.
         * @public
         */
        get: function () {
            return this.evenRight;
        },
        set: function (value) {
            this.evenRight = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Right);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "EvenBottom", {
        /**
         * `EvenBottom` page template object.
         * @public
         */
        get: function () {
            return this.evenBottom;
        },
        set: function (value) {
            this.evenBottom = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Bottom);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddLeft", {
        /**
         * `OddLeft` page template object.
         * @public
         */
        get: function () {
            return this.oddLeft;
        },
        set: function (value) {
            this.oddLeft = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Left);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddTop", {
        /**
         * `OddTop` page template object.
         * @public
         */
        get: function () {
            return this.oddTop;
        },
        set: function (value) {
            this.oddTop = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Top);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddRight", {
        /**
         * `OddRight` page template object.
         * @public
         */
        get: function () {
            return this.oddRight;
        },
        set: function (value) {
            this.oddRight = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Right);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentTemplate.prototype, "OddBottom", {
        /**
         * `OddBottom` page template object.
         * @public
         */
        get: function () {
            return this.oddBottom;
        },
        set: function (value) {
            this.oddBottom = this.checkElement(value, _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Bottom);
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * Returns `left` template.
     * @public
     */
    PdfDocumentTemplate.prototype.getLeft = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        // if (page.Document.Pages != null) {
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;
        }
        else {
            template = (this.OddLeft != null) ? this.OddLeft : this.left;
        }
        // }
        return template;
    };
    /**
     * Returns `top` template.
     * @public
     */
    PdfDocumentTemplate.prototype.getTop = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        // if (page.Document.Pages != null) {
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenTop != null) ? this.EvenTop : this.top;
        }
        else {
            template = (this.OddTop != null) ? this.OddTop : this.top;
        }
        // }
        return template;
    };
    /**
     * Returns `right` template.
     * @public
     */
    PdfDocumentTemplate.prototype.getRight = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        // if (page.Document.Pages != null) {
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenRight != null) ? this.EvenRight : this.right;
        }
        else {
            template = (this.OddRight != null) ? this.OddRight : this.right;
        }
        // }
        return template;
    };
    /**
     * Returns `bottom` template.
     * @public
     */
    PdfDocumentTemplate.prototype.getBottom = function (page) {
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var template = null;
        // if (page.Document.Pages != null) {
        var even = this.isEven(page);
        if (even) {
            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;
        }
        else {
            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;
        }
        // }
        return template;
    };
    /**
     * Checks whether the page `is even`.
     * @private
     */
    PdfDocumentTemplate.prototype.isEven = function (page) {
        var pages = page.section.document.pages;
        var index = 0;
        if (pages.pageCollectionIndex.containsKey(page)) {
            index = pages.pageCollectionIndex.getValue(page) + 1;
        }
        else {
            index = pages.indexOf(page) + 1;
        }
        var even = ((index % 2) === 0);
        return even;
    };
    /**
     * Checks a `template element`.
     * @private
     */
    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {
        if (templateElement != null) {
            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== _pages_enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None)) {
                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');
            }
            templateElement.type = type;
        }
        return templateElement;
    };
    return PdfDocumentTemplate;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: PdfDocument */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDocument", function() { return PdfDocument; });
/* harmony import */ var _input_output_pdf_writer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../input-output/pdf-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js");
/* harmony import */ var _input_output_pdf_main_object_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../input-output/pdf-main-object-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-main-object-collection.js");
/* harmony import */ var _pdf_document_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-document-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-base.js");
/* harmony import */ var _input_output_pdf_cross_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../input-output/pdf-cross-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-cross-table.js");
/* harmony import */ var _pdf_catalog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pdf-catalog */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-catalog.js");
/* harmony import */ var _pages_pdf_page_settings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../pages/pdf-page-settings */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-settings.js");
/* harmony import */ var _pages_pdf_section_collection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../pages/pdf-section-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-collection.js");
/* harmony import */ var _pages_pdf_document_page_collection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../pages/pdf-document-page-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-document-page-collection.js");
/* harmony import */ var _general_pdf_cache_collection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../general/pdf-cache-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-cache-collection.js");
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _pdf_document_template__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pdf-document-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-template.js");
/* harmony import */ var _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../graphics/fonts/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _graphics_fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../graphics/fonts/pdf-standard-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();













/**
 * Represents a PDF document and can be used to create a new PDF document from the scratch.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // add a new page to the document
 * let page1 : PdfPage = document.pages.add();
 * // set the font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * // create black brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
 * // draw the text
 * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
 * // save the document
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfDocument = /** @class */ (function (_super) {
    __extends(PdfDocument, _super);
    function PdfDocument(isMerging) {
        var _this = _super.call(this) || this;
        /**
         * Default `margin` value.
         * @default 40.0
         * @private
         */
        _this.defaultMargin = 40.0;
        /**
         * Internal variable to store instance of `StreamWriter` classes..
         * @default null
         * @private
         */
        _this.streamWriter = null;
        _this.document = _this;
        var isMerge = false;
        if (typeof isMerging === 'undefined') {
            PdfDocument.cacheCollection = new _general_pdf_cache_collection__WEBPACK_IMPORTED_MODULE_8__["PdfCacheCollection"]();
            isMerge = false;
        }
        else {
            isMerge = isMerging;
        }
        var objects = new _input_output_pdf_main_object_collection__WEBPACK_IMPORTED_MODULE_1__["PdfMainObjectCollection"]();
        _this.setMainObjectCollection(objects);
        var crossTable = new _input_output_pdf_cross_table__WEBPACK_IMPORTED_MODULE_3__["PdfCrossTable"]();
        crossTable.isMerging = isMerge;
        crossTable.document = _this;
        _this.setCrossTable(crossTable);
        var catalog = new _pdf_catalog__WEBPACK_IMPORTED_MODULE_4__["PdfCatalog"]();
        _this.setCatalog(catalog);
        objects.add(catalog);
        catalog.position = -1;
        _this.sectionCollection = new _pages_pdf_section_collection__WEBPACK_IMPORTED_MODULE_6__["PdfSectionCollection"](_this);
        _this.documentPageCollection = new _pages_pdf_document_page_collection__WEBPACK_IMPORTED_MODULE_7__["PdfDocumentPageCollection"](_this);
        catalog.pages = _this.sectionCollection;
        return _this;
    }
    Object.defineProperty(PdfDocument, "defaultFont", {
        //Properties
        /**
         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.
         * @private
         */
        get: function () {
            if (this.defaultStandardFont == null) {
                this.defaultStandardFont = new _graphics_fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_12__["PdfStandardFont"](_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_11__["PdfFontFamily"].Helvetica, 8);
            }
            return this.defaultStandardFont;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "sections", {
        /**
         * Gets the collection of the `sections` in the document.
         * @private
         */
        get: function () {
            return this.sectionCollection;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "pageSettings", {
        /**
         * Gets the document's page setting.
         * @public
         */
        get: function () {
            if (this.settings == null) {
                this.settings = new _pages_pdf_page_settings__WEBPACK_IMPORTED_MODULE_5__["PdfPageSettings"](this.defaultMargin);
            }
            return this.settings;
        },
        /**
         * Sets the document's page setting.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         *
         * // sets the right margin of the page
         * document.pageSettings.margins.right = 0;
         * // set the page size.
         * document.pageSettings.size = new SizeF(500, 500);
         * // change the page orientation to landscape
         * document.pageSettings.orientation = PdfPageOrientation.Landscape;
         * // apply 90 degree rotation on the page
         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;
         *
         * // add a pages to the document
         * let page1 : PdfPage = document.pages.add();
         * // set font
         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
         * // set brush
         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
         * // set the specified Point
         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);
         * // draw the text
         * page1.graphics.drawString('Hello World', font, blackBrush, point);
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        set: function (value) {
            this.settings = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "pages", {
        /**
         * Represents the collection of pages in the PDF document.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * //
         * // get the collection of pages in the document
         * let pageCollection : PdfDocumentPageCollection  = document.pages;
         * //
         * // add pages
         * let page1 : PdfPage = pageCollection.add();
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            return this.documentPageCollection;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument, "cache", {
        /**
         * Gets collection of the `cached objects`.
         * @private
         */
        get: function () {
            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {
                return new _general_pdf_cache_collection__WEBPACK_IMPORTED_MODULE_8__["PdfCacheCollection"]();
            }
            return PdfDocument.cacheCollection;
        },
        /**
         * Sets collection of the `cached objects`.
         * @private
         */
        set: function (value) {
            this.cacheCollection = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument, "enableCache", {
        /**
         * Gets the value of enable cache.
         * @private
         */
        get: function () {
            return this.isCacheEnabled;
        },
        /**
         * Sets thie value of enable cache.
         * @private
         */
        set: function (value) {
            this.isCacheEnabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "colorSpace", {
        /* tslint:disable */
        /**
         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.
         * @private
         */
        get: function () {
            if ((this.pdfColorSpace === _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].Rgb) || ((this.pdfColorSpace === _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].Cmyk)
                || (this.pdfColorSpace === _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].GrayScale))) {
                return this.pdfColorSpace;
            }
            else {
                return _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].Rgb;
            }
        },
        set: function (value) {
            if ((value === _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].Rgb) || ((value === _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].Cmyk) ||
                (value === _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].GrayScale))) {
                this.pdfColorSpace = value;
            }
            else {
                this.pdfColorSpace = _graphics_enum__WEBPACK_IMPORTED_MODULE_9__["PdfColorSpace"].Rgb;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocument.prototype, "template", {
        /* tslint:enable */
        /**
         * Gets or sets a `template` to all pages in the document.
         * @private
         */
        get: function () {
            if (this.pageTemplate == null) {
                this.pageTemplate = new _pdf_document_template__WEBPACK_IMPORTED_MODULE_10__["PdfDocumentTemplate"]();
            }
            return this.pageTemplate;
        },
        set: function (value) {
            this.pageTemplate = value;
        },
        enumerable: true,
        configurable: true
    });
    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {
        this.checkPagesPresence();
        if (stream === null) {
            throw new Error('ArgumentNullException : stream');
        }
        this.streamWriter = stream;
        var writer = new _input_output_pdf_writer__WEBPACK_IMPORTED_MODULE_0__["PdfWriter"](stream);
        writer.document = this;
        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {
            return this.crossTable.save(writer);
        }
        else {
            this.crossTable.save(writer, arg2);
        }
    };
    /**
     * Checks the pages `presence`.
     * @private
     */
    PdfDocument.prototype.checkPagesPresence = function () {
        if (this.pages.count === 0) {
            this.pages.add();
        }
    };
    /**
     * disposes the current instance of `PdfDocument` class.
     * ```typescript
     * // create a new PDF document
     * let document : PdfDocument = new PdfDocument();
     * // add a new page to the document
     * let page1 : PdfPage = document.pages.add();
     * // set the font
     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
     * // create black brush
     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
     * // draw the text
     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
     * // save the document
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     */
    PdfDocument.prototype.destroy = function () {
        this.catalog = undefined;
        this.colorSpace = undefined;
        this.currentSavingObj = undefined;
        this.documentPageCollection = undefined;
        this.isStreamCopied = undefined;
        this.pageSettings = undefined;
        this.pageTemplate = undefined;
        this.pdfColorSpace = undefined;
        this.sectionCollection = undefined;
        PdfDocument.cache.destroy();
        this.crossTable.pdfObjects.destroy();
        PdfDocument.cache = undefined;
        this.streamWriter.destroy();
    };
    /**
     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.
     * @default null
     * @private
     */
    PdfDocument.defaultStandardFont = null;
    /**
     * Indicates whether enable cache or not
     * @default true
     * @private
     */
    PdfDocument.isCacheEnabled = true;
    return PdfDocument;
}(_pdf_document_base__WEBPACK_IMPORTED_MODULE_2__["PdfDocumentBase"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: PointF, SizeF, RectangleF, Rectangle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PointF", function() { return PointF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SizeF", function() { return SizeF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RectangleF", function() { return RectangleF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return Rectangle; });
/**
 * Coordinates of Position for `PointF`.
 * @private
 */
var PointF = /** @class */ (function () {
    function PointF(x, y) {
        if (typeof x === 'undefined') {
            this.x = 0;
            this.y = 0;
        }
        else {
            if (x !== null) {
                this.x = x;
            }
            else {
                this.x = 0;
            }
            if (y !== null) {
                this.y = y;
            }
            else {
                this.y = 0;
            }
        }
    }
    return PointF;
}());

/**
 * Width and Height as `Size`.
 * @private
 */
var SizeF = /** @class */ (function () {
    function SizeF(width, height) {
        if (typeof height === 'undefined') {
            this.height = 0;
            this.width = 0;
        }
        else {
            if (height !== null) {
                this.height = height;
            }
            else {
                this.height = 0;
            }
            if (width !== null) {
                this.width = width;
            }
            else {
                this.width = 0;
            }
        }
    }
    return SizeF;
}());

/**
 * `RectangleF` with Position and size.
 * @private
 */
var RectangleF = /** @class */ (function () {
    function RectangleF(arg1, arg2, arg3, arg4) {
        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {
            this.x = 0;
            this.y = 0;
            this.height = 0;
            this.width = 0;
        }
        else {
            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {
                var pointf = arg1;
                this.x = pointf.x;
                this.y = pointf.y;
                var sizef = arg2;
                this.height = sizef.height;
                this.width = sizef.width;
            }
            else {
                var x = arg1;
                var y = arg2;
                var width = arg3;
                var height = arg4;
                this.x = x;
                this.y = y;
                this.height = height;
                this.width = width;
            }
        }
    }
    return RectangleF;
}());

/**
 * `Rectangle` with left, right, top and bottom.
 * @private
 */
var Rectangle = /** @class */ (function () {
    /**
     * Instance of `RectangleF` class with X, Y, Width and Height.
     * @private
     */
    function Rectangle(left, top, right, bottom) {
        this.left = left;
        this.top = top;
        this.right = right;
        this.bottom = bottom;
    }
    Object.defineProperty(Rectangle.prototype, "width", {
        /**
         * Gets a value of width
         */
        get: function () {
            return this.right - this.left;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rectangle.prototype, "height", {
        /**
         * Gets a value of height
         */
        get: function () {
            return this.bottom - this.top;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rectangle.prototype, "topLeft", {
        /**
         * Gets a value of Top and Left
         */
        get: function () {
            return new PointF(this.left, this.top);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rectangle.prototype, "size", {
        /**
         * Gets a value of size
         */
        get: function () {
            return new SizeF(this.width, this.height);
        },
        enumerable: true,
        configurable: true
    });
    Rectangle.prototype.toString = function () {
        return this.topLeft + 'x' + this.size;
    };
    return Rectangle;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/enum.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/enum.js ***!
  \***************************************************************************************************************************************/
/*! exports provided: PdfDestinationMode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDestinationMode", function() { return PdfDestinationMode; });
/**
 * public Enum for `PdfDestinationMode`.
 * @private
 */
var PdfDestinationMode;
(function (PdfDestinationMode) {
    /**
     * Specifies the type of `Location`.
     * @private
     */
    PdfDestinationMode[PdfDestinationMode["Location"] = 0] = "Location";
    /**
     * Specifies the type of `FitToPage`.
     * @private
     */
    PdfDestinationMode[PdfDestinationMode["FitToPage"] = 1] = "FitToPage";
    /**
     * Specifies the type of `FitR`.
     * @private
     */
    PdfDestinationMode[PdfDestinationMode["FitR"] = 2] = "FitR";
})(PdfDestinationMode || (PdfDestinationMode = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-function.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-function.js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: PdfFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFunction", function() { return PdfFunction; });
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");

var PdfFunction = /** @class */ (function () {
    //Constructor
    /**
     * Initializes a new instance of the `PdfFunction` class.
     * @public
     */
    function PdfFunction(dictionary) {
        //Field
        /**
         * Internal variable to store dictionary.
         * @private
         */
        this.mDictionary = null;
        /**
         * Local variable to store the dictionary properties.
         * @private
         */
        this.mDictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_0__["DictionaryProperties"]();
        this.mDictionary = dictionary;
    }
    Object.defineProperty(PdfFunction.prototype, "domain", {
        //Properties
        /**
         * Gets or sets the domain of the function.
         * @public
         */
        get: function () {
            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);
            return domain;
        },
        set: function (value) {
            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFunction.prototype, "range", {
        /**
         * Gets or sets the range.
         * @public
         */
        get: function () {
            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));
            return range;
        },
        set: function (value) {
            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFunction.prototype, "dictionary", {
        /**
         * Gets the dictionary.
         */
        get: function () {
            return this.mDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFunction.prototype, "element", {
        //IPdfWrapper Members
        /**
         * Gets the element.
         */
        get: function () {
            return this.mDictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfFunction;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-sampled-function.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-sampled-function.js ***!
  \*****************************************************************************************************************************************************************/
/*! exports provided: PdfSampledFunction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSampledFunction", function() { return PdfSampledFunction; });
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _pdf_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-function */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-function.js");
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfSampledFunction.ts class for EJ2-PDF
 * Implements PDF Sampled Function.
 */




var PdfSampledFunction = /** @class */ (function (_super) {
    __extends(PdfSampledFunction, _super);
    /**
     * Initializes a new instance of the `PdfSampledFunction` class.
     * @public
     */
    function PdfSampledFunction(domain, range, sizes, samples) {
        var _this = _super.call(this, new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_2__["PdfStream"]()) || this;
        if (typeof domain === 'undefined') {
            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"](0));
        }
        else {
            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"](0));
            _this.checkParams(domain, range, sizes, samples);
            _this.setDomainAndRange(domain, range);
            _this.setSizeAndValues(sizes, samples);
        }
        return _this;
    }
    // Helper methods
    /**
     * Checks the input parameters.
     */
    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {
        var rLength = range.length;
        var dLength = domain.length;
        var sLength = samples.length;
        var frameLength = (rLength * (dLength / 4));
    };
    /**
     * Sets the domain and range.
     */
    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {
        this.domain = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__["PdfArray"](domain);
        this.range = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__["PdfArray"](range);
    };
    /**
     * Sets the size and values.
     */
    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {
        var s = (this.dictionary);
        this.dictionary.items.setValue(this.mDictionaryProperties.size, new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__["PdfArray"](sizes));
        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"](8));
        s.writeBytes(samples);
    };
    return PdfSampledFunction;
}(_pdf_function__WEBPACK_IMPORTED_MODULE_1__["PdfFunction"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-cache-collection.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-cache-collection.js ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: PdfCacheCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfCacheCollection", function() { return PdfCacheCollection; });
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/**
 * PdfCacheCollection.ts class for EJ2-PDF
 */

/**
 * `Collection of the cached objects`.
 * @private
 */
var PdfCacheCollection = /** @class */ (function () {
    // Constructors
    /**
     * Initializes a new instance of the `PdfCacheCollection` class.
     * @private
     */
    function PdfCacheCollection() {
        this.referenceObjects = [];
        this.pdfFontCollection = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
    }
    // Public methods
    /**
     * `Searches` for the similar cached object. If is not found - adds the object to the cache.
     * @private
     */
    PdfCacheCollection.prototype.search = function (obj) {
        var result = null;
        var group = this.getGroup(obj);
        if (group == null) {
            group = this.createNewGroup();
        }
        else if (group.length > 0) {
            result = group[0];
        }
        group.push(obj);
        return result;
    };
    // Implementation
    /**
     * `Creates` a new group.
     * @private
     */
    PdfCacheCollection.prototype.createNewGroup = function () {
        var group = [];
        this.referenceObjects.push(group);
        return group;
    };
    /**
     * `Find and Return` a group.
     * @private
     */
    PdfCacheCollection.prototype.getGroup = function (result) {
        var group = null;
        if (result !== null) {
            var len = this.referenceObjects.length;
            for (var i = 0; i < len; i++) {
                if (this.referenceObjects.length > 0) {
                    var tGroup = this.referenceObjects[i];
                    if (tGroup.length > 0) {
                        var representative = tGroup[0];
                        if (result.equalsTo(representative)) {
                            group = tGroup;
                            break;
                        }
                    }
                    else {
                        this.removeGroup(tGroup);
                    }
                }
                len = this.referenceObjects.length;
            }
        }
        return group;
    };
    /**
     * Remove a group from the storage.
     */
    PdfCacheCollection.prototype.removeGroup = function (group) {
        if (group !== null) {
            var index = this.referenceObjects.indexOf(group);
            this.referenceObjects.slice(index, index + 1);
        }
    };
    PdfCacheCollection.prototype.destroy = function () {
        this.pdfFontCollection = undefined;
        this.referenceObjects = undefined;
    };
    return PdfCacheCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-collection.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-collection.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: PdfCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfCollection", function() { return PdfCollection; });
/**
 * PdfCollection.ts class for EJ2-PDF
 * The class used to handle the collection of PdF objects.
 */
var PdfCollection = /** @class */ (function () {
    // Constructors
    /**
     * Initializes a new instance of the `Collection` class.
     * @private
     */
    function PdfCollection() {
        //
    }
    Object.defineProperty(PdfCollection.prototype, "count", {
        // Properties
        /**
         * Gets the `Count` of stored objects.
         * @private
         */
        get: function () {
            if (typeof this.collection === 'undefined') {
                this.collection = [];
            }
            return this.collection.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCollection.prototype, "list", {
        /**
         * Gets the `list` of stored objects.
         * @private
         */
        get: function () {
            if (typeof this.collection === 'undefined') {
                this.collection = [];
            }
            return this.collection;
        },
        enumerable: true,
        configurable: true
    });
    return PdfCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-destination.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-destination.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: PdfDestination */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDestination", function() { return PdfDestination; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _pages_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../pages/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");
/* harmony import */ var _general_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../general/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/enum.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");








/**
 * `PdfDestination` class represents an anchor in the document
 * where bookmarks or annotations can direct when clicked.
 */
var PdfDestination = /** @class */ (function () {
    function PdfDestination(arg1, arg2) {
        // Fields
        /**
         * Internal variable for accessing fields from `DictionryProperties` class.
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__["DictionaryProperties"]();
        /**
         * Type of the `destination`.
         * @private
         */
        this.destinationMode = _general_enum__WEBPACK_IMPORTED_MODULE_3__["PdfDestinationMode"].Location;
        /**
         * `Zoom` factor.
         * @private
         * @default 0
         */
        this.zoomFactor = 0;
        /**
         * `Location` of the destination.
         * @default new PointF() with 0 ,0 as co-ordinates
         * @private
         */
        this.destinationLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](0, 0);
        /**
         * `Bounds` of the destination as RectangleF.
         * @default RectangleF.Empty
         * @private
         */
        this.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"]();
        /**
         * Pdf primitive representing `this` object.
         * @private
         */
        this.array = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_1__["PdfArray"]();
        var angle = _pages_enum__WEBPACK_IMPORTED_MODULE_2__["PdfPageRotateAngle"].RotateAngle0;
        this.destinationLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](0, this.destinationLocation.y);
        this.pdfPage = arg1;
        if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"]) {
            this.destinationLocation = arg2;
        }
        else {
            this.bounds = arg2;
        }
    }
    Object.defineProperty(PdfDestination.prototype, "zoom", {
        // Properties
        /**
         * Gets and Sets the `zoom` factor.
         * @private
         */
        get: function () {
            return this.zoomFactor;
        },
        set: function (value) {
            this.zoomFactor = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDestination.prototype, "page", {
        /**
         * Gets and Sets the `page` object.
         * @private
         */
        get: function () {
            return this.pdfPage;
        },
        set: function (value) {
            this.pdfPage = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDestination.prototype, "mode", {
        /**
         * Gets and Sets the destination `mode`.
         * @private
         */
        get: function () {
            return this.destinationMode;
        },
        set: function (value) {
            this.destinationMode = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDestination.prototype, "location", {
        /**
         * Gets and Sets the `location`.
         * @private
         */
        get: function () {
            return this.destinationLocation;
        },
        set: function (value) {
            this.destinationLocation = value;
            this.initializePrimitive();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).
     * @private
     */
    PdfDestination.prototype.pointToNativePdf = function (page, point) {
        var section = page.section;
        return section.pointToNativePdf(page, point);
    };
    /**
     * `In fills` array by correct values.
     * @private
     */
    PdfDestination.prototype.initializePrimitive = function () {
        this.array.clear();
        this.array.add(new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](this.pdfPage));
        switch (this.destinationMode) {
            case _general_enum__WEBPACK_IMPORTED_MODULE_3__["PdfDestinationMode"].Location:
                var simplePage = this.pdfPage;
                var point = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"]();
                point = this.pointToNativePdf(simplePage, this.destinationLocation);
                this.array.add(new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.xyz));
                this.array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](point.x));
                this.array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](point.y));
                this.array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](this.zoomFactor));
                break;
            case _general_enum__WEBPACK_IMPORTED_MODULE_3__["PdfDestinationMode"].FitToPage:
                this.array.add(new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.fit));
                break;
        }
    };
    Object.defineProperty(PdfDestination.prototype, "element", {
        /**
         * Gets the `element` representing this object.
         * @private
         */
        get: function () {
            this.initializePrimitive();
            return this.array;
        },
        enumerable: true,
        configurable: true
    });
    return PdfDestination;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/enum.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/enum.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: PdfExtend, PdfLinearGradientMode, ShadingType, KnownColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfExtend", function() { return PdfExtend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLinearGradientMode", function() { return PdfLinearGradientMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShadingType", function() { return ShadingType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KnownColor", function() { return KnownColor; });
/**
 * Specifies the constant values specifying whether to extend the shading
 * beyond the starting and ending points of the axis.
 */
var PdfExtend;
(function (PdfExtend) {
    /**
     * Do not extend any point.
     */
    PdfExtend[PdfExtend["None"] = 0] = "None";
    /**
     * Extend start point.
     */
    PdfExtend[PdfExtend["Start"] = 1] = "Start";
    /**
     * Extend end point.
     */
    PdfExtend[PdfExtend["End"] = 2] = "End";
    /**
     * Extend both start and end points.
     */
    PdfExtend[PdfExtend["Both"] = 3] = "Both";
})(PdfExtend || (PdfExtend = {}));
/**
 * Specifies the gradient direction of the linear gradient brush.
 */
var PdfLinearGradientMode;
(function (PdfLinearGradientMode) {
    /**
     * Specifies a gradient from upper right to lower left.
     */
    PdfLinearGradientMode[PdfLinearGradientMode["BackwardDiagonal"] = 0] = "BackwardDiagonal";
    /**
     * Specifies a gradient from upper left to lower right.
     */
    PdfLinearGradientMode[PdfLinearGradientMode["ForwardDiagonal"] = 1] = "ForwardDiagonal";
    /**
     * Specifies a gradient from left to right.
     */
    PdfLinearGradientMode[PdfLinearGradientMode["Horizontal"] = 2] = "Horizontal";
    /**
     * Specifies a gradient from top to bottom.
     */
    PdfLinearGradientMode[PdfLinearGradientMode["Vertical"] = 3] = "Vertical";
})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));
/**
 * Shading type constants.
 */
var ShadingType;
(function (ShadingType) {
    /**
     * Function-based shading.
     */
    ShadingType[ShadingType["Function"] = 1] = "Function";
    /**
     * Axial shading.
     */
    ShadingType[ShadingType["Axial"] = 2] = "Axial";
    /**
     * Radial shading.
     */
    ShadingType[ShadingType["Radial"] = 3] = "Radial";
})(ShadingType || (ShadingType = {}));
var KnownColor;
(function (KnownColor) {
    KnownColor[KnownColor["ActiveBorder"] = 1] = "ActiveBorder";
    KnownColor[KnownColor["ActiveCaption"] = 2] = "ActiveCaption";
    KnownColor[KnownColor["ActiveCaptionText"] = 3] = "ActiveCaptionText";
    KnownColor[KnownColor["AppWorkspace"] = 4] = "AppWorkspace";
    KnownColor[KnownColor["Control"] = 5] = "Control";
    KnownColor[KnownColor["ControlDark"] = 6] = "ControlDark";
    KnownColor[KnownColor["ControlDarkDark"] = 7] = "ControlDarkDark";
    KnownColor[KnownColor["ControlLight"] = 8] = "ControlLight";
    KnownColor[KnownColor["ControlLightLight"] = 9] = "ControlLightLight";
    KnownColor[KnownColor["ControlText"] = 10] = "ControlText";
    KnownColor[KnownColor["Desktop"] = 11] = "Desktop";
    KnownColor[KnownColor["GrayText"] = 12] = "GrayText";
    KnownColor[KnownColor["Highlight"] = 13] = "Highlight";
    KnownColor[KnownColor["HighlightText"] = 14] = "HighlightText";
    KnownColor[KnownColor["HotTrack"] = 15] = "HotTrack";
    KnownColor[KnownColor["InactiveBorder"] = 16] = "InactiveBorder";
    KnownColor[KnownColor["InactiveCaption"] = 17] = "InactiveCaption";
    KnownColor[KnownColor["InactiveCaptionText"] = 18] = "InactiveCaptionText";
    KnownColor[KnownColor["Info"] = 19] = "Info";
    KnownColor[KnownColor["InfoText"] = 20] = "InfoText";
    KnownColor[KnownColor["Menu"] = 21] = "Menu";
    KnownColor[KnownColor["MenuText"] = 22] = "MenuText";
    KnownColor[KnownColor["ScrollBar"] = 23] = "ScrollBar";
    KnownColor[KnownColor["Window"] = 24] = "Window";
    KnownColor[KnownColor["WindowFrame"] = 25] = "WindowFrame";
    KnownColor[KnownColor["WindowText"] = 26] = "WindowText";
    KnownColor[KnownColor["Transparent"] = 27] = "Transparent";
    KnownColor[KnownColor["AliceBlue"] = 28] = "AliceBlue";
    KnownColor[KnownColor["AntiqueWhite"] = 29] = "AntiqueWhite";
    KnownColor[KnownColor["Aqua"] = 30] = "Aqua";
    KnownColor[KnownColor["Aquamarine"] = 31] = "Aquamarine";
    KnownColor[KnownColor["Azure"] = 32] = "Azure";
    KnownColor[KnownColor["Beige"] = 33] = "Beige";
    KnownColor[KnownColor["Bisque"] = 34] = "Bisque";
    KnownColor[KnownColor["Black"] = 35] = "Black";
    KnownColor[KnownColor["BlanchedAlmond"] = 36] = "BlanchedAlmond";
    KnownColor[KnownColor["Blue"] = 37] = "Blue";
    KnownColor[KnownColor["BlueViolet"] = 38] = "BlueViolet";
    KnownColor[KnownColor["Brown"] = 39] = "Brown";
    KnownColor[KnownColor["BurlyWood"] = 40] = "BurlyWood";
    KnownColor[KnownColor["CadetBlue"] = 41] = "CadetBlue";
    KnownColor[KnownColor["Chartreuse"] = 42] = "Chartreuse";
    KnownColor[KnownColor["Chocolate"] = 43] = "Chocolate";
    KnownColor[KnownColor["Coral"] = 44] = "Coral";
    KnownColor[KnownColor["CornflowerBlue"] = 45] = "CornflowerBlue";
    KnownColor[KnownColor["Cornsilk"] = 46] = "Cornsilk";
    KnownColor[KnownColor["Crimson"] = 47] = "Crimson";
    KnownColor[KnownColor["Cyan"] = 48] = "Cyan";
    KnownColor[KnownColor["DarkBlue"] = 49] = "DarkBlue";
    KnownColor[KnownColor["DarkCyan"] = 50] = "DarkCyan";
    KnownColor[KnownColor["DarkGoldenrod"] = 51] = "DarkGoldenrod";
    KnownColor[KnownColor["DarkGray"] = 52] = "DarkGray";
    KnownColor[KnownColor["DarkGreen"] = 53] = "DarkGreen";
    KnownColor[KnownColor["DarkKhaki"] = 54] = "DarkKhaki";
    KnownColor[KnownColor["DarkMagenta"] = 55] = "DarkMagenta";
    KnownColor[KnownColor["DarkOliveGreen"] = 56] = "DarkOliveGreen";
    KnownColor[KnownColor["DarkOrange"] = 57] = "DarkOrange";
    KnownColor[KnownColor["DarkOrchid"] = 58] = "DarkOrchid";
    KnownColor[KnownColor["DarkRed"] = 59] = "DarkRed";
    KnownColor[KnownColor["DarkSalmon"] = 60] = "DarkSalmon";
    KnownColor[KnownColor["DarkSeaGreen"] = 61] = "DarkSeaGreen";
    KnownColor[KnownColor["DarkSlateBlue"] = 62] = "DarkSlateBlue";
    KnownColor[KnownColor["DarkSlateGray"] = 63] = "DarkSlateGray";
    KnownColor[KnownColor["DarkTurquoise"] = 64] = "DarkTurquoise";
    KnownColor[KnownColor["DarkViolet"] = 65] = "DarkViolet";
    KnownColor[KnownColor["DeepPink"] = 66] = "DeepPink";
    KnownColor[KnownColor["DeepSkyBlue"] = 67] = "DeepSkyBlue";
    KnownColor[KnownColor["DimGray"] = 68] = "DimGray";
    KnownColor[KnownColor["DodgerBlue"] = 69] = "DodgerBlue";
    KnownColor[KnownColor["Firebrick"] = 70] = "Firebrick";
    KnownColor[KnownColor["FloralWhite"] = 71] = "FloralWhite";
    KnownColor[KnownColor["ForestGreen"] = 72] = "ForestGreen";
    KnownColor[KnownColor["Fuchsia"] = 73] = "Fuchsia";
    KnownColor[KnownColor["Gainsboro"] = 74] = "Gainsboro";
    KnownColor[KnownColor["GhostWhite"] = 75] = "GhostWhite";
    KnownColor[KnownColor["Gold"] = 76] = "Gold";
    KnownColor[KnownColor["Goldenrod"] = 77] = "Goldenrod";
    KnownColor[KnownColor["Gray"] = 78] = "Gray";
    KnownColor[KnownColor["Green"] = 79] = "Green";
    KnownColor[KnownColor["GreenYellow"] = 80] = "GreenYellow";
    KnownColor[KnownColor["Honeydew"] = 81] = "Honeydew";
    KnownColor[KnownColor["HotPink"] = 82] = "HotPink";
    KnownColor[KnownColor["IndianRed"] = 83] = "IndianRed";
    KnownColor[KnownColor["Indigo"] = 84] = "Indigo";
    KnownColor[KnownColor["Ivory"] = 85] = "Ivory";
    KnownColor[KnownColor["Khaki"] = 86] = "Khaki";
    KnownColor[KnownColor["Lavender"] = 87] = "Lavender";
    KnownColor[KnownColor["LavenderBlush"] = 88] = "LavenderBlush";
    KnownColor[KnownColor["LawnGreen"] = 89] = "LawnGreen";
    KnownColor[KnownColor["LemonChiffon"] = 90] = "LemonChiffon";
    KnownColor[KnownColor["LightBlue"] = 91] = "LightBlue";
    KnownColor[KnownColor["LightCoral"] = 92] = "LightCoral";
    KnownColor[KnownColor["LightCyan"] = 93] = "LightCyan";
    KnownColor[KnownColor["LightGoldenrodYellow"] = 94] = "LightGoldenrodYellow";
    KnownColor[KnownColor["LightGray"] = 95] = "LightGray";
    KnownColor[KnownColor["LightGreen"] = 96] = "LightGreen";
    KnownColor[KnownColor["LightPink"] = 97] = "LightPink";
    KnownColor[KnownColor["LightSalmon"] = 98] = "LightSalmon";
    KnownColor[KnownColor["LightSeaGreen"] = 99] = "LightSeaGreen";
    KnownColor[KnownColor["LightSkyBlue"] = 100] = "LightSkyBlue";
    KnownColor[KnownColor["LightSlateGray"] = 101] = "LightSlateGray";
    KnownColor[KnownColor["LightSteelBlue"] = 102] = "LightSteelBlue";
    KnownColor[KnownColor["LightYellow"] = 103] = "LightYellow";
    KnownColor[KnownColor["Lime"] = 104] = "Lime";
    KnownColor[KnownColor["LimeGreen"] = 105] = "LimeGreen";
    KnownColor[KnownColor["Linen"] = 106] = "Linen";
    KnownColor[KnownColor["Magenta"] = 107] = "Magenta";
    KnownColor[KnownColor["Maroon"] = 108] = "Maroon";
    KnownColor[KnownColor["MediumAquamarine"] = 109] = "MediumAquamarine";
    KnownColor[KnownColor["MediumBlue"] = 110] = "MediumBlue";
    KnownColor[KnownColor["MediumOrchid"] = 111] = "MediumOrchid";
    KnownColor[KnownColor["MediumPurple"] = 112] = "MediumPurple";
    KnownColor[KnownColor["MediumSeaGreen"] = 113] = "MediumSeaGreen";
    KnownColor[KnownColor["MediumSlateBlue"] = 114] = "MediumSlateBlue";
    KnownColor[KnownColor["MediumSpringGreen"] = 115] = "MediumSpringGreen";
    KnownColor[KnownColor["MediumTurquoise"] = 116] = "MediumTurquoise";
    KnownColor[KnownColor["MediumVioletRed"] = 117] = "MediumVioletRed";
    KnownColor[KnownColor["MidnightBlue"] = 118] = "MidnightBlue";
    KnownColor[KnownColor["MintCream"] = 119] = "MintCream";
    KnownColor[KnownColor["MistyRose"] = 120] = "MistyRose";
    KnownColor[KnownColor["Moccasin"] = 121] = "Moccasin";
    KnownColor[KnownColor["NavajoWhite"] = 122] = "NavajoWhite";
    KnownColor[KnownColor["Navy"] = 123] = "Navy";
    KnownColor[KnownColor["OldLace"] = 124] = "OldLace";
    KnownColor[KnownColor["Olive"] = 125] = "Olive";
    KnownColor[KnownColor["OliveDrab"] = 126] = "OliveDrab";
    KnownColor[KnownColor["Orange"] = 127] = "Orange";
    KnownColor[KnownColor["OrangeRed"] = 128] = "OrangeRed";
    KnownColor[KnownColor["Orchid"] = 129] = "Orchid";
    KnownColor[KnownColor["PaleGoldenrod"] = 130] = "PaleGoldenrod";
    KnownColor[KnownColor["PaleGreen"] = 131] = "PaleGreen";
    KnownColor[KnownColor["PaleTurquoise"] = 132] = "PaleTurquoise";
    KnownColor[KnownColor["PaleVioletRed"] = 133] = "PaleVioletRed";
    KnownColor[KnownColor["PapayaWhip"] = 134] = "PapayaWhip";
    KnownColor[KnownColor["PeachPuff"] = 135] = "PeachPuff";
    KnownColor[KnownColor["Peru"] = 136] = "Peru";
    KnownColor[KnownColor["Pink"] = 137] = "Pink";
    KnownColor[KnownColor["Plum"] = 138] = "Plum";
    KnownColor[KnownColor["PowderBlue"] = 139] = "PowderBlue";
    KnownColor[KnownColor["Purple"] = 140] = "Purple";
    KnownColor[KnownColor["Red"] = 141] = "Red";
    KnownColor[KnownColor["RosyBrown"] = 142] = "RosyBrown";
    KnownColor[KnownColor["RoyalBlue"] = 143] = "RoyalBlue";
    KnownColor[KnownColor["SaddleBrown"] = 144] = "SaddleBrown";
    KnownColor[KnownColor["Salmon"] = 145] = "Salmon";
    KnownColor[KnownColor["SandyBrown"] = 146] = "SandyBrown";
    KnownColor[KnownColor["SeaGreen"] = 147] = "SeaGreen";
    KnownColor[KnownColor["SeaShell"] = 148] = "SeaShell";
    KnownColor[KnownColor["Sienna"] = 149] = "Sienna";
    KnownColor[KnownColor["Silver"] = 150] = "Silver";
    KnownColor[KnownColor["SkyBlue"] = 151] = "SkyBlue";
    KnownColor[KnownColor["SlateBlue"] = 152] = "SlateBlue";
    KnownColor[KnownColor["SlateGray"] = 153] = "SlateGray";
    KnownColor[KnownColor["Snow"] = 154] = "Snow";
    KnownColor[KnownColor["SpringGreen"] = 155] = "SpringGreen";
    KnownColor[KnownColor["SteelBlue"] = 156] = "SteelBlue";
    KnownColor[KnownColor["Tan"] = 157] = "Tan";
    KnownColor[KnownColor["Teal"] = 158] = "Teal";
    KnownColor[KnownColor["Thistle"] = 159] = "Thistle";
    KnownColor[KnownColor["Tomato"] = 160] = "Tomato";
    KnownColor[KnownColor["Turquoise"] = 161] = "Turquoise";
    KnownColor[KnownColor["Violet"] = 162] = "Violet";
    KnownColor[KnownColor["Wheat"] = 163] = "Wheat";
    KnownColor[KnownColor["White"] = 164] = "White";
    KnownColor[KnownColor["WhiteSmoke"] = 165] = "WhiteSmoke";
    KnownColor[KnownColor["Yellow"] = 166] = "Yellow";
    KnownColor[KnownColor["YellowGreen"] = 167] = "YellowGreen";
    KnownColor[KnownColor["ButtonFace"] = 168] = "ButtonFace";
    KnownColor[KnownColor["ButtonHighlight"] = 169] = "ButtonHighlight";
    KnownColor[KnownColor["ButtonShadow"] = 170] = "ButtonShadow";
    KnownColor[KnownColor["GradientActiveCaption"] = 171] = "GradientActiveCaption";
    KnownColor[KnownColor["GradientInactiveCaption"] = 172] = "GradientInactiveCaption";
    KnownColor[KnownColor["MenuBar"] = 173] = "MenuBar";
    KnownColor[KnownColor["MenuHighlight"] = 174] = "MenuHighlight";
})(KnownColor || (KnownColor = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-blend.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-blend.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: PdfBlend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBlend", function() { return PdfBlend; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _pdf_color_blend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-color-blend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-color-blend.js");
/**
 * PdfBlend.ts class for EJ2-PDF
 */



/**
 * `PdfBlend` Represents the blend color space
 * @private
 */
var PdfBlend = /** @class */ (function () {
    function PdfBlend(count) {
        //Constants
        /**
         * precision of the GCD calculations.
         * @private
         */
        this.precision = 1000;
        //
    }
    Object.defineProperty(PdfBlend.prototype, "factors", {
        //Properties
        /**
         * Gets or sets the array of factor to the blend.
         * @public
         */
        get: function () {
            return this.mFactors;
        },
        set: function (value) {
            if ((value == null)) {
                throw new Error('ArgumentNullException : Factors');
            }
            this.mFactors = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBlend.prototype, "positions", {
        /**
         * 'positions' Gets or sets the array of positions
         * @public
         */
        get: function () {
            return this.mPositions;
        },
        set: function (value) {
            var positionarray = value;
            for (var i = 0; i < positionarray.length; i++) {
                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {
                    positionarray[i] = 0;
                }
            }
            this.mPositions = positionarray;
            this.mPositions = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBlend.prototype, "count", {
        /**
         * Gets the number of elements that specify the blend.
         * @protected
         */
        get: function () {
            return this.mCount;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * Generates a correct color blend.
     * @param colours The colours.
     * @param colorSpace The color space.
     */
    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {
        if ((colours == null)) {
            throw new Error('ArgumentNullException : colours');
        }
        if ((this.positions == null)) {
            this.positions = [0];
        }
        var cBlend = new _pdf_color_blend__WEBPACK_IMPORTED_MODULE_2__["PdfColorBlend"](this.count);
        var positions = this.positions;
        var clrs = null;
        if ((positions.length === 1)) {
            positions = [3];
            positions[0] = 0;
            positions[1] = this.positions[0];
            positions[2] = 1;
            /* tslint:disable */
            clrs = new Array(3);
            clrs[0] = colours[0];
            clrs[1] = colours[0];
            clrs[2] = colours[1];
        }
        else {
            var c1 = colours[0];
            var c2 = colours[1];
            /* tslint:disable */
            clrs = new Array(this.count);
            var i = 0;
            var count = this.count;
            for (i = 0; i < count; ++i) {
                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);
            }
        }
        cBlend.positions = positions;
        cBlend.colors = clrs;
        return cBlend;
    };
    /**
     * 'clonePdfBlend' Clones this instance.
     * @public
     */
    PdfBlend.prototype.clonePdfBlend = function () {
        var blend = this;
        if ((this.mFactors != null)) {
            blend.factors = (this.mFactors);
        }
        if ((this.positions != null)) {
            blend.positions = (this.positions);
        }
        return blend;
    };
    PdfBlend.prototype.gcd = function (u, v) {
        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {
            if (((u < 0) || (u > 1))) {
                throw new Error('ArgumentOutOfRangeException : u');
            }
            if (((v < 0) || (v > 1))) {
                throw new Error('ArgumentOutOfRangeException : v');
            }
            var iU = (Math.max(1, (u * this.precision)));
            var iV = (Math.max(1, (v * this.precision)));
            var iResult = this.gcdInt(iU, iV);
            var result = ((iResult) / this.precision);
            return result;
        }
        else {
            var values = u;
            if ((values == null)) {
                throw new Error('ArgumentNullException : values');
            }
            if ((values.length < 1)) {
                throw new Error('ArgumentException : Not enough values in the array. - values');
            }
            var gcd = values[0];
            if ((values.length > 1)) {
                var count = values.length;
                for (var i = 1; i < count; ++i) {
                    gcd = this.gcd(values[i], gcd);
                    if ((gcd === (1 / this.precision))) {
                        break;
                    }
                }
            }
            return gcd;
        }
    };
    /**
     * Calculate the GCD int of the specified values.
     * @param u The u.
     * @param v The v.
     */
    PdfBlend.prototype.gcdInt = function (u, v) {
        if ((u <= 0)) {
            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');
        }
        if ((v <= 0)) {
            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');
        }
        if (((u === 1) || (v === 1))) {
            return 1;
        }
        var shift = 0;
        while (this.isEven(u, v)) {
            ++shift;
            u >>= 1;
            v >>= 1;
        }
        while (((u & 1) <= 0)) {
            u >>= 1;
        }
        do {
            while ((v & 1) <= 0) {
                v >>= 1;
            }
            if (u > v) {
                var t = v;
                v = u;
                u = t;
            }
            v = v - u;
        } while (v !== 0);
        return (u << shift);
    };
    PdfBlend.prototype.isEven = function (arg1, arg2) {
        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {
            var result = true;
            result = (result && ((arg1 & 1) <= 0)); //  Is u even?
            result = (result && ((arg2 & 1) <= 0)); //  Is v even?
            return result;
        }
        else {
            return ((arg1 & 1) <= 0);
        }
    };
    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {
        if (color1 instanceof _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"]) {
            var color = new _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"]();
            switch (colorSpace) {
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb:
                    var red = (this.interpolate(t, color1.red, color2.red));
                    var green = (this.interpolate(t, color1.green, color2.green));
                    var blue = (this.interpolate(t, color1.blue, color2.blue));
                    color = new _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"](red, green, blue);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].GrayScale:
                    var gray = (this.interpolate(t, color1.gray, color2.gray));
                    color = new _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"](gray);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Cmyk:
                    var cyan = (this.interpolate(t, color1.c, color2.c));
                    var magenta = (this.interpolate(t, color1.m, color2.m));
                    var yellow = (this.interpolate(t, color1.y, color2.y));
                    var black = (this.interpolate(t, color1.k, color2.k));
                    color = new _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"](cyan, magenta, yellow, black);
                    break;
            }
            return color;
        }
        else {
            var t0 = 0;
            var t1 = 1;
            var result = 0;
            if ((t === t0)) {
                result = color1;
            }
            else if ((t === t1)) {
                result = color2;
            }
            else {
                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));
            }
            return result;
        }
    };
    return PdfBlend;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: PdfBrush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBrush", function() { return PdfBrush; });
/**
 * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,
 * ellipses, pies, polygons, and paths.
 * @private
 */
var PdfBrush = /** @class */ (function () {
    /**
     * Creates instanceof `PdfBrush` class.
     * @hidden
     * @private
     */
    function PdfBrush() {
        //
    }
    //IClonable implementation
    PdfBrush.prototype.clone = function () {
        return this;
    };
    return PdfBrush;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brushes.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brushes.js ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: PdfBrushes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBrushes", function() { return PdfBrushes; });
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/enum.js");
/* harmony import */ var _pdf_solid_brush__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/**
 * PdfBrushes.ts class for EJ2-PDF
 */




/**
 * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,
 * ellipses, pies, polygons, and paths.
 * @private
 */
var PdfBrushes = /** @class */ (function () {
    function PdfBrushes() {
    }
    Object.defineProperty(PdfBrushes, "AliceBlue", {
        //Static Properties
        /**
         * Gets the AliceBlue brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AliceBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AliceBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AliceBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "AntiqueWhite", {
        /**
         * Gets the antique white brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AntiqueWhite)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AntiqueWhite));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AntiqueWhite);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Aqua", {
        /**
         * Gets the Aqua default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aqua)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aqua));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aqua);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Aquamarine", {
        /**
         * Gets the Aquamarine default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aquamarine)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aquamarine));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aquamarine);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Azure", {
        /**
         * Gets the Azure default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Azure)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Azure));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Azure);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Beige", {
        /**
         * Gets the Beige default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Beige)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Beige));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Beige);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Bisque", {
        /**
         * Gets the Bisque default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Bisque)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Bisque));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Bisque);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Black", {
        /**
         * Gets the Black default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Black)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Black));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Black);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "BlanchedAlmond", {
        /**
         * Gets the BlanchedAlmond default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlanchedAlmond)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlanchedAlmond));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlanchedAlmond);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Blue", {
        /**
         * Gets the Blue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Blue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Blue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Blue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "BlueViolet", {
        /**
         * Gets the BlueViolet default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlueViolet)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlueViolet));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlueViolet);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Brown", {
        /**
         * Gets the Brown default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Brown)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Brown));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Brown);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "BurlyWood", {
        /**
         * Gets the BurlyWood default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BurlyWood)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BurlyWood));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BurlyWood);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "CadetBlue", {
        /**
         * Gets the CadetBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CadetBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CadetBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CadetBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Chartreuse", {
        /**
         * Gets the Chartreuse default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chartreuse)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chartreuse));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chartreuse);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Chocolate", {
        /**
         * Gets the Chocolate default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chocolate)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chocolate));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chocolate);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Coral", {
        /**
         * Gets the Coral default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Coral)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Coral));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Coral);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "CornflowerBlue", {
        /**
         * Gets the CornflowerBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CornflowerBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CornflowerBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CornflowerBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Cornsilk", {
        /**
         * Gets the Corn silk default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cornsilk)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cornsilk));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cornsilk);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Crimson", {
        /**
         *  Gets the Crimson default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Crimson)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Crimson));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Crimson);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Cyan", {
        /**
         * Gets the Cyan default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cyan)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cyan));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cyan);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkBlue", {
        /**
         * Gets the DarkBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkCyan", {
        /**
         * Gets the DarkCyan default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkCyan)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkCyan));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkCyan);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkGoldenrod", {
        /**
         * Gets the DarkGoldenrod default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGoldenrod)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGoldenrod));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGoldenrod);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkGray", {
        /**
         * Gets the DarkGray default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGray)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGray));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGray);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkGreen", {
        /**
         * Gets the DarkGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkKhaki", {
        /**
         * Gets the DarkKhaki default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkKhaki)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkKhaki));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkKhaki);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkMagenta", {
        /**
         * Gets the DarkMagenta default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkMagenta)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkMagenta));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkMagenta);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkOliveGreen", {
        /**
         * Gets the DarkOliveGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOliveGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOliveGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOliveGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkOrange", {
        /**
         * Gets the DarkOrange default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrange)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrange));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrange);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkOrchid", {
        /**
         * Gets the DarkOrchid default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrchid)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrchid));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrchid);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkRed", {
        /**
         * Gets the DarkRed default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkRed)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkRed));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkRed);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkSalmon", {
        /**
         * Gets the DarkSalmon default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSalmon)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSalmon));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSalmon);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkSeaGreen", {
        /**
         * Gets the DarkSeaGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSeaGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSeaGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSeaGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkSlateBlue", {
        /**
         * Gets the DarkSlateBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkSlateGray", {
        /**
         * Gets the DarkSlateGray default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateGray)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateGray));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateGray);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkTurquoise", {
        /**
         * Gets the DarkTurquoise default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkTurquoise)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkTurquoise));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkTurquoise);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DarkViolet", {
        /**
         * Gets the DarkViolet default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkViolet)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkViolet));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkViolet);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DeepPink", {
        /**
         * Gets the DeepPink default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepPink)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepPink));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepPink);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DeepSkyBlue", {
        /**
         * Gets the DeepSkyBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepSkyBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepSkyBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepSkyBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DimGray", {
        /**
         * Gets the DimGray default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DimGray)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DimGray));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DimGray);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "DodgerBlue", {
        /**
         * Gets the DodgerBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DodgerBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DodgerBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DodgerBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Firebrick", {
        /**
         * Gets the Firebrick default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Firebrick)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Firebrick));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Firebrick);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "FloralWhite", {
        /**
         * Gets the FloralWhite default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].FloralWhite)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].FloralWhite));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].FloralWhite);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "ForestGreen", {
        /**
         * Gets the ForestGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].ForestGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].ForestGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].ForestGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Fuchsia", {
        /**
         * Gets the Fuchsia default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Fuchsia)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Fuchsia));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Fuchsia);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Gainsboro", {
        /**
         * Gets the Gainsborough default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gainsboro)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gainsboro));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gainsboro);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "GhostWhite", {
        /**
         * Gets the GhostWhite default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GhostWhite)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GhostWhite));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GhostWhite);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Gold", {
        /**
         * Gets the Gold default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gold)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gold));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gold);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Goldenrod", {
        /**
         * Gets the Goldenrod default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Goldenrod)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Goldenrod));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Goldenrod);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Gray", {
        /**
         * Gets the Gray default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gray)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gray));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gray);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Green", {
        /**
         * Gets the Green default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Green)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Green));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Green);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "GreenYellow", {
        /**
         * Gets the GreenYellow default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GreenYellow)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GreenYellow));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GreenYellow);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Honeydew", {
        /**
         * Gets the Honeydew default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Honeydew)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Honeydew));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Honeydew);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "HotPink", {
        /**
         * Gets the HotPink default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].HotPink)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].HotPink));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].HotPink);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "IndianRed", {
        /**
         * Gets the IndianRed default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].IndianRed)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].IndianRed));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].IndianRed);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Indigo", {
        /**
         * Gets the Indigo default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Indigo)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Indigo));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Indigo);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Ivory", {
        /**
         * Gets the Ivory default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Ivory)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Ivory));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Ivory);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Khaki", {
        /**
         * Gets the Khaki default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Khaki)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Khaki));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Khaki);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Lavender", {
        /**
         * Gets the Lavender default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lavender)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lavender));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lavender);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LavenderBlush", {
        /**
         * Gets the LavenderBlush default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LavenderBlush)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LavenderBlush));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LavenderBlush);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LawnGreen", {
        /**
         * Gets the LawnGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LawnGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LawnGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LawnGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LemonChiffon", {
        /**
         * Gets the LemonChiffon default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LemonChiffon)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LemonChiffon));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LemonChiffon);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightBlue", {
        /**
         * Gets the LightBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightCoral", {
        /**
         * Gets the LightCoral default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCoral)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCoral));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCoral);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightCyan", {
        /**
         * Gets the LightCyan default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCyan)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCyan));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCyan);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightGoldenrodYellow", {
        /**
         * Gets the LightGoldenrodYellow default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGoldenrodYellow)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGoldenrodYellow));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGoldenrodYellow);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightGray", {
        /**
         * Gets the LightGray default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGray)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGray));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGray);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightGreen", {
        /**
         * Gets the LightGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightPink", {
        /**
         * Gets the LightPink default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightPink)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightPink));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightPink);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightSalmon", {
        /**
         * Gets the LightSalmon default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSalmon)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSalmon));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSalmon);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightSeaGreen", {
        /**
         * Gets the LightSeaGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSeaGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSeaGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSeaGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightSkyBlue", {
        /**
         * Gets the LightSkyBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSkyBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSkyBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSkyBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightSlateGray", {
        /**
         * Gets the LightSlateGray default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSlateGray)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSlateGray));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSlateGray);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightSteelBlue", {
        /**
         * Gets the LightSteelBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSteelBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSteelBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSteelBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LightYellow", {
        /**
         * Gets the LightYellow default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightYellow)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightYellow));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightYellow);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Lime", {
        /**
         * Gets the Lime default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lime)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lime));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lime);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "LimeGreen", {
        /**
         * Gets the LimeGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LimeGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LimeGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LimeGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Linen", {
        /**
         * Gets the Linen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Linen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Linen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Linen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Magenta", {
        /**
         * Gets the Magenta default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Magenta)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Magenta));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Magenta);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Maroon", {
        /**
         * Gets the Maroon default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Maroon)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Maroon));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Maroon);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumAquamarine", {
        /**
         * Gets the MediumAquamarine default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumAquamarine)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumAquamarine));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumAquamarine);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumBlue", {
        /**
         * Gets the MediumBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumOrchid", {
        /**
         * Gets the MediumOrchid default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumOrchid)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumOrchid));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumOrchid);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumPurple", {
        /**
         * Gets the MediumPurple default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumPurple)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumPurple));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumPurple);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumSeaGreen", {
        /**
         * Gets the MediumSeaGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSeaGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSeaGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSeaGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumSlateBlue", {
        /**
         * Gets the MediumSlateBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSlateBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSlateBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSlateBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumSpringGreen", {
        /**
         * Gets the MediumSpringGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSpringGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSpringGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSpringGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumTurquoise", {
        /**
         * Gets the MediumTurquoise default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumTurquoise)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumTurquoise));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumTurquoise);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MediumVioletRed", {
        /**
         * Gets the MediumVioletRed default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumVioletRed)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumVioletRed));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumVioletRed);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MidnightBlue", {
        /**
         * Gets the MidnightBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MidnightBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MidnightBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MidnightBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MintCream", {
        /**
         * Gets the MintCream default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MintCream)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MintCream));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MintCream);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "MistyRose", {
        /**
         * Gets the MistyRose default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MistyRose)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MistyRose));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MistyRose);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Moccasin", {
        /**
         * Gets the Moccasin default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Moccasin)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Moccasin));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Moccasin);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "NavajoWhite", {
        /**
         * Gets the NavajoWhite default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].NavajoWhite)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].NavajoWhite));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].NavajoWhite);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Navy", {
        /**
         * Gets the Navy default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Navy)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Navy));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Navy);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "OldLace", {
        /**
         * Gets the OldLace default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OldLace)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OldLace));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OldLace);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Olive", {
        /**
         * Gets the Olive default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Olive)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Olive));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Olive);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "OliveDrab", {
        /**
         * Gets the OliveDrab default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OliveDrab)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OliveDrab));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OliveDrab);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Orange", {
        /**
         * Gets the Orange default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orange)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orange));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orange);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "OrangeRed", {
        /**
         * Gets the OrangeRed default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OrangeRed)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OrangeRed));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OrangeRed);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Orchid", {
        /**
         * Gets the Orchid default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orchid)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orchid));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orchid);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "PaleGoldenrod", {
        /**
         * Gets the PaleGoldenrod default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGoldenrod)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGoldenrod));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGoldenrod);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "PaleGreen", {
        /**
         * Gets the PaleGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "PaleTurquoise", {
        /**
         * Gets the PaleTurquoise default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleTurquoise)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleTurquoise));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleTurquoise);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "PaleVioletRed", {
        /**
         * Gets the PaleVioletRed default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleVioletRed)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleVioletRed));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleVioletRed);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "PapayaWhip", {
        /**
         * Gets the PapayaWhip default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PapayaWhip)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PapayaWhip));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PapayaWhip);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "PeachPuff", {
        /**
         * Gets the PeachPuff default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PeachPuff)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PeachPuff));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PeachPuff);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Peru", {
        /**
         * Gets the Peru default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Peru)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Peru));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Peru);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Pink", {
        /**
         * Gets the Pink default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Pink)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Pink));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Pink);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Plum", {
        /**
         * Gets the Plum default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Plum)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Plum));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Plum);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "PowderBlue", {
        /**
         * Gets the PowderBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PowderBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PowderBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PowderBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Purple", {
        /**
         * Gets the Purple default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Purple)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Purple));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Purple);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Red", {
        /**
         * Gets the Red default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Red)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Red));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Red);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "RosyBrown", {
        /**
         * Gets the RosyBrown default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RosyBrown)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RosyBrown));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RosyBrown);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "RoyalBlue", {
        /**
         * Gets the RoyalBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RoyalBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RoyalBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RoyalBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SaddleBrown", {
        /**
         * Gets the SaddleBrown default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SaddleBrown)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SaddleBrown));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SaddleBrown);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Salmon", {
        /**
         * Gets the Salmon default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Salmon)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Salmon));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Salmon);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SandyBrown", {
        /**
         * Gets the SandyBrown default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SandyBrown)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SandyBrown));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SandyBrown);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SeaGreen", {
        /**
         * Gets the SeaGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SeaShell", {
        /**
         * Gets the SeaShell default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaShell)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaShell));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaShell);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Sienna", {
        /**
         * Gets the Sienna default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Sienna)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Sienna));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Sienna);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Silver", {
        /**
         * Gets the Silver default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Silver)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Silver));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Silver);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SkyBlue", {
        /**
         * Gets the SkyBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SkyBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SkyBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SkyBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SlateBlue", {
        /**
         * Gets the SlateBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SlateGray", {
        /**
         * Gets the SlateGray default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateGray)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateGray));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateGray);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Snow", {
        /**
         * Gets the Snow default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Snow)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Snow));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Snow);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SpringGreen", {
        /**
         * Gets the SpringGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SpringGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SpringGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SpringGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "SteelBlue", {
        /**
         * Gets the SteelBlue default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SteelBlue)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SteelBlue));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SteelBlue);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Tan", {
        /**
         * Gets the Tan default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tan)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tan));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tan);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Teal", {
        /**
         * Gets the Teal default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Teal)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Teal));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Teal);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Thistle", {
        /**
         * Gets the Thistle default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Thistle)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Thistle));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Thistle);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Tomato", {
        /**
         * Gets the Tomato default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tomato)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tomato));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tomato);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Transparent", {
        /**
         * Gets the Transparent default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Transparent)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Transparent));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Transparent);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Turquoise", {
        /**
         * Gets the Turquoise default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Turquoise)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Turquoise));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Turquoise);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Violet", {
        /**
         * Gets the Violet default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Violet)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Violet));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Violet);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Wheat", {
        /**
         * Gets the Wheat default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Wheat)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Wheat));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Wheat);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "White", {
        /**
         * Gets the White default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].White)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].White));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].White);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "WhiteSmoke", {
        /**
         * Gets the WhiteSmoke default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].WhiteSmoke)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].WhiteSmoke));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].WhiteSmoke);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "Yellow", {
        /**
         * Gets the Yellow default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Yellow)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Yellow));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Yellow);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBrushes, "YellowGreen", {
        /**
         * Gets the YellowGreen default brush.
         * @public
         */
        get: function () {
            var brush = null;
            if (this.sBrushes.containsKey(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].YellowGreen)) {
                brush = (this.sBrushes.getValue(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].YellowGreen));
            }
            if ((brush == null)) {
                brush = this.getBrush(_enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].YellowGreen);
            }
            return brush;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the brush.
     */
    PdfBrushes.getBrush = function (colorName) {
        var pdfColor = this.getColorValue(colorName);
        var brush = new _pdf_solid_brush__WEBPACK_IMPORTED_MODULE_3__["PdfSolidBrush"](pdfColor);
        this.sBrushes.setValue(colorName, brush);
        return brush;
    };
    /**
     * Get the color value.
     * @param colorName The KnownColor name.
     */
    /* tslint:disable */
    PdfBrushes.getColorValue = function (colorName) {
        var color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"]();
        switch (colorName) {
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Transparent:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](0, 255, 255, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AliceBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 240, 248, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].AntiqueWhite:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 250, 235, 215);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aqua:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 255, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Aquamarine:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 127, 255, 212);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Azure:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 240, 255, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Beige:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 245, 245, 220);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Bisque:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 228, 196);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Black:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 0, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlanchedAlmond:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 235, 205);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Blue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 0, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BlueViolet:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 138, 43, 226);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Brown:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 165, 42, 42);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].BurlyWood:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 222, 184, 135);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CadetBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 95, 158, 160);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chartreuse:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 127, 255, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Chocolate:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 210, 105, 30);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Coral:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 127, 80);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].CornflowerBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 100, 149, 237);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cornsilk:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 248, 220);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Crimson:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 220, 20, 60);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Cyan:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 255, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 0, 139);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkCyan:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 139, 139);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGoldenrod:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 184, 134, 11);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGray:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 169, 169, 169);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 100, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkKhaki:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 189, 183, 107);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkMagenta:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 139, 0, 139);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOliveGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 85, 107, 47);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrange:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 140, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkOrchid:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 153, 50, 204);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkRed:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 139, 0, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSalmon:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 233, 150, 122);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSeaGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 143, 188, 139);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 72, 61, 139);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkSlateGray:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 47, 79, 79);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkTurquoise:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 206, 209);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DarkViolet:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 148, 0, 211);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepPink:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 20, 147);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DeepSkyBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 191, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DimGray:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 105, 105, 105);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].DodgerBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 30, 144, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Firebrick:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 178, 34, 34);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].FloralWhite:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 250, 240);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].ForestGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 34, 139, 34);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Fuchsia:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 0, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gainsboro:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 220, 220, 220);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GhostWhite:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 248, 248, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gold:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 215, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Goldenrod:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 218, 165, 32);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Gray:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 128, 128, 128);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Green:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 128, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].GreenYellow:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 173, 255, 47);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Honeydew:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 240, 255, 240);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].HotPink:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 105, 180);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].IndianRed:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 205, 92, 92);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Indigo:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 75, 0, 130);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Ivory:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 255, 240);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Khaki:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 240, 230, 140);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lavender:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 230, 230, 250);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LavenderBlush:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 240, 245);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LawnGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 124, 252, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LemonChiffon:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 250, 205);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 173, 216, 230);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCoral:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 240, 128, 128);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightCyan:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 224, 255, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGoldenrodYellow:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 250, 250, 210);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 144, 238, 144);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightGray:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 211, 211, 211);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightPink:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 182, 193);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSalmon:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 160, 122);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSeaGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 32, 178, 170);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSkyBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 135, 206, 250);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSlateGray:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 119, 136, 153);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightSteelBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 176, 196, 222);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LightYellow:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 255, 224);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Lime:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 255, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].LimeGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 50, 205, 50);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Linen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 250, 240, 230);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Magenta:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 0, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Maroon:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 128, 0, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumAquamarine:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 102, 205, 170);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 0, 205);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumOrchid:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 186, 85, 211);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumPurple:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 147, 112, 219);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSeaGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 60, 179, 113);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSlateBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 123, 104, 238);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumSpringGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 250, 154);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumTurquoise:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 72, 209, 204);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MediumVioletRed:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 199, 21, 133);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MidnightBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 25, 25, 112);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MintCream:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 245, 255, 250);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].MistyRose:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 228, 225);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Moccasin:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 228, 181);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].NavajoWhite:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 222, 173);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Navy:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 0, 128);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OldLace:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 253, 245, 230);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Olive:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 128, 128, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OliveDrab:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 107, 142, 35);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orange:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 165, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].OrangeRed:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 69, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Orchid:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 218, 112, 214);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGoldenrod:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 238, 232, 170);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 152, 251, 152);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleTurquoise:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 175, 238, 238);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PaleVioletRed:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 219, 112, 147);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PapayaWhip:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 239, 213);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PeachPuff:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 218, 185);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Peru:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 205, 133, 63);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Pink:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 192, 203);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Plum:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 221, 160, 221);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].PowderBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 176, 224, 230);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Purple:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 128, 0, 128);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Red:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 0, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RosyBrown:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 188, 143, 143);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].RoyalBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 65, 105, 225);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SaddleBrown:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 139, 69, 19);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Salmon:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 250, 128, 114);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SandyBrown:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 244, 164, 96);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 46, 139, 87);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SeaShell:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 245, 238);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Sienna:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 160, 82, 45);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Silver:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 192, 192, 192);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SkyBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 135, 206, 235);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 106, 90, 205);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SlateGray:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 112, 128, 144);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Snow:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 250, 250);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SpringGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 255, 127);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].SteelBlue:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 70, 130, 180);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tan:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 210, 180, 140);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Teal:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 0, 128, 128);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Thistle:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 216, 191, 216);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Tomato:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 99, 71);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Turquoise:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 64, 224, 208);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Violet:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 238, 130, 238);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Wheat:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 245, 222, 179);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].White:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 255, 255);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].WhiteSmoke:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 245, 245, 245);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].Yellow:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 255, 255, 0);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["KnownColor"].YellowGreen:
                color = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](255, 154, 205, 50);
                break;
        }
        return color;
    };
    //Static Fields
    /**
     * Local variable to store the brushes.
     */
    PdfBrushes.sBrushes = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
    return PdfBrushes;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-color-blend.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-color-blend.js ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: PdfColorBlend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfColorBlend", function() { return PdfColorBlend; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _general_functions_pdf_sampled_function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../general/functions/pdf-sampled-function */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-sampled-function.js");
/* harmony import */ var _pdf_blend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-blend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-blend.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfColorBlend.ts class for EJ2-PDF
 */



/**
 * `PdfColorBlend` Represents the arrays of colors and positions used for
 *  interpolating color blending in a multicolor gradient.
 * @private
 */
var PdfColorBlend = /** @class */ (function (_super) {
    __extends(PdfColorBlend, _super);
    function PdfColorBlend(count) {
        var _this = _super.call(this) || this;
        if (typeof count === 'number') {
            _this = _super.call(this, count) || this;
        }
        return _this;
    }
    Object.defineProperty(PdfColorBlend.prototype, "colors", {
        //Properties
        /**
         * Gets or sets the array of colors.
         * @public
         */
        get: function () {
            return this.mcolors;
        },
        set: function (value) {
            if ((value == null)) {
                throw new Error('ArgumentNullException : Colors');
            }
            this.mcolors = value;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * Gets the function.
     * @param colorSpace The color space.
     * @public
     */
    PdfColorBlend.prototype.getFunction = function (colorSpace) {
        var domain = [0, 1];
        var colourComponents = this.getColorComponentsCount(colorSpace);
        var maxComponentValue = this.getMaxComponentValue(colorSpace);
        var range = this.setRange(colourComponents, maxComponentValue);
        var func = null;
        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {
            var sizes = [1];
            var samplesCount = void 0;
            var step = 1;
            if (this.positions.length === 2) {
                samplesCount = 2;
            }
            else {
                var positions = this.positions;
                var intervals = this.getIntervals(positions);
                var gcd = this.gcd(intervals);
                step = gcd;
                samplesCount = (((1 / gcd)) + 1);
            }
            sizes[0] = samplesCount;
            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);
            func = new _general_functions_pdf_sampled_function__WEBPACK_IMPORTED_MODULE_1__["PdfSampledFunction"](domain, range, sizes, samples);
            return func;
        }
        return func;
    };
    /**
     * 'cloneColorBlend' Clones this instance.
     * @public
     */
    PdfColorBlend.prototype.cloneColorBlend = function () {
        var cBlend = this;
        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {
            cBlend.colors = (this.mcolors);
        }
        if ((this.positions != null && typeof this.positions !== 'undefined')) {
            cBlend.positions = (this.positions);
        }
        return cBlend;
    };
    /**
     * Sets the range.
     * @param colourComponents The colour components.
     * @param maxValue The max value.
     */
    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {
        var range = [(colourComponents * 2)];
        for (var i = 0; (i < colourComponents); ++i) {
            range[(i * 2)] = 0;
            range[((i * 2) + 1)] = 1;
        }
        return range;
    };
    /**
     * Calculates the color components count according to colour space.
     * @param colorSpace The color space.
     */
    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {
        var count = 0;
        switch (colorSpace) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb:
                count = 3;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Cmyk:
                count = 4;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].GrayScale:
                count = 1;
                break;
            default:
                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');
        }
        return count;
    };
    /**
     * Gets samples values for specified colour space.
     * @param colorSpace The color space.
     * @param sampleCount The sample count.
     * @param maxComponentValue The max component value.
     * @param step The step.
     */
    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {
        var values;
        switch (colorSpace) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].GrayScale:
                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Cmyk:
                values = this.getCmykSamples(sampleCount, maxComponentValue, step);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb:
                values = this.getRgbSamples(sampleCount, maxComponentValue, step);
                break;
            default:
                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');
        }
        return values;
    };
    /**
     * Gets the grayscale samples.
     * @param sampleCount The sample count.
     * @param maxComponentValue The max component value.
     * @param step The step.
     */
    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {
        var values = [(sampleCount * 2)];
        for (var i = 0; (i < sampleCount); ++i) {
            var color = this.getNextColor(i, step, _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].GrayScale);
            var index = (i * 2);
        }
        return values;
    };
    /**
     * Gets the RGB samples.
     * @param sampleCount The sample count.
     * @param maxComponentValue The max component value.
     * @param step The step.
     */
    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {
        var values = [(sampleCount * 3)];
        for (var i = 0; (i < sampleCount); ++i) {
            var color = this.getNextColor(i, step, _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb);
            var index = (i * 3);
            values[index] = color.r;
            values[(index + 1)] = color.g;
            values[(index + 2)] = color.b;
        }
        return values;
    };
    /**
     * Gets the CMYK samples.
     * @param sampleCount The sample count.
     * @param maxComponentValue The max component value.
     * @param step The step.
     */
    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {
        var values = [(sampleCount * 4)];
        for (var i = 0; (i < sampleCount); i++) {
            var color = this.getNextColor(i, step, _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Cmyk);
            var index = (i * 4);
            values[index] = ((color.c * maxComponentValue));
            values[(index + 1)] = ((color.m * maxComponentValue));
            values[(index + 2)] = ((color.y * maxComponentValue));
            values[(index + 3)] = ((color.k * maxComponentValue));
        }
        return values;
    };
    /**
     * Calculates the color that should be at the specified index.
     * @param index The index.
     * @param step The step.
     * @param colorSpace The color space.
     */
    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {
        var position = (step * index);
        var indexHi;
        var indexLow;
        var result = this.getIndices(position, indexLow, indexHi);
        indexLow = result.indexLow;
        indexHi = result.indexHi;
        var color;
        if (indexLow === indexHi) {
            color = this.mcolors[indexLow];
        }
        else {
            var positionLow = this.positions[indexLow];
            var positionHi = this.positions[indexHi];
            var colorLow = this.mcolors[indexLow];
            var colorHi = this.mcolors[indexHi];
            var t = ((position - positionLow) / (positionHi - positionLow));
            color = this.interpolate(t, colorLow, colorHi, colorSpace);
        }
        return color;
    };
    /**
     * Gets the indices.
     * @param position The position.
     * @param indexLow The index low.
     * @param indexHi The index hi.
     */
    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {
        var positions = this.positions;
        indexLow = 0;
        indexHi = 0;
        for (var i = 0; (i < this.mcolors.length); ++i) {
            var currPos = positions[i];
            if ((currPos === position)) {
                indexHi = i;
                indexLow = i;
                break;
            }
            else if ((currPos > position)) {
                indexHi = i;
                break;
            }
            indexLow = i;
            indexHi = i;
        }
        return { indexLow: indexLow, indexHi: indexHi };
    };
    /**
     * Calculates the max component value.
     * @param colorSpace The color space.
     */
    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {
        var result = 0;
        switch (colorSpace) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Cmyk:
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb:
                result = 255;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].GrayScale:
                result = 65535;
                break;
            default:
                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');
        }
        return result;
    };
    /**
     * Gets an intervals array from the positions array.
     * @param positions The positions array.
     */
    PdfColorBlend.prototype.getIntervals = function (positions) {
        var count = positions.length;
        var intervals = [(count - 1)];
        var prev = positions[0];
        for (var i = 1; (i < count); ++i) {
            var v = positions[i];
            intervals[(i - 1)] = (v - prev);
            prev = v;
        }
        return intervals;
    };
    return PdfColorBlend;
}(_pdf_blend__WEBPACK_IMPORTED_MODULE_2__["PdfBlend"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js":
/*!**************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js ***!
  \**************************************************************************************************************************************************************/
/*! exports provided: PdfGradientBrush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGradientBrush", function() { return PdfGradientBrush; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _pdf_brush__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../primitives/pdf-boolean */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-boolean.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();










/**
 * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,
 * ellipses, pies, polygons, and paths.
 * @private
 */
var PdfGradientBrush = /** @class */ (function (_super) {
    __extends(PdfGradientBrush, _super);
    //Constructor
    /**
     * Initializes a new instance of the `PdfGradientBrush` class.
     * @public
     */
    /* tslint:disable-next-line:max-line-length */
    function PdfGradientBrush(shading) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Local variable to store the background color.
         * @private
         */
        _this.mbackground = new _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"](255, 255, 255);
        /**
         * Local variable to store the stroking color.
         * @private
         */
        _this.mbStroking = false;
        /**
         * Local variable to store the function.
         * @private
         */
        _this.mfunction = null;
        /**
         * Local variable to store the DictionaryProperties.
         * @private
         */
        _this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_4__["DictionaryProperties"]();
        _this.mpatternDictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["PdfDictionary"]();
        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_7__["PdfName"](_this.dictionaryProperties.pattern));
        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_8__["PdfNumber"](2));
        _this.shading = shading;
        _this.colorSpace = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb;
        return _this;
    }
    Object.defineProperty(PdfGradientBrush.prototype, "background", {
        //Properties
        /**
         * Gets or sets the background color of the brush.
         * @public
         */
        get: function () {
            return this.mbackground;
        },
        set: function (value) {
            this.mbackground = value;
            var sh = this.shading;
            if (value.isEmpty) {
                sh.remove(this.dictionaryProperties.background);
            }
            else {
                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "antiAlias", {
        /**
         * Gets or sets a value indicating whether use anti aliasing algorithm.
         * @public
         */
        get: function () {
            var sh = this.shading;
            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));
            return aa.value;
        },
        set: function (value) {
            var sh = this.shading;
            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));
            if ((aa == null && typeof aa === 'undefined')) {
                aa = new _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__["PdfBoolean"](value);
                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);
            }
            else {
                aa.value = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "function", {
        /**
         * Gets or sets the function of the brush.
         * @protected
         */
        get: function () {
            return this.mfunction;
        },
        set: function (value) {
            this.mfunction = value;
            if (value != null && typeof value !== 'undefined') {
                this.shading.items.setValue(this.dictionaryProperties.function, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_9__["PdfReferenceHolder"](this.mfunction));
            }
            else {
                this.shading.remove(this.dictionaryProperties.function);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "bBox", {
        /**
         * Gets or sets the boundary box of the brush.
         * @protected
         */
        get: function () {
            var sh = this.shading;
            var box = (sh.items.getValue(this.dictionaryProperties.bBox));
            return box;
        },
        set: function (value) {
            var sh = this.shading;
            if (value == null && typeof value === 'undefined') {
                sh.remove(this.dictionaryProperties.bBox);
            }
            else {
                sh.items.setValue(this.dictionaryProperties.bBox, value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "colorSpace", {
        /**
         * Gets or sets the color space of the brush.
         * @public
         */
        get: function () {
            return this.mcolorSpace;
        },
        set: function (value) {
            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);
            if ((value !== this.mcolorSpace) || (colorSpace == null)) {
                this.mcolorSpace = value;
                var csValue = this.colorSpaceToDeviceName(value);
                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_7__["PdfName"](csValue));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "stroking", {
        /**
         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.
         * @public
         */
        get: function () {
            return this.mbStroking;
        },
        set: function (value) {
            this.mbStroking = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "patternDictionary", {
        /**
         * Gets the pattern dictionary.
         * @protected
         */
        get: function () {
            if (this.mpatternDictionary == null) {
                this.mpatternDictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["PdfDictionary"]();
            }
            return this.mpatternDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "shading", {
        /**
         * Gets or sets the shading dictionary.
         * @protected
         */
        get: function () {
            return this.mshading;
        },
        set: function (value) {
            if (value == null) {
                throw new Error('ArgumentNullException : Shading');
            }
            if (value !== this.mshading) {
                this.mshading = value;
                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_9__["PdfReferenceHolder"](this.mshading));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGradientBrush.prototype, "matrix", {
        /**
         * Gets or sets the transformation matrix.
         * @public
         */
        get: function () {
            return this.mmatrix;
        },
        set: function (value) {
            if (value == null) {
                throw new Error('ArgumentNullException : Matrix');
            }
            if (value !== this.mmatrix) {
                this.mmatrix = value.clone();
                var m = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_6__["PdfArray"](this.mmatrix.matrix.elements);
                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);
            }
        },
        enumerable: true,
        configurable: true
    });
    //Overrides
    /**
     * Monitors the changes of the brush and modify PDF state respectfully.
     * @param brush The brush.
     * @param streamWriter The stream writer.
     * @param getResources The get resources delegate.
     * @param saveChanges if set to true the changes should be saved anyway.
     * @param currentColorSpace The current color space.
     */
    /* tslint:disable-next-line:max-line-length */
    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {
        var diff = false;
        if (brush instanceof PdfGradientBrush) {
            if ((this.colorSpace !== currentColorSpace)) {
                this.colorSpace = currentColorSpace;
                this.resetFunction();
            }
            //  Set the /Pattern colour space.
            streamWriter.setColorSpace('Pattern', this.mbStroking);
            //  Set the pattern for non-stroking operations.
            var resources = getResources.getResources();
            var name_1 = resources.getName(this);
            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);
            diff = true;
        }
        return diff;
    };
    /**
     * Resets the changes, which were made by the brush.
     * In other words resets the state to the initial one.
     * @param streamWriter The stream writer.
     */
    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {
        //  Unable reset.
    };
    //Implementation
    /**
     * Converts colorspace enum to a PDF name.
     * @param colorSpace The color space enum value.
     */
    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {
        var result;
        switch (colorSpace) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb:
                result = 'DeviceRGB';
                break;
        }
        return result;
    };
    /**
     * Resets the pattern dictionary.
     * @param dictionary A new pattern dictionary.
     */
    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {
        this.mpatternDictionary = dictionary;
    };
    /**
     * Clones the anti aliasing value.
     * @param brush The brush.
     */
    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {
        if ((brush == null)) {
            throw new Error('ArgumentNullException : brush');
        }
        var sh = this.shading;
        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));
        if ((aa != null)) {
            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__["PdfBoolean"](aa.value));
        }
    };
    /**
     * Clones the background value.
     * @param brush The brush.
     */
    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {
        var background = this.background;
        if (!background.isEmpty) {
            brush.background = background;
        }
    };
    Object.defineProperty(PdfGradientBrush.prototype, "element", {
        /* tslint:enable */
        // IPdfWrapper Members
        /**
         * Gets the `element`.
         * @private
         */
        get: function () {
            return this.patternDictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGradientBrush;
}(_pdf_brush__WEBPACK_IMPORTED_MODULE_2__["PdfBrush"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-linear-gradient-brush.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-linear-gradient-brush.js ***!
  \*********************************************************************************************************************************************************************/
/*! exports provided: PdfLinearGradientBrush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLinearGradientBrush", function() { return PdfLinearGradientBrush; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../primitives/pdf-boolean */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-boolean.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _pdf_color_blend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pdf-color-blend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-color-blend.js");
/* harmony import */ var _pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pdf-gradient-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/enum.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfLinearGradientBrush.ts class for EJ2-PDF
 */











/**
 * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.
 * @private
 */
var PdfLinearGradientBrush = /** @class */ (function (_super) {
    __extends(PdfLinearGradientBrush, _super);
    /**
     * Initializes a new instance of the `PdfLinearGradientBrush` class.
     * @public
     */
    /* tslint:disable-next-line:max-line-length */
    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {
        var _this = _super.call(this, new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["PdfDictionary"]()) || this;
        /**
         * Local variable to store the dictionary properties.
         * @private
         */
        _this.mDictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_4__["DictionaryProperties"]();
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && arg3 instanceof _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"] && arg4 instanceof _pdf_color__WEBPACK_IMPORTED_MODULE_1__["PdfColor"]) {
            _this.initialize(arg3, arg4);
            _this.mPointStart = arg1;
            _this.mPointEnd = arg2;
            _this.setPoints(_this.mPointStart, _this.mPointEnd);
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["Rectangle"]) {
            _this.initialize(arg2, arg3);
            /* tslint:disable-next-line:max-line-length */
            if ((arg4 === _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].BackwardDiagonal || arg4 === _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].ForwardDiagonal || arg4 === _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].Horizontal || arg4 === _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].Vertical)) {
                _this.mBoundaries = arg1;
                switch (arg4) {
                    case _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].BackwardDiagonal:
                        _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.right, arg1.top);
                        _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.bottom);
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].ForwardDiagonal:
                        _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.top);
                        _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.right, arg1.bottom);
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].Horizontal:
                        _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.top);
                        _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.right, arg1.top);
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_10__["PdfLinearGradientMode"].Vertical:
                        _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.top);
                        _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.bottom);
                        break;
                    default:
                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');
                }
                _this.setPoints(_this.mPointStart, _this.mPointEnd);
            }
            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {
                _this.mBoundaries = arg1;
                arg4 = arg4 % 360;
                if ((arg4 === 0)) {
                    _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.top);
                    _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.right, arg1.top);
                }
                else if ((arg4 === 90)) {
                    _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.top);
                    _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.bottom);
                }
                else if ((arg4 === 180)) {
                    _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.top);
                    _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.right, arg1.top);
                }
                else if ((arg4 === 270)) {
                    _this.mPointEnd = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.top);
                    _this.mPointStart = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](arg1.left, arg1.bottom);
                }
                else {
                    var d2r = (Math.PI / 180);
                    var radAngle = (arg4 * d2r);
                    var k = Math.tan(radAngle);
                    var x = (_this.mBoundaries.left
                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));
                    var y = (_this.mBoundaries.top
                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));
                    var centre = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](x, y);
                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));
                    y = ((k * x));
                    x = (x + centre.x);
                    y = (y + centre.y);
                    var p1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](x, y);
                    var cp1 = _this.subPoints(p1, centre);
                    //  P1 - P0
                    var p = _this.choosePoint(arg4);
                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)
                        / _this.mulPoints(cp1, cp1));
                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));
                    //  Parametric line equation.
                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));
                }
                _this.setPoints(_this.mPointEnd, _this.mPointStart);
            }
        }
        return _this;
    }
    /**
     * Initializes a new instance of the `PdfLinearGradientBrush` class.
     * @param color1 The starting color of the gradient.
     * @param color2 The end color of the gradient.
     */
    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {
        this.mColours = [color1, color2];
        this.mColourBlend = new _pdf_color_blend__WEBPACK_IMPORTED_MODULE_8__["PdfColorBlend"](2);
        this.mColourBlend.positions = [0, 1];
        this.mColourBlend.colors = this.mColours;
        this.initShading();
    };
    Object.defineProperty(PdfLinearGradientBrush.prototype, "blend", {
        //Properties
        /**
         * Gets or sets a PdfBlend that specifies positions
         * and factors that define a custom falloff for the gradient.
         * @public
         */
        get: function () {
            return this.mBlend;
        },
        set: function (value) {
            if ((value == null)) {
                throw new Error('ArgumentNullException : Blend');
            }
            if ((this.mColours == null)) {
                throw new Error('NotSupportedException : There is no starting and ending colours specified.');
            }
            this.mBlend = value;
            //  TODO: generate correct colour blend.
            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);
            this.resetFunction();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLinearGradientBrush.prototype, "interpolationColors", {
        /**
         * Gets or sets a ColorBlend that defines a multicolor linear gradient.
         * @public
         */
        get: function () {
            return this.mColourBlend;
        },
        set: function (value) {
            if ((value == null)) {
                throw new Error('ArgumentNullException : InterpolationColors');
            }
            this.mBlend = null;
            this.mColours = null;
            this.mColourBlend = value;
            this.resetFunction();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLinearGradientBrush.prototype, "linearColors", {
        /**
         * Gets or sets the starting and ending colors of the gradient.
         * @public
         */
        get: function () {
            return this.mColours;
        },
        set: function (value) {
            if ((value == null)) {
                throw new Error('ArgumentNullException : LinearColors');
            }
            if ((value.length < 2)) {
                throw new Error('ArgumentException : The array is too small - LinearColors');
            }
            if ((this.mColours == null && typeof this.mColours === 'undefined')) {
                this.mColours = [value[0], value[1]];
            }
            else {
                this.mColours[0] = value[0];
                this.mColours[1] = value[1];
            }
            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {
                //  Set correct colour blend.
                this.mColourBlend = new _pdf_color_blend__WEBPACK_IMPORTED_MODULE_8__["PdfColorBlend"](2);
                this.mColourBlend.colors = this.mColours;
                this.mColourBlend.positions = [0, 1];
            }
            else {
                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);
            }
            this.resetFunction();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLinearGradientBrush.prototype, "rectangle", {
        /**
         * Gets a rectangular region that defines the boundaries of the gradient.
         * @public
         */
        get: function () {
            return this.mBoundaries;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLinearGradientBrush.prototype, "extend", {
        /**
         * Gets or sets the value indicating whether the gradient should extend starting and ending points.
         * @public
         */
        get: function () {
            var result = _enum__WEBPACK_IMPORTED_MODULE_10__["PdfExtend"].None;
            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));
            if ((extend != null)) {
                var extStart = (extend.items(0));
                var extEnd = (extend.items(1));
                if (extStart.value) {
                    result = (result | _enum__WEBPACK_IMPORTED_MODULE_10__["PdfExtend"].Start);
                }
                if (extEnd.value) {
                    result = (result | _enum__WEBPACK_IMPORTED_MODULE_10__["PdfExtend"].End);
                }
            }
            return result;
        },
        set: function (value) {
            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));
            var extStart;
            var extEnd;
            if ((extend == null)) {
                extStart = new _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__["PdfBoolean"](false);
                extEnd = new _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__["PdfBoolean"](false);
                extend = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_6__["PdfArray"]();
                extend.add(extStart);
                extend.add(extEnd);
                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);
            }
            else {
                extStart = (extend.items(0));
                extEnd = (extend.items(1));
            }
            // extStart.value = ((value && PdfExtend.Start) > 0);
            // extEnd.value = ((value && PdfExtend.End) > 0);
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * Adds two points to each other.
     * @param point1 The point1.
     * @param point2 The point2.
     */
    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {
        var x = (point1.x + point2.x);
        var y = (point1.y + point2.y);
        var result = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](x, y);
        return result;
    };
    /**
     * Subs the second point from the first one.
     * @param point1 The point1.
     * @param point2 The point2.
     */
    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {
        var x = (point1.x - point2.x);
        var y = (point1.y - point2.y);
        var result = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](x, y);
        return result;
    };
    /**
     * Makes scalar multiplication of two points.
     * @param point1 The point1.
     * @param point2 The point2.
     */
    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {
        var result = ((point1.x * point2.x) + (point1.y * point2.y));
        return result;
    };
    /**
     * Multiplies the point by the value specified.
     * @param point The point1.
     * @param value The value.
     */
    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {
        point.x = (point.x * value);
        point.y = (point.y * value);
        return point;
    };
    /**
     * Choose the point according to the angle.
     * @param angle The angle.
     */
    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {
        var point = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](0, 0);
        //  Choose the correct point.
        if ((angle < 90) && (angle > 0)) {
            point = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](this.mBoundaries.right, this.mBoundaries.bottom);
        }
        else if ((angle < 180) && (angle > 90)) {
            point = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](this.mBoundaries.left, this.mBoundaries.bottom);
        }
        else if ((angle < 270) && (angle > 180)) {
            point = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](this.mBoundaries.left, this.mBoundaries.top);
        }
        else if (angle > 270) {
            point = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](this.mBoundaries.right, this.mBoundaries.top);
        }
        else {
            throw new Error('PdfException - Internal error.');
        }
        return point;
    };
    /**
     * Sets the start and end points.
     * @param point1 The point1.
     * @param point2 The point2.
     */
    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {
        var points = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_6__["PdfArray"]();
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_7__["PdfNumber"](point1.x));
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_7__["PdfNumber"](this.updateY(point1.y)));
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_7__["PdfNumber"](point2.x));
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_7__["PdfNumber"](this.updateY(point2.y)));
        this.shading.items.setValue(this.mDictionaryProperties.coords, points);
    };
    /**
     * Updates y co-ordinate.
     * @param y Y co-ordinate..
     */
    PdfLinearGradientBrush.prototype.updateY = function (y) {
        if (y !== 0) {
            return -y;
        }
        else {
            return y;
        }
    };
    //Overrides
    /**
     * Initializes the shading dictionary.
     * @private
     */
    PdfLinearGradientBrush.prototype.initShading = function () {
        this.colorSpace = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb;
        this.function = this.mColourBlend.getFunction(this.colorSpace);
        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_7__["PdfNumber"]((_enum__WEBPACK_IMPORTED_MODULE_10__["ShadingType"].Axial)));
    };
    //Overrides
    /**
     * Creates a new copy of a brush.
     * @public
     */
    PdfLinearGradientBrush.prototype.clone = function () {
        var brush = this;
        brush.resetPatternDictionary(new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["PdfDictionary"](this.patternDictionary));
        brush.shading = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["PdfDictionary"]();
        brush.initShading();
        brush.setPoints(brush.mPointStart, brush.mPointEnd);
        if (brush !== null && brush instanceof PdfLinearGradientBrush) {
            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {
                brush.matrix = this.matrix.clone();
            }
        }
        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {
            brush.mColours = (this.mColours);
        }
        if ((this.blend != null && typeof this.blend !== 'undefined')) {
            brush.blend = this.blend.clonePdfBlend();
        }
        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {
            brush.interpolationColors = this.interpolationColors.cloneColorBlend();
        }
        brush.extend = this.extend;
        this.cloneBackgroundValue(brush);
        this.cloneAntiAliasingValue(brush);
        return brush;
    };
    /**
     * Resets the function.
     * @public
     */
    PdfLinearGradientBrush.prototype.resetFunction = function () {
        this.function = this.mColourBlend.getFunction(this.colorSpace);
    };
    return PdfLinearGradientBrush;
}(_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_9__["PdfGradientBrush"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-radial-gradient-brush.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-radial-gradient-brush.js ***!
  \*********************************************************************************************************************************************************************/
/*! exports provided: PdfRadialGradientBrush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfRadialGradientBrush", function() { return PdfRadialGradientBrush; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../primitives/pdf-boolean */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-boolean.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _pdf_color_blend__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pdf-color-blend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-color-blend.js");
/* harmony import */ var _pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pdf-gradient-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/enum.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfRadialGradientBrush.ts class for EJ2-PDF
 */









/**
 * `PdfRadialGradientBrush` Represent radial gradient brush.
 * @private
 */
var PdfRadialGradientBrush = /** @class */ (function (_super) {
    __extends(PdfRadialGradientBrush, _super);
    //Constructor
    /**
     * Initializes a new instance of the `PdfRadialGradientBrush` class.
     * @public
     */
    /* tslint:disable-next-line:max-line-length */
    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {
        var _this = _super.call(this, new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__["PdfDictionary"]()) || this;
        /**
         * Local varaible to store the dictionary properties.
         */
        _this.mDictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__["DictionaryProperties"]();
        _this.initialize(colorStart, colorEnd);
        if (radiusStart < 0) {
            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');
        }
        if (radiusEnd < 0) {
            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');
        }
        _this.mPointEnd = centerEnd;
        _this.mPointStart = centerStart;
        _this.mRadiusStart = radiusStart;
        _this.mRadiusEnd = radiusEnd;
        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);
        return _this;
    }
    /**
     * Initializes a new instance of the `PdfRadialGradientBrush` class.
     * @param color1 The color1.
     * @param color2 The color2.
     */
    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {
        this.mColour = [color1, color2];
        this.mColourBlends = new _pdf_color_blend__WEBPACK_IMPORTED_MODULE_6__["PdfColorBlend"](2);
        this.mColourBlends.positions = [0, 1];
        this.mColourBlends.colors = this.mColour;
        this.initShading();
    };
    Object.defineProperty(PdfRadialGradientBrush.prototype, "blend", {
        //Properties
        /**
         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.
         * @public
         */
        get: function () {
            return this.mBlend;
        },
        set: function (value) {
            if ((value == null)) {
                throw new Error('ArgumentNullException : Blend');
            }
            if ((this.mColour == null && typeof this.mColour === 'undefined')) {
                throw new Error('NotSupportedException : There is no starting and ending colours specified.');
            }
            this.mBlend = value;
            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);
            this.resetFunction();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfRadialGradientBrush.prototype, "interpolationColors", {
        /**
         * Gets or sets a ColorBlend that defines a multicolor radial gradient.
         * @public
         */
        get: function () {
            return this.mColourBlends;
        },
        set: function (value) {
            if (value == null) {
                throw new Error('ArgumentNullException : InterpolationColors');
            }
            this.mBlend = null;
            this.mColour = null;
            this.mColourBlends = value;
            this.resetFunction();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfRadialGradientBrush.prototype, "linearColors", {
        /**
         * Gets or sets the starting and ending colors of the radial gradient.
         * @public
         */
        get: function () {
            return this.mColour;
        },
        set: function (value) {
            if ((value == null)) {
                throw new Error('ArgumentNullException : radial LinearColors');
            }
            if ((value.length < 2)) {
                throw new Error('ArgumentException : The array is too small LinearColors');
            }
            if ((this.mColour == null && typeof this.mColour === 'undefined')) {
                this.mColour = [value[0], value[1]];
            }
            else {
                this.mColour[0] = value[0];
                this.mColour[1] = value[1];
            }
            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {
                //  Set correct colour blend.
                this.mColourBlends = new _pdf_color_blend__WEBPACK_IMPORTED_MODULE_6__["PdfColorBlend"](2);
                this.mColourBlends.colors = this.mColour;
                this.mColourBlends.positions = [0, 1];
            }
            else {
                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);
            }
            this.resetFunction();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfRadialGradientBrush.prototype, "rectangle", {
        /**
         * Gets or sets the rectangle.
         * @public
         */
        get: function () {
            return this.mBoundaries;
        },
        set: function (value) {
            this.mBoundaries = value;
            this.bBox = _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"].fromRectangle(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfRadialGradientBrush.prototype, "extend", {
        /**
         * Gets or sets the value indicating whether the gradient
         *  should extend starting and ending points.
         * @public
         */
        get: function () {
            var result1 = _enum__WEBPACK_IMPORTED_MODULE_8__["PdfExtend"].None;
            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));
            if (extend1 !== null && typeof extend1 !== 'undefined') {
                var extStart = (extend1.items(0));
                var extEnd = (extend1.items(1));
                if (extStart.value) {
                    result1 = (result1 | _enum__WEBPACK_IMPORTED_MODULE_8__["PdfExtend"].Start);
                }
                if (extEnd.value) {
                    result1 = (result1 | _enum__WEBPACK_IMPORTED_MODULE_8__["PdfExtend"].End);
                }
            }
            return result1;
        },
        set: function (value) {
            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));
            var extStart;
            var extEnd1;
            if (extend == null && typeof extend === 'undefined') {
                extStart = new _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_3__["PdfBoolean"](false);
                extEnd1 = new _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_3__["PdfBoolean"](false);
                extend = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
                extend.add(extStart);
                extend.add(extEnd1);
                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);
            }
            else {
                extStart = (extend.items(0));
                extEnd1 = (extend.items(1));
            }
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * Sets the points.
     * @param pointStart The point start.
     * @param pointEnd The point end.
     * @param radiusStart The radius start.
     * @param radiusEnd The radius end.
     */
    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {
        var points = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](pointStart.x));
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](this.updateY(pointStart.y)));
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](radiusStart));
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](pointEnd.x));
        points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](this.updateY(pointEnd.y)));
        if ((radiusStart !== radiusEnd)) {
            points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](radiusEnd));
        }
        else {
            points.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](0));
        }
        this.shading.items.setValue(this.mDictionaryProperties.coords, points);
    };
    /**
     * Update y co-ordinate.
     * @param y Y co-ordinate.
     */
    PdfRadialGradientBrush.prototype.updateY = function (y) {
        if (y !== 0) {
            return -y;
        }
        else {
            return y;
        }
    };
    /**
     * Initializess the shading dictionary.
     * @private
     */
    PdfRadialGradientBrush.prototype.initShading = function () {
        this.colorSpace = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb;
        this.function = this.mColourBlends.getFunction(this.colorSpace);
        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"]((_enum__WEBPACK_IMPORTED_MODULE_8__["ShadingType"].Radial)));
    };
    //Overrides
    /**
     * Creates a new copy of a brush.
     * @public
     */
    PdfRadialGradientBrush.prototype.clone = function () {
        var rBrush = this;
        rBrush.resetPatternDictionary(new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__["PdfDictionary"](this.patternDictionary));
        rBrush.shading = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__["PdfDictionary"]();
        rBrush.initShading();
        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);
        if (rBrush instanceof PdfRadialGradientBrush) {
            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {
                rBrush.matrix = this.matrix.clone();
            }
        }
        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {
            rBrush.mColour = (this.mColour);
        }
        if ((this.blend !== null && typeof this.blend !== 'undefined')) {
            rBrush.blend = this.blend.clonePdfBlend();
        }
        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {
            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();
        }
        rBrush.extend = this.extend;
        this.cloneBackgroundValue(rBrush);
        this.cloneAntiAliasingValue(rBrush);
        return rBrush;
    };
    /**
     * Resets the function.
     * @public
     */
    PdfRadialGradientBrush.prototype.resetFunction = function () {
        this.function = this.mColourBlends.getFunction(this.colorSpace);
    };
    return PdfRadialGradientBrush;
}(_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_7__["PdfGradientBrush"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: PdfSolidBrush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSolidBrush", function() { return PdfSolidBrush; });
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _pdf_brush__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Represents a brush that fills any object with a solid color.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // add a pages to the document
 * let page1 : PdfPage = document.pages.add();
 * // set font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * // set brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
 * // draw the text
 * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));
 * // save the document
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfSolidBrush = /** @class */ (function (_super) {
    __extends(PdfSolidBrush, _super);
    //Constructors
    /**
     * Initializes a new instance of the `PdfSolidBrush` class.
     * ```typescript
     * // create a new PDF document
     * let document : PdfDocument = new PdfDocument();
     * // add a pages to the document
     * let page1 : PdfPage = document.pages.add();
     * // set font
     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
     * // set brush
     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
     * // draw the text
     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));
     * // save the document
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     * @param color color of the brush
     */
    function PdfSolidBrush(color) {
        var _this = _super.call(this) || this;
        _this.pdfColor = color;
        return _this;
    }
    Object.defineProperty(PdfSolidBrush.prototype, "color", {
        //Properties
        /**
         * Gets or sets the `color` of the brush.
         * @private
         */
        get: function () {
            return this.pdfColor;
        },
        set: function (value) {
            this.pdfColor = value;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * `Monitors` the changes of the brush and modify PDF state respectively.
     * @private
     */
    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {
        if (streamWriter == null) {
            throw new Error('ArgumentNullException:streamWriter');
        }
        var diff = false;
        if (brush == null) {
            diff = true;
            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);
            return diff;
        }
        else {
            var sBrush = brush;
            diff = true;
            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);
            return diff;
        }
    };
    /**
     * `Resets` the changes, which were made by the brush.
     * @private
     */
    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {
        streamWriter.setColorAndSpace(new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](0, 0, 0), _enum__WEBPACK_IMPORTED_MODULE_1__["PdfColorSpace"].Rgb, false);
    };
    return PdfSolidBrush;
}(_pdf_brush__WEBPACK_IMPORTED_MODULE_2__["PdfBrush"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: PdfTilingBrush */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTilingBrush", function() { return PdfTilingBrush; });
/* harmony import */ var _pdf_graphics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pdf-graphics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-graphics.js");
/* harmony import */ var _pdf_brush__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _pdf_resources__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../pdf-resources */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-resources.js");
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _pages_pdf_page__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../pages/pdf-page */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();










/**
 * `PdfTilingBrush` Implements a colored tiling brush.
 */
var PdfTilingBrush = /** @class */ (function (_super) {
    __extends(PdfTilingBrush, _super);
    /**
     * Initializes a new instance of the `PdfTilingBrush` class.
     * @public
     */
    function PdfTilingBrush(arg1, arg2) {
        var _this = _super.call(this) || this;
        /**
         * Local variable to store Stroking.
         * @private
         */
        _this.mStroking = false;
        /**
         * Local variable to store the tile start location.
         * @private
         */
        _this.mLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](0, 0);
        /**
         * Local variable to store the dictionary properties.
         * @private
         */
        _this.mDictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__["DictionaryProperties"]();
        var rect = null;
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["Rectangle"]) {
            rect = arg1;
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"]) {
            rect = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["Rectangle"](0, 0, arg1.width, arg1.height);
        }
        if (arg2 !== null && arg2 instanceof _pages_pdf_page__WEBPACK_IMPORTED_MODULE_8__["PdfPage"]) {
            _this.mPage = arg2;
        }
        _this.brushStream = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_7__["PdfStream"]();
        _this.mResources = new _pdf_resources__WEBPACK_IMPORTED_MODULE_6__["PdfResources"]();
        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);
        _this.setBox(rect);
        _this.setObligatoryFields();
        if (arg2 !== null && arg2 instanceof _pages_pdf_page__WEBPACK_IMPORTED_MODULE_8__["PdfPage"]) {
            _this.mPage = arg2;
            _this.graphics.colorSpace = arg2.document.colorSpace;
        }
        return _this;
    }
    /**
     * Initializes a new instance of the `PdfTilingBrush` class.
     * @private
     * @param rectangle The size of the smallest brush cell.
     * @param page The Current Page Object.
     * @param location The Tile start location.
     * @param matrix The matrix.
     */
    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {
        this.mPage = page;
        this.mLocation = location;
        this.mTransformationMatrix = matrix;
        this.tempBrushStream = this.brushStream;
        this.brushStream = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_7__["PdfStream"]();
        var tempResource = new _pdf_resources__WEBPACK_IMPORTED_MODULE_6__["PdfResources"]();
        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);
        this.setBox(rectangle);
        this.setObligatoryFields();
        return this;
    };
    Object.defineProperty(PdfTilingBrush.prototype, "location", {
        //Properties
        /**
         * Location representing the start position of the tiles.
         * @public
         */
        get: function () {
            return this.mLocation;
        },
        set: function (value) {
            this.mLocation = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the obligatory fields.
     * @private
     */
    PdfTilingBrush.prototype.setObligatoryFields = function () {
        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](1));
        //  Tiling brush.
        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](1));
        //  Coloured.
        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"](1));
        //  Constant spacing.
        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"]((this.mBox.right - this.mBox.left)));
        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_5__["PdfNumber"]((this.mBox.bottom - this.mBox.top)));
        if ((this.mPage != null) && (this.mLocation != null)) {
            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {
                // Transform the tile origin to fit the location
                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);
                /* tslint:disable-next-line:max-line-length */
                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]([1, 0, 0, 1, this.mLocation.x, tileTransform]));
            }
            else {
                var tileTransform = 0;
                // Transform the tile origin to fit the location
                var elements = this.mTransformationMatrix.matrix.elements;
                if ((this.mPage.size.height > this.rectangle.size.height)) {
                    tileTransform = (this.mTransformationMatrix.matrix.offsetY
                        - (this.mPage.size.height % this.rectangle.size.height));
                }
                else {
                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);
                }
                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]([
                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform
                ]));
            }
        }
    };
    /**
     * Sets the BBox coordinates.
     * @private
     */
    PdfTilingBrush.prototype.setBox = function (box) {
        this.mBox = box;
        var rect = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);
        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"].fromRectangle(rect));
    };
    Object.defineProperty(PdfTilingBrush.prototype, "rectangle", {
        //Properties
        /**
         * Gets the boundary box of the smallest brush cell.
         * @public
         */
        get: function () {
            return this.mBox;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTilingBrush.prototype, "size", {
        /**
         * Gets the size of the smallest brush cell.
         * @public
         */
        get: function () {
            return this.mBox.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTilingBrush.prototype, "graphics", {
        /**
         * Gets Graphics context of the brush.
         */
        get: function () {
            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {
                var gr = new _pdf_graphics__WEBPACK_IMPORTED_MODULE_0__["GetResourceEventHandler"](this);
                var g = new _pdf_graphics__WEBPACK_IMPORTED_MODULE_0__["PdfGraphics"](this.size, gr, this.brushStream);
                this.mGraphics = g;
                this.mResources = this.getResources();
                this.mGraphics.initializeCoordinates();
            }
            return this.mGraphics;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the resources and modifies the template dictionary.
     * @public
     */
    PdfTilingBrush.prototype.getResources = function () {
        return this.mResources;
    };
    Object.defineProperty(PdfTilingBrush.prototype, "stroking", {
        /**
         * Gets or sets a value indicating whether this PdfTilingBrush
         * is used for stroking operations.
         */
        get: function () {
            return this.mStroking;
        },
        set: function (value) {
            this.mStroking = value;
        },
        enumerable: true,
        configurable: true
    });
    //PdfBrush methods
    /**
     * Creates a new copy of a brush.
     * @public
     */
    PdfTilingBrush.prototype.clone = function () {
        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);
        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {
            /* tslint:disable-next-line:max-line-length */
            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"](this.mTransformationMatrix.matrix.elements));
        }
        brush.brushStream.data = this.tempBrushStream.data;
        brush.mResources = new _pdf_resources__WEBPACK_IMPORTED_MODULE_6__["PdfResources"](this.mResources);
        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);
        return brush;
    };
    /**
     * Monitors the changes of the brush and modify PDF state respectfully.
     * @param brush The brush
     * @param streamWriter The stream writer
     * @param getResources The get resources delegate.
     * @param saveChanges if set to true the changes should be saved anyway.
     * @param currentColorSpace The current color space.
     */
    /* tslint:disable-next-line:max-line-length */
    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {
        var diff = false;
        if (brush !== this) {
            //  Set the Pattern colour space.
            streamWriter.setColorSpace('Pattern', this.mStroking);
            //  Set the pattern for non-stroking operations.
            var resources1 = getResources.getResources();
            var name1 = resources1.getName(this);
            streamWriter.setColourWithPattern(null, name1, this.mStroking);
            diff = true;
        }
        else if (brush instanceof PdfTilingBrush) {
            //  Set the /Pattern colour space.
            streamWriter.setColorSpace('Pattern', this.mStroking);
            //  Set the pattern for non-stroking operations.
            var resources = getResources.getResources();
            var name_1 = resources.getName(this);
            streamWriter.setColourWithPattern(null, name_1, this.mStroking);
            diff = true;
        }
        return diff;
    };
    /**
     * Resets the changes, which were made by the brush.
     * In other words resets the state to the initial one.
     * @param streamWriter The stream writer.
     */
    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {
        //  We shouldn't do anything to reset changes.
        //  All changes will be reset automatically by setting a new colour space.
    };
    Object.defineProperty(PdfTilingBrush.prototype, "element", {
        /* tslint:enable */
        // IPdfWrapper Members
        /**
         * Gets the `element`.
         * @public
         */
        get: function () {
            return this.brushStream;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTilingBrush;
}(_pdf_brush__WEBPACK_IMPORTED_MODULE_1__["PdfBrush"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/constants.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/constants.js ***!
  \*********************************************************************************************************************************************/
/*! exports provided: ProcedureSets */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProcedureSets", function() { return ProcedureSets; });
/**
 * `constants.ts` class for EJ2-PDF
 * @private
 */
var ProcedureSets = /** @class */ (function () {
    function ProcedureSets() {
        /**
         * Specifies the `PDF` procedure set.
         * @private
         */
        this.pdf = 'PDF';
        /**
         * Specifies the `Text` procedure set.
         * @private
         */
        this.text = 'Text';
        /**
         * Specifies the `ImageB` procedure set.
         * @private
         */
        this.imageB = 'ImageB';
        /**
         * Specifies the `ImageC` procedure set.
         * @private
         */
        this.imageC = 'ImageC';
        /**
         * Specifies the `ImageI` procedure set.
         * @private
         */
        this.imageI = 'ImageI';
    }
    return ProcedureSets;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js ***!
  \****************************************************************************************************************************************/
/*! exports provided: PdfHorizontalAlignment, PdfVerticalAlignment, PdfTextAlignment, TextRenderingMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode, PdfColorSpace, PdfBlendMode, PdfGraphicsUnit, PdfGridImagePosition, PdfTextDirection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalAlignment", function() { return PdfHorizontalAlignment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfVerticalAlignment", function() { return PdfVerticalAlignment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTextAlignment", function() { return PdfTextAlignment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextRenderingMode", function() { return TextRenderingMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLineJoin", function() { return PdfLineJoin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLineCap", function() { return PdfLineCap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDashStyle", function() { return PdfDashStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFillMode", function() { return PdfFillMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfColorSpace", function() { return PdfColorSpace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBlendMode", function() { return PdfBlendMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsUnit", function() { return PdfGraphicsUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridImagePosition", function() { return PdfGridImagePosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTextDirection", function() { return PdfTextDirection; });
/**
 * public Enum for `PdfHorizontalAlignment`.
 * @private
 */
var PdfHorizontalAlignment;
(function (PdfHorizontalAlignment) {
    /**
     * Specifies the type of `Left`.
     * @private
     */
    PdfHorizontalAlignment[PdfHorizontalAlignment["Left"] = 0] = "Left";
    /**
     * Specifies the type of `Center`.
     * @private
     */
    PdfHorizontalAlignment[PdfHorizontalAlignment["Center"] = 1] = "Center";
    /**
     * Specifies the type of `Right`.
     * @private
     */
    PdfHorizontalAlignment[PdfHorizontalAlignment["Right"] = 2] = "Right";
})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));
/**
 * public Enum for `PdfVerticalAlignment`.
 * @private
 */
var PdfVerticalAlignment;
(function (PdfVerticalAlignment) {
    /**
     * Specifies the type of `Top`.
     * @private
     */
    PdfVerticalAlignment[PdfVerticalAlignment["Top"] = 0] = "Top";
    /**
     * Specifies the type of `Middle`.
     * @private
     */
    PdfVerticalAlignment[PdfVerticalAlignment["Middle"] = 1] = "Middle";
    /**
     * Specifies the type of `Bottom`.
     * @private
     */
    PdfVerticalAlignment[PdfVerticalAlignment["Bottom"] = 2] = "Bottom";
})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));
/**
 * public Enum for `public`.
 * @private
 */
var PdfTextAlignment;
(function (PdfTextAlignment) {
    /**
     * Specifies the type of `Left`.
     * @private
     */
    PdfTextAlignment[PdfTextAlignment["Left"] = 0] = "Left";
    /**
     * Specifies the type of `Center`.
     * @private
     */
    PdfTextAlignment[PdfTextAlignment["Center"] = 1] = "Center";
    /**
     * Specifies the type of `Right`.
     * @private
     */
    PdfTextAlignment[PdfTextAlignment["Right"] = 2] = "Right";
    /**
     * Specifies the type of `Justify`.
     * @private
     */
    PdfTextAlignment[PdfTextAlignment["Justify"] = 3] = "Justify";
})(PdfTextAlignment || (PdfTextAlignment = {}));
/**
 * public Enum for `TextRenderingMode`.
 * @private
 */
var TextRenderingMode;
(function (TextRenderingMode) {
    /**
     * Specifies the type of `Fill`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["Fill"] = 0] = "Fill";
    /**
     * Specifies the type of `Stroke`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["Stroke"] = 1] = "Stroke";
    /**
     * Specifies the type of `FillStroke`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["FillStroke"] = 2] = "FillStroke";
    /**
     * Specifies the type of `None`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["None"] = 3] = "None";
    /**
     * Specifies the type of `ClipFlag`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["ClipFlag"] = 4] = "ClipFlag";
    /**
     * Specifies the type of `ClipFill`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["ClipFill"] = 4] = "ClipFill";
    /**
     * Specifies the type of `ClipStroke`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["ClipStroke"] = 5] = "ClipStroke";
    /**
     * Specifies the type of `ClipFillStroke`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["ClipFillStroke"] = 6] = "ClipFillStroke";
    /**
     * Specifies the type of `Clip`.
     * @private
     */
    TextRenderingMode[TextRenderingMode["Clip"] = 7] = "Clip";
})(TextRenderingMode || (TextRenderingMode = {}));
/**
 * public Enum for `PdfLineJoin`.
 * @private
 */
var PdfLineJoin;
(function (PdfLineJoin) {
    /**
     * Specifies the type of `Miter`.
     * @private
     */
    PdfLineJoin[PdfLineJoin["Miter"] = 0] = "Miter";
    /**
     * Specifies the type of `Round`.
     * @private
     */
    PdfLineJoin[PdfLineJoin["Round"] = 1] = "Round";
    /**
     * Specifies the type of `Bevel`.
     * @private
     */
    PdfLineJoin[PdfLineJoin["Bevel"] = 2] = "Bevel";
})(PdfLineJoin || (PdfLineJoin = {}));
/**
 * public Enum for `PdfLineCap`.
 * @private
 */
var PdfLineCap;
(function (PdfLineCap) {
    /**
     * Specifies the type of `Flat`.
     * @private
     */
    PdfLineCap[PdfLineCap["Flat"] = 0] = "Flat";
    /**
     * Specifies the type of `Round`.
     * @private
     */
    PdfLineCap[PdfLineCap["Round"] = 1] = "Round";
    /**
     * Specifies the type of `Square`.
     * @private
     */
    PdfLineCap[PdfLineCap["Square"] = 2] = "Square";
})(PdfLineCap || (PdfLineCap = {}));
/**
 * public Enum for `PdfDashStyle`.
 * @private
 */
var PdfDashStyle;
(function (PdfDashStyle) {
    /**
     * Specifies the type of `Solid`.
     * @private
     */
    PdfDashStyle[PdfDashStyle["Solid"] = 0] = "Solid";
    /**
     * Specifies the type of `Dash`.
     * @private
     */
    PdfDashStyle[PdfDashStyle["Dash"] = 1] = "Dash";
    /**
     * Specifies the type of `Dot`.
     * @private
     */
    PdfDashStyle[PdfDashStyle["Dot"] = 2] = "Dot";
    /**
     * Specifies the type of `DashDot`.
     * @private
     */
    PdfDashStyle[PdfDashStyle["DashDot"] = 3] = "DashDot";
    /**
     * Specifies the type of `DashDotDot`.
     * @private
     */
    PdfDashStyle[PdfDashStyle["DashDotDot"] = 4] = "DashDotDot";
    /**
     * Specifies the type of `Custom`.
     * @private
     */
    PdfDashStyle[PdfDashStyle["Custom"] = 5] = "Custom";
})(PdfDashStyle || (PdfDashStyle = {}));
/**
 * public Enum for `PdfFillMode`.
 * @private
 */
var PdfFillMode;
(function (PdfFillMode) {
    /**
     * Specifies the type of `Winding`.
     * @private
     */
    PdfFillMode[PdfFillMode["Winding"] = 0] = "Winding";
    /**
     * Specifies the type of `Alternate`.
     * @private
     */
    PdfFillMode[PdfFillMode["Alternate"] = 1] = "Alternate";
})(PdfFillMode || (PdfFillMode = {}));
/**
 * public Enum for `PdfColorSpace`.
 * @private
 */
var PdfColorSpace;
(function (PdfColorSpace) {
    /**
     * Specifies the type of `Rgb`.
     * @private
     */
    PdfColorSpace[PdfColorSpace["Rgb"] = 0] = "Rgb";
    /**
     * Specifies the type of `Cmyk`.
     * @private
     */
    PdfColorSpace[PdfColorSpace["Cmyk"] = 1] = "Cmyk";
    /**
     * Specifies the type of `GrayScale`.
     * @private
     */
    PdfColorSpace[PdfColorSpace["GrayScale"] = 2] = "GrayScale";
    /**
     * Specifies the type of `Indexed`.
     * @private
     */
    PdfColorSpace[PdfColorSpace["Indexed"] = 3] = "Indexed";
})(PdfColorSpace || (PdfColorSpace = {}));
/**
 * public Enum for `PdfBlendMode`.
 * @private
 */
var PdfBlendMode;
(function (PdfBlendMode) {
    /**
     * Specifies the type of `Normal`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Normal"] = 0] = "Normal";
    /**
     * Specifies the type of `Multiply`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Multiply"] = 1] = "Multiply";
    /**
     * Specifies the type of `Screen`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Screen"] = 2] = "Screen";
    /**
     * Specifies the type of `Overlay`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Overlay"] = 3] = "Overlay";
    /**
     * Specifies the type of `Darken`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Darken"] = 4] = "Darken";
    /**
     * Specifies the type of `Lighten`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Lighten"] = 5] = "Lighten";
    /**
     * Specifies the type of `ColorDodge`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["ColorDodge"] = 6] = "ColorDodge";
    /**
     * Specifies the type of `ColorBurn`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["ColorBurn"] = 7] = "ColorBurn";
    /**
     * Specifies the type of `HardLight`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["HardLight"] = 8] = "HardLight";
    /**
     * Specifies the type of `SoftLight`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["SoftLight"] = 9] = "SoftLight";
    /**
     * Specifies the type of `Difference`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Difference"] = 10] = "Difference";
    /**
     * Specifies the type of `Exclusion`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Exclusion"] = 11] = "Exclusion";
    /**
     * Specifies the type of `Hue`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Hue"] = 12] = "Hue";
    /**
     * Specifies the type of `Saturation`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Saturation"] = 13] = "Saturation";
    /**
     * Specifies the type of `Color`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Color"] = 14] = "Color";
    /**
     * Specifies the type of `Luminosity`.
     * @private
     */
    PdfBlendMode[PdfBlendMode["Luminosity"] = 15] = "Luminosity";
})(PdfBlendMode || (PdfBlendMode = {}));
/**
 * public Enum for `PdfGraphicsUnit`.
 * @private
 */
var PdfGraphicsUnit;
(function (PdfGraphicsUnit) {
    /**
     * Specifies the type of `Centimeter`.
     * @private
     */
    PdfGraphicsUnit[PdfGraphicsUnit["Centimeter"] = 0] = "Centimeter";
    /**
     * Specifies the type of `Pica`.
     * @private
     */
    PdfGraphicsUnit[PdfGraphicsUnit["Pica"] = 1] = "Pica";
    /**
     * Specifies the type of `Pixel`.
     * @private
     */
    PdfGraphicsUnit[PdfGraphicsUnit["Pixel"] = 2] = "Pixel";
    /**
     * Specifies the type of `Point`.
     * @private
     */
    PdfGraphicsUnit[PdfGraphicsUnit["Point"] = 3] = "Point";
    /**
     * Specifies the type of `Inch`.
     * @private
     */
    PdfGraphicsUnit[PdfGraphicsUnit["Inch"] = 4] = "Inch";
    /**
     * Specifies the type of `Document`.
     * @private
     */
    PdfGraphicsUnit[PdfGraphicsUnit["Document"] = 5] = "Document";
    /**
     * Specifies the type of `Millimeter`.
     * @private
     */
    PdfGraphicsUnit[PdfGraphicsUnit["Millimeter"] = 6] = "Millimeter";
})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));
/**
 * public Enum for `PdfGridImagePosition`.
 * @private
 */
var PdfGridImagePosition;
(function (PdfGridImagePosition) {
    /**
     * Specifies the type of `Fit`.
     * @private
     */
    PdfGridImagePosition[PdfGridImagePosition["Fit"] = 0] = "Fit";
    /**
     * Specifies the type of `Center`.
     * @private
     */
    PdfGridImagePosition[PdfGridImagePosition["Center"] = 1] = "Center";
    /**
     * Specifies the type of `Stretch`.
     * @private
     */
    PdfGridImagePosition[PdfGridImagePosition["Stretch"] = 2] = "Stretch";
    /**
     * Specifies the type of `Tile`.
     * @private
     */
    PdfGridImagePosition[PdfGridImagePosition["Tile"] = 3] = "Tile";
})(PdfGridImagePosition || (PdfGridImagePosition = {}));
/**
 * public Enum for `the text rendering direction`.
 * @private
 */
var PdfTextDirection;
(function (PdfTextDirection) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    PdfTextDirection[PdfTextDirection["None"] = 0] = "None";
    /**
     * Specifies the type of `LeftToRight`.
     * @private
     */
    PdfTextDirection[PdfTextDirection["LeftToRight"] = 1] = "LeftToRight";
    /**
     * Specifies the type of `RightToLeft`.
     * @private
     */
    PdfTextDirection[PdfTextDirection["RightToLeft"] = 2] = "RightToLeft";
})(PdfTextDirection || (PdfTextDirection = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/arc.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/arc.js ***!
  \***********************************************************************************************************************************************/
/*! exports provided: PdfArc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfArc", function() { return PdfArc; });
/* harmony import */ var _pdf_pen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../figures/base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _figures_ellipse_part__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../figures/ellipse-part */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/ellipse-part.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * arc.ts class for EJ2-PDF
 */




/**
 * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.
 * @private
 */
var PdfArc = /** @class */ (function (_super) {
    __extends(PdfArc, _super);
    /* tslint:disable-next-line:max-line-length */
    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        var _this = this;
        if (typeof arg1 === 'undefined') {
            _this = _super.call(this) || this;
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"]) {
            _this = _super.call(this, arg1, arg2, arg3) || this;
        }
        else if (arg1 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_0__["PdfPen"]) {
            if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"]) {
                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;
            }
            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {
                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;
            }
            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {
                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;
            }
        }
        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {
            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;
        }
        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {
            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;
        }
        return _this;
    }
    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {
        if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(argu1, arg2.x, arg2.y);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"] && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(argu1, arg2, null);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {
            return this.drawHelper(argu1, arg2, arg3, null);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && arg3 instanceof _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_1__["PdfLayoutFormat"]) {
            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);
        }
        else if (typeof arg2 === 'number' && (arg4 instanceof _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_1__["PdfLayoutFormat"] || arg4 == null) && typeof arg3 === 'number') {
            var widthValue = (argu1.graphics.clientSize.width - arg2);
            var layoutRect = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](arg2, arg3, widthValue, 0);
            return this.drawHelper(argu1, layoutRect, arg4);
        }
        else {
            return this.drawHelper(argu1, arg2, arg3);
        }
    };
    // Implementation
    /**
     * `drawInternal` Draws an element on the Graphics.
     * @param graphics Graphics context where the element should be printed.
     *
     */
    PdfArc.prototype.drawInternal = function (graphics) {
        if ((graphics == null)) {
            throw new Error('ArgumentNullException : graphics');
        }
        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);
    };
    return PdfArc;
}(_figures_ellipse_part__WEBPACK_IMPORTED_MODULE_3__["PdfEllipsePart"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/draw-element.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/draw-element.js ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: PdfDrawElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDrawElement", function() { return PdfDrawElement; });
/* harmony import */ var _pdf_shape_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-shape-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/pdf-shape-element.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfDrawElement.ts class for EJ2-PDF
 */

/**
 * Represents a base class for all page graphics elements.
 */
var PdfDrawElement = /** @class */ (function (_super) {
    __extends(PdfDrawElement, _super);
    /**
     * Initializes a new instance of the `PdfDrawElement` class.
     * @protected
     */
    function PdfDrawElement(pen) {
        var _this = _super.call(this) || this;
        if (typeof pen !== 'undefined') {
            _this.mpen = pen;
        }
        return _this;
    }
    Object.defineProperty(PdfDrawElement.prototype, "pen", {
        // Properties
        /**
         * Gets or sets a pen that will be used to draw the element.
         * @public
         */
        get: function () {
            return this.mpen;
        },
        set: function (value) {
            this.mpen = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfDrawElement;
}(_pdf_shape_element__WEBPACK_IMPORTED_MODULE_0__["PdfShapeElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js ***!
  \*****************************************************************************************************************************************************************/
/*! exports provided: ElementLayouter, PdfLayoutFormat, PdfLayoutParams, PdfLayoutResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ElementLayouter", function() { return ElementLayouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutFormat", function() { return PdfLayoutFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutParams", function() { return PdfLayoutParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutResult", function() { return PdfLayoutResult; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/**
 * ElementLayouter.ts class for EJ2-PDF
 */

/**
 * Base class for `elements lay outing`.
 * @private
 */
var ElementLayouter = /** @class */ (function () {
    // Constructor
    /**
     * Initializes a new instance of the `ElementLayouter` class.
     * @private
     */
    function ElementLayouter(element) {
        this.layoutElement = element;
    }
    Object.defineProperty(ElementLayouter.prototype, "elements", {
        // Properties
        /**
         * Gets the `element`.
         * @private
         */
        get: function () {
            return this.layoutElement;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the `element`.
     * @private
     */
    ElementLayouter.prototype.getElement = function () {
        return this.layoutElement;
    };
    // Implementation
    /**
     * `Layouts` the element.
     * @private
     */
    ElementLayouter.prototype.layout = function (param) {
        return this.layoutInternal(param);
    };
    ElementLayouter.prototype.Layouter = function (param) {
        return this.layoutInternal(param);
    };
    /**
     * Returns the `next page`.
     * @private
     */
    ElementLayouter.prototype.getNextPage = function (currentPage) {
        var section = currentPage.section;
        var nextPage = section.add();
        return nextPage;
    };
    ElementLayouter.prototype.getPaginateBounds = function (param) {
        if ((param == null)) {
            throw new Error('ArgumentNullException : param');
        }
        var result = param.format.usePaginateBounds ? param.format.paginateBounds
            : new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"](param.bounds.x, 0, param.bounds.width, param.bounds.height);
        return result;
    };
    return ElementLayouter;
}());

var PdfLayoutFormat = /** @class */ (function () {
    function PdfLayoutFormat(baseFormat) {
        if (typeof baseFormat === 'undefined') {
            //
        }
        else {
            this.break = baseFormat.break;
            this.layout = baseFormat.layout;
            this.paginateBounds = baseFormat.paginateBounds;
            this.boundsSet = baseFormat.usePaginateBounds;
        }
    }
    Object.defineProperty(PdfLayoutFormat.prototype, "layout", {
        // Properties
        /**
         * Gets or sets `layout` type of the element.
         * @private
         */
        get: function () {
            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {
            //      this.layoutType = PdfLayoutType.Paginate;
            // }
            return this.layoutType;
        },
        set: function (value) {
            this.layoutType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutFormat.prototype, "break", {
        /**
         * Gets or sets `break` type of the element.
         * @private
         */
        get: function () {
            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {
            //      this.breakType = PdfLayoutBreakType.FitPage;
            // }
            return this.breakType;
        },
        set: function (value) {
            this.breakType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutFormat.prototype, "paginateBounds", {
        /**
         * Gets or sets the `bounds` on the next page.
         * @private
         */
        get: function () {
            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {
                this.layoutPaginateBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"](0, 0, 0, 0);
            }
            return this.layoutPaginateBounds;
        },
        set: function (value) {
            this.layoutPaginateBounds = value;
            this.boundsSet = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutFormat.prototype, "usePaginateBounds", {
        /**
         * Gets a value indicating whether [`use paginate bounds`].
         * @private
         */
        get: function () {
            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {
            //      this.boundsSet = false;
            // }
            return this.boundsSet;
        },
        enumerable: true,
        configurable: true
    });
    return PdfLayoutFormat;
}());

var PdfLayoutParams = /** @class */ (function () {
    function PdfLayoutParams() {
    }
    Object.defineProperty(PdfLayoutParams.prototype, "page", {
        // Properties
        /**
         * Gets or sets the layout `page` for the element.
         * @private
         */
        get: function () {
            return this.pdfPage;
        },
        set: function (value) {
            this.pdfPage = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutParams.prototype, "bounds", {
        /**
         * Gets or sets layout `bounds` for the element.
         * @private
         */
        get: function () {
            return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"](this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);
        },
        set: function (value) {
            this.layoutBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutParams.prototype, "format", {
        /**
         * Gets or sets `layout settings` for the element.
         * @private
         */
        get: function () {
            return this.layoutFormat;
        },
        set: function (value) {
            this.layoutFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfLayoutParams;
}());

var PdfLayoutResult = /** @class */ (function () {
    // Constructors
    /**
     * Initializes the new instance of `PdfLayoutResult` class.
     * @private
     */
    function PdfLayoutResult(page, bounds) {
        this.pdfPage = page;
        this.layoutBounds = bounds;
    }
    Object.defineProperty(PdfLayoutResult.prototype, "page", {
        // Properties
        /**
         * Gets the last `page` where the element was drawn.
         * @private
         */
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutResult.prototype, "bounds", {
        /**
         * Gets the `bounds` of the element on the last page where it was drawn.
         * @private
         */
        get: function () {
            return this.layoutBounds;
        },
        enumerable: true,
        configurable: true
    });
    return PdfLayoutResult;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/fill-element.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/fill-element.js ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: PdfFillElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFillElement", function() { return PdfFillElement; });
/* harmony import */ var _draw_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./draw-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/draw-element.js");
/* harmony import */ var _pdf_pen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfFillElement.ts class for EJ2-PDF
 */



/**
 * Represents a base class for all page graphics elements.
 */
var PdfFillElement = /** @class */ (function (_super) {
    __extends(PdfFillElement, _super);
    /**
     * Initializes a new instance of the `PdfFillElement` class.
     * @protected
     */
    function PdfFillElement(arg1, arg2) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Internal variable to store pen.
         * @private
         */
        _this.mbrush = null;
        if (typeof arg1 === 'undefined') {
            //
        }
        else if (arg1 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_1__["PdfPen"]) {
            _this = _super.call(this, arg1) || this;
        }
        else {
            _this.mbrush = arg2;
        }
        return _this;
    }
    Object.defineProperty(PdfFillElement.prototype, "brush", {
        // Properties
        /**
         * Gets or sets a brush of the element.
         * @public
         */
        get: function () {
            return this.mbrush;
        },
        set: function (value) {
            this.mbrush = value;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.
     * @protected
     */
    PdfFillElement.prototype.obtainPen = function () {
        return ((this.mbrush == null) && (this.pen == null)) ? new _pdf_pen__WEBPACK_IMPORTED_MODULE_1__["PdfPen"](new _pdf_color__WEBPACK_IMPORTED_MODULE_2__["PdfColor"](0, 0, 0)) : this.pen;
    };
    return PdfFillElement;
}(_draw_element__WEBPACK_IMPORTED_MODULE_0__["PdfDrawElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/graphics-element.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/graphics-element.js ***!
  \*****************************************************************************************************************************************************************/
/*! exports provided: PdfGraphicsElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsElement", function() { return PdfGraphicsElement; });
/**
 * Represents a base class for all page graphics elements.
 */
var PdfGraphicsElement = /** @class */ (function () {
    // Constructors
    function PdfGraphicsElement() {
        //
    }
    /**
     * `Draws` the page number field.
     * @public
     */
    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {
        var bNeedSave = (x !== 0 || y !== 0);
        var gState = null;
        // Translate co-ordinates.
        if (bNeedSave) {
            // Save state.
            gState = graphics.save();
            graphics.translateTransform(x, y);
        }
        this.drawInternal(graphics);
        if (bNeedSave) {
            // Restore state.
            graphics.restore(gState);
        }
    };
    return PdfGraphicsElement;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/pdf-shape-element.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/pdf-shape-element.js ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: PdfShapeElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfShapeElement", function() { return PdfShapeElement; });
/* harmony import */ var _layout_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../layout-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/layout-element.js");
/* harmony import */ var _shape_layouter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shape-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/shape-layouter.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Base class for the main shapes.
 * @private
 */
var PdfShapeElement = /** @class */ (function (_super) {
    __extends(PdfShapeElement, _super);
    function PdfShapeElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // methods
    /**
     * Gets the bounds.
     * @private
     */
    PdfShapeElement.prototype.getBounds = function () {
        var rect = this.getBoundsInternal();
        return rect;
    };
    /**
     * `drawGraphicsHelper` the graphics.
     * @public
     */
    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {
        if ((graphics == null)) {
            throw new Error('ArgumentNullException :graphics');
        }
        this.drawShapeHelper(graphics, location.x, location.y);
    };
    /**
     * `drawShapeHelper` the graphics.
     * @private
     */
    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {
        var bNeedSave = (x !== 0.5 || y !== 0.5);
        var gState = null;
        // Translate co-ordinates.
        if (bNeedSave) {
            // Save state.
            gState = graphics.save();
            graphics.translateTransform(x, y);
        }
        this.drawInternal(graphics);
        if (bNeedSave) {
            // Restore state.
            graphics.restore(gState);
        }
    };
    /**
     * Layouts the element.
     * @private
     */
    PdfShapeElement.prototype.layout = function (param) {
        var layouter = new _shape_layouter__WEBPACK_IMPORTED_MODULE_1__["ShapeLayouter"](this);
        var result = layouter.layout(param);
        return result;
    };
    return PdfShapeElement;
}(_layout_element__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/shape-layouter.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/shape-layouter.js ***!
  \***************************************************************************************************************************************************************/
/*! exports provided: ShapeLayouter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShapeLayouter", function() { return ShapeLayouter; });
/* harmony import */ var _element_layouter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _figures_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../figures/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js");
/* harmony import */ var _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../../structured-elements/grid/layout/grid-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/layout/grid-layouter.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * ShapeLayouter.ts class for EJ2-PDF
 * @private
 */




/**
 * ShapeLayouter class.
 * @private
 */
var ShapeLayouter = /** @class */ (function (_super) {
    __extends(ShapeLayouter, _super);
    // Constructors
    /**
     * Initializes a new instance of the `ShapeLayouter` class.
     * @private
     */
    function ShapeLayouter(element) {
        var _this = _super.call(this, element) || this;
        // Fields
        /**
         * Initializes the object to store `older form elements` of previous page.
         * @default 0
         * @private
         */
        _this.olderPdfForm = 0;
        /**
         * The `bounds` of the shape element.
         * * @default new RectangleF()
         * @private
         */
        _this.shapeBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"]();
        /**
         * Total Page size of the web page.
         * * @default 0
         * @private
         */
        _this.totalPageSize = 0;
        return _this;
    }
    Object.defineProperty(ShapeLayouter.prototype, "element", {
        // Properties
        /**
         * Gets shape element.
         * @private
         */
        get: function () {
            return this.elements;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * Layouts the element.
     * @private
     */
    ShapeLayouter.prototype.layoutInternal = function (param) {
        var currentPage = param.page;
        var currentBounds = param.bounds;
        var shapeLayoutBounds = this.element.getBounds();
        shapeLayoutBounds.x = 0;
        shapeLayoutBounds.y = 0;
        /* tslint:disable */
        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;
        /* tslint:enable */
        if ((this.isPdfGrid) && (!(isEmpty))) {
            shapeLayoutBounds = this.shapeBounds;
        }
        var result = null;
        var pageResult = new ShapeLayoutResult();
        pageResult.page = currentPage;
        /*tslint:disable:no-constant-condition */
        while (true) {
            // Raise event.
            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);
            currentBounds = result1.currentBounds;
            var endArgs = null;
            if (!result1.cancel) {
                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);
                // Raise event.
                endArgs = this.raiseEndPageLayout(pageResult);
                result1.cancel = (endArgs === null) ? false : endArgs.cancel;
            }
            if (!pageResult.end && !result1.cancel) {
                currentBounds = this.getPaginateBounds(param);
                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);
                currentPage = (endArgs === null || endArgs.nextPage === null) ?
                    this.getNextPage(currentPage) : endArgs.nextPage;
                if (this.isPdfGrid) {
                    result = this.getLayoutResult(pageResult);
                    break;
                }
            }
            else {
                result = this.getLayoutResult(pageResult);
                break;
            }
        }
        return result;
    };
    /**
     * Raises BeforePageLayout event.
     * @private
     */
    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {
        var cancel = false;
        if (this.element.raiseBeginPageLayout) {
            var args = new _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_3__["BeginPageLayoutEventArgs"](currentBounds, currentPage);
            this.element.onBeginPageLayout(args);
            cancel = args.cancel;
            currentBounds = args.bounds;
        }
        return { currentBounds: currentBounds, cancel: cancel };
    };
    /**
     * Raises PageLayout event if needed.
     * @private
     */
    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {
        var args = null;
        if (this.element.raiseEndPageLayout) {
            var res = this.getLayoutResult(pageResult);
            args = new _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_3__["EndPageLayoutEventArgs"](res);
            this.element.onEndPageLayout(args);
        }
        return args;
    };
    /**
     * Creates layout result.
     * @private
     */
    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {
        var result = new _element_layouter__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutResult"](pageResult.page, pageResult.bounds);
        return result;
    };
    /**
     * Calculates the next active shape bounds.
     * @private
     */
    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {
        var layoutedBounds = pageResult.bounds;
        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);
        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);
        return shapeLayoutBounds;
    };
    /**
     * Layouts the element on the current page.
     * @private
     */
    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {
        var result = new ShapeLayoutResult();
        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);
        var fitToPage = this.fitsToBounds(curBounds, sBounds);
        var canDraw = !((param.format.break === _figures_enum__WEBPACK_IMPORTED_MODULE_2__["PdfLayoutBreakType"].FitElement)
            && (!fitToPage && (currentPage === param.page)));
        var shapeFinished = false;
        if (canDraw) {
            var drawRectangle = this.getDrawBounds(curBounds, sBounds);
            this.drawShape(currentPage.graphics, curBounds, drawRectangle);
            result.bounds = this.getPageResultBounds(curBounds, sBounds);
            shapeFinished = ((curBounds.height) >= (sBounds.height));
        }
        result.end = (shapeFinished || (param.format.layout === _figures_enum__WEBPACK_IMPORTED_MODULE_2__["PdfLayoutType"].OnePage));
        result.page = currentPage;
        return result;
    };
    /**
     * Returns Rectangle for element drawing on the page.
     * @private
     */
    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {
        var result = currentBounds;
        result.y = (result.y - shapeLayoutBounds.y);
        result.height = (result.height + shapeLayoutBounds.y);
        return result;
    };
    /**
     * Draws the shape.
     * @private
     */
    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {
        var gState = g.save();
        try {
            g.setClip(currentBounds);
            this.element.drawGraphicsHelper(g, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](drawRectangle.x, drawRectangle.y));
        }
        finally {
            g.restore(gState);
        }
    };
    /**
     * Corrects current bounds on the page.
     * @protected
     */
    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {
        var pageSize = currentPage.graphics.clientSize;
        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);
        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);
        if (this.isPdfGrid) {
            curBounds.height = (curBounds.height - this.bottomCellPadding);
        }
        return curBounds;
    };
    /**
     * Calculates bounds where the shape was layout on the page.
     * @private
     */
    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {
        var result = currentBounds;
        result.height = Math.min(result.height, shapeLayoutBounds.height);
        return result;
    };
    /**
     * Checks whether shape rectangle fits to the lay outing bounds.
     * @private
     */
    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {
        var fits = (shapeLayoutBounds.height <= currentBounds.height);
        return fits;
    };
    /**
     * Initializes the offset `index`.
     * * @default 0
     * @private
     */
    ShapeLayouter.index = 0;
    /**
     * Initializes the `difference in page height`.
     * * @default 0
     * @private
     */
    ShapeLayouter.splitDiff = 0;
    /**
     * Determines the `end of Vertical offset` values.
     * * @default false
     * @private
     */
    ShapeLayouter.last = false;
    /**
     * Determines the document link annotation `border width`.
     * * @default 0
     * @private
     */
    ShapeLayouter.borderWidth = 0;
    return ShapeLayouter;
}(_element_layouter__WEBPACK_IMPORTED_MODULE_0__["ElementLayouter"]));

/**
 * Contains lay outing result settings.
 * @private
 */
var ShapeLayoutResult = /** @class */ (function () {
    function ShapeLayoutResult() {
    }
    return ShapeLayoutResult;
}());


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/text-layouter.js":
/*!**************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/text-layouter.js ***!
  \**************************************************************************************************************************************************************/
/*! exports provided: TextLayouter, TextPageLayoutResult, PdfTextLayoutResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextLayouter", function() { return TextLayouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextPageLayoutResult", function() { return TextPageLayoutResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTextLayoutResult", function() { return PdfTextLayoutResult; });
/* harmony import */ var _element_layouter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _figures_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../figures/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js");
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../../annotations/pdf-text-web-link */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * TextLayouter.ts class for EJ2-PDF
 */






/**
 * Class that `layouts the text`.
 * @private
 */
var TextLayouter = /** @class */ (function (_super) {
    __extends(TextLayouter, _super);
    // Constructors
    /**
     * Initializes a new instance of the `TextLayouter` class.
     * @private
     */
    function TextLayouter(element) {
        return _super.call(this, element) || this;
    }
    Object.defineProperty(TextLayouter.prototype, "element", {
        /**
         * Gets the layout `element`.
         * @private
         */
        get: function () {
            return _super.prototype.getElement.call(this);
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Layouts` the element.
     * @private
     */
    TextLayouter.prototype.layoutInternal = function (param) {
        /* tslint:disable */
        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;
        var currentPage = param.page;
        var currentBounds = param.bounds;
        var text = this.element.value;
        var result = null;
        var pageResult = new TextPageLayoutResult();
        pageResult.page = currentPage;
        pageResult.remainder = text;
        for (;;) {
            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);
            result = this.getLayoutResult(pageResult);
            break;
        }
        /* tslint:enable */
        return result;
    };
    /**
     * Raises `PageLayout` event if needed.
     * @private
     */
    TextLayouter.prototype.getLayoutResult = function (pageResult) {
        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);
        return result;
    };
    /* tslint:disable */
    /**
     * `Layouts` the text on the page.
     * @private
     */
    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {
        var result = new TextPageLayoutResult();
        result.remainder = text;
        result.page = currentPage;
        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);
        var layouter = new _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_2__["PdfStringLayouter"]();
        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"](0, 0));
        var textFinished = (stringResult.remainder == null);
        var doesntFit = (param.format.break === _figures_enum__WEBPACK_IMPORTED_MODULE_3__["PdfLayoutBreakType"].FitElement);
        var canDraw = !(doesntFit || stringResult.empty);
        // Draw the text.
        var graphics = currentPage.graphics;
        var brush = this.element.getBrush();
        if (this.element instanceof _annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_5__["PdfTextWebLink"]) {
            brush.color = new _pdf_color__WEBPACK_IMPORTED_MODULE_4__["PdfColor"](0, 0, 255);
        }
        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);
        var lineInfo = stringResult.lines[stringResult.lineCount - 1];
        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);
        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);
        result.remainder = stringResult.remainder;
        result.end = (textFinished);
        return result;
    };
    /* tslint:enable */
    /**
     * `Corrects current bounds` on the page.
     * @private
     */
    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {
        var pageSize = currentPage.graphics.clientSize;
        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;
        return currentBounds;
    };
    /**
     * Returns a `rectangle` where the text was printed on the page.
     * @private
     */
    /* tslint:disable */
    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {
        var textSize = stringResult.actualSize;
        var x = currentBounds.x;
        var y = currentBounds.y;
        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;
        var height = textSize.height;
        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);
        // if (currentBounds.width <= 0) {
        x = shiftedRect.x;
        // }
        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);
        y += verticalShift;
        var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](x, y, width, height);
        return bounds;
    };
    return TextLayouter;
}(_element_layouter__WEBPACK_IMPORTED_MODULE_0__["ElementLayouter"]));

var TextPageLayoutResult = /** @class */ (function () {
    function TextPageLayoutResult() {
    }
    return TextPageLayoutResult;
}());

var PdfTextLayoutResult = /** @class */ (function (_super) {
    __extends(PdfTextLayoutResult, _super);
    // Constructors
    /**
     * Initializes the new instance of `PdfTextLayoutResult` class.
     * @private
     */
    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {
        var _this = _super.call(this, page, bounds) || this;
        _this.remainderText = remainder;
        _this.lastLineTextBounds = lastLineBounds;
        return _this;
    }
    Object.defineProperty(PdfTextLayoutResult.prototype, "remainder", {
        // Properties
        /**
         * Gets a value that contains the `text` that was not printed.
         * @private
         */
        get: function () {
            return this.remainderText;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextLayoutResult.prototype, "lastLineBounds", {
        /**
         * Gets a value that indicates the `bounds` of the last line that was printed on the page.
         * @private
         */
        get: function () {
            return this.lastLineTextBounds;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTextLayoutResult;
}(_element_layouter__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutResult"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/ellipse-part.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/ellipse-part.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: PdfEllipsePart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfEllipsePart", function() { return PdfEllipsePart; });
/* harmony import */ var _pdf_pen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _rectangle_area__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rectangle-area */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/rectangle-area.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.
 * @private
 */
var PdfEllipsePart = /** @class */ (function (_super) {
    __extends(PdfEllipsePart, _super);
    /* tslint:disable-next-line:max-line-length */
    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * public variable to store the start angle.
         * @public
         */
        _this.startAngle = 0;
        /**
         * public variable to store the sweep angle.
         * @public
         */
        _this.sweepAngle = 0;
        if (typeof arg1 === 'undefined') {
            //
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"] && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {
            _this = _super.call(this, arg1) || this;
            _this.startAngle = arg2;
            _this.sweepAngle = arg3;
        }
        else if (arg1 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_0__["PdfPen"]) {
            if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"]) {
                _this = _super.call(this, arg1, arg2, arg3) || this;
                _this.startAngle = arg4;
                _this.sweepAngle = arg5;
            }
            else {
                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;
                _this.startAngle = arg7;
                _this.sweepAngle = arg8;
            }
        }
        else {
            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;
            _this.startAngle = arg5;
            _this.sweepAngle = arg6;
        }
        return _this;
    }
    return PdfEllipsePart;
}(_rectangle_area__WEBPACK_IMPORTED_MODULE_2__["PdfRectangleArea"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: PdfLayoutType, PdfLayoutBreakType, PathPointType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutType", function() { return PdfLayoutType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutBreakType", function() { return PdfLayoutBreakType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PathPointType", function() { return PathPointType; });
/**
 * public Enum for `PdfLayoutType`.
 * @private
 */
var PdfLayoutType;
(function (PdfLayoutType) {
    /**
     * Specifies the type of `Paginate`.
     * @private
     */
    PdfLayoutType[PdfLayoutType["Paginate"] = 0] = "Paginate";
    /**
     * Specifies the type of `OnePage`.
     * @private
     */
    PdfLayoutType[PdfLayoutType["OnePage"] = 1] = "OnePage";
})(PdfLayoutType || (PdfLayoutType = {}));
/**
 * public Enum for `PdfLayoutBreakType`.
 * @private
 */
var PdfLayoutBreakType;
(function (PdfLayoutBreakType) {
    /**
     * Specifies the type of `FitPage`.
     * @private
     */
    PdfLayoutBreakType[PdfLayoutBreakType["FitPage"] = 0] = "FitPage";
    /**
     * Specifies the type of `FitElement`.
     * @private
     */
    PdfLayoutBreakType[PdfLayoutBreakType["FitElement"] = 1] = "FitElement";
    /**
     * Specifies the type of `FitColumnsToPage`.
     * @private
     */
    PdfLayoutBreakType[PdfLayoutBreakType["FitColumnsToPage"] = 2] = "FitColumnsToPage";
})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));
var PathPointType;
(function (PathPointType) {
    /**
     * Specifies the path point type of `Start`.
     * @private
     */
    PathPointType[PathPointType["Start"] = 0] = "Start";
    /**
     * Specifies the path point type of `Line`.
     * @private
     */
    PathPointType[PathPointType["Line"] = 1] = "Line";
    /**
     * Specifies the path point type of `Bezier3`.
     * @private
     */
    PathPointType[PathPointType["Bezier3"] = 3] = "Bezier3";
    /**
     * Specifies the path point type of `Bezier`.
     * @private
     */
    PathPointType[PathPointType["Bezier"] = 3] = "Bezier";
    /**
     * Specifies the path point type of `PathTypeMask`.
     * @private
     */
    PathPointType[PathPointType["PathTypeMask"] = 7] = "PathTypeMask";
    /**
     * Specifies the path point type of `DashMode`.
     * @private
     */
    PathPointType[PathPointType["DashMode"] = 16] = "DashMode";
    /**
     * Specifies the path point type of `PathMarker`.
     * @private
     */
    PathPointType[PathPointType["PathMarker"] = 32] = "PathMarker";
    /**
     * Specifies the path point type of `CloseSubpath`.
     * @private
     */
    PathPointType[PathPointType["CloseSubpath"] = 128] = "CloseSubpath";
})(PathPointType || (PathPointType = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/layout-element.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/layout-element.js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: PdfLayoutElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutElement", function() { return PdfLayoutElement; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _base_element_layouter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _structured_elements_grid_styles_pdf_borders__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../structured-elements/grid/styles/pdf-borders */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js");



/**
 * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.
 * @private
 */
var PdfLayoutElement = /** @class */ (function () {
    function PdfLayoutElement() {
    }
    Object.defineProperty(PdfLayoutElement.prototype, "raiseBeginPageLayout", {
        // Property
        /**
         * Gets a value indicating whether the `start page layout event` should be raised.
         * @private
         */
        get: function () {
            return (typeof this.beginPageLayout !== 'undefined');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfLayoutElement.prototype, "raiseEndPageLayout", {
        /**
         * Gets a value indicating whether the `ending page layout event` should be raised.
         * @private
         */
        get: function () {
            return (typeof this.endPageLayout !== 'undefined');
        },
        enumerable: true,
        configurable: true
    });
    //Event Handlers
    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {
        if (this.beginPageLayout) {
            this.beginPageLayout(this, args);
        }
    };
    PdfLayoutElement.prototype.onEndPageLayout = function (args) {
        if (this.endPageLayout) {
            this.endPageLayout(this, args);
        }
    };
    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {
        if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"] && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {
            return this.drawHelper(arg2, arg3.x, arg3.y);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {
            return this.drawHelper(arg2, arg3, arg4, null);
        }
        else if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"] && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {
            return this.drawHelper(arg2, arg3, null);
        }
        else if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"] && typeof arg3.width === 'undefined' && arg4 instanceof _base_element_layouter__WEBPACK_IMPORTED_MODULE_1__["PdfLayoutFormat"]) {
            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof _base_element_layouter__WEBPACK_IMPORTED_MODULE_1__["PdfLayoutFormat"] || arg5 == null)) {
            var width = (arg2.graphics.clientSize.width - arg3);
            var layoutRectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"](arg3, arg4, width, 0);
            return this.drawHelper(arg2, layoutRectangle, arg5);
        }
        else if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"] && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {
            this.bEmbedFonts = arg4;
            return this.drawHelper(arg2, arg3, null);
        }
        else {
            var param = new _base_element_layouter__WEBPACK_IMPORTED_MODULE_1__["PdfLayoutParams"]();
            var temparg3 = arg3;
            var temparg4 = arg4;
            param.page = arg2;
            param.bounds = temparg3;
            if (param != null) {
                var x = param.bounds.x;
                var y = param.bounds.y;
                if (param.bounds.x === 0) {
                    x = _structured_elements_grid_styles_pdf_borders__WEBPACK_IMPORTED_MODULE_2__["PdfBorders"].default.right.width / 2;
                }
                if (param.bounds.y === 0) {
                    y = _structured_elements_grid_styles_pdf_borders__WEBPACK_IMPORTED_MODULE_2__["PdfBorders"].default.top.width / 2;
                }
                var newBound = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"](x, y, param.bounds.width, param.bounds.height);
                param.bounds = newBound;
            }
            param.format = (temparg4 != null) ? temparg4 : new _base_element_layouter__WEBPACK_IMPORTED_MODULE_1__["PdfLayoutFormat"]();
            var result = this.layout(param);
            return result;
        }
    };
    return PdfLayoutElement;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/path.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/path.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: PdfPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPath", function() { return PdfPath; });
/* harmony import */ var _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _pdf_pen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../figures/base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js");
/* harmony import */ var _figures_base_fill_element__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../figures/base/fill-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/fill-element.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * Path.ts class for EJ2-PDF
 */







/**
 * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.
 * @private
 */
var PdfPath = /** @class */ (function (_super) {
    __extends(PdfPath, _super);
    /**
     * Initializes a new instance of the `PdfPath` class.
     * @public
     */
    /* tslint:disable-next-line:max-line-length */
    function PdfPath(arg1, arg2, arg3, arg4) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * Local variable to store the points.
         * @private
         */
        _this.mpoints = null;
        /**
         * Local variable to store the path Types.
         * @private
         */
        _this.mpathTypes = null;
        /**
         * Local variable to store the Start Figure.
         * @private
         */
        _this.mStartFigure = true;
        /**
         * Local variable to store the fill Mode.
         * @private
         */
        _this.mfillMode = _enum__WEBPACK_IMPORTED_MODULE_6__["PdfFillMode"].Alternate;
        /**
         * Local variable to store the Beziers.
         * @private
         */
        _this.isBeziers3 = false;
        /**
         * Local variable to store the xps.
         * @private
         */
        _this.isXps = false;
        if (typeof arg1 === 'undefined') {
            //
        }
        else if (arg1 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_1__["PdfPen"]) {
            _this = _super.call(this, arg1) || this;
            if (arg2 instanceof _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_0__["PdfBrush"]) {
                _this = _super.call(this, arg1, arg2) || this;
                _this.fillMode = arg3;
            }
            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {
                _this.addPath(arg2, arg3);
            }
        }
        else if (arg1 instanceof _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_0__["PdfBrush"]) {
            _this = _super.call(this, arg1) || this;
            if (arg2 !== null && typeof arg2 !== 'undefined') {
                _this.fillMode = arg2;
            }
            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {
                _this.addPath(arg3, arg4);
            }
        }
        else {
            _this.addPath(arg1, arg2);
        }
        return _this;
    }
    Object.defineProperty(PdfPath.prototype, "fillMode", {
        // Properties
        /**
         * Gets or sets the fill mode.
         * @public
         */
        get: function () {
            return this.mfillMode;
        },
        set: function (value) {
            this.mfillMode = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPath.prototype, "pathPoints", {
        /**
         * Gets the path points.
         * @public
         */
        get: function () {
            return this.points;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPath.prototype, "pathTypes", {
        /**
         * Gets the path point types.
         * @public
         */
        get: function () {
            return this.types;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPath.prototype, "pointCount", {
        /**
         * Gets the point count.
         * @public
         */
        get: function () {
            var count = 0;
            if ((this.mpoints != null)) {
                count = this.mpoints.length;
            }
            return count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPath.prototype, "lastPoint", {
        /**
         * Gets the last points.
         * @public
         */
        get: function () {
            return this.getLastPoint();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPath.prototype, "points", {
        /**
         * Gets the points list.
         * @private
         */
        get: function () {
            if ((this.mpoints == null)) {
                this.mpoints = [];
            }
            return this.mpoints;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPath.prototype, "types", {
        /**
         * Gets the types.
         * @private
         */
        get: function () {
            if ((this.mpathTypes == null)) {
                this.mpathTypes = [];
            }
            return this.mpathTypes;
        },
        enumerable: true,
        configurable: true
    });
    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {
        if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"] && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(arg1, arg2.x, arg2.y);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"] && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(arg1, arg2, null);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {
            return this.drawHelper(arg1, arg2, arg3, null);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"] && arg3 instanceof _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_2__["PdfLayoutFormat"]) {
            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);
        }
        else if (typeof arg2 === 'number' && (arg4 instanceof _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_2__["PdfLayoutFormat"] || arg4 == null) && typeof arg3 === 'number') {
            var widthValue = (arg1.graphics.clientSize.width - arg2);
            var layoutRect = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"](arg2, arg3, widthValue, 0);
            return this.drawHelper(arg1, layoutRect, arg4);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"] && arg3 instanceof _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_2__["PdfLayoutFormat"]) {
            return this.drawHelper(arg1, arg2, arg3);
        }
        else {
            return this.drawHelper(arg1, arg2, arg3);
        }
    };
    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"]) {
            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);
        }
        else {
            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);
            for (var i = 0; i < points.length; i = i + 8) {
                /* tslint:disable-next-line:max-line-length */
                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];
                this.addPoints(point, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Bezier3);
            }
        }
    };
    /* tslint:disable-next-line:max-line-length */
    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"] && arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"] && arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"] && arg4 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"]) {
            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);
        }
        else {
            var points = [];
            points.push(arg1);
            points.push(arg2);
            points.push(arg3);
            points.push(arg4);
            points.push(arg5);
            points.push(arg6);
            points.push(arg7);
            points.push(arg8);
            this.addPoints(points, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Bezier3);
        }
    };
    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"]) {
            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);
        }
        else {
            this.startFigure();
            this.addArc(arg1, arg2, arg3, arg4, 0, 360);
            this.closeFigure();
        }
    };
    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"] && arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"]) {
            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);
        }
        else {
            var points = [];
            points.push(arg1);
            points.push(arg2);
            points.push(arg3);
            points.push(arg4);
            this.addPoints(points, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Line);
        }
    };
    PdfPath.prototype.addPath = function (arg1, arg2) {
        if (arg1 instanceof PdfPath) {
            this.addPath(arg1.pathPoints, arg1.pathTypes);
        }
        else {
            if ((arg1 == null)) {
                throw new Error('ArgumentNullException:pathPoints');
            }
            if ((arg2 == null)) {
                throw new Error('ArgumentNullException:pathTypes');
            }
            var count = arg1.length;
            if ((count !== arg2.length)) {
                throw new Error('The argument arrays should be of equal length.');
            }
        }
    };
    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"]) {
            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);
        }
        else {
            this.startFigure();
            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);
            this.addPoint(new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"]((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Line);
            this.closeFigure();
        }
    };
    /**
     * `add a polygon` specified by points.
     * @param points The points of the polygon
     */
    PdfPath.prototype.addPolygon = function (points) {
        var count = (points.length * 2);
        var p = [];
        this.startFigure();
        for (var i = 0; i < points.length; i++) {
            p.push(points[i].x);
            p.push(points[i].y);
        }
        this.addPoints(p, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Line);
        this.closeFigure();
    };
    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"]) {
            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);
        }
        else {
            var points = [];
            this.startFigure();
            points.push(arg1);
            points.push(y);
            points.push((arg1 + width));
            points.push(y);
            points.push((arg1 + width));
            points.push((y + height));
            points.push(arg1);
            points.push((y + height));
            this.addPoints(points, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Line);
            this.closeFigure();
        }
    };
    /**
     * Starts a new figure.
     * @public
     */
    PdfPath.prototype.startFigure = function () {
        this.mStartFigure = true;
    };
    /**
     * Closed all non-closed figures.
     * @public
     */
    PdfPath.prototype.closeAllFigures = function () {
        var startPath = this.pathPoints[0];
        for (var i = 0; i < this.mpathTypes.length; i++) {
            var pt = ((this.types[i]));
            var flag = false;
            if (((i !== 0) && (pt === _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Start))) {
                this.closeFigure((i - 1));
                flag = true;
            }
            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {
                if ((startPath.x === this.pathPoints[i].y)) {
                    this.closeFigure(i);
                }
            }
        }
    };
    /**
     * Gets the last point.
     * @public
     */
    PdfPath.prototype.getLastPoint = function () {
        var lastPoint = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"](0, 0);
        var count = this.pointCount;
        if (((count > 0) && (this.mpoints != null))) {
            lastPoint.x = this.mpoints[(count - 1)].x;
            lastPoint.y = this.mpoints[(count - 1)].y;
        }
        return lastPoint;
    };
    /**
     * Gets the bezier points for arc constructing.
     * @public
     */
    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {
        if ((x1 > x2)) {
            var tmp = void 0;
            tmp = x1;
            x1 = x2;
            x2 = tmp;
        }
        if ((y2 > y1)) {
            var tmp = void 0;
            tmp = y1;
            y1 = y2;
            y2 = tmp;
        }
        var fragAngle;
        var numFragments;
        if ((Math.abs(e1) <= 90)) {
            fragAngle = e1;
            numFragments = 1;
        }
        else {
            numFragments = (Math.ceil((Math.abs(e1) / 90)));
            fragAngle = (e1 / numFragments);
        }
        var xcen = ((x1 + x2) / 2);
        var ycen = ((y1 + y2) / 2);
        var rx = ((x2 - x1) / 2);
        var ry = ((y2 - y1) / 2);
        var halfAng = ((fragAngle * (Math.PI / 360)));
        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));
        var pointList = [];
        for (var i = 0; (i < numFragments); i++) {
            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));
            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));
            var cos0 = (Math.cos(theta0));
            var cos1 = (Math.cos(theta1));
            var sin0 = (Math.sin(theta0));
            var sin1 = (Math.sin(theta1));
            if ((fragAngle > 0)) {
                /* tslint:disable-next-line:max-line-length */
                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));
            }
            else {
                /* tslint:disable-next-line:max-line-length */
                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));
            }
        }
        return pointList;
    };
    /**
     * `getBoundsInternal` Returns a rectangle that bounds this element.
     * @public
     */
    PdfPath.prototype.getBoundsInternal = function () {
        var points = this.pathPoints;
        var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"](0, 0, 0, 0);
        if ((points.length > 0)) {
            var xmin = points[0].x;
            var xmax = points[0].x;
            var ymin = points[0].y;
            var ymax = points[0].y;
            for (var i = 1; i < points.length; i++) {
                var point = points[i];
                xmin = Math.min(point.x, xmin);
                xmax = Math.max(point.x, xmax);
                ymin = Math.min(point.y, ymin);
                ymax = Math.max(point.y, ymax);
            }
            bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["RectangleF"](xmin, ymin, (xmax - xmin), (ymax - ymin));
        }
        return bounds;
    };
    /**
     * `drawInternal` Draws an element on the Graphics.
     * @param graphics Graphics context where the element should be printed.
     * @public
     */
    PdfPath.prototype.drawInternal = function (graphics) {
        if ((graphics == null)) {
            throw new Error('ArgumentNullException :graphics');
        }
        graphics.drawPath(this.obtainPen(), this.brush, this);
    };
    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {
        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {
            this.addPoints(points, pointType, 0, points.length);
        }
        else {
            for (var i = startIndex; i < endIndex; i++) {
                var point = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_3__["PointF"](points[i], points[(i + 1)]);
                if ((i === startIndex)) {
                    if (((this.pointCount <= 0) || this.mStartFigure)) {
                        this.addPoint(point, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Start);
                        this.mStartFigure = false;
                    }
                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {
                        this.addPoint(point, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Line);
                    }
                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {
                        this.addPoint(point, _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].Bezier3);
                    }
                }
                else {
                    this.addPoint(point, pointType);
                }
                i++;
            }
        }
    };
    /**
     * `add a point` Adds the point and its type
     * @param points The points.
     * @param pointType Type of the points.
     * @private
     */
    PdfPath.prototype.addPoint = function (point, pointType) {
        this.points.push(point);
        this.types.push((pointType));
    };
    PdfPath.prototype.closeFigure = function (index) {
        if (typeof index === 'undefined') {
            if ((this.pointCount > 0)) {
                this.closeFigure(this.pointCount - 1);
            }
            this.startFigure();
        }
        else {
            if ((index < 0)) {
                throw new Error('IndexOutOfRangeException()');
            }
            var pt = ((this.types[index]));
            pt = (pt | _enum__WEBPACK_IMPORTED_MODULE_4__["PathPointType"].CloseSubpath);
            this.types[index] = (pt);
        }
    };
    return PdfPath;
}(_figures_base_fill_element__WEBPACK_IMPORTED_MODULE_5__["PdfFillElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: PdfTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTemplate", function() { return PdfTemplate; });
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _pdf_graphics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../pdf-graphics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-graphics.js");
/* harmony import */ var _pdf_resources__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../pdf-resources */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-resources.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/**
 * PdfTemplate.ts class for EJ2-PDF
 */








/**
 * Represents `Pdf Template` object.
 * @private
 */
var PdfTemplate = /** @class */ (function () {
    function PdfTemplate(arg1, arg2) {
        /**
         * Initialize an instance for `DictionaryProperties` class.
         * @private
         * @hidden
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_1__["DictionaryProperties"]();
        /**
         * Checks whether the transformation 'is performed'.
         * @default true
         * @private
         */
        this.writeTransformation = true;
        if (typeof arg1 === 'undefined') {
            //
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_6__["SizeF"] && typeof arg2 === 'undefined') {
            this.content = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_0__["PdfStream"]();
            var tempSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_6__["SizeF"](arg1.width, arg1.height);
            this.setSize(tempSize);
            this.initialize();
        }
        else {
            this.content = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_0__["PdfStream"]();
            this.setSize(new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_6__["SizeF"](arg1, arg2));
            this.initialize();
        }
    }
    Object.defineProperty(PdfTemplate.prototype, "size", {
        //Properties
        /**
         * Gets the size of the 'PdfTemplate'.
         */
        get: function () {
            return this.templateSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplate.prototype, "width", {
        /**
         * Gets the width of the 'PdfTemplate'.
         */
        get: function () {
            return this.size.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplate.prototype, "height", {
        /**
         * Gets the height of the 'PdfTemplate'.
         */
        get: function () {
            return this.size.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTemplate.prototype, "graphics", {
        /**
         * Gets the `graphics` of the 'PdfTemplate'.
         */
        get: function () {
            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {
                var gr = new _pdf_graphics__WEBPACK_IMPORTED_MODULE_3__["GetResourceEventHandler"](this);
                var g = new _pdf_graphics__WEBPACK_IMPORTED_MODULE_3__["PdfGraphics"](this.size, gr, this.content);
                this.pdfGraphics = g;
                // if(this.writeTransformation) {
                // Transform co-ordinates to Top/Left.
                this.pdfGraphics.initializeCoordinates();
                // }
            }
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the resources and modifies the template dictionary.
     * @private
     */
    PdfTemplate.prototype.getResources = function () {
        if (this.resources == null) {
            this.resources = new _pdf_resources__WEBPACK_IMPORTED_MODULE_4__["PdfResources"]();
            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);
        }
        return this.resources;
    };
    // Public methods
    /**
     * `Initialize` the type and subtype of the template.
     * @private
     */
    PdfTemplate.prototype.initialize = function () {
        this.addType();
        this.addSubType();
    };
    /**
     * `Adds type key`.
     * @private
     */
    PdfTemplate.prototype.addType = function () {
        var value = new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.xObject);
        this.content.items.setValue(this.dictionaryProperties.type, value);
    };
    /**
     * `Adds SubType key`.
     * @private
     */
    PdfTemplate.prototype.addSubType = function () {
        var value = new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.form);
        this.content.items.setValue(this.dictionaryProperties.subtype, value);
    };
    PdfTemplate.prototype.reset = function (size) {
        if (typeof size === 'undefined') {
            if (this.resources != null) {
                this.resources = null;
                this.content.remove(this.dictionaryProperties.resources);
            }
            if (this.graphics != null) {
                this.graphics.reset(this.size);
            }
        }
        else {
            this.setSize(size);
            this.reset();
        }
    };
    /**
     * `Set the size` of the 'PdfTemplate'.
     * @private
     */
    PdfTemplate.prototype.setSize = function (size) {
        var rect = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_6__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_6__["PointF"](0, 0), size);
        var val = _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__["PdfArray"].fromRectangle(rect);
        this.content.items.setValue(this.dictionaryProperties.bBox, val);
        this.templateSize = size;
    };
    Object.defineProperty(PdfTemplate.prototype, "element", {
        // /**
        //  * Returns the value of current graphics.
        //  * @private
        //  */
        // public GetGraphics(g : PdfGraphics) : PdfGraphics {
        //     if (this.graphics == null || typeof this.graphics === 'undefined') {
        //         this.graphics = g;
        //         this.graphics.Size = this.Size;
        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)
        //         this.graphics.Initialize();
        //         if(this.writeTransformation) {
        //             this.graphics.InitializeCoordinates();
        //         }
        //     }
        //     return this.graphics;
        // }
        // IPdfWrapper Members
        /**
         * Gets the `content stream` of 'PdfTemplate' class.
         * @private
         */
        get: function () {
            return this.content;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTemplate;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/rectangle-area.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/rectangle-area.js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: PdfRectangleArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfRectangleArea", function() { return PdfRectangleArea; });
/* harmony import */ var _pdf_pen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _figures_base_fill_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../figures/base/fill-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/fill-element.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.
 * @private
 */
var PdfRectangleArea = /** @class */ (function (_super) {
    __extends(PdfRectangleArea, _super);
    /* tslint:disable-next-line:max-line-length */
    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {
        var _this = _super.call(this) || this;
        //Fields
        /**
         * public variable to store the rectangle.
         * @public
         */
        _this.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](0, 0, 0, 0);
        if (typeof arg1 === 'undefined') {
            //
        }
        else if (arg1 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_0__["PdfPen"]) {
            _this = _super.call(this, arg1, arg2) || this;
            if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"]) {
                _this.bounds = arg3;
            }
            else {
                _this.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](arg3, arg4, arg5, arg6);
            }
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"]) {
            _this.bounds = arg1;
        }
        else {
            _this.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](arg1, arg2, arg3, arg4);
        }
        return _this;
    }
    Object.defineProperty(PdfRectangleArea.prototype, "x", {
        //Properties
        /**
         * Gets or sets the X co-ordinate of the upper-left corner of this the element.
         * @public
         */
        get: function () {
            return this.bounds.x;
        },
        set: function (value) {
            this.bounds.x = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfRectangleArea.prototype, "y", {
        /**
         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.
         * @public
         */
        get: function () {
            return this.bounds.y;
        },
        set: function (value) {
            this.bounds.y = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfRectangleArea.prototype, "width", {
        /**
         * Gets or sets the width of this element.
         * @public
         */
        get: function () {
            return this.bounds.width;
        },
        set: function (value) {
            this.bounds.width = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfRectangleArea.prototype, "height", {
        /**
         * Gets or sets the height of this element.
         * @public
         */
        get: function () {
            return this.bounds.height;
        },
        set: function (value) {
            this.bounds.height = value;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    PdfRectangleArea.prototype.getBoundsInternal = function () {
        return this.bounds;
    };
    return PdfRectangleArea;
}(_figures_base_fill_element__WEBPACK_IMPORTED_MODULE_2__["PdfFillElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/text-element.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/text-element.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: PdfTextElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTextElement", function() { return PdfTextElement; });
/* harmony import */ var _figures_layout_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../figures/layout-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/layout-element.js");
/* harmony import */ var _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../fonts/pdf-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js");
/* harmony import */ var _fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../fonts/pdf-standard-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font.js");
/* harmony import */ var _pdf_pen__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../figures/base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _base_text_layouter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./base/text-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/text-layouter.js");
/* harmony import */ var _brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../brushes/pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfTextElement.ts class for EJ2-PDF
 */













/**
 * `PdfTextElement` class represents the text area with the ability to span several pages
 * and inherited from the 'PdfLayoutElement' class.
 * @private
 */
var PdfTextElement = /** @class */ (function (_super) {
    __extends(PdfTextElement, _super);
    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {
        var _this = _super.call(this) || this;
        // Fields
        /**
         * `Text` data.
         * @private
         */
        _this.content = '';
        /**
         * `Value` of text data.
         * @private
         */
        _this.elementValue = '';
        /**
         * indicate whether the drawText with PointF overload is called or not.
         * @default false
         * @private
         */
        _this.hasPointOverload = false;
        /**
         * indicate whether the PdfGridCell value is `PdfTextElement`
         * @default false
         * @private
         */
        _this.isPdfTextElement = false;
        if (typeof arg1 === 'undefined') {
            //
        }
        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {
            _this.content = arg1;
            _this.elementValue = arg1;
        }
        else if (typeof arg1 === 'string' && arg2 instanceof _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_2__["PdfFont"] && typeof arg3 === 'undefined') {
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
        }
        else if (typeof arg1 === 'string' && arg2 instanceof _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_2__["PdfFont"] && arg3 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_4__["PdfPen"] && typeof arg4 === 'undefined') {
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
            _this.pdfPen = arg3;
        }
        else if (typeof arg1 === 'string' && arg2 instanceof _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_2__["PdfFont"] && arg3 instanceof _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_1__["PdfBrush"] && typeof arg4 === 'undefined') {
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
            _this.pdfBrush = arg3;
        }
        else {
            _this.content = arg1;
            _this.elementValue = arg1;
            _this.pdfFont = arg2;
            _this.pdfPen = arg3;
            _this.pdfBrush = arg4;
            _this.format = arg5;
        }
        return _this;
    }
    Object.defineProperty(PdfTextElement.prototype, "text", {
        // Properties
        /**
         * Gets or sets a value indicating the `text` that should be printed.
         * ```typescript
         * // create a new PDF document.
         * let document : PdfDocument = new PdfDocument();
         * // add a page to the document.
         * let page1 : PdfPage = document.pages.add();
         * // create the font
         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
         * // create the Text Web Link
         * let textLink : PdfTextWebLink = new PdfTextWebLink();
         * // set the hyperlink
         * textLink.url = 'http://www.google.com';
         * //
         * // set the link text
         * textLink.text = 'Google';
         * //
         * // set the font
         * textLink.font = font;
         * // draw the hyperlink in PDF page
         * textLink.draw(page1, new PointF(10, 40));
         * // save the document.
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.elementValue = value;
            this.content = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "value", {
        //get value
        /**
         * Gets or sets a `value` indicating the text that should be printed.
         * @private
         */
        get: function () {
            return this.elementValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "pen", {
        //get pen
        /**
         * Gets or sets a `PdfPen` that determines the color, width, and style of the text
         * @private
         */
        get: function () {
            return this.pdfPen;
        },
        //Set pen value
        set: function (value) {
            this.pdfPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "brush", {
        //get brush
        /**
         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.
         * @private
         */
        get: function () {
            return this.pdfBrush;
        },
        //Set brush value
        set: function (value) {
            this.pdfBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "font", {
        //get font
        /**
         * Gets or sets a `PdfFont` that defines the text format.
         * ```typescript
         * // create a new PDF document.
         * let document : PdfDocument = new PdfDocument();
         * // add a page to the document.
         * let page1 : PdfPage = document.pages.add();
         * // create the font
         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);
         * // create the Text Web Link
         * let textLink : PdfTextWebLink = new PdfTextWebLink();
         * // set the hyperlink
         * textLink.url = 'http://www.google.com';
         * // set the link text
         * textLink.text = 'Google';
         * //
         * // set the font
         * textLink.font = font;
         * //
         * // draw the hyperlink in PDF page
         * textLink.draw(page1, new PointF(10, 40));
         * // save the document.
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            return this.pdfFont;
        },
        set: function (value) {
            this.pdfFont = value;
            if (this.pdfFont instanceof _fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_3__["PdfStandardFont"] && this.content != null) {
                this.elementValue = _fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_3__["PdfStandardFont"].convert(this.content);
            }
            else {
                this.elementValue = this.content;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfTextElement.prototype, "stringFormat", {
        /**
         * Gets or sets the `PdfStringFormat` that will be used to set the string format
         * @private
         */
        get: function () {
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * Gets a `brush` for drawing.
     * @private
     */
    PdfTextElement.prototype.getBrush = function () {
        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new _brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_7__["PdfSolidBrush"](new _pdf_color__WEBPACK_IMPORTED_MODULE_8__["PdfColor"](0, 0, 0)) : this.pdfBrush;
    };
    // /**
    //  * `Draws` an element on the Graphics.
    //  * @private
    //  */
    // public drawInternal(graphics : PdfGraphics) : void {
    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);
    // }
    /**
     * `Layouts` the element.
     * @private
     */
    PdfTextElement.prototype.layout = function (param) {
        var layouter = new _base_text_layouter__WEBPACK_IMPORTED_MODULE_6__["TextLayouter"](this);
        var result = layouter.layout(param);
        return result;
    };
    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {
        if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["PointF"] && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {
            this.hasPointOverload = true;
            return this.drawText(arg2, arg3.x, arg3.y);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {
            this.hasPointOverload = true;
            return this.drawText(arg2, arg3, arg4, null);
        }
        else if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"] && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {
            return this.drawText(arg2, arg3, null);
        }
        else if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["PointF"] && typeof arg3.width === 'undefined' && arg4 instanceof _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutFormat"]) {
            this.hasPointOverload = true;
            return this.drawText(arg2, arg3.x, arg3.y, arg4);
        }
        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutFormat"] || arg5 == null)) {
            this.hasPointOverload = true;
            var width = (arg2.graphics.clientSize.width - arg3);
            var layoutRectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](arg3, arg4, width, 0);
            return this.drawText(arg2, layoutRectangle, arg5);
        }
        else if (arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"] && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {
            return this.drawText(arg2, arg3, null);
        }
        else {
            var layout = new _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_10__["PdfStringLayouter"]();
            if (this.hasPointOverload) {
                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["SizeF"]((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);
                var layoutResult = void 0;
                var param = new _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutParams"]();
                var temparg3 = arg3;
                var temparg4 = arg4;
                param.page = arg2;
                var previousPage = arg2;
                param.bounds = temparg3;
                param.format = (temparg4 != null) ? temparg4 : new _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutFormat"]();
                if (stringLayoutResult.lines.length > 1) {
                    this.text = stringLayoutResult.layoutLines[0].text;
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        var previousPosition = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["PointF"](param.bounds.x, param.bounds.y);
                        layoutResult = this.layout(param);
                        var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);
                        var isPaginate = false;
                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {
                            param.page = layoutResult.page;
                            param.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["PointF"](bounds.x, bounds.y), new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["SizeF"](bounds.width, bounds.height));
                            this.text = stringLayoutResult.layoutLines[i].text;
                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {
                                isPaginate = true;
                                param.page = param.page.graphics.getNextPage();
                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {
                                    bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);
                                }
                                else {
                                    bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);
                                }
                                param.bounds = bounds;
                            }
                            layoutResult = this.layout(param);
                            if (i !== (stringLayoutResult.lines.length - 1)) {
                                bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);
                            }
                            else {
                                var lineWidth = this.font.measureString(this.text, this.format).width;
                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);
                            }
                        }
                    }
                    return layoutResult;
                }
                else {
                    var lineSize = this.font.measureString(this.text, this.format);
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        layoutResult = this.layout(param);
                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);
                    }
                    return layoutResult;
                }
            }
            else {
                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["SizeF"](arg3.width, 0), false, arg2.graphics.clientSize);
                var result = void 0;
                var param = new _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutParams"]();
                var temparg3 = arg3;
                var temparg4 = arg4;
                param.page = arg2;
                param.bounds = temparg3;
                param.format = (temparg4 != null) ? temparg4 : new _figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutFormat"]();
                if (layoutResult.lines.length > 1) {
                    this.text = layoutResult.layoutLines[0].text;
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        var previousPosition = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["PointF"](param.bounds.x, param.bounds.y);
                        result = this.layout(param);
                        var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);
                        var isPaginate = false;
                        for (var i = 1; i < layoutResult.lines.length; i++) {
                            param.page = result.page;
                            param.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](bounds.x, bounds.y, bounds.width, bounds.height);
                            this.text = layoutResult.layoutLines[i].text;
                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {
                                isPaginate = true;
                                param.page = param.page.graphics.getNextPage();
                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {
                                    bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);
                                }
                                else {
                                    bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](temparg3.x, 0, temparg3.width, layoutResult.lineHeight);
                                }
                                param.bounds = bounds;
                            }
                            result = this.layout(param);
                            if (i !== (layoutResult.lines.length - 1)) {
                                bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_9__["RectangleF"](temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);
                            }
                            else {
                                var lineWidth = this.font.measureString(this.text, this.format).width;
                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);
                            }
                        }
                    }
                    return result;
                }
                else {
                    var lineSize = this.font.measureString(this.text, this.format);
                    if (param.bounds.y <= param.page.graphics.clientSize.height) {
                        result = this.layout(param);
                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);
                    }
                    return result;
                }
            }
        }
    };
    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {
        var shift = 0;
        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === _enum__WEBPACK_IMPORTED_MODULE_11__["PdfTextAlignment"].Center) {
            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;
            result.bounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === _enum__WEBPACK_IMPORTED_MODULE_11__["PdfTextAlignment"].Right) {
            result.bounds.x = startPosition + (maximumWidth - lineWidth);
            result.bounds.width = lineWidth;
        }
        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === _enum__WEBPACK_IMPORTED_MODULE_11__["PdfTextAlignment"].Justify) {
            result.bounds.x = startPosition;
            result.bounds.width = maximumWidth;
        }
        else {
            result.bounds.width = startPosition;
            result.bounds.width = lineWidth;
        }
        return result;
    };
    return PdfTextElement;
}(_figures_layout_element__WEBPACK_IMPORTED_MODULE_0__["PdfLayoutElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: PdfFontStyle, PdfFontFamily, PdfFontType, PdfWordWrapType, PdfSubSuperScript, FontEncoding, TtfCmapFormat, TtfCmapEncoding, TtfPlatformID, TtfMicrosoftEncodingID, TtfMacintoshEncodingID, FontDescriptorFlags, TtfCompositeGlyphFlags */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFontStyle", function() { return PdfFontStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFontFamily", function() { return PdfFontFamily; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFontType", function() { return PdfFontType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfWordWrapType", function() { return PdfWordWrapType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSubSuperScript", function() { return PdfSubSuperScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FontEncoding", function() { return FontEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfCmapFormat", function() { return TtfCmapFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfCmapEncoding", function() { return TtfCmapEncoding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfPlatformID", function() { return TtfPlatformID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfMicrosoftEncodingID", function() { return TtfMicrosoftEncodingID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfMacintoshEncodingID", function() { return TtfMacintoshEncodingID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FontDescriptorFlags", function() { return FontDescriptorFlags; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfCompositeGlyphFlags", function() { return TtfCompositeGlyphFlags; });
/**
 * public Enum for `PdfFontStyle`.
 * @private
 */
var PdfFontStyle;
(function (PdfFontStyle) {
    /**
     * Specifies the type of `Regular`.
     * @private
     */
    PdfFontStyle[PdfFontStyle["Regular"] = 0] = "Regular";
    /**
     * Specifies the type of `Bold`.
     * @private
     */
    PdfFontStyle[PdfFontStyle["Bold"] = 1] = "Bold";
    /**
     * Specifies the type of `Italic`.
     * @private
     */
    PdfFontStyle[PdfFontStyle["Italic"] = 2] = "Italic";
    /**
     * Specifies the type of `Underline`.
     * @private
     */
    PdfFontStyle[PdfFontStyle["Underline"] = 4] = "Underline";
    /**
     * Specifies the type of `Strikeout`.
     * @private
     */
    PdfFontStyle[PdfFontStyle["Strikeout"] = 8] = "Strikeout";
})(PdfFontStyle || (PdfFontStyle = {}));
/**
 * Specifies the font family from the standard font.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // add a new page to the document
 * let page1 : PdfPage = document.pages.add();
 * // create new standard font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * // create black brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
 * // draw the text
 * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
 * // save the document
 * document.save('output.pdf');
 * ```
 */
var PdfFontFamily;
(function (PdfFontFamily) {
    /**
     * Specifies the `Helvetica` font.
     */
    PdfFontFamily[PdfFontFamily["Helvetica"] = 0] = "Helvetica";
    /**
     * Specifies the `Courier` font.
     */
    PdfFontFamily[PdfFontFamily["Courier"] = 1] = "Courier";
    /**
     * Specifies the `TimesRoman` font.
     */
    PdfFontFamily[PdfFontFamily["TimesRoman"] = 2] = "TimesRoman";
    /**
     * Specifies the `Symbol` font.
     */
    PdfFontFamily[PdfFontFamily["Symbol"] = 3] = "Symbol";
    /**
     * Specifies the `ZapfDingbats` font.
     */
    PdfFontFamily[PdfFontFamily["ZapfDingbats"] = 4] = "ZapfDingbats";
})(PdfFontFamily || (PdfFontFamily = {}));
/**
 * public Enum for `PdfFontType`.
 * @private
 */
var PdfFontType;
(function (PdfFontType) {
    /**
     * Specifies the type of `Standard`.
     * @private
     */
    PdfFontType[PdfFontType["Standard"] = 0] = "Standard";
    /**
     * Specifies the type of `TrueType`.
     * @private
     */
    PdfFontType[PdfFontType["TrueType"] = 1] = "TrueType";
    /**
     * Specifies the type of `TrueTypeEmbedded`.
     * @private
     */
    PdfFontType[PdfFontType["TrueTypeEmbedded"] = 2] = "TrueTypeEmbedded";
})(PdfFontType || (PdfFontType = {}));
/**
 * public Enum for `PdfWordWrapType`.
 * @private
 */
var PdfWordWrapType;
(function (PdfWordWrapType) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    PdfWordWrapType[PdfWordWrapType["None"] = 0] = "None";
    /**
     * Specifies the type of `Word`.
     * @private
     */
    PdfWordWrapType[PdfWordWrapType["Word"] = 1] = "Word";
    /**
     * Specifies the type of `WordOnly`.
     * @private
     */
    PdfWordWrapType[PdfWordWrapType["WordOnly"] = 2] = "WordOnly";
    /**
     * Specifies the type of `Character`.
     * @private
     */
    PdfWordWrapType[PdfWordWrapType["Character"] = 3] = "Character";
})(PdfWordWrapType || (PdfWordWrapType = {}));
/**
 * public Enum for `PdfSubSuperScript`.
 * @private
 */
var PdfSubSuperScript;
(function (PdfSubSuperScript) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    PdfSubSuperScript[PdfSubSuperScript["None"] = 0] = "None";
    /**
     * Specifies the type of `SuperScript`.
     * @private
     */
    PdfSubSuperScript[PdfSubSuperScript["SuperScript"] = 1] = "SuperScript";
    /**
     * Specifies the type of `SubScript`.
     * @private
     */
    PdfSubSuperScript[PdfSubSuperScript["SubScript"] = 2] = "SubScript";
})(PdfSubSuperScript || (PdfSubSuperScript = {}));
/**
 * public Enum for `FontEncoding`.
 * @private
 */
var FontEncoding;
(function (FontEncoding) {
    /**
     * Specifies the type of `Unknown`.
     * @private
     */
    FontEncoding[FontEncoding["Unknown"] = 0] = "Unknown";
    /**
     * Specifies the type of `StandardEncoding`.
     * @private
     */
    FontEncoding[FontEncoding["StandardEncoding"] = 1] = "StandardEncoding";
    /**
     * Specifies the type of `MacRomanEncoding`.
     * @private
     */
    FontEncoding[FontEncoding["MacRomanEncoding"] = 2] = "MacRomanEncoding";
    /**
     * Specifies the type of `MacExpertEncoding`.
     * @private
     */
    FontEncoding[FontEncoding["MacExpertEncoding"] = 3] = "MacExpertEncoding";
    /**
     * Specifies the type of `WinAnsiEncoding`.
     * @private
     */
    FontEncoding[FontEncoding["WinAnsiEncoding"] = 4] = "WinAnsiEncoding";
    /**
     * Specifies the type of `PdfDocEncoding`.
     * @private
     */
    FontEncoding[FontEncoding["PdfDocEncoding"] = 5] = "PdfDocEncoding";
    /**
     * Specifies the type of `IdentityH`.
     * @private
     */
    FontEncoding[FontEncoding["IdentityH"] = 6] = "IdentityH";
})(FontEncoding || (FontEncoding = {}));
/**
 * public Enum for `TtfCmapFormat`.
 * @private
 */
var TtfCmapFormat;
(function (TtfCmapFormat) {
    /**
     * This is the Apple standard character to glyph index mapping table.
     * @private
     */
    TtfCmapFormat[TtfCmapFormat["Apple"] = 0] = "Apple";
    /**
     * This is the Microsoft standard character to glyph index mapping table.
     * @private
     */
    TtfCmapFormat[TtfCmapFormat["Microsoft"] = 4] = "Microsoft";
    /**
     * Format 6: Trimmed table mapping.
     * @private
     */
    TtfCmapFormat[TtfCmapFormat["Trimmed"] = 6] = "Trimmed";
})(TtfCmapFormat || (TtfCmapFormat = {}));
/**
 * Enumerator that implements CMAP encodings.
 * @private
 */
var TtfCmapEncoding;
(function (TtfCmapEncoding) {
    /**
     * Unknown encoding.
     * @private
     */
    TtfCmapEncoding[TtfCmapEncoding["Unknown"] = 0] = "Unknown";
    /**
     * When building a symbol font for Windows.
     * @private
     */
    TtfCmapEncoding[TtfCmapEncoding["Symbol"] = 1] = "Symbol";
    /**
     * When building a Unicode font for Windows.
     * @private
     */
    TtfCmapEncoding[TtfCmapEncoding["Unicode"] = 2] = "Unicode";
    /**
     * For font that will be used on a Macintosh.
     * @private
     */
    TtfCmapEncoding[TtfCmapEncoding["Macintosh"] = 3] = "Macintosh";
})(TtfCmapEncoding || (TtfCmapEncoding = {}));
/**
 * Ttf platform ID.
 * @private
 */
var TtfPlatformID;
(function (TtfPlatformID) {
    /**
     * Apple platform.
     * @private
     */
    TtfPlatformID[TtfPlatformID["AppleUnicode"] = 0] = "AppleUnicode";
    /**
     * Macintosh platform.
     * @private
     */
    TtfPlatformID[TtfPlatformID["Macintosh"] = 1] = "Macintosh";
    /**
     * Iso platform.
     * @private
     */
    TtfPlatformID[TtfPlatformID["Iso"] = 2] = "Iso";
    /**
     * Microsoft platform.
     * @private
     */
    TtfPlatformID[TtfPlatformID["Microsoft"] = 3] = "Microsoft";
})(TtfPlatformID || (TtfPlatformID = {}));
/**
 * Microsoft encoding ID.
 * @private
 */
var TtfMicrosoftEncodingID;
(function (TtfMicrosoftEncodingID) {
    /**
     * Undefined encoding.
     * @private
     */
    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID["Undefined"] = 0] = "Undefined";
    /**
     * Unicode encoding.
     * @private
     */
    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID["Unicode"] = 1] = "Unicode";
})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));
/**
 * Macintosh encoding ID.
 * @private
 */
var TtfMacintoshEncodingID;
(function (TtfMacintoshEncodingID) {
    /**
     * Roman encoding.
     * @private
     */
    TtfMacintoshEncodingID[TtfMacintoshEncodingID["Roman"] = 0] = "Roman";
    /**
     * Japanese encoding.
     * @private
     */
    TtfMacintoshEncodingID[TtfMacintoshEncodingID["Japanese"] = 1] = "Japanese";
    /**
     * Chinese encoding.
     * @private
     */
    TtfMacintoshEncodingID[TtfMacintoshEncodingID["Chinese"] = 2] = "Chinese";
})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));
/**
 * Enumerator that implements font descriptor flags.
 * @private
 */
var FontDescriptorFlags;
(function (FontDescriptorFlags) {
    /**
     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).
     * @private
     */
    FontDescriptorFlags[FontDescriptorFlags["FixedPitch"] = 1] = "FixedPitch";
    /**
     * Glyphs have serifs, which are short strokes drawn at an angle on the top and
     * bottom of glyph stems (as opposed to sans serif fonts, which do not).
     * @private
     */
    FontDescriptorFlags[FontDescriptorFlags["Serif"] = 2] = "Serif";
    /**
     * Font contains glyphs outside the Adobe standard Latin character set. The
     * flag and the nonsymbolic flag cannot both be set or both be clear.
     * @private
     */
    FontDescriptorFlags[FontDescriptorFlags["Symbolic"] = 4] = "Symbolic";
    /**
     * Glyphs resemble cursive handwriting.
     * @private
     */
    FontDescriptorFlags[FontDescriptorFlags["Script"] = 8] = "Script";
    /**
     * Font uses the Adobe standard Latin character set or a subset of it.
     * @private
     */
    FontDescriptorFlags[FontDescriptorFlags["Nonsymbolic"] = 32] = "Nonsymbolic";
    /**
     * Glyphs have dominant vertical strokes that are slanted.
     * @private
     */
    FontDescriptorFlags[FontDescriptorFlags["Italic"] = 64] = "Italic";
    /**
     * Bold font.
     * @private
     */
    FontDescriptorFlags[FontDescriptorFlags["ForceBold"] = 262144] = "ForceBold";
})(FontDescriptorFlags || (FontDescriptorFlags = {}));
/**
 * true type font composite glyph flags.
 * @private
 */
var TtfCompositeGlyphFlags;
(function (TtfCompositeGlyphFlags) {
    /**
     * The Arg1And2AreWords.
     * @private
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["Arg1And2AreWords"] = 1] = "Arg1And2AreWords";
    /**
     * The ArgsAreXyValues.
     * @private
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["ArgsAreXyValues"] = 2] = "ArgsAreXyValues";
    /**
     * The RoundXyToGrid.
     * @private
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["RoundXyToGrid"] = 4] = "RoundXyToGrid";
    /**
     * The WeHaveScale.
     * @private
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["WeHaveScale"] = 8] = "WeHaveScale";
    /**
     * The Reserved.
     * @private
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["Reserved"] = 16] = "Reserved";
    /**
     * The MoreComponents.
     * @private
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["MoreComponents"] = 32] = "MoreComponents";
    /**
     * The WeHaveAnXyScale.
     * @private
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["WeHaveAnXyScale"] = 64] = "WeHaveAnXyScale";
    /**
     * The WeHaveTwoByTwo
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["WeHaveTwoByTwo"] = 128] = "WeHaveTwoByTwo";
    /**
     * The WeHaveInstructions.
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["WeHaveInstructions"] = 256] = "WeHaveInstructions";
    /**
     * The UseMyMetrics.
     */
    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags["UseMyMetrics"] = 512] = "UseMyMetrics";
})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font-metrics.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font-metrics.js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: PdfFontMetrics, WidthTable, StandardWidthTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFontMetrics", function() { return PdfFontMetrics; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WidthTable", function() { return WidthTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StandardWidthTable", function() { return StandardWidthTable; });
/* harmony import */ var _pdf_font__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * `Metrics` of the font.
 * @private
 */
var PdfFontMetrics = /** @class */ (function () {
    function PdfFontMetrics() {
        /**
         * `Line gap`.
         * @private
         */
        this.lineGap = 0;
    }
    //  Public methods
    /**
     * Returns `ascent` taking into consideration font`s size.
     * @private
     */
    PdfFontMetrics.prototype.getAscent = function (format) {
        var returnValue = this.ascent * _pdf_font__WEBPACK_IMPORTED_MODULE_0__["PdfFont"].charSizeMultiplier * this.getSize(format);
        return returnValue;
    };
    /**
     * Returns `descent` taking into consideration font`s size.
     * @private
     */
    PdfFontMetrics.prototype.getDescent = function (format) {
        var returnValue = this.descent * _pdf_font__WEBPACK_IMPORTED_MODULE_0__["PdfFont"].charSizeMultiplier * this.getSize(format);
        return returnValue;
    };
    /**
     * Returns `Line gap` taking into consideration font`s size.
     * @private
     */
    PdfFontMetrics.prototype.getLineGap = function (format) {
        var returnValue = this.lineGap * _pdf_font__WEBPACK_IMPORTED_MODULE_0__["PdfFont"].charSizeMultiplier * this.getSize(format);
        return returnValue;
    };
    /**
     * Returns `height` taking into consideration font`s size.
     * @private
     */
    PdfFontMetrics.prototype.getHeight = function (format) {
        var height;
        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];
        var clearTypeFontCollection = [];
        for (var index = 0; index < clearTypeFonts.length; index++) {
            var font = clearTypeFonts[index];
            clearTypeFontCollection.push(font);
        }
        if (this.getDescent(format) < 0) {
            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {
            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));
            // } else {
            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));
            // }
        }
        else {
            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));
        }
        return height;
    };
    /**
     * Calculates `size` of the font depending on the subscript/superscript value.
     * @private
     */
    PdfFontMetrics.prototype.getSize = function (format) {
        var size = this.size;
        if (format != null) {
            switch (format.subSuperScript) {
                case _enum__WEBPACK_IMPORTED_MODULE_1__["PdfSubSuperScript"].SubScript:
                    size /= this.subScriptSizeFactor;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_1__["PdfSubSuperScript"].SuperScript:
                    size /= this.superscriptSizeFactor;
                    break;
            }
        }
        return size;
    };
    /**
     * `Clones` the metrics.
     * @private
     */
    PdfFontMetrics.prototype.clone = function () {
        var metrics = this;
        metrics.widthTable = WidthTable.clone();
        return metrics;
    };
    Object.defineProperty(PdfFontMetrics.prototype, "widthTable", {
        //  Properies
        /**
         * Gets or sets the `width table`.
         * @private
         */
        get: function () {
            return this.internalWidthTable;
        },
        set: function (value) {
            this.internalWidthTable = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfFontMetrics;
}());

var WidthTable = /** @class */ (function () {
    function WidthTable() {
    }
    /**
     * Static `clones` this instance of the WidthTable class.
     * @private
     */
    WidthTable.clone = function () {
        return null;
    };
    return WidthTable;
}());

var StandardWidthTable = /** @class */ (function (_super) {
    __extends(StandardWidthTable, _super);
    // Constructors
    /**
     * Initializes a new instance of the `StandardWidthTable` class.
     * @private
     */
    function StandardWidthTable(widths) {
        var _this = _super.call(this) || this;
        if (widths == null) {
            throw new Error('ArgumentNullException:widths');
        }
        _this.widths = widths;
        return _this;
    }
    //Properties
    /**
     * Gets the `32 bit number` at the specified index.
     * @private
     */
    StandardWidthTable.prototype.items = function (index) {
        if (index < 0 || index >= this.widths.length) {
            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');
        }
        var result = this.widths[index];
        return result;
    };
    Object.defineProperty(StandardWidthTable.prototype, "length", {
        /**
         * Gets the `length` of the internal array.
         * @private
         */
        get: function () {
            return this.widths.length;
        },
        enumerable: true,
        configurable: true
    });
    //Overrides
    /**
     * `Clones` this instance of the WidthTable class.
     * @private
     */
    StandardWidthTable.prototype.clone = function () {
        var swt = this;
        swt.widths = this.widths;
        return swt;
    };
    /**
     * Converts width table to a `PDF array`.
     * @private
     */
    StandardWidthTable.prototype.toArray = function () {
        var arr = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__["PdfArray"](this.widths);
        return arr;
    };
    return StandardWidthTable;
}(WidthTable));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: PdfFont */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfFont", function() { return PdfFont; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _pdf_string_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-string-format */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js");
/* harmony import */ var _string_layouter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _string_tokenizer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string-tokenizer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js");
/**
 * PdfFont.ts class for EJ2-PDF
 */





/**
 * Defines a particular format for text, including font face, size, and style attributes.
 * @private
 */
var PdfFont = /** @class */ (function () {
    function PdfFont(size, style) {
        /**
         * `Style` of the font.
         * @private
         */
        this.fontStyle = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Regular;
        if (typeof size === 'number' && typeof style === 'undefined') {
            this.fontSize = size;
        }
        else {
            this.fontSize = size;
            this.setStyle(style);
        }
    }
    Object.defineProperty(PdfFont.prototype, "name", {
        //Properties
        /**
         * Gets the face name of this Font.
         * @private
         */
        get: function () {
            return this.metrics.name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "size", {
        /**
         * Gets the size of this font.
         * @private
         */
        get: function () {
            return this.fontSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "height", {
        /**
         * Gets the height of the font in points.
         * @private
         */
        get: function () {
            return this.metrics.getHeight(null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "style", {
        /**
         * Gets the style information for this font.
         * @private
         */
        get: function () {
            return this.fontStyle;
        },
        set: function (value) {
            this.fontStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "bold", {
        /**
         * Gets a value indicating whether this `PdfFont` is `bold`.
         * @private
         */
        get: function () {
            return ((this.style & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "italic", {
        /**
         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.
         * @private
         */
        get: function () {
            return ((this.style & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "strikeout", {
        /**
         * Gets a value indicating whether this `PdfFont` is `strikeout`.
         * @private
         */
        get: function () {
            return ((this.style & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Strikeout) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "underline", {
        /**
         * Gets a value indicating whether this `PdfFont` is `underline`.
         * @private
         */
        get: function () {
            return ((this.style & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Underline) > 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "metrics", {
        /**
         * Gets or sets the `metrics` for this font.
         * @private
         */
        get: function () {
            return this.fontMetrics;
        },
        set: function (value) {
            this.fontMetrics = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfFont.prototype, "element", {
        // /**
        //  * Gets and Sets the font `internals`.
        //  * @private
        //  */
        // public get fontInternal() : IPdfPrimitive {
        //     return this.pdfFontInternals;
        // }
        // public set fontInternal(value : IPdfPrimitive) {
        //     this.pdfFontInternals = value;
        // }
        //IPdfWrapper Members
        /**
         * Gets the `element` representing the font.
         * @private
         */
        get: function () {
            return this.pdfFontInternals;
        },
        enumerable: true,
        configurable: true
    });
    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {
        if (typeof text === 'string' && typeof arg2 === 'undefined') {
            return this.measureString(text, null);
        }
        else if (typeof text === 'string' && (arg2 instanceof _pdf_string_format__WEBPACK_IMPORTED_MODULE_2__["PdfStringFormat"] || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {
            var temparg2 = arg2;
            var charactersFitted = 0;
            var linesFilled = 0;
            return this.measureString(text, temparg2, charactersFitted, linesFilled);
        }
        else if (typeof text === 'string' && (arg2 instanceof _pdf_string_format__WEBPACK_IMPORTED_MODULE_2__["PdfStringFormat"] || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {
            var temparg2 = arg2;
            return this.measureString(text, 0, temparg2, arg3, arg4);
            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {
            //     return this.measureString(text, arg2, null);
            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {
            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;
            //     let charactersFitted : number = 0;
            //     let linesFilled : number = 0;
            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);
        }
        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof _pdf_string_format__WEBPACK_IMPORTED_MODULE_2__["PdfStringFormat"] || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {
            var layoutArea = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"](arg2, 0);
            var temparg3 = arg3;
            return this.measureString(text, layoutArea, temparg3, arg4, arg5);
            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {
            //     return this.measureString(text, arg2, null);
            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {
            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;
            //     let charactersFitted : number = 0;
            //     let linesFilled : number = 0;
            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);
        }
        else {
            if (text == null) {
                throw Error("ArgumentNullException(\"text\")");
            }
            var temparg2 = arg2;
            var temparg3 = arg3;
            var layouter = new _string_layouter__WEBPACK_IMPORTED_MODULE_3__["PdfStringLayouter"]();
            var result = layouter.layout(text, this, temparg3, temparg2, false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"](0, 0));
            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;
            arg4 = text.length;
            arg5 = (result.empty) ? 0 : result.lines.length;
            return result.actualSize;
        }
    };
    /* tslint:enable */
    //IPdfCache Members
    /**
     * `Checks` whether the object is similar to another object.
     * @private
     */
    PdfFont.prototype.equalsTo = function (obj) {
        var result = this.equalsToFont(obj);
        return result;
    };
    /**
     * Returns `internals` of the object.
     * @private
     */
    PdfFont.prototype.getInternals = function () {
        return this.pdfFontInternals;
    };
    /**
     * Sets `internals` to the object.
     * @private
     */
    PdfFont.prototype.setInternals = function (internals) {
        if (internals == null) {
            throw new Error('ArgumentNullException:internals');
        }
        this.pdfFontInternals = internals;
    };
    /**
     * Sets the `style` of the font.
     * @private
     */
    PdfFont.prototype.setStyle = function (style) {
        this.fontStyle = style;
    };
    /**
     * Applies `settings` to the default line width.
     * @private
     */
    PdfFont.prototype.applyFormatSettings = function (line, format, width) {
        // if (line == null) {
        //     throw new Error(`ArgumentNullException:line`);
        // }
        var realWidth = width;
        if (format != null && width > 0) {
            // Space among characters is not default.
            if (format.characterSpacing !== 0) {
                realWidth += (line.length - 1) * format.characterSpacing;
            }
            // Space among words is not default.
            if (format.wordSpacing !== 0) {
                var symbols = _string_tokenizer__WEBPACK_IMPORTED_MODULE_4__["StringTokenizer"].spaces;
                var whitespacesCount = _string_tokenizer__WEBPACK_IMPORTED_MODULE_4__["StringTokenizer"].getCharsCount(line, symbols);
                realWidth += whitespacesCount * format.wordSpacing;
            }
        }
        return realWidth;
    };
    //Constants
    /**
     * `Multiplier` of the symbol width.
     * @default 0.001
     * @private
     */
    PdfFont.charSizeMultiplier = 0.001;
    /**
     * `Synchronization` object.
     * @private
     */
    PdfFont.syncObject = new Object();
    return PdfFont;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js":
/*!***************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js ***!
  \***************************************************************************************************************************************************************************/
/*! exports provided: PdfStandardFontMetricsFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFontMetricsFactory", function() { return PdfStandardFontMetricsFactory; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-font-metrics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font-metrics.js");
/**
 * PdfStandardFontMetricsFactory.ts class for EJ2-PDF
 */


/**
 * @private
 * `Factory of the standard fonts metrics`.
 */
var PdfStandardFontMetricsFactory = /** @class */ (function () {
    function PdfStandardFontMetricsFactory() {
    }
    /**
     * Returns `metrics` of the font.
     * @private
     */
    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {
        var metrics = null;
        switch (fontFamily) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].Helvetica:
                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].Courier:
                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].TimesRoman:
                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].Symbol:
                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].ZapfDingbats:
                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);
                break;
            default:
                metrics = this.getHelveticaMetrics(_enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].Helvetica, fontStyle, size);
                break;
        }
        metrics.name = fontFamily.toString();
        metrics.subScriptSizeFactor = this.subSuperScriptFactor;
        metrics.superscriptSizeFactor = this.subSuperScriptFactor;
        return metrics;
    };
    // Implementation
    /**
     * Creates `Helvetica font metrics`.
     * @private
     */
    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["PdfFontMetrics"]();
        if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold) > 0 && (fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic) > 0) {
            metrics.ascent = this.helveticaBoldItalicAscent;
            metrics.descent = this.helveticaBoldItalicDescent;
            metrics.postScriptName = this.helveticaBoldItalicName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.arialBoldWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold) > 0) {
            metrics.ascent = this.helveticaBoldAscent;
            metrics.descent = this.helveticaBoldDescent;
            metrics.postScriptName = this.helveticaBoldName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.arialBoldWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic) > 0) {
            metrics.ascent = this.helveticaItalicAscent;
            metrics.descent = this.helveticaItalicDescent;
            metrics.postScriptName = this.helveticaItalicName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.arialWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else {
            metrics.ascent = this.helveticaAscent;
            metrics.descent = this.helveticaDescent;
            metrics.postScriptName = this.helveticaName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.arialWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        return metrics;
    };
    /**
     * Creates `Courier font metrics`.
     * @private
     */
    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["PdfFontMetrics"]();
        if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold) > 0 && (fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic) > 0) {
            metrics.ascent = this.courierBoldItalicAscent;
            metrics.descent = this.courierBoldItalicDescent;
            metrics.postScriptName = this.courierBoldItalicName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold) > 0) {
            metrics.ascent = this.courierBoldAscent;
            metrics.descent = this.courierBoldDescent;
            metrics.postScriptName = this.courierBoldName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic) > 0) {
            metrics.ascent = this.courierItalicAscent;
            metrics.descent = this.courierItalicDescent;
            metrics.postScriptName = this.courierItalicName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else {
            metrics.ascent = this.courierAscent;
            metrics.descent = this.courierDescent;
            metrics.postScriptName = this.courierName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.fixedWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        return metrics;
    };
    /**
     * Creates `Times font metrics`.
     * @private
     */
    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["PdfFontMetrics"]();
        if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold) > 0 && (fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic) > 0) {
            metrics.ascent = this.timesBoldItalicAscent;
            metrics.descent = this.timesBoldItalicDescent;
            metrics.postScriptName = this.timesBoldItalicName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.timesRomanBoldItalicWidths);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold) > 0) {
            metrics.ascent = this.timesBoldAscent;
            metrics.descent = this.timesBoldDescent;
            metrics.postScriptName = this.timesBoldName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.timesRomanBoldWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else if ((fontStyle & _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic) > 0) {
            metrics.ascent = this.timesItalicAscent;
            metrics.descent = this.timesItalicDescent;
            metrics.postScriptName = this.timesItalicName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.timesRomanItalicWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        else {
            metrics.ascent = this.timesAscent;
            metrics.descent = this.timesDescent;
            metrics.postScriptName = this.timesName;
            metrics.size = size;
            metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.timesRomanWidth);
            metrics.height = metrics.ascent - metrics.descent;
        }
        return metrics;
    };
    /**
     * Creates `Symbol font metrics`.
     * @private
     */
    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["PdfFontMetrics"]();
        metrics.ascent = this.symbolAscent;
        metrics.descent = this.symbolDescent;
        metrics.postScriptName = this.symbolName;
        metrics.size = size;
        metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.symbolWidth);
        metrics.height = metrics.ascent - metrics.descent;
        return metrics;
    };
    /**
     * Creates `ZapfDingbats font metrics`.
     * @private
     */
    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {
        var metrics = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["PdfFontMetrics"]();
        metrics.ascent = this.zapfDingbatsAscent;
        metrics.descent = this.zapfDingbatsDescent;
        metrics.postScriptName = this.zapfDingbatsName;
        metrics.size = size;
        metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_1__["StandardWidthTable"](this.zapfDingbatsWidth);
        metrics.height = metrics.ascent - metrics.descent;
        return metrics;
    };
    /**
     * `Multiplier` os subscript superscript.
     * @private
     */
    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaAscent = 931;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaDescent = -225;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierAscent = 805;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierDescent = -250;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.courierName = 'Courier';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierBoldAscent = 801;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierBoldDescent = -250;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierItalicAscent = 805;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierItalicDescent = -250;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesAscent = 898;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesDescent = -218;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesBoldAscent = 935;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesBoldDescent = -218;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesItalicAscent = 883;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesItalicDescent = -217;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.symbolAscent = 1010;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.symbolDescent = -293;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.symbolName = 'Symbol';
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;
    /**
     * `Ascender` value for the font.
     * @private
     */
    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;
    /**
     * `Font type`.
     * @private
     */
    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';
    /**
     * `Arial` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.arialWidth = [
        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,
        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,
        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,
        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,
        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,
        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,
        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,
        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,
        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,
        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,
        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,
        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,
        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,
        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,
        556, 500
    ];
    /**
     * `Arial bold` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.arialBoldWidth = [
        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,
        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,
        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,
        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,
        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,
        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,
        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,
        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,
        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,
        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,
        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,
        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,
        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,
        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,
        611, 556
    ];
    /**
     * `Fixed` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.fixedWidth = [
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600
    ];
    /**
     * `Times` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.timesRomanWidth = [
        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,
        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,
        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,
        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,
        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,
        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,
        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,
        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,
        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,
        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,
        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,
        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,
        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,
        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,
        500, 500
    ];
    /**
     * `Times bold` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [
        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,
        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,
        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,
        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,
        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,
        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,
        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,
        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,
        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,
        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,
        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,
        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,
        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,
        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,
        556, 500
    ];
    /**
     * `Times italic` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [
        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,
        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,
        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,
        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,
        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,
        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,
        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,
        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,
        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,
        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,
        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,
        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,
        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,
        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,
        500, 444
    ];
    /**
     * `Times bold italic` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [
        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,
        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,
        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,
        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,
        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,
        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,
        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,
        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,
        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,
        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,
        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,
        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,
        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,
        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,
        500, 444
    ];
    /**
     * `Symbol` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.symbolWidth = [
        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,
        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,
        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,
        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,
        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,
        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,
        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,
        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,
        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,
        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,
        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,
        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,
        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,
        384, 384, 384, 384, 494, 494, 494, -1
    ];
    /**
     * `Zip dingbats` widths table.
     * @private
     */
    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [
        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,
        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,
        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,
        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,
        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,
        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,
        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,
        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,
        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,
        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,
        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,
        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,
        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,
        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,
        888, 831, 873, 927, 970, 918
    ];
    return PdfStandardFontMetricsFactory;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font.js ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: PdfStandardFont */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFont", function() { return PdfStandardFont; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _pdf_font__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js");
/* harmony import */ var _document_pdf_document__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../document/pdf-document */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js");
/* harmony import */ var _pdf_standard_font_metrics_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-standard-font-metrics-factory */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * Represents one of the 14 standard fonts.
 * It's used to create a standard PDF font to draw the text in to the PDF.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // add a new page to the document
 * let page1 : PdfPage = document.pages.add();
 * //
 * // create new standard font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * //
 * // create black brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
 * // draw the text
 * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
 * // save the document
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfStandardFont = /** @class */ (function (_super) {
    __extends(PdfStandardFont, _super);
    function PdfStandardFont(fontFamilyPrototype, size, style) {
        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Regular) : style) || this;
        /**
         * Gets `ascent` of the font.
         * @private
         */
        _this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_5__["DictionaryProperties"]();
        /**
         * Gets `encodings` for internal class use.
         * @hidden
         * @private
         */
        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',
            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];
        if (typeof fontFamilyPrototype === 'undefined') {
            _this.pdfFontFamily = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].Helvetica;
        }
        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {
            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;
        }
        else {
            _this.pdfFontFamily = fontFamilyPrototype;
        }
        _this.checkStyle();
        _this.initializeInternals();
        return _this;
    }
    Object.defineProperty(PdfStandardFont.prototype, "fontFamily", {
        /* tslint:enable */
        //Properties
        /**
         * Gets the `FontFamily`.
         * @private
         */
        get: function () {
            return this.pdfFontFamily;
        },
        enumerable: true,
        configurable: true
    });
    //methods
    /**
     * Checks font `style` of the font.
     * @private
     */
    PdfStandardFont.prototype.checkStyle = function () {
        if (this.fontFamily === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].Symbol || this.fontFamily === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].ZapfDingbats) {
            var style = this.style;
            style &= ~(_enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Bold | _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Italic);
            this.setStyle(style);
        }
    };
    /**
     * Returns `width` of the line.
     * @public
     */
    PdfStandardFont.prototype.getLineWidth = function (line, format) {
        if (line == null) {
            throw new Error('ArgumentNullException:line');
        }
        var width = 0;
        var name = this.name;
        line = PdfStandardFont.convert(line);
        for (var i = 0, len = line.length; i < len; i++) {
            var ch = line[i];
            var charWidth = this.getCharWidthInternal(ch, format);
            width += charWidth;
        }
        var size = this.metrics.getSize(format);
        width *= (_pdf_font__WEBPACK_IMPORTED_MODULE_1__["PdfFont"].charSizeMultiplier * size);
        width = this.applyFormatSettings(line, format, width);
        return width;
    };
    /**
     * Checks whether fonts are `equals`.
     * @private
     */
    PdfStandardFont.prototype.equalsToFont = function (font) {
        var equal = false;
        var stFont = font;
        if (stFont != null) {
            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);
            var lineReducer = (~(_enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Underline | _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontStyle"].Strikeout));
            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);
            equal = (fontFamilyEqual && styleEqual);
        }
        return equal;
    };
    /**
     * `Initializes` font internals..
     * @private
     */
    PdfStandardFont.prototype.initializeInternals = function () {
        var equalFont = null;
        // if (PdfDocument.EnableCache) {
        equalFont = _document_pdf_document__WEBPACK_IMPORTED_MODULE_2__["PdfDocument"].cache.search(this);
        // }
        var internals = null;
        // if (equalFont == null) {
        // Create font metrics.
        var metrics = _pdf_standard_font_metrics_factory__WEBPACK_IMPORTED_MODULE_3__["PdfStandardFontMetricsFactory"].getMetrics(this.pdfFontFamily, this.style, this.size);
        this.metrics = metrics;
        internals = this.createInternals();
        this.setInternals(internals);
    };
    /**
     * `Creates` font`s dictionary.
     * @private
     */
    PdfStandardFont.prototype.createInternals = function () {
        var dictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_4__["PdfDictionary"]();
        dictionary.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_6__["PdfName"](this.dictionaryProperties.font));
        dictionary.items.setValue(this.dictionaryProperties.subtype, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_6__["PdfName"](this.dictionaryProperties.type1));
        dictionary.items.setValue(this.dictionaryProperties.baseFont, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_6__["PdfName"](this.metrics.postScriptName));
        if (this.fontFamily !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].Symbol && this.fontFamily !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFontFamily"].ZapfDingbats) {
            var encoding = this.encodings[_enum__WEBPACK_IMPORTED_MODULE_0__["FontEncoding"].WinAnsiEncoding];
            dictionary.items.setValue(this.dictionaryProperties.encoding, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_6__["PdfName"](encoding));
        }
        return dictionary;
    };
    /**
     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.
     * @private
     */
    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {
        var width = 0;
        var code = 0;
        code = charCode.charCodeAt(0);
        if (this.name === '0' || this.name === '1' || this.name === '2' ||
            this.name === '3' || this.name === '4') {
            code = code - PdfStandardFont.charOffset;
        }
        code = (code >= 0 && code !== 128) ? code : 0;
        var metrics = this.metrics;
        var widthTable = metrics.widthTable;
        width = widthTable.items(code);
        return width;
    };
    /**
     * `Converts` the specified text.
     * @private
     */
    PdfStandardFont.convert = function (text) {
        return text;
    };
    //Constants
    /**
     * First character `position`.
     * @private
     */
    PdfStandardFont.charOffset = 32;
    return PdfStandardFont;
}(_pdf_font__WEBPACK_IMPORTED_MODULE_1__["PdfFont"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: PdfStringFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfStringFormat", function() { return PdfStringFormat; });
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../graphics/fonts/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/**
 * PdfStringFormat.ts class for EJ2-PDF
 */


/**
 * `PdfStringFormat` class represents the text layout information on PDF.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // add a pages to the document
 * let page1 : PdfPage = document.pages.add();
 * // set font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * // set brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
 * //
 * // set the format for string
 * let stringFormat : PdfStringFormat = new PdfStringFormat();
 * // set the text alignment
 * stringFormat.alignment = PdfTextAlignment.Center;
 * // set the vertical alignment
 * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;
 * //
 * // draw the text
 * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);
 * // save the document
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfStringFormat = /** @class */ (function () {
    function PdfStringFormat(arg1, arg2) {
        /**
         * The `scaling factor` of the text being drawn.
         * @private
         */
        this.scalingFactor = 100.0;
        /**
         * Indicates text `wrapping` type.
         * @private
         */
        this.wordWrapType = _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].Word;
        this.internalLineLimit = true;
        this.wordWrapType = _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].Word;
        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {
            this.textAlignment = arg1;
        }
        if (typeof arg2 !== 'undefined') {
            this.verticalAlignment = arg2;
        }
    }
    Object.defineProperty(PdfStringFormat.prototype, "alignment", {
        //Properties
        /**
         * Gets or sets the `horizontal` text alignment
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // add a pages to the document
         * let page1 : PdfPage = document.pages.add();
         * // set font
         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
         * // set brush
         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
         * //
         * // set the format for string
         * let stringFormat : PdfStringFormat = new PdfStringFormat();
         * // set the text alignment
         * stringFormat.alignment = PdfTextAlignment.Center;
         * //
         * // draw the text
         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            return this.textAlignment;
        },
        set: function (value) {
            this.textAlignment = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "textDirection", {
        get: function () {
            return this.direction;
        },
        set: function (value) {
            this.direction = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "lineAlignment", {
        /**
         * Gets or sets the `vertical` text alignment.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // add a pages to the document
         * let page1 : PdfPage = document.pages.add();
         * // set font
         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
         * // set brush
         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
         * //
         * // set the format for string
         * let stringFormat : PdfStringFormat = new PdfStringFormat();
         * // set the vertical alignment
         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;
         * //
         * // draw the text
         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {
                return _graphics_enum__WEBPACK_IMPORTED_MODULE_0__["PdfVerticalAlignment"].Top;
            }
            else {
                return this.verticalAlignment;
            }
        },
        set: function (value) {
            this.verticalAlignment = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "rightToLeft", {
        /**
         * Gets or sets the value that indicates text `direction` mode.
         * @private
         */
        get: function () {
            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {
                return false;
            }
            else {
                return this.isRightToLeft;
            }
        },
        set: function (value) {
            this.isRightToLeft = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "characterSpacing", {
        /**
         * Gets or sets value that indicates a `size` among the characters in the text.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // add a pages to the document
         * let page1 : PdfPage = document.pages.add();
         * // set font
         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
         * // set brush
         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
         * //
         * // set the format for string
         * let stringFormat : PdfStringFormat = new PdfStringFormat();
         * // set character spacing
         * stringFormat.characterSpacing = 10;
         * //
         * // draw the text
         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {
                return 0;
            }
            else {
                return this.internalCharacterSpacing;
            }
        },
        set: function (value) {
            this.internalCharacterSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "wordSpacing", {
        /**
         * Gets or sets value that indicates a `size` among the words in the text.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // add a pages to the document
         * let page1 : PdfPage = document.pages.add();
         * // set font
         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
         * // set brush
         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
         * //
         * // set the format for string
         * let stringFormat : PdfStringFormat = new PdfStringFormat();
         * // set word spacing
         * stringFormat.wordSpacing = 10;
         * //
         * // draw the text
         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {
                return 0;
            }
            else {
                return this.internalWordSpacing;
            }
        },
        set: function (value) {
            this.internalWordSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "lineSpacing", {
        /**
         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // add a pages to the document
         * let page1 : PdfPage = document.pages.add();
         * // set font
         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
         * // set brush
         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
         * // set string
         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';
         * // set rectangle bounds
         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})
         * //
         * // set the format for string
         * let stringFormat : PdfStringFormat = new PdfStringFormat();
         * // set line spacing
         * stringFormat.lineSpacing = 10;
         * //
         * // draw the text
         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            if (typeof this.leading === 'undefined' || this.leading == null) {
                return 0;
            }
            else {
                return this.leading;
            }
        },
        set: function (value) {
            this.leading = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "clipPath", {
        /**
         * Gets or sets a value indicating whether the text is `clipped` or not.
         * @private
         */
        get: function () {
            if (typeof this.clip === 'undefined' || this.clip == null) {
                return false;
            }
            else {
                return this.clip;
            }
        },
        set: function (value) {
            this.clip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "subSuperScript", {
        /**
         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.
         * @private
         */
        get: function () {
            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {
                return _graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_1__["PdfSubSuperScript"].None;
            }
            else {
                return this.pdfSubSuperScript;
            }
        },
        set: function (value) {
            this.pdfSubSuperScript = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "paragraphIndent", {
        /**
         * Gets or sets the `indent` of the first line in the paragraph.
         * @private
         */
        get: function () {
            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {
                return 0;
            }
            else {
                return this.internalParagraphIndent;
            }
        },
        set: function (value) {
            this.internalParagraphIndent = value;
            this.firstLineIndent = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "lineLimit", {
        /**
         * Gets or sets a value indicating whether [`line limit`].
         * @private
         */
        get: function () {
            return this.internalLineLimit;
        },
        set: function (value) {
            this.internalLineLimit = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "measureTrailingSpaces", {
        /**
         * Gets or sets a value indicating whether [`measure trailing spaces`].
         * @private
         */
        get: function () {
            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {
                return false;
            }
            else {
                return this.trailingSpaces;
            }
        },
        set: function (value) {
            this.trailingSpaces = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "noClip", {
        /**
         * Gets or sets a value indicating whether [`no clip`].
         * @private
         */
        get: function () {
            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {
                return false;
            }
            else {
                return this.isNoClip;
            }
        },
        set: function (value) {
            this.isNoClip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "wordWrap", {
        /**
         * Gets or sets value indicating type of the text `wrapping`.
         * @private
         */
        get: function () {
            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {
            //     return PdfWordWrapType.Word;
            // } else {
            return this.wordWrapType;
            // }
        },
        set: function (value) {
            this.wordWrapType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "horizontalScalingFactor", {
        /**
         * Gets or sets the `scaling factor`.
         * @private
         */
        get: function () {
            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {
            //     return 100;
            // } else {
            return this.scalingFactor;
            // }
        },
        set: function (value) {
            if (value <= 0) {
                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');
            }
            this.scalingFactor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringFormat.prototype, "firstLineIndent", {
        /**
         * Gets or sets the `indent` of the first line in the text.
         * @private
         */
        get: function () {
            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {
                return 0;
            }
            else {
                return this.initialLineIndent;
            }
        },
        set: function (value) {
            this.initialLineIndent = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Clones` the object.
     * @private
     */
    //IClonable implementation
    PdfStringFormat.prototype.clone = function () {
        var format = this;
        return format;
    };
    return PdfStringFormat;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-true-type-font.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-true-type-font.js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: PdfTrueTypeFont */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTrueTypeFont", function() { return PdfTrueTypeFont; });
/* harmony import */ var _unicode_true_type_font__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./unicode-true-type-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/unicode-true-type-font.js");
/* harmony import */ var _pdf_font__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _document_pdf_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../document/pdf-document */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _rtl_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rtl-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl-renderer.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfTrueTypeFont.ts class for EJ2-PDF
 */






//https://www.giftofspeed.com/base64-encoder/
var PdfTrueTypeFont = /** @class */ (function (_super) {
    __extends(PdfTrueTypeFont, _super);
    function PdfTrueTypeFont(base64String, size, style) {
        var _this = _super.call(this, size) || this;
        /**
         * Indicates whether the font is embedded or not.
         * @private
         */
        _this.isEmbedFont = false;
        /**
         * Indicates whether the font is unicoded or not.
         * @private
         */
        _this.isUnicode = true;
        if (style !== undefined) {
            _this.createFontInternal(base64String, style);
        }
        else {
            _this.createFontInternal(base64String, _enum__WEBPACK_IMPORTED_MODULE_2__["PdfFontStyle"].Regular);
        }
        return _this;
    }
    PdfTrueTypeFont.prototype.equalsToFont = function (font) {
        var result = false;
        //let result : boolean = this.fontInternal.equalsToFont(font);
        return result;
    };
    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {
        var width = 0;
        if (format !== null && typeof format !== 'undefined' && format.textDirection !== _enum__WEBPACK_IMPORTED_MODULE_4__["PdfTextDirection"].None) {
            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);
            width = returnValue.width;
        }
        else {
            width = this.fontInternal.getLineWidth(line);
        }
        var size = this.metrics.getSize(format);
        width *= (_pdf_font__WEBPACK_IMPORTED_MODULE_1__["PdfFont"].charSizeMultiplier * size);
        width = this.applyFormatSettings(line, format, width);
        return width;
    };
    /**
     * Returns width of the char.
     */
    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {
        var codeWidth = this.fontInternal.getCharWidth(charCode);
        var size = this.metrics.getSize(format);
        codeWidth *= (0.001 * size);
        return codeWidth;
    };
    //Implementation
    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {
        this.fontInternal = new _unicode_true_type_font__WEBPACK_IMPORTED_MODULE_0__["UnicodeTrueTypeFont"](base64String, this.size);
        this.calculateStyle(style);
        this.initializeInternals();
    };
    PdfTrueTypeFont.prototype.calculateStyle = function (style) {
        var iStyle = this.fontInternal.ttfMetrics.macStyle;
        if ((style & _enum__WEBPACK_IMPORTED_MODULE_2__["PdfFontStyle"].Underline) !== 0) {
            iStyle |= _enum__WEBPACK_IMPORTED_MODULE_2__["PdfFontStyle"].Underline;
        }
        if ((style & _enum__WEBPACK_IMPORTED_MODULE_2__["PdfFontStyle"].Strikeout) !== 0) {
            iStyle |= _enum__WEBPACK_IMPORTED_MODULE_2__["PdfFontStyle"].Strikeout;
        }
        this.setStyle(iStyle);
    };
    PdfTrueTypeFont.prototype.initializeInternals = function () {
        var equalFont = null;
        if (_document_pdf_document__WEBPACK_IMPORTED_MODULE_3__["PdfDocument"].enableCache) {
            // Search for the similar fonts.
            equalFont = _document_pdf_document__WEBPACK_IMPORTED_MODULE_3__["PdfDocument"].cache.search(this);
        }
        var internals = null;
        // There is not equal font in the cache.
        if (equalFont !== null && equalFont !== undefined) {
            // Get the settings from the cached font.
            internals = equalFont.getInternals();
            var metrics = equalFont.metrics;
            metrics = metrics.clone();
            metrics.size = this.size;
            this.metrics = metrics;
            this.fontInternal = equalFont.fontInternal;
        }
        else {
            if (equalFont == null) {
                if (this.fontInternal instanceof _unicode_true_type_font__WEBPACK_IMPORTED_MODULE_0__["UnicodeTrueTypeFont"]) {
                    this.fontInternal.isEmbed = this.isEmbedFont;
                }
                this.fontInternal.createInternals();
                internals = this.fontInternal.getInternals();
                this.metrics = this.fontInternal.metrics;
            }
        }
        this.metrics.isUnicodeFont = true;
        this.setInternals(internals);
        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;
    };
    /**
     * Stores used symbols.
     */
    PdfTrueTypeFont.prototype.setSymbols = function (text) {
        var internalFont = this.fontInternal;
        if (internalFont != null) {
            internalFont.setSymbols(text);
        }
    };
    Object.defineProperty(PdfTrueTypeFont.prototype, "Unicode", {
        /**
         * Property
         *
         */
        get: function () {
            return this.isUnicode;
        },
        enumerable: true,
        configurable: true
    });
    // public get Font() : UnicodeTrueTypeFont {
    //     return this.fontInternal as UnicodeTrueTypeFont;
    // }
    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {
        // if (line == null) {
        //     throw new Error('ArgumentNullException : line');
        // }
        width = 0;
        var glyphIndices = null;
        var rtlRender = new _rtl_renderer__WEBPACK_IMPORTED_MODULE_5__["RtlRenderer"]();
        /* tslint:disable-next-line:max-line-length */
        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === _enum__WEBPACK_IMPORTED_MODULE_4__["PdfTextDirection"].RightToLeft) ? true : false, /*out*/ glyphIndices, true);
        var resultGlyph = result.success;
        glyphIndices = result.glyphs;
        if (resultGlyph && glyphIndices !== null) {
            var ttfReader = this.fontInternal.ttfReader;
            for (var i = 0, len = glyphIndices.length; i < len; i++) {
                var glyphIndex = glyphIndices[i];
                var glyph = ttfReader.getGlyph(glyphIndex);
                if (glyph !== null && typeof glyph !== 'undefined') {
                    width += glyph.width;
                }
            }
        }
        return { success: resultGlyph, width: width };
    };
    return PdfTrueTypeFont;
}(_pdf_font__WEBPACK_IMPORTED_MODULE_1__["PdfFont"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl-renderer.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl-renderer.js ***!
  \******************************************************************************************************************************************************/
/*! exports provided: RtlRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RtlRenderer", function() { return RtlRenderer; });
/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");
/* harmony import */ var _rtl_rtl_text_shape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rtl/rtl-text-shape */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-text-shape.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _rtl_rtl_bidirectional__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rtl/rtl-bidirectional */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-bidirectional.js");




/**
 * `Metrics` of the font.
 * @private
 */
var RtlRenderer = /** @class */ (function () {
    function RtlRenderer() {
        //region Constants
        /// Open bracket symbol.
        /// </summary>
        this.openBracket = '(';
        /// <summary>
        /// Close bracket symbol.
        /// </summary>
        this.closeBracket = ')';
        //#endregion
    }
    //#region Constructors
    /// <summary>
    /// Initializes a new instance of the <see cref="RtlRenderer"/> class.
    /// </summary>
    // public constructor() {
    // }
    //#region Public Methods
    /// <summary>
    /// Layouts text. Changes blocks position in the RTL text.
    /// Ligates the text if needed.
    /// </summary>
    /// <param name="line">Line of the text.</param>
    /// <param name="font">Font to be used for string printing.</param>
    /// <param name="rtl">Font alignment.</param>
    /// <param name="wordSpace">Indicates whether Word Spacing used or not.</param>
    /// <returns>Layout string.</returns>
    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {
        if (line == null) {
            throw new Error('ArgumentNullException : line');
        }
        if (font == null) {
            throw new Error('ArgumentNullException : font');
        }
        var result = [];
        if (font.Unicode) {
            result = this.customLayout(line, rtl, format, font, wordSpace);
        }
        else {
            result = [];
            result[0] = line;
        }
        return result;
    };
    /// <summary>
    /// Layouts a string and splits it by the words and using correct lay outing.
    /// </summary>
    /// <param name="line">Text line.</param>
    /// <param name="font">Font object.</param>
    /// <param name="rtl">Indicates whether RTL should be applied.</param>
    /// <param name="wordSpace">Indicates whether word spacing is used.</param>
    /// <returns>Array of words if converted, null otherwise.</returns>
    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {
        if (line == null) {
            throw new Error('ArgumentNullException : line');
        }
        if (font == null) {
            throw new Error('ArgumentNullException : font');
        }
        var words = [];
        var system = false;
        if (!system || words == null) {
            words = this.customSplitLayout(line, font, rtl, wordSpace, format);
        }
        return words;
    };
    //#endregion
    //#region Implementation
    // private isEnglish( word : string) : boolean
    // {
    //     let c : string = (word.length > 0) ? word[0] : '';
    //     return (c >= '0' && c < 'ÿ');
    // }
    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void
    // {
    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {
    //         result[ri] = words[i + startIndex];
    //     }
    // }
    /// <summary>
    /// Uses system API to layout the text.
    /// </summary>
    /// <param name="line">Line of the text to be layouted.</param>
    /// <param name="font">Font which is used for text printing.</param>
    /// <param name="rtl">Indicates whether we use RTL or RTL lay outing of the text container.</param>
    /// <returns>Layout string.</returns>
    /* tslint:disable-next-line:max-line-length */
    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {
        var success = true;
        var fail = false;
        if (line == null) {
            throw new Error('ArgumentNullException : line');
        }
        if (font == null) {
            throw new Error('ArgumentNullException : font');
        }
        glyphs = null;
        if (line.length === 0) {
            return { success: fail, glyphs: glyphs };
        }
        var renderer = new _rtl_rtl_text_shape__WEBPACK_IMPORTED_MODULE_1__["ArabicShapeRenderer"]();
        var text = renderer.shape(line, 0);
        var internalFont = font.fontInternal;
        var ttfReader = internalFont.ttfReader;
        glyphs = new Uint16Array(text.length);
        var i = 0;
        for (var k = 0, len = text.length; k < len; k++) {
            var ch = text[k];
            var glyphInfo = ttfReader.getGlyph(ch);
            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {
                glyphs[i++] = (glyphInfo).index;
            }
        }
        return { success: success, glyphs: glyphs };
    };
    /* tslint:disable-next-line:max-line-length */
    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {
        if (wordSpace === null || typeof wordSpace === 'undefined') {
            if (line == null) {
                throw new Error('ArgumentNullException : line');
            }
            var result = null;
            //bidirectional order.
            if (format !== null && typeof format !== 'undefined' && format.textDirection !== _enum__WEBPACK_IMPORTED_MODULE_2__["PdfTextDirection"].None) {
                var bidi = new _rtl_rtl_bidirectional__WEBPACK_IMPORTED_MODULE_3__["Bidi"]();
                result = bidi.getLogicalToVisualString(line, rtl);
            }
            return result;
        }
        else {
            if (line == null) {
                throw new Error('ArgumentNullException : line');
            }
            if (font == null) {
                throw new Error('ArgumentNullException : font');
            }
            var layouted = null;
            if (format !== null && typeof format !== 'undefined' && format.textDirection !== _enum__WEBPACK_IMPORTED_MODULE_2__["PdfTextDirection"].None) {
                var renderer = new _rtl_rtl_text_shape__WEBPACK_IMPORTED_MODULE_1__["ArabicShapeRenderer"]();
                var txt = renderer.shape(line, 0);
                layouted = this.customLayout(txt, rtl, format);
            }
            // else {
            //     layouted = this.customLayout(line, rtl, format);
            // }
            // We have unicode font, but from the file.        
            var result = [];
            // Split the text by words if word spacing is not default.
            if (wordSpace) {
                var words = layouted.split('');
                var count = words.length;
                for (var i = 0; i < count; i++) {
                    words[i] = this.addChars(font, words[i]);
                }
                result = words;
            }
            else {
                result = [];
                result[0] = this.addChars(font, layouted);
            }
            return result;
        }
    };
    /// <summary>
    /// Add information about used glyphs to the font.
    /// </summary>
    /// <param name="font">Font used for text rendering.</param>
    /// <param name="glyphs">Array of used glyphs.</param>
    /// <returns>String in the form to be written to the file.</returns>
    RtlRenderer.prototype.addChars = function (font, glyphs) {
        var line = glyphs;
        if (font == null) {
            throw new Error('ArgumentNullException : font');
        }
        if (line == null) {
            throw new Error('ArgumentNullException : line');
        }
        var text = line;
        var internalFont = font.fontInternal;
        var ttfReader = internalFont.ttfReader;
        font.setSymbols(text);
        // Reconvert string according to unicode standard.
        text = ttfReader.convertString(text);
        var bytes = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_0__["PdfString"].toUnicodeArray(text, false);
        text = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_0__["PdfString"].byteToString(bytes);
        return text;
        // else {
        //     if (font == null) {
        //         throw new Error('ArgumentNullException : font');
        //     }
        //     if (glyphs == null) {
        //         throw new Error('ArgumentNullException : glyphs');
        //     }
        //     // Mark the chars as used.
        //     let text : string = '';
        //     font.setSymbols(glyphs);
        //     // Create string from the glyphs.
        //     
        //     let chars : string[] = [];
        //     for (let i : number = 0; i < glyphs.length; i++) {
        //         chars[i] = glyphs[i].toString();
        //     }
        //     for (let j : number = 0 ; j < chars.length; j++) {
        //         text = text + chars[j];
        //     }
        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);
        //     text = PdfString.byteToString(bytes);
        //     return text;
        // }
    };
    /// <summary>
    /// Layouts a string and splits it by the words by using custom lay outing.
    /// </summary>
    /// <param name="line">Text line.</param>
    /// <param name="font">Font object.</param>
    /// <param name="rtl">Indicates whether RTL should be applied.</param>
    /// <param name="wordSpace">Indicates whether word spacing is used.</param>
    /// <returns>Array of words if converted, null otherwise.</returns>
    /* tslint:disable-next-line:max-line-length */
    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {
        if (line == null) {
            throw new Error('ArgumentNullException : line');
        }
        if (font == null) {
            throw new Error('ArgumentNullException : font');
        }
        var reversedLine = this.customLayout(line, rtl, format);
        var words = reversedLine.split('');
        return words;
    };
    return RtlRenderer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-bidirectional.js":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-bidirectional.js ***!
  \***************************************************************************************************************************************************************/
/*! exports provided: Bidi, RtlCharacters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bidi", function() { return Bidi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RtlCharacters", function() { return RtlCharacters; });
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/**
 * Bidi.ts class for EJ2-PDF
 */

/**
 * `Metrics` of the font.
 * @private
 */
var Bidi = /** @class */ (function () {
    //#endregion
    //#region Constructor
    function Bidi() {
        //#region Fields
        this.indexes = [];
        this.indexLevels = [];
        this.mirroringShapeCharacters = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
        this.update();
    }
    //#endregion
    //#region implementation
    Bidi.prototype.doMirrorShaping = function (text) {
        var result = [];
        for (var i = 0; i < text.length; i++) {
            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {
                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));
            }
            else {
                result[i] = text[i].toString();
            }
        }
        var res = '';
        for (var j = 0; j < result.length; j++) {
            res = res + result[j];
        }
        return res;
    };
    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {
        var rtlCharacters = new RtlCharacters();
        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);
        this.setDefaultIndexLevel();
        this.doOrder(0, this.indexLevels.length - 1);
        var text = this.doMirrorShaping(inputText);
        //let text : string = inputText;
        var resultBuilder = '';
        for (var i = 0; i < this.indexes.length; i++) {
            var index = this.indexes[i];
            resultBuilder += text[index];
        }
        return resultBuilder.toString();
    };
    Bidi.prototype.setDefaultIndexLevel = function () {
        for (var i = 0; i < this.indexLevels.length; i++) {
            this.indexes[i] = i;
        }
    };
    Bidi.prototype.doOrder = function (sIndex, eIndex) {
        var max = this.indexLevels[sIndex];
        var min = max;
        var odd = max;
        var even = max;
        for (var i = sIndex + 1; i <= eIndex; ++i) {
            var data = this.indexLevels[i];
            if (data > max) {
                max = data;
            }
            else if (data < min) {
                min = data;
            }
            odd &= data;
            even |= data;
        }
        if ((even & 1) === 0) {
            return;
        }
        if ((odd & 1) === 1) {
            this.reArrange(sIndex, eIndex + 1);
            return;
        }
        min |= 1;
        while (max >= min) {
            var pstart = sIndex;
            /*tslint:disable:no-constant-condition */
            while (true) {
                while (pstart <= eIndex) {
                    if (this.indexLevels[pstart] >= max) {
                        break;
                    }
                    pstart += 1;
                }
                if (pstart > eIndex) {
                    break;
                }
                var pend = pstart + 1;
                while (pend <= eIndex) {
                    if (this.indexLevels[pend] < max) {
                        break;
                    }
                    pend += 1;
                }
                this.reArrange(pstart, pend);
                pstart = pend + 1;
            }
            max -= 1;
        }
    };
    Bidi.prototype.reArrange = function (i, j) {
        var length = (i + j) / 2;
        --j;
        for (; i < length; ++i, --j) {
            var temp = this.indexes[i];
            this.indexes[i] = this.indexes[j];
            this.indexes[j] = temp;
        }
    };
    Bidi.prototype.update = function () {
        this.mirroringShapeCharacters.setValue(40, 41);
        this.mirroringShapeCharacters.setValue(41, 40);
        this.mirroringShapeCharacters.setValue(60, 62);
        this.mirroringShapeCharacters.setValue(62, 60);
        this.mirroringShapeCharacters.setValue(91, 93);
        this.mirroringShapeCharacters.setValue(93, 91);
        this.mirroringShapeCharacters.setValue(123, 125);
        this.mirroringShapeCharacters.setValue(125, 123);
        this.mirroringShapeCharacters.setValue(171, 187);
        this.mirroringShapeCharacters.setValue(187, 171);
        this.mirroringShapeCharacters.setValue(8249, 8250);
        this.mirroringShapeCharacters.setValue(8250, 8249);
        this.mirroringShapeCharacters.setValue(8261, 8262);
        this.mirroringShapeCharacters.setValue(8262, 8261);
        this.mirroringShapeCharacters.setValue(8317, 8318);
        this.mirroringShapeCharacters.setValue(8318, 8317);
        this.mirroringShapeCharacters.setValue(8333, 8334);
        this.mirroringShapeCharacters.setValue(8334, 8333);
        this.mirroringShapeCharacters.setValue(8712, 8715);
        this.mirroringShapeCharacters.setValue(8713, 8716);
        this.mirroringShapeCharacters.setValue(8714, 8717);
        this.mirroringShapeCharacters.setValue(8715, 8712);
        this.mirroringShapeCharacters.setValue(8716, 8713);
        this.mirroringShapeCharacters.setValue(8717, 8714);
        this.mirroringShapeCharacters.setValue(8725, 10741);
        this.mirroringShapeCharacters.setValue(8764, 8765);
        this.mirroringShapeCharacters.setValue(8765, 8764);
        this.mirroringShapeCharacters.setValue(8771, 8909);
        this.mirroringShapeCharacters.setValue(8786, 8787);
        this.mirroringShapeCharacters.setValue(8787, 8786);
        this.mirroringShapeCharacters.setValue(8788, 8789);
        this.mirroringShapeCharacters.setValue(8789, 8788);
        this.mirroringShapeCharacters.setValue(8804, 8805);
        this.mirroringShapeCharacters.setValue(8805, 8804);
        this.mirroringShapeCharacters.setValue(8806, 8807);
        this.mirroringShapeCharacters.setValue(8807, 8806);
        this.mirroringShapeCharacters.setValue(8808, 8809);
        this.mirroringShapeCharacters.setValue(8809, 8808);
        this.mirroringShapeCharacters.setValue(8810, 8811);
        this.mirroringShapeCharacters.setValue(8811, 8810);
        this.mirroringShapeCharacters.setValue(8814, 8815);
        this.mirroringShapeCharacters.setValue(8815, 8814);
        this.mirroringShapeCharacters.setValue(8816, 8817);
        this.mirroringShapeCharacters.setValue(8817, 8816);
        this.mirroringShapeCharacters.setValue(8818, 8819);
        this.mirroringShapeCharacters.setValue(8819, 8818);
        this.mirroringShapeCharacters.setValue(8820, 8821);
        this.mirroringShapeCharacters.setValue(8821, 8820);
        this.mirroringShapeCharacters.setValue(8822, 8823);
        this.mirroringShapeCharacters.setValue(8823, 8822);
        this.mirroringShapeCharacters.setValue(8824, 8825);
        this.mirroringShapeCharacters.setValue(8825, 8824);
        this.mirroringShapeCharacters.setValue(8826, 8827);
        this.mirroringShapeCharacters.setValue(8827, 8826);
        this.mirroringShapeCharacters.setValue(8828, 8829);
        this.mirroringShapeCharacters.setValue(8829, 8828);
        this.mirroringShapeCharacters.setValue(8830, 8831);
        this.mirroringShapeCharacters.setValue(8831, 8830);
        this.mirroringShapeCharacters.setValue(8832, 8833);
        this.mirroringShapeCharacters.setValue(8833, 8832);
        this.mirroringShapeCharacters.setValue(8834, 8835);
        this.mirroringShapeCharacters.setValue(8835, 8834);
        this.mirroringShapeCharacters.setValue(8836, 8837);
        this.mirroringShapeCharacters.setValue(8837, 8836);
        this.mirroringShapeCharacters.setValue(8838, 8839);
        this.mirroringShapeCharacters.setValue(8839, 8838);
        this.mirroringShapeCharacters.setValue(8840, 8841);
        this.mirroringShapeCharacters.setValue(8841, 8840);
        this.mirroringShapeCharacters.setValue(8842, 8843);
        this.mirroringShapeCharacters.setValue(8843, 8842);
        this.mirroringShapeCharacters.setValue(8847, 8848);
        this.mirroringShapeCharacters.setValue(8848, 8847);
        this.mirroringShapeCharacters.setValue(8849, 8850);
        this.mirroringShapeCharacters.setValue(8850, 8849);
        this.mirroringShapeCharacters.setValue(8856, 10680);
        this.mirroringShapeCharacters.setValue(8866, 8867);
        this.mirroringShapeCharacters.setValue(8867, 8866);
        this.mirroringShapeCharacters.setValue(8870, 10974);
        this.mirroringShapeCharacters.setValue(8872, 10980);
        this.mirroringShapeCharacters.setValue(8873, 10979);
        this.mirroringShapeCharacters.setValue(8875, 10981);
        this.mirroringShapeCharacters.setValue(8880, 8881);
        this.mirroringShapeCharacters.setValue(8881, 8880);
        this.mirroringShapeCharacters.setValue(8882, 8883);
        this.mirroringShapeCharacters.setValue(8883, 8882);
        this.mirroringShapeCharacters.setValue(8884, 8885);
        this.mirroringShapeCharacters.setValue(8885, 8884);
        /*tslint:disable:max-func-body-length */
        this.mirroringShapeCharacters.setValue(8886, 8887);
        this.mirroringShapeCharacters.setValue(8887, 8886);
        this.mirroringShapeCharacters.setValue(8905, 8906);
        this.mirroringShapeCharacters.setValue(8906, 8905);
        this.mirroringShapeCharacters.setValue(8907, 8908);
        this.mirroringShapeCharacters.setValue(8908, 8907);
        this.mirroringShapeCharacters.setValue(8909, 8771);
        this.mirroringShapeCharacters.setValue(8912, 8913);
        this.mirroringShapeCharacters.setValue(8913, 8912);
        this.mirroringShapeCharacters.setValue(8918, 8919);
        this.mirroringShapeCharacters.setValue(8919, 8918);
        this.mirroringShapeCharacters.setValue(8920, 8921);
        this.mirroringShapeCharacters.setValue(8921, 8920);
        this.mirroringShapeCharacters.setValue(8922, 8923);
        this.mirroringShapeCharacters.setValue(8923, 8922);
        this.mirroringShapeCharacters.setValue(8924, 8925);
        this.mirroringShapeCharacters.setValue(8925, 8924);
        this.mirroringShapeCharacters.setValue(8926, 8927);
        this.mirroringShapeCharacters.setValue(8927, 8926);
        this.mirroringShapeCharacters.setValue(8928, 8929);
        this.mirroringShapeCharacters.setValue(8929, 8928);
        this.mirroringShapeCharacters.setValue(8930, 8931);
        this.mirroringShapeCharacters.setValue(8931, 8930);
        this.mirroringShapeCharacters.setValue(8932, 8933);
        this.mirroringShapeCharacters.setValue(8933, 8932);
        this.mirroringShapeCharacters.setValue(8934, 8935);
        this.mirroringShapeCharacters.setValue(8935, 8934);
        this.mirroringShapeCharacters.setValue(8936, 8937);
        this.mirroringShapeCharacters.setValue(8937, 8936);
        this.mirroringShapeCharacters.setValue(8938, 8939);
        this.mirroringShapeCharacters.setValue(8939, 8938);
        this.mirroringShapeCharacters.setValue(8940, 8941);
        this.mirroringShapeCharacters.setValue(8941, 8940);
        this.mirroringShapeCharacters.setValue(8944, 8945);
        this.mirroringShapeCharacters.setValue(8945, 8944);
        this.mirroringShapeCharacters.setValue(8946, 8954);
        this.mirroringShapeCharacters.setValue(8947, 8955);
        this.mirroringShapeCharacters.setValue(8948, 8956);
        this.mirroringShapeCharacters.setValue(8950, 8957);
        this.mirroringShapeCharacters.setValue(8951, 8958);
        this.mirroringShapeCharacters.setValue(8954, 8946);
        this.mirroringShapeCharacters.setValue(8955, 8947);
        this.mirroringShapeCharacters.setValue(8956, 8948);
        this.mirroringShapeCharacters.setValue(8957, 8950);
        this.mirroringShapeCharacters.setValue(8958, 8951);
        this.mirroringShapeCharacters.setValue(8968, 8969);
        this.mirroringShapeCharacters.setValue(8969, 8968);
        this.mirroringShapeCharacters.setValue(8970, 8971);
        this.mirroringShapeCharacters.setValue(8971, 8970);
        this.mirroringShapeCharacters.setValue(9001, 9002);
        this.mirroringShapeCharacters.setValue(9002, 9001);
        this.mirroringShapeCharacters.setValue(10088, 10089);
        this.mirroringShapeCharacters.setValue(10089, 10088);
        this.mirroringShapeCharacters.setValue(10090, 10091);
        this.mirroringShapeCharacters.setValue(10091, 10090);
        this.mirroringShapeCharacters.setValue(10092, 10093);
        this.mirroringShapeCharacters.setValue(10093, 10092);
        this.mirroringShapeCharacters.setValue(10094, 10095);
        this.mirroringShapeCharacters.setValue(10095, 10094);
        this.mirroringShapeCharacters.setValue(10096, 10097);
        this.mirroringShapeCharacters.setValue(10097, 10096);
        this.mirroringShapeCharacters.setValue(10098, 10099);
        this.mirroringShapeCharacters.setValue(10099, 10098);
        this.mirroringShapeCharacters.setValue(10100, 10101);
        this.mirroringShapeCharacters.setValue(10101, 10100);
        this.mirroringShapeCharacters.setValue(10197, 10198);
        this.mirroringShapeCharacters.setValue(10198, 10197);
        this.mirroringShapeCharacters.setValue(10205, 10206);
        this.mirroringShapeCharacters.setValue(10206, 10205);
        this.mirroringShapeCharacters.setValue(10210, 10211);
        this.mirroringShapeCharacters.setValue(10211, 10210);
        this.mirroringShapeCharacters.setValue(10212, 10213);
        this.mirroringShapeCharacters.setValue(10213, 10212);
        this.mirroringShapeCharacters.setValue(10214, 10215);
        this.mirroringShapeCharacters.setValue(10215, 10214);
        this.mirroringShapeCharacters.setValue(10216, 10217);
        this.mirroringShapeCharacters.setValue(10217, 10216);
        this.mirroringShapeCharacters.setValue(10218, 10219);
        this.mirroringShapeCharacters.setValue(10219, 10218);
        this.mirroringShapeCharacters.setValue(10627, 10628);
        this.mirroringShapeCharacters.setValue(10628, 10627);
        this.mirroringShapeCharacters.setValue(10629, 10630);
        this.mirroringShapeCharacters.setValue(10630, 10629);
        this.mirroringShapeCharacters.setValue(10631, 10632);
        this.mirroringShapeCharacters.setValue(10632, 10631);
        this.mirroringShapeCharacters.setValue(10633, 10634);
        this.mirroringShapeCharacters.setValue(10634, 10633);
        this.mirroringShapeCharacters.setValue(10635, 10636);
        this.mirroringShapeCharacters.setValue(10636, 10635);
        this.mirroringShapeCharacters.setValue(10637, 10640);
        this.mirroringShapeCharacters.setValue(10638, 10639);
        this.mirroringShapeCharacters.setValue(10639, 10638);
        this.mirroringShapeCharacters.setValue(10640, 10637);
        this.mirroringShapeCharacters.setValue(10641, 10642);
        this.mirroringShapeCharacters.setValue(10642, 10641);
        this.mirroringShapeCharacters.setValue(10643, 10644);
        this.mirroringShapeCharacters.setValue(10644, 10643);
        this.mirroringShapeCharacters.setValue(10645, 10646);
        this.mirroringShapeCharacters.setValue(10646, 10645);
        this.mirroringShapeCharacters.setValue(10647, 10648);
        this.mirroringShapeCharacters.setValue(10648, 10647);
        this.mirroringShapeCharacters.setValue(10680, 8856);
        this.mirroringShapeCharacters.setValue(10688, 10689);
        this.mirroringShapeCharacters.setValue(10689, 10688);
        this.mirroringShapeCharacters.setValue(10692, 10693);
        this.mirroringShapeCharacters.setValue(10693, 10692);
        this.mirroringShapeCharacters.setValue(10703, 10704);
        this.mirroringShapeCharacters.setValue(10704, 10703);
        this.mirroringShapeCharacters.setValue(10705, 10706);
        this.mirroringShapeCharacters.setValue(10706, 10705);
        this.mirroringShapeCharacters.setValue(10708, 10709);
        this.mirroringShapeCharacters.setValue(10709, 10708);
        this.mirroringShapeCharacters.setValue(10712, 10713);
        this.mirroringShapeCharacters.setValue(10713, 10712);
        this.mirroringShapeCharacters.setValue(10714, 10715);
        this.mirroringShapeCharacters.setValue(10715, 10714);
        this.mirroringShapeCharacters.setValue(10741, 8725);
        this.mirroringShapeCharacters.setValue(10744, 10745);
        this.mirroringShapeCharacters.setValue(10745, 10744);
        this.mirroringShapeCharacters.setValue(10748, 10749);
        this.mirroringShapeCharacters.setValue(10749, 10748);
        this.mirroringShapeCharacters.setValue(10795, 10796);
        this.mirroringShapeCharacters.setValue(10796, 10795);
        this.mirroringShapeCharacters.setValue(10797, 10796);
        this.mirroringShapeCharacters.setValue(10798, 10797);
        this.mirroringShapeCharacters.setValue(10804, 10805);
        this.mirroringShapeCharacters.setValue(10805, 10804);
        this.mirroringShapeCharacters.setValue(10812, 10813);
        this.mirroringShapeCharacters.setValue(10813, 10812);
        this.mirroringShapeCharacters.setValue(10852, 10853);
        this.mirroringShapeCharacters.setValue(10853, 10852);
        this.mirroringShapeCharacters.setValue(10873, 10874);
        this.mirroringShapeCharacters.setValue(10874, 10873);
        this.mirroringShapeCharacters.setValue(10877, 10878);
        this.mirroringShapeCharacters.setValue(10878, 10877);
        this.mirroringShapeCharacters.setValue(10879, 10880);
        this.mirroringShapeCharacters.setValue(10880, 10879);
        this.mirroringShapeCharacters.setValue(10881, 10882);
        this.mirroringShapeCharacters.setValue(10882, 10881);
        this.mirroringShapeCharacters.setValue(10883, 10884);
        this.mirroringShapeCharacters.setValue(10884, 10883);
        this.mirroringShapeCharacters.setValue(10891, 10892);
        this.mirroringShapeCharacters.setValue(10892, 10891);
        this.mirroringShapeCharacters.setValue(10897, 10898);
        this.mirroringShapeCharacters.setValue(10898, 10897);
        this.mirroringShapeCharacters.setValue(10899, 10900);
        this.mirroringShapeCharacters.setValue(10900, 10899);
        this.mirroringShapeCharacters.setValue(10901, 10902);
        this.mirroringShapeCharacters.setValue(10902, 10901);
        this.mirroringShapeCharacters.setValue(10903, 10904);
        this.mirroringShapeCharacters.setValue(10904, 10903);
        this.mirroringShapeCharacters.setValue(10905, 10906);
        this.mirroringShapeCharacters.setValue(10906, 10905);
        this.mirroringShapeCharacters.setValue(10907, 10908);
        this.mirroringShapeCharacters.setValue(10908, 10907);
        this.mirroringShapeCharacters.setValue(10913, 10914);
        this.mirroringShapeCharacters.setValue(10914, 10913);
        this.mirroringShapeCharacters.setValue(10918, 10919);
        this.mirroringShapeCharacters.setValue(10919, 10918);
        this.mirroringShapeCharacters.setValue(10920, 10921);
        this.mirroringShapeCharacters.setValue(10921, 10920);
        this.mirroringShapeCharacters.setValue(10922, 10923);
        this.mirroringShapeCharacters.setValue(10923, 10922);
        this.mirroringShapeCharacters.setValue(10924, 10925);
        this.mirroringShapeCharacters.setValue(10925, 10924);
        this.mirroringShapeCharacters.setValue(10927, 10928);
        this.mirroringShapeCharacters.setValue(10928, 10927);
        this.mirroringShapeCharacters.setValue(10931, 10932);
        this.mirroringShapeCharacters.setValue(10932, 10931);
        this.mirroringShapeCharacters.setValue(10939, 10940);
        this.mirroringShapeCharacters.setValue(10940, 10939);
        this.mirroringShapeCharacters.setValue(10941, 10942);
        this.mirroringShapeCharacters.setValue(10942, 10941);
        this.mirroringShapeCharacters.setValue(10943, 10944);
        this.mirroringShapeCharacters.setValue(10944, 10943);
        this.mirroringShapeCharacters.setValue(10945, 10946);
        this.mirroringShapeCharacters.setValue(10946, 10945);
        this.mirroringShapeCharacters.setValue(10947, 10948);
        this.mirroringShapeCharacters.setValue(10948, 10947);
        this.mirroringShapeCharacters.setValue(10949, 10950);
        this.mirroringShapeCharacters.setValue(10950, 10949);
        this.mirroringShapeCharacters.setValue(10957, 10958);
        this.mirroringShapeCharacters.setValue(10958, 10957);
        this.mirroringShapeCharacters.setValue(10959, 10960);
        this.mirroringShapeCharacters.setValue(10960, 10959);
        this.mirroringShapeCharacters.setValue(10961, 10962);
        this.mirroringShapeCharacters.setValue(10962, 10961);
        this.mirroringShapeCharacters.setValue(10963, 10964);
        this.mirroringShapeCharacters.setValue(10964, 10963);
        this.mirroringShapeCharacters.setValue(10965, 10966);
        this.mirroringShapeCharacters.setValue(10966, 10965);
        this.mirroringShapeCharacters.setValue(10974, 8870);
        this.mirroringShapeCharacters.setValue(10979, 8873);
        this.mirroringShapeCharacters.setValue(10980, 8872);
        this.mirroringShapeCharacters.setValue(10981, 8875);
        this.mirroringShapeCharacters.setValue(10988, 10989);
        this.mirroringShapeCharacters.setValue(10989, 10988);
        this.mirroringShapeCharacters.setValue(10999, 11000);
        this.mirroringShapeCharacters.setValue(11000, 10999);
        this.mirroringShapeCharacters.setValue(11001, 11002);
        this.mirroringShapeCharacters.setValue(11002, 11001);
        this.mirroringShapeCharacters.setValue(12296, 12297);
        this.mirroringShapeCharacters.setValue(12297, 12296);
        this.mirroringShapeCharacters.setValue(12298, 12299);
        this.mirroringShapeCharacters.setValue(12299, 12298);
        this.mirroringShapeCharacters.setValue(12300, 12301);
        this.mirroringShapeCharacters.setValue(12301, 12300);
        this.mirroringShapeCharacters.setValue(12302, 12303);
        this.mirroringShapeCharacters.setValue(12303, 12302);
        this.mirroringShapeCharacters.setValue(12304, 12305);
        this.mirroringShapeCharacters.setValue(12305, 12304);
        this.mirroringShapeCharacters.setValue(12308, 12309);
        this.mirroringShapeCharacters.setValue(12309, 12308);
        this.mirroringShapeCharacters.setValue(12310, 12311);
        this.mirroringShapeCharacters.setValue(12311, 12310);
        this.mirroringShapeCharacters.setValue(12312, 12313);
        this.mirroringShapeCharacters.setValue(12313, 12312);
        this.mirroringShapeCharacters.setValue(12314, 12315);
        this.mirroringShapeCharacters.setValue(12315, 12314);
        this.mirroringShapeCharacters.setValue(65288, 65289);
        this.mirroringShapeCharacters.setValue(65289, 65288);
        this.mirroringShapeCharacters.setValue(65308, 65310);
        this.mirroringShapeCharacters.setValue(65310, 65308);
        this.mirroringShapeCharacters.setValue(65339, 65341);
        this.mirroringShapeCharacters.setValue(65341, 65339);
        this.mirroringShapeCharacters.setValue(65371, 65373);
        this.mirroringShapeCharacters.setValue(65373, 65371);
        this.mirroringShapeCharacters.setValue(65375, 65376);
        this.mirroringShapeCharacters.setValue(65376, 65375);
        this.mirroringShapeCharacters.setValue(65378, 65379);
        this.mirroringShapeCharacters.setValue(65379, 65378);
    };
    return Bidi;
}());

var RtlCharacters = /** @class */ (function () {
    //#endregion
    //#region constructors
    function RtlCharacters() {
        //#region fields
        /// <summary>
        /// Specifies the character types.
        /// </summary>
        this.types = [];
        /// <summary>
        /// Specifies the text order (RTL or LTR).
        /// </summary>
        this.textOrder = -1;
        /// <summary>
        /// Specifies the RTL character types.
        /// </summary>
        /* tslint:disable-next-line:prefer-array-literal */
        this.rtlCharacterTypes = new Array(65536);
        //#endregion
        //#region constants
        /// <summary>
        /// Left-to-Right (Non-European or non-Arabic digits).
        /// </summary>
        this.L = 0;
        /// <summary>
        /// Left-to-Right Embedding
        /// </summary>
        this.LRE = 1;
        /// <summary>
        /// Left-to-Right Override
        /// </summary>
        this.LRO = 2;
        /// <summary>
        /// Right-to-Left (Hebrew alphabet, and related punctuation).
        /// </summary>
        this.R = 3;
        /// <summary>
        /// Right-to-Left Arabic 
        /// </summary>
        this.AL = 4;
        /// <summary>
        /// Right-to-Left Embedding.
        /// </summary>
        this.RLE = 5;
        /// <summary>
        /// Right-to-Left Override
        /// </summary>
        this.RLO = 6;
        /// <summary>
        /// Pop Directional Format
        /// </summary>
        this.PDF = 7;
        /// <summary>
        /// European Number (European digits, Eastern Arabic-Indic digits).
        /// </summary>
        this.EN = 8;
        /// <summary>
        /// European Number Separator (Plus sign, Minus sign).
        /// </summary>
        this.ES = 9;
        /// <summary>
        /// European Number Terminator (Degree sign, currency symbols).
        /// </summary>
        this.ET = 10;
        /// <summary>
        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).
        /// </summary>
        this.AN = 11;
        /// <summary>
        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.
        /// </summary>
        this.CS = 12;
        /// <summary>
        /// Nonspacing Mark (Characters with the General_Category values).
        /// </summary>
        this.NSM = 13;
        /// <summary>
        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)
        /// </summary>
        this.BN = 14;
        /// <summary>
        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).
        /// </summary>
        this.B = 15;
        /// <summary>
        /// 	Segment Separator (tab).
        /// </summary>
        this.S = 16;
        /// <summary>
        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).
        /// </summary>
        this.WS = 17;
        /// <summary>
        /// Other Neutrals (All other characters, including object replacement character).
        /// </summary>
        this.ON = 18;
        /// <summary>
        /// RTL character types.
        /// </summary>
        this.charTypes = [
            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,
            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,
            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,
            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,
            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,
            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,
            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,
            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,
            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,
            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,
            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,
            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,
            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,
            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,
            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,
            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,
            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,
            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,
            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,
            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,
            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,
            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,
            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,
            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,
            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,
            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,
            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,
            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,
            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,
            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,
            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,
            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,
            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,
            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,
            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,
            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,
            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,
            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,
            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,
            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,
            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,
            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,
            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,
            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,
            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,
            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,
            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,
            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,
            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,
            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,
            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,
            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,
            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,
            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,
            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,
            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,
            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,
            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,
            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,
            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,
            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,
            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,
            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,
            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,
            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,
            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,
            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,
            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,
            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,
            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,
            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,
            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,
            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,
            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,
            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,
            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,
            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,
            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,
            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,
            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,
            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,
            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,
            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,
            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,
            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,
            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,
            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,
            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,
            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,
            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,
            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,
            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,
            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,
            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,
            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,
            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,
            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,
            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,
            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,
            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,
            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,
            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,
            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,
            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,
            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,
            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,
            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,
            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,
            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,
            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,
            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,
            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,
            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,
            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,
            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,
            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,
            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,
            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,
            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,
            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,
            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,
            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,
            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,
            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,
            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,
            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,
            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,
            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,
            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,
            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,
            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,
            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,
            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,
            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,
            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,
            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,
            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,
            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,
            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,
            65532, 65533, this.ON, 65534, 65535, this.L
        ];
        for (var i = 0; i < this.charTypes.length; ++i) {
            var start = this.charTypes[i];
            var end = this.charTypes[++i];
            var b = this.charTypes[++i];
            while (start <= end) {
                this.rtlCharacterTypes[start++] = b;
            }
        }
    }
    //#endregion
    //#region implementation
    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {
        this.types = this.getCharacterCode(inputText);
        this.textOrder = isRtl ? this.LRE : this.L;
        this.doVisualOrder();
        var result = [];
        for (var i = 0; i < this.levels.length; i++) {
            result[i] = this.levels[i];
        }
        return result;
    };
    RtlCharacters.prototype.getCharacterCode = function (text) {
        var characterCodes = [];
        for (var i = 0; i < text.length; i++) {
            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];
        }
        return characterCodes;
    };
    RtlCharacters.prototype.setDefaultLevels = function () {
        for (var i = 0; i < this.length; i++) {
            this.levels[i] = this.textOrder;
        }
    };
    RtlCharacters.prototype.setLevels = function () {
        this.setDefaultLevels();
        for (var n = 0; n < this.length; ++n) {
            var level = this.levels[n];
            if ((level & 0x80) !== 0) {
                level &= 0x7f;
                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;
            }
            this.levels[n] = level;
        }
    };
    RtlCharacters.prototype.updateLevels = function (index, level, length) {
        if ((level & 1) === 0) {
            for (var i = index; i < length; ++i) {
                if (this.result[i] === this.R) {
                    this.levels[i] += 1;
                }
                else if (this.result[i] !== this.L) {
                    this.levels[i] += 2;
                }
            }
        }
        else {
            for (var i = index; i < length; ++i) {
                if (this.result[i] !== this.R) {
                    this.levels[i] += 1;
                }
            }
        }
    };
    RtlCharacters.prototype.doVisualOrder = function () {
        this.length = this.types.length;
        this.result = this.types;
        this.levels = [];
        this.setLevels();
        this.length = this.getEmbeddedCharactersLength();
        var preview = this.textOrder;
        var i = 0;
        while (i < this.length) {
            var level = this.levels[i];
            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;
            var length_1 = i + 1;
            while (length_1 < this.length && this.levels[length_1] === level) {
                ++length_1;
            }
            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;
            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;
            this.checkNSM(i, length_1, level, preType, type);
            this.updateLevels(i, level, length_1);
            preview = level;
            i = length_1;
        }
        this.checkEmbeddedCharacters(this.length);
    };
    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {
        var index = 0;
        for (var i = 0; i < this.length; ++i) {
            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||
                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {
                this.result[index] = this.result[i];
                this.levels[index] = this.levels[i];
                index++;
            }
        }
        return index;
    };
    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {
        for (var i = this.types.length - 1; i >= 0; --i) {
            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||
                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {
                this.result[i] = this.types[i];
                this.levels[i] = -1;
            }
            else {
                length -= 1;
                this.result[i] = this.result[length];
                this.levels[i] = this.levels[length];
            }
        }
        for (var i = 0; i < this.types.length; i++) {
            if (this.levels[i] === -1) {
                if (i === 0) {
                    this.levels[i] = this.textOrder;
                }
                else {
                    this.levels[i] = this.levels[i - 1];
                }
            }
        }
    };
    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {
        var charType = startType;
        for (var i = index; i < length; ++i) {
            if (this.result[i] === this.NSM) {
                this.result[i] = charType;
            }
            else {
                charType = this.result[i];
            }
        }
        this.checkEuropeanDigits(index, length, level, startType, endType);
    };
    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {
        for (var i = index; i < length; ++i) {
            if (this.result[i] === this.EN) {
                for (var j = i - 1; j >= index; --j) {
                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {
                        if (this.result[j] === this.AL) {
                            this.result[i] = this.AN;
                        }
                        break;
                    }
                }
            }
        }
        this.checkArabicCharacters(index, length, level, startType, endType);
    };
    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {
        for (var i = index; i < length; ++i) {
            if (this.result[i] === this.AL) {
                this.result[i] = this.R;
            }
        }
        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);
    };
    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {
        for (var i = index + 1; i < length - 1; ++i) {
            if (this.result[i] === this.ES || this.result[i] === this.CS) {
                var preview = this.result[i - 1];
                var success = this.result[i + 1];
                if (preview === this.EN && success === this.EN) {
                    this.result[i] = this.EN;
                }
                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {
                    this.result[i] = this.AN;
                }
            }
        }
        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);
    };
    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {
        for (var i = index; i < length; ++i) {
            if (this.result[i] === this.ET) {
                var s = i;
                var b = [];
                b.push(this.ET);
                var l = this.getLength(s, length, b);
                var data = s === index ? startType : this.result[s - 1];
                if (data !== this.EN) {
                    data = (l === length) ? endType : this.result[l];
                }
                if (data === this.EN) {
                    for (var j = s; j < l; ++j) {
                        this.result[j] = this.EN;
                    }
                }
                i = l;
            }
        }
        this.checkOtherNeutrals(index, length, level, startType, endType);
    };
    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {
        for (var i = index; i < length; ++i) {
            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {
                this.result[i] = this.ON;
            }
        }
        this.checkOtherCharacters(index, length, level, startType, endType);
    };
    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {
        for (var i = index; i < length; ++i) {
            if (this.result[i] === this.EN) {
                var pst = startType;
                for (var j = i - 1; j >= index; --j) {
                    if (this.result[j] === this.L || this.result[j] === this.R) {
                        pst = this.result[j];
                        break;
                    }
                }
                if (pst === this.L) {
                    this.result[i] = this.L;
                }
            }
        }
        this.checkCommanCharacters(index, length, level, startType, endType);
    };
    RtlCharacters.prototype.getLength = function (index, length, validSet) {
        --index;
        while (++index < length) {
            var t = this.result[index];
            for (var i = 0; i < validSet.length; ++i) {
                if (t === validSet[i]) {
                    index = this.getLength(++index, length, validSet);
                }
            }
            return index;
        }
        return length;
    };
    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {
        for (var i = index; i < length; ++i) {
            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||
                this.result[i] === this.S) {
                var s = i;
                var byte = [this.B, this.S, this.WS, this.ON];
                var l = this.getLength(s, length, byte);
                var lt = 0;
                var tt = 0;
                var rt = 0;
                if (s === index) {
                    lt = startType;
                }
                else {
                    lt = this.result[s - 1];
                    if (lt === this.AN) {
                        lt = this.R;
                    }
                    else if (lt === this.EN) {
                        lt = this.R;
                    }
                }
                if (l === length) {
                    tt = endType;
                }
                else {
                    tt = this.result[l];
                    if (tt === this.AN) {
                        tt = this.R;
                    }
                    else if (tt === this.EN) {
                        tt = this.R;
                    }
                }
                if (lt === tt) {
                    rt = lt;
                }
                else {
                    rt = ((level & 0x1) === 0) ? this.L : this.R;
                }
                for (var j = s; j < l; ++j) {
                    this.result[j] = rt;
                }
                i = l;
            }
        }
    };
    return RtlCharacters;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-text-shape.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-text-shape.js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: ArabicShapeRenderer, ArabicShape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArabicShapeRenderer", function() { return ArabicShapeRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArabicShape", function() { return ArabicShape; });
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/**
 * ArabicShapeRenderer.ts class for EJ2-PDF
 */

var ArabicShapeRenderer = /** @class */ (function () {
    //#endregion
    //#region Constructor
    function ArabicShapeRenderer() {
        //#region Constants
        this.arabicCharTable = [['\u0621', '\uFE80'], ['\u0622', '\uFE81', '\uFE82'],
            ['\u0623', '\uFE83', '\uFE84'],
            ['\u0624', '\uFE85', '\uFE86'],
            ['\u0625', '\uFE87', '\uFE88'],
            ['\u0626', '\uFE89', '\uFE8A', '\uFE8B', '\uFE8C'],
            ['\u0627', '\uFE8D', '\uFE8E'],
            ['\u0628', '\uFE8F', '\uFE90', '\uFE91', '\uFE92'],
            ['\u0629', '\uFE93', '\uFE94'],
            ['\u062A', '\uFE95', '\uFE96', '\uFE97', '\uFE98'],
            ['\u062B', '\uFE99', '\uFE9A', '\uFE9B', '\uFE9C'],
            ['\u062C', '\uFE9D', '\uFE9E', '\uFE9F', '\uFEA0'],
            ['\u062D', '\uFEA1', '\uFEA2', '\uFEA3', '\uFEA4'],
            ['\u062E', '\uFEA5', '\uFEA6', '\uFEA7', '\uFEA8'],
            ['\u062F', '\uFEA9', '\uFEAA'],
            ['\u0630', '\uFEAB', '\uFEAC'],
            ['\u0631', '\uFEAD', '\uFEAE'],
            ['\u0632', '\uFEAF', '\uFEB0'],
            ['\u0633', '\uFEB1', '\uFEB2', '\uFEB3', '\uFEB4'],
            ['\u0634', '\uFEB5', '\uFEB6', '\uFEB7', '\uFEB8'],
            ['\u0635', '\uFEB9', '\uFEBA', '\uFEBB', '\uFEBC'],
            ['\u0636', '\uFEBD', '\uFEBE', '\uFEBF', '\uFEC0'],
            ['\u0637', '\uFEC1', '\uFEC2', '\uFEC3', '\uFEC4'],
            ['\u0638', '\uFEC5', '\uFEC6', '\uFEC7', '\uFEC8'],
            ['\u0639', '\uFEC9', '\uFECA', '\uFECB', '\uFECC'],
            ['\u063A', '\uFECD', '\uFECE', '\uFECF', '\uFED0'],
            ['\u0640', '\u0640', '\u0640', '\u0640', '\u0640'],
            ['\u0641', '\uFED1', '\uFED2', '\uFED3', '\uFED4'],
            ['\u0642', '\uFED5', '\uFED6', '\uFED7', '\uFED8'],
            ['\u0643', '\uFED9', '\uFEDA', '\uFEDB', '\uFEDC'],
            ['\u0644', '\uFEDD', '\uFEDE', '\uFEDF', '\uFEE0'],
            ['\u0645', '\uFEE1', '\uFEE2', '\uFEE3', '\uFEE4'],
            ['\u0646', '\uFEE5', '\uFEE6', '\uFEE7', '\uFEE8'],
            ['\u0647', '\uFEE9', '\uFEEA', '\uFEEB', '\uFEEC'],
            ['\u0648', '\uFEED', '\uFEEE'],
            ['\u0649', '\uFEEF', '\uFEF0', '\uFBE8', '\uFBE9'],
            ['\u064A', '\uFEF1', '\uFEF2', '\uFEF3', '\uFEF4'],
            ['\u0671', '\uFB50', '\uFB51'],
            ['\u0679', '\uFB66', '\uFB67', '\uFB68', '\uFB69'],
            ['\u067A', '\uFB5E', '\uFB5F', '\uFB60', '\uFB61'],
            ['\u067B', '\uFB52', '\uFB53', '\uFB54', '\uFB55'],
            ['\u067E', '\uFB56', '\uFB57', '\uFB58', '\uFB59'],
            ['\u067F', '\uFB62', '\uFB63', '\uFB64', '\uFB65'],
            ['\u0680', '\uFB5A', '\uFB5B', '\uFB5C', '\uFB5D'],
            ['\u0683', '\uFB76', '\uFB77', '\uFB78', '\uFB79'],
            ['\u0684', '\uFB72', '\uFB73', '\uFB74', '\uFB75'],
            ['\u0686', '\uFB7A', '\uFB7B', '\uFB7C', '\uFB7D'],
            ['\u0687', '\uFB7E', '\uFB7F', '\uFB80', '\uFB81'],
            ['\u0688', '\uFB88', '\uFB89'],
            ['\u068C', '\uFB84', '\uFB85'],
            ['\u068D', '\uFB82', '\uFB83'],
            ['\u068E', '\uFB86', '\uFB87'],
            ['\u0691', '\uFB8C', '\uFB8D'],
            ['\u0698', '\uFB8A', '\uFB8B'],
            ['\u06A4', '\uFB6A', '\uFB6B', '\uFB6C', '\uFB6D'],
            ['\u06A6', '\uFB6E', '\uFB6F', '\uFB70', '\uFB71'],
            ['\u06A9', '\uFB8E', '\uFB8F', '\uFB90', '\uFB91'],
            ['\u06AD', '\uFBD3', '\uFBD4', '\uFBD5', '\uFBD6'],
            ['\u06AF', '\uFB92', '\uFB93', '\uFB94', '\uFB95'],
            ['\u06B1', '\uFB9A', '\uFB9B', '\uFB9C', '\uFB9D'],
            ['\u06B3', '\uFB96', '\uFB97', '\uFB98', '\uFB99'],
            ['\u06BA', '\uFB9E', '\uFB9F'],
            ['\u06BB', '\uFBA0', '\uFBA1', '\uFBA2', '\uFBA3'],
            ['\u06BE', '\uFBAA', '\uFBAB', '\uFBAC', '\uFBAD'],
            ['\u06C0', '\uFBA4', '\uFBA5'],
            ['\u06C1', '\uFBA6', '\uFBA7', '\uFBA8', '\uFBA9'],
            ['\u06C5', '\uFBE0', '\uFBE1'],
            ['\u06C6', '\uFBD9', '\uFBDA'],
            ['\u06C7', '\uFBD7', '\uFBD8'],
            ['\u06C8', '\uFBDB', '\uFBDC'],
            ['\u06C9', '\uFBE2', '\uFBE3'],
            ['\u06CB', '\uFBDE', '\uFBDF'],
            ['\u06CC', '\uFBFC', '\uFBFD', '\uFBFE', '\uFBFF'],
            ['\u06D0', '\uFBE4', '\uFBE5', '\uFBE6', '\uFBE7'],
            ['\u06D2', '\uFBAE', '\uFBAF'],
            ['\u06D3', '\uFBB0', '\uFBB1']
        ];
        this.alef = '\u0627';
        this.alefHamza = '\u0623';
        this.alefHamzaBelow = '\u0625';
        this.alefMadda = '\u0622';
        this.lam = '\u0644';
        this.hamza = '\u0621';
        this.zeroWidthJoiner = '\u200D';
        this.hamzaAbove = '\u0654';
        this.hamzaBelow = '\u0655';
        this.wawHamza = '\u0624';
        this.yehHamza = '\u0626';
        this.waw = '\u0648';
        this.alefMaksura = '\u0649';
        this.yeh = '\u064A';
        this.farsiYeh = '\u06CC';
        this.shadda = '\u0651';
        this.madda = '\u0653';
        this.lwa = '\uFEFB';
        this.lwawh = '\uFEF7';
        this.lwawhb = '\uFEF9';
        this.lwawm = '\uFEF5';
        this.bwhb = '\u06D3';
        this.fathatan = '\u064B';
        this.superScriptalef = '\u0670';
        this.vowel = 0x1;
        // #endregion
        //#region Fields
        this.arabicMapTable = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
        for (var i = 0; i < this.arabicCharTable.length; i++) {
            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);
        }
    }
    //#endregion
    //#region implementation
    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {
        if ((input >= this.hamza) && (input <= this.bwhb)) {
            var value = [];
            if (this.arabicMapTable.getValue(input)) {
                value = this.arabicMapTable.getValue(input);
                return value[index + 1];
            }
        }
        else if (input >= this.lwawm && input <= this.lwa) {
            return (input);
        }
        return input;
    };
    ArabicShapeRenderer.prototype.shape = function (text, level) {
        var builder = '';
        var str2 = '';
        for (var i = 0; i < text.length; i++) {
            var c = text[i];
            if (c >= '؀' && c <= 'ۿ') {
                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {
                str2 = str2 + c;
            }
            else {
                if (str2.length > 0) {
                    var st = this.doShape(str2.toString(), 0);
                    builder = builder + st;
                    str2 = '';
                }
                builder = builder + c;
            }
        }
        if (str2.length > 0) {
            var st = this.doShape(str2.toString(), 0);
            builder = builder + st;
        }
        return builder.toString();
    };
    ArabicShapeRenderer.prototype.doShape = function (input, level) {
        var str = '';
        var ligature = 0;
        var len = 0;
        var i = 0;
        var next = '';
        var previous = new ArabicShape();
        var present = new ArabicShape();
        while (i < input.length) {
            next = input[i++];
            ligature = this.ligature(next, present);
            if (ligature === 0) {
                var shapeCount = this.getShapeCount(next);
                len = (shapeCount === 1) ? 0 : 2;
                if (previous.Shapes > 2) {
                    len += 1;
                }
                len = len % (present.Shapes);
                present.Value = this.getCharacterShape(present.Value, len);
                str = this.append(str, previous, level);
                previous = present;
                present = new ArabicShape();
                present.Value = next;
                present.Shapes = shapeCount;
                present.Ligature++;
            }
        }
        len = (previous.Shapes > 2) ? 1 : 0;
        len = len % (present.Shapes);
        present.Value = this.getCharacterShape(present.Value, len);
        str = this.append(str, previous, level);
        str = this.append(str, present, level);
        return str.toString();
    };
    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {
        if (shape.Value !== '') {
            builder = builder + shape.Value;
            shape.Ligature -= 1;
            if (shape.Type !== '') {
                if ((level & this.vowel) === 0) {
                    builder = builder + shape.Type;
                    shape.Ligature -= 1;
                }
                else {
                    shape.Ligature -= 1;
                }
            }
            if (shape.vowel !== '') {
                if ((level & this.vowel) === 0) {
                    builder = builder + shape.vowel;
                    shape.Ligature -= 1;
                }
                else {
                    shape.Ligature -= 1;
                }
            }
        }
        return builder;
    };
    ArabicShapeRenderer.prototype.ligature = function (value, shape) {
        if (shape.Value !== '') {
            var result = 0;
            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {
                result = 1;
                if ((shape.vowel !== '') && (value !== this.shadda)) {
                    result = 2;
                }
                if (value === this.shadda) {
                    if (shape.Type == null) {
                        shape.Type = this.shadda;
                    }
                    else {
                        return 0;
                    }
                }
                else if (value === this.hamzaBelow) {
                    if (shape.Value === this.alef) {
                        shape.Value = this.alefHamzaBelow;
                        result = 2;
                    }
                    else if (value === this.lwa) {
                        shape.Value = this.lwawhb;
                        result = 2;
                    }
                    else {
                        shape.Type = this.hamzaBelow;
                    }
                }
                else if (value === this.hamzaAbove) {
                    if (shape.Value === this.alef) {
                        shape.Value = this.alefHamza;
                        result = 2;
                    }
                    else if (shape.Value === this.lwa) {
                        shape.Value = this.lwawh;
                        result = 2;
                    }
                    else if (shape.Value === this.waw) {
                        shape.Value = this.wawHamza;
                        result = 2;
                    }
                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {
                        shape.Value = this.yehHamza;
                        result = 2;
                    }
                    else {
                        shape.Type = this.hamzaAbove;
                    }
                }
                else if (value === this.madda) {
                    if (shape.Value === this.alef) {
                        shape.Value = this.alefMadda;
                        result = 2;
                    }
                }
                else {
                    shape.vowel = value;
                }
                if (result === 1) {
                    shape.Ligature++;
                }
                return result;
            }
            if (shape.vowel !== '') {
                return 0;
            }
            if (shape.Value === this.lam) {
                if (value === this.alef) {
                    shape.Value = this.lwa;
                    shape.Shapes = 2;
                    result = 3;
                }
                else if (value === this.alefHamza) {
                    shape.Value = this.lwawh;
                    shape.Shapes = 2;
                    result = 3;
                }
                else if (value === this.alefHamzaBelow) {
                    shape.Value = this.lwawhb;
                    shape.Shapes = 2;
                    result = 3;
                }
                else if (value === this.alefMadda) {
                    shape.Value = this.lwawm;
                    shape.Shapes = 2;
                    result = 3;
                }
            }
            // else if (shape.Value === '') {
            //     shape.Value = value;
            //     shape.Shapes = this.getShapeCount(value);
            //     result = 1;
            // }
            return result;
        }
        else {
            return 0;
        }
    };
    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {
        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)
            || shape === this.superScriptalef)) {
            var c = [];
            if (this.arabicMapTable.getValue(shape)) {
                c = this.arabicMapTable.getValue(shape);
                return c.length - 1;
            }
        }
        else if (shape === this.zeroWidthJoiner) {
            return 4;
        }
        return 1;
    };
    return ArabicShapeRenderer;
}());

//#endregion
//#region Internals
var ArabicShape = /** @class */ (function () {
    function ArabicShape() {
        //#region Fields
        this.shapeValue = '';
        this.shapeType = '';
        this.shapeVowel = '';
        this.shapeLigature = 0;
        this.shapeShapes = 1;
        //#endregion
    }
    Object.defineProperty(ArabicShape.prototype, "Value", {
        //#endregion
        //#region Properties 
        /**
         * Gets or sets the values.
         * @private
         */
        get: function () {
            return this.shapeValue;
        },
        set: function (value) {
            this.shapeValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArabicShape.prototype, "Type", {
        /**
         * Gets or sets the values.
         * @private
         */
        get: function () {
            return this.shapeType;
        },
        set: function (value) {
            this.shapeType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArabicShape.prototype, "vowel", {
        /**
         * Gets or sets the values.
         * @private
         */
        get: function () {
            return this.shapeVowel;
        },
        set: function (value) {
            this.shapeVowel = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArabicShape.prototype, "Ligature", {
        /**
         * Gets or sets the values.
         * @private
         */
        get: function () {
            return this.shapeLigature;
        },
        set: function (value) {
            this.shapeLigature = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ArabicShape.prototype, "Shapes", {
        /**
         * Gets or sets the values.
         * @private
         */
        get: function () {
            return this.shapeShapes;
        },
        set: function (value) {
            this.shapeShapes = value;
        },
        enumerable: true,
        configurable: true
    });
    return ArabicShape;
}());

//#endregion


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: PdfStringLayouter, PdfStringLayoutResult, LineInfo, LineType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayouter", function() { return PdfStringLayouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayoutResult", function() { return PdfStringLayoutResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LineInfo", function() { return LineInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LineType", function() { return LineType; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _string_tokenizer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./string-tokenizer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js");



/**
 * Class `lay outing the text`.
 */
var PdfStringLayouter = /** @class */ (function () {
    // Constructors
    /**
     * Initializes a new instance of the `StringLayouter` class.
     * @private
     */
    function PdfStringLayouter() {
        /**
         * Checks whether the x co-ordinate is need to set as client size or not.
         * @hidden
         * @private
         */
        this.isOverloadWithPosition = false;
        //
    }
    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        if (arg4 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"]) {
            this.initialize(arg1, arg2, arg3, arg4, arg5);
            this.isOverloadWithPosition = arg6;
            this.clientSize = arg7;
            var result = this.doLayout();
            this.clear();
            return result;
        }
        else {
            this.initialize(arg1, arg2, arg3, arg4);
            this.isOverloadWithPosition = arg5;
            this.clientSize = arg6;
            var result = this.doLayout();
            this.clear();
            return result;
        }
    };
    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {
        if (typeof pageHeight === 'number') {
            if (text == null) {
                throw new Error('ArgumentNullException:text');
            }
            if (font == null) {
                throw new Error('ArgumentNullException:font');
            }
            this.text = text;
            this.font = font;
            this.format = format;
            this.size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](rectSize.width, rectSize.height);
            this.rectangle = rectSize;
            this.pageHeight = pageHeight;
            this.reader = new _string_tokenizer__WEBPACK_IMPORTED_MODULE_2__["StringTokenizer"](text);
        }
        else {
            this.initialize(text, font, format, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](0, 0), rectSize), 0);
        }
    };
    /**
     * `Clear` all resources.
     * @private
     */
    PdfStringLayouter.prototype.clear = function () {
        this.font = null;
        this.format = null;
        this.reader.close();
        this.reader = null;
        this.text = null;
    };
    /**
     * `Layouts` the text.
     * @private
     */
    PdfStringLayouter.prototype.doLayout = function () {
        var result = new PdfStringLayoutResult();
        var lineResult = new PdfStringLayoutResult();
        var lines = [];
        var line = this.reader.peekLine();
        var lineIndent = this.getLineIndent(true);
        while (line != null) {
            lineResult = this.layoutLine(line, lineIndent);
            if (lineResult !== null || typeof lineResult !== 'undefined') {
                var numSymbolsInserted = 0;
                /* tslint:disable */
                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);
                /* tslint:enable */
                var success = returnedValue.success;
                numSymbolsInserted = returnedValue.numInserted;
                if (!success) {
                    this.reader.read(numSymbolsInserted);
                    break;
                }
            }
            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {
            //     break;
            // }
            this.reader.readLine();
            line = this.reader.peekLine();
            lineIndent = this.getLineIndent(false);
        }
        this.finalizeResult(result, lines);
        return result;
    };
    /**
     * Returns `line indent` for the line.
     * @private
     */
    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {
        var lineIndent = 0;
        if (this.format != null) {
            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;
            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;
        }
        return lineIndent;
    };
    /**
     * Calculates `height` of the line.
     * @private
     */
    PdfStringLayouter.prototype.getLineHeight = function () {
        var height = this.font.height;
        if (this.format != null && this.format.lineSpacing !== 0) {
            height = this.format.lineSpacing + this.font.height;
        }
        return height;
    };
    /**
     * Calculates `width` of the line.
     * @private
     */
    PdfStringLayouter.prototype.getLineWidth = function (line) {
        var width = this.font.getLineWidth(line, this.format);
        return width;
    };
    // tslint:disable
    /**
     * `Layouts` line.
     * @private
     */
    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {
        var lineResult = new PdfStringLayoutResult();
        lineResult.layoutLineHeight = this.getLineHeight();
        var lines = [];
        var maxWidth = this.size.width;
        var lineWidth = this.getLineWidth(line) + lineIndent;
        var lineType = LineType.FirstParagraphLine;
        var readWord = true;
        // line is in bounds.
        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {
            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);
        }
        else {
            var builder = '';
            var curLine = '';
            lineWidth = lineIndent;
            var curIndent = lineIndent;
            var reader = new _string_tokenizer__WEBPACK_IMPORTED_MODULE_2__["StringTokenizer"](line);
            var word = reader.peekWord();
            var isSingleWord = false;
            if (word.length !== reader.length) {
                if (word === ' ') {
                    curLine = curLine + word;
                    builder = builder + word;
                    reader.position += 1;
                    word = reader.peekWord();
                }
            }
            while (word != null) {
                curLine = curLine + word;
                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;
                if (curLine.toString() === ' ') {
                    curLine = '';
                    curLineWidth = 0;
                }
                if (curLineWidth > maxWidth) {
                    if (this.getWrapType() === _enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].None) {
                        break;
                    }
                    if (curLine.length === word.length) {
                        //  Character wrap is disabled or one symbol is greater than bounds.
                        if (this.getWrapType() === _enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].WordOnly) {
                            lineResult.textRemainder = line.substring(reader.position);
                            break;
                        }
                        else if (curLine.length === 1) {
                            builder = builder + word;
                            break;
                        }
                        else {
                            readWord = false;
                            curLine = '';
                            word = reader.peek().toString();
                            continue;
                        }
                    }
                    else {
                        if (this.getLineWidth(word.toString()) > maxWidth) {
                            this.format.wordWrap = _enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].Character;
                        }
                        else {
                            if (typeof this.format !== 'undefined' && this.format !== null) {
                                this.format.wordWrap = _enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].Word;
                            }
                        }
                        if (this.getWrapType() !== _enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].Character || !readWord) {
                            var ln = builder.toString();
                            // if (ln.indexOf(' ') === -1) {
                            //     isSingleWord = true;
                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);
                            // } else {
                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);
                            // }                          
                            if (ln !== ' ') {
                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);
                            }
                            if (this.isOverloadWithPosition) {
                                maxWidth = this.clientSize.width;
                            }
                            curLine = '';
                            builder = '';
                            lineWidth = 0;
                            curIndent = 0;
                            curLineWidth = 0;
                            lineType = LineType.None;
                            // if (isSingleWord) {
                            //     reader.readWord();
                            //     readWord = false;
                            // }
                            word = (readWord) ? word : reader.peekWord();
                            //isSingleWord = false;
                            readWord = true;
                        }
                        else {
                            readWord = false;
                            curLine = '';
                            curLine = curLine + builder.toString();
                            word = reader.peek().toString();
                        }
                        continue;
                    }
                }
                /*tslint:disable:max-func-body-length */
                builder = builder + word;
                lineWidth = curLineWidth;
                if (readWord) {
                    reader.readWord();
                    word = reader.peekWord();
                    //isSingleWord = false;
                }
                else {
                    reader.read();
                    word = reader.peek().toString();
                }
            }
            if (builder.length > 0) {
                var ln = builder.toString();
                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);
            }
            reader.close();
        }
        lineResult.layoutLines = [];
        for (var index = 0; index < lines.length; index++) {
            lineResult.layoutLines.push(lines[index]);
        }
        lines = [];
        return lineResult;
    };
    /**
     * `Adds` line to line result.
     * @private
     */
    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {
        var info = new LineInfo();
        info.text = line;
        info.width = lineWidth;
        info.lineType = breakType;
        lines.push(info);
        var size = lineResult.actualSize;
        size.height += this.getLineHeight();
        size.width = Math.max(size.width, lineWidth);
        lineResult.size = size;
    };
    /**
     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.
     * @private
     */
    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, 
    /*out*/ numInserted) {
        var success = true;
        var allowPartialLines = (this.format != null && !this.format.lineLimit);
        var height = result.actualSize.height;
        var maxHeight = this.size.height;
        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {
            maxHeight = this.rectangle.y - this.pageHeight;
            maxHeight = Math.max(maxHeight, -maxHeight);
        }
        numInserted = 0;
        if (lineResult.lines != null) {
            for (var i = 0, len = lineResult.lines.length; i < len; i++) {
                var expHeight = height + lineResult.lineHeight;
                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {
                    var info = lineResult.lines[i];
                    numInserted += info.text.length;
                    info = this.trimLine(info, (lines.length === 0));
                    lines.push(info);
                    // Update width.
                    var size = result.actualSize;
                    size.width = Math.max(size.width, info.width);
                    result.size = size;
                    // The part of the line fits only and it's allowed to use partial lines.
                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)
                    // {
                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);
                    //     if (shouldClip)
                    //     {
                    //         let exceededHeight : number = expHeight - maxHeight;
                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;
                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;
                    //     }
                    //     else
                    //     {
                    //         height = expHeight;
                    //     }
                    //     success = false;
                    //     break;
                    // } else {
                    height = expHeight;
                    // }
                }
                else {
                    success = false;
                    break;
                }
            }
        }
        if (height != result.size.height) {
            var size1 = result.actualSize;
            size1.height = height;
            result.size = size1;
        }
        return { success: success, numInserted: numInserted };
    };
    /**
     * `Finalizes` final result.
     * @private
     */
    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {
        result.layoutLines = [];
        for (var index = 0; index < lines.length; index++) {
            result.layoutLines.push(lines[index]);
        }
        result.layoutLineHeight = this.getLineHeight();
        if (!this.reader.end) {
            result.textRemainder = this.reader.readToEnd();
        }
        lines = [];
    };
    /**
     * `Trims` whitespaces at the line.
     * @private
     */
    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {
        var line = info.text;
        var lineWidth = info.width;
        // Trim start whitespaces if the line is not a start of the paragraph only.
        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);
        var start = (this.format == null || !this.format.rightToLeft);
        var spaces = _string_tokenizer__WEBPACK_IMPORTED_MODULE_2__["StringTokenizer"].spaces;
        line = (start) ? line.trim() : line.trim();
        // Recalculate line width.
        if (line.length !== info.text.length) {
            lineWidth = this.getLineWidth(line);
            if ((info.lineType & LineType.FirstParagraphLine) > 0) {
                lineWidth += this.getLineIndent(firstLine);
            }
        }
        info.text = line;
        info.width = lineWidth;
        return info;
    };
    /**
     * Returns `wrap` type.
     * @private
     */
    PdfStringLayouter.prototype.getWrapType = function () {
        var wrapType = (this.format != null) ? this.format.wordWrap : _enum__WEBPACK_IMPORTED_MODULE_1__["PdfWordWrapType"].Word;
        return wrapType;
    };
    return PdfStringLayouter;
}());

//Internal declaration
var PdfStringLayoutResult = /** @class */ (function () {
    function PdfStringLayoutResult() {
    }
    Object.defineProperty(PdfStringLayoutResult.prototype, "remainder", {
        // Properties
        /**
         * Gets the `text` which is not lay outed.
         * @private
         */
        get: function () {
            return this.textRemainder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "actualSize", {
        /**
         * Gets the actual layout text `bounds`.
         * @private
         */
        get: function () {
            if (typeof this.size === 'undefined') {
                this.size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](0, 0);
            }
            return this.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "lines", {
        /**
         * Gets layout `lines` information.
         * @private
         */
        get: function () {
            return this.layoutLines;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "lineHeight", {
        /**
         * Gets the `height` of the line.
         * @private
         */
        get: function () {
            return this.layoutLineHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "empty", {
        /**
         * Gets value that indicates whether any layout text [`empty`].
         * @private
         */
        get: function () {
            return (this.layoutLines == null || this.layoutLines.length === 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStringLayoutResult.prototype, "lineCount", {
        /**
         * Gets `number of` the layout lines.
         * @private
         */
        get: function () {
            var count = (!this.empty) ? this.layoutLines.length : 0;
            return count;
        },
        enumerable: true,
        configurable: true
    });
    return PdfStringLayoutResult;
}());

var LineInfo = /** @class */ (function () {
    function LineInfo() {
    }
    Object.defineProperty(LineInfo.prototype, "lineType", {
        //Properties
        /**
         * Gets the `type` of the line text.
         * @private
         */
        get: function () {
            return this.type;
        },
        set: function (value) {
            this.type = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LineInfo.prototype, "text", {
        /**
         * Gets the line `text`.
         * @private
         */
        get: function () {
            return this.content;
        },
        set: function (value) {
            this.content = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LineInfo.prototype, "width", {
        /**
         * Gets `width` of the line text.
         * @private
         */
        get: function () {
            return this.lineWidth;
        },
        set: function (value) {
            this.lineWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    return LineInfo;
}());

/**
* Break type of the `line`.
* @private
*/
var LineType;
(function (LineType) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    LineType[LineType["None"] = 0] = "None";
    /**
     * Specifies the type of `NewLineBreak`.
     * @private
     */
    LineType[LineType["NewLineBreak"] = 1] = "NewLineBreak";
    /**
     * Specifies the type of `LayoutBreak`.
     * @private
     */
    LineType[LineType["LayoutBreak"] = 2] = "LayoutBreak";
    /**
     * Specifies the type of `FirstParagraphLine`.
     * @private
     */
    LineType[LineType["FirstParagraphLine"] = 4] = "FirstParagraphLine";
    /**
     * Specifies the type of `LastParagraphLine`.
     * @private
     */
    LineType[LineType["LastParagraphLine"] = 8] = "LastParagraphLine";
})(LineType || (LineType = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: StringTokenizer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StringTokenizer", function() { return StringTokenizer; });
/**
 * StringTokenizer.ts class for EJ2-PDF
 * Utility class for working with strings.
 * @private
 */
var StringTokenizer = /** @class */ (function () {
    // Constructors
    /**
     * Initializes a new instance of the `StringTokenizer` class.
     * @private
     */
    function StringTokenizer(textValue) {
        /**
         * Current `position`.
         * @private
         */
        this.currentPosition = 0;
        if (textValue == null) {
            throw new Error('ArgumentNullException:text');
        }
        this.text = textValue;
    }
    Object.defineProperty(StringTokenizer.prototype, "length", {
        // Properties
        /**
         * Gets text `length`.
         * @private
         */
        get: function () {
            return this.text.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StringTokenizer.prototype, "end", {
        get: function () {
            return (this.currentPosition === this.text.length);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StringTokenizer.prototype, "position", {
        /**
         * Gets or sets the position.
         * @private
         */
        get: function () {
            return this.currentPosition;
        },
        set: function (value) {
            this.currentPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    StringTokenizer.getCharsCount = function (text, symbols) {
        if (typeof symbols === 'string') {
            if (text == null) {
                throw new Error('ArgumentNullException:wholeText');
            }
            var numSymbols = 0;
            var curIndex = 0;
            for (;;) {
                curIndex = text.indexOf(symbols, curIndex);
                if (curIndex === -1) {
                    break;
                }
                else {
                    numSymbols++;
                    curIndex++;
                }
            }
            return numSymbols;
        }
        else {
            if (text == null) {
                throw new Error('ArgumentNullException:text');
            }
            if (symbols == null) {
                throw new Error('ArgumentNullException:symbols');
            }
            var count = 0;
            for (var i = 0, len = text.length; i < len; i++) {
                var ch = text[i];
                if (this.contains(symbols, ch)) {
                    count++;
                }
            }
            return count;
        }
    };
    /**
     * Reads line of the text.
     * @private
     */
    StringTokenizer.prototype.readLine = function () {
        var pos = this.currentPosition;
        while (pos < this.length) {
            var ch = this.text[pos];
            switch (ch) {
                case '\r':
                case '\n': {
                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);
                    this.currentPosition = pos + 1;
                    if (((ch === '\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\n')) {
                        this.currentPosition++;
                    }
                    return text;
                }
            }
            pos++;
        }
        // The remaining text.
        if (pos > this.currentPosition) {
            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);
            this.currentPosition = pos;
            return text2;
        }
        return null;
    };
    /**
     * Reads line of the text.
     * @private
     */
    StringTokenizer.prototype.peekLine = function () {
        var pos = this.currentPosition;
        var line = this.readLine();
        this.currentPosition = pos;
        return line;
    };
    /**
     * Reads a word from the text.
     * @private
     */
    StringTokenizer.prototype.readWord = function () {
        var pos = this.currentPosition;
        while (pos < this.length) {
            var ch = this.text[pos];
            switch (ch) {
                case '\r':
                case '\n':
                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);
                    this.currentPosition = pos + 1;
                    if (((ch === '\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\n')) {
                        this.currentPosition++;
                    }
                    return textValue;
                case ' ':
                case '\t': {
                    if (pos === this.currentPosition) {
                        pos++;
                    }
                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);
                    this.currentPosition = pos;
                    return text;
                }
            }
            pos++;
        }
        // The remaining text.
        if (pos > this.currentPosition) {
            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);
            this.currentPosition = pos;
            return text2;
        }
        return null;
    };
    /**
     * Peeks a word from the text.
     * @private
     */
    StringTokenizer.prototype.peekWord = function () {
        var pos = this.currentPosition;
        var word = this.readWord();
        this.currentPosition = pos;
        return word;
    };
    StringTokenizer.prototype.read = function (count) {
        if (typeof count === 'undefined') {
            var ch = '0';
            if (!this.end) {
                ch = this.text[this.currentPosition];
                this.currentPosition++;
            }
            return ch;
        }
        else {
            var num = 0;
            var builder = '';
            while (!this.end && num < count) {
                var ch = this.read();
                builder = builder + ch;
                num++;
            }
            return builder;
        }
    };
    /**
     * Peeks char form the data.
     * @private
     */
    StringTokenizer.prototype.peek = function () {
        var ch = '0';
        if (!this.end) {
            ch = this.text[this.currentPosition];
        }
        return ch;
    };
    /**
     * Closes a reader.
     * @private
     */
    StringTokenizer.prototype.close = function () {
        this.text = null;
    };
    StringTokenizer.prototype.readToEnd = function () {
        var text;
        if (this.currentPosition === 0) {
            text = this.text;
        }
        else {
            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);
        }
        this.currentPosition = this.length;
        return text;
    };
    //Implementation
    /**
     * Checks whether array contains a symbol.
     * @private
     */
    StringTokenizer.contains = function (array, symbol) {
        var contains = false;
        for (var i = 0; i < array.length; i++) {
            if (array[i] === symbol) {
                contains = true;
                break;
            }
        }
        return contains;
    };
    // Constants
    /**
     * `Whitespace` symbol.
     * @private
     */
    StringTokenizer.whiteSpace = ' ';
    /**
     * `tab` symbol.
     * @private
     */
    StringTokenizer.tab = '\t';
    /**
     * Array of `spaces`.
     * @private
     */
    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];
    /**
     * `Pattern` for WhiteSpace.
     * @private
     */
    StringTokenizer.whiteSpacePattern = '^[ \t]+$';
    return StringTokenizer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-OS2-Table.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-OS2-Table.js ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: TtfOS2Table */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfOS2Table", function() { return TtfOS2Table; });
/**
 * TtfOS2Table.ts class for EJ2-PDF
 * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.
 */
var TtfOS2Table = /** @class */ (function () {
    function TtfOS2Table() {
    }
    return TtfOS2Table;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: TtfAppleCmapSubTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfAppleCmapSubTable", function() { return TtfAppleCmapSubTable; });
/**
 * TtfAppleCmapSubTable.ts class for EJ2-PDF
 */
var TtfAppleCmapSubTable = /** @class */ (function () {
    function TtfAppleCmapSubTable() {
    }
    return TtfAppleCmapSubTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-sub-table.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-sub-table.js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: TtfCmapSubTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfCmapSubTable", function() { return TtfCmapSubTable; });
/**
 * TtfCmapSubTable.ts class for EJ2-PDF
 */
var TtfCmapSubTable = /** @class */ (function () {
    function TtfCmapSubTable() {
    }
    return TtfCmapSubTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-table.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-table.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: TtfCmapTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfCmapTable", function() { return TtfCmapTable; });
/**
 * TtfCmapTable.ts class for EJ2-PDF
 */
var TtfCmapTable = /** @class */ (function () {
    function TtfCmapTable() {
    }
    return TtfCmapTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-header.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-header.js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: TtfGlyphHeader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfGlyphHeader", function() { return TtfGlyphHeader; });
/**
 * TtfLocaTable.ts class for EJ2-PDF
 */
var TtfGlyphHeader = /** @class */ (function () {
    function TtfGlyphHeader() {
    }
    return TtfGlyphHeader;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-info.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-info.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: TtfGlyphInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfGlyphInfo", function() { return TtfGlyphInfo; });
/**
 * TtfGlyphInfo.ts class for EJ2-PDF
 */
var TtfGlyphInfo = /** @class */ (function () {
    function TtfGlyphInfo() {
    }
    Object.defineProperty(TtfGlyphInfo.prototype, "empty", {
        //Properties
        /**
         * Gets a value indicating whether this TtfGlyphInfo is empty.
         */
        get: function () {
            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);
            return empty;
        },
        enumerable: true,
        configurable: true
    });
    //IComparable implementation
    /**
     * Compares two WidthDescriptor objects.
     */
    TtfGlyphInfo.prototype.compareTo = function (obj) {
        var glyph = obj;
        return this.index - glyph.index;
    };
    return TtfGlyphInfo;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-head-table.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-head-table.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: TtfHeadTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfHeadTable", function() { return TtfHeadTable; });
/**
 * TtfHeadTable.ts class for EJ2-PDF
 */
var TtfHeadTable = /** @class */ (function () {
    function TtfHeadTable() {
    }
    return TtfHeadTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-horizontal-header-table.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-horizontal-header-table.js ***!
  \*********************************************************************************************************************************************************************/
/*! exports provided: TtfHorizontalHeaderTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfHorizontalHeaderTable", function() { return TtfHorizontalHeaderTable; });
/**
 * TtfHorizontalHeaderTable.ts class for EJ2-PDF
 */
var TtfHorizontalHeaderTable = /** @class */ (function () {
    function TtfHorizontalHeaderTable() {
    }
    return TtfHorizontalHeaderTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-loca-table.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-loca-table.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: TtfLocaTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfLocaTable", function() { return TtfLocaTable; });
/**
 * TtfLocaTable.ts class for EJ2-PDF
 */
var TtfLocaTable = /** @class */ (function () {
    function TtfLocaTable() {
    }
    return TtfLocaTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-long-hor-metric.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-long-hor-metric.js ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: TtfLongHorMetric */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfLongHorMetric", function() { return TtfLongHorMetric; });
/**
 * TtfLongHorMetric.ts class for EJ2-PDF
 */
var TtfLongHorMetric = /** @class */ (function () {
    function TtfLongHorMetric() {
    }
    return TtfLongHorMetric;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-metrics.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-metrics.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: TtfMetrics */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfMetrics", function() { return TtfMetrics; });
var TtfMetrics = /** @class */ (function () {
    function TtfMetrics() {
    }
    Object.defineProperty(TtfMetrics.prototype, "isItalic", {
        //Properties
        /**
         * Gets a value indicating whether this instance is italic.
         */
        get: function () {
            return ((this.macStyle & 2) !== 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TtfMetrics.prototype, "isBold", {
        /**
         * Gets a value indicating whether this instance is bold.
         */
        get: function () {
            return ((this.macStyle & 1) !== 0);
        },
        enumerable: true,
        configurable: true
    });
    return TtfMetrics;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js":
/*!**********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js ***!
  \**********************************************************************************************************************************************************************/
/*! exports provided: TtfMicrosoftCmapSubTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfMicrosoftCmapSubTable", function() { return TtfMicrosoftCmapSubTable; });
/**
 * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF
 */
var TtfMicrosoftCmapSubTable = /** @class */ (function () {
    function TtfMicrosoftCmapSubTable() {
    }
    return TtfMicrosoftCmapSubTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-record.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-record.js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: TtfNameRecord */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfNameRecord", function() { return TtfNameRecord; });
/**
 * TtfNameRecord.ts class for EJ2-PDF
 */
var TtfNameRecord = /** @class */ (function () {
    function TtfNameRecord() {
    }
    return TtfNameRecord;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-table.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-table.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: TtfNameTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfNameTable", function() { return TtfNameTable; });
var TtfNameTable = /** @class */ (function () {
    function TtfNameTable() {
    }
    return TtfNameTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-post-table.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-post-table.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: TtfPostTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfPostTable", function() { return TtfPostTable; });
/**
 * TtfPostTable.ts class for EJ2-PDF
 */
var TtfPostTable = /** @class */ (function () {
    function TtfPostTable() {
    }
    return TtfPostTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-reader.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-reader.js ***!
  \****************************************************************************************************************************************************/
/*! exports provided: TtfReader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfReader", function() { return TtfReader; });
/* harmony import */ var _ttf_table_info__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ttf-table-info */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-table-info.js");
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony import */ var _ttf_name_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ttf-name-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-table.js");
/* harmony import */ var _ttf_name_record__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ttf-name-record */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-record.js");
/* harmony import */ var _ttf_head_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ttf-head-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-head-table.js");
/* harmony import */ var _ttf_metrics__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ttf-metrics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-metrics.js");
/* harmony import */ var _ttf_horizontal_header_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ttf-horizontal-header-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-horizontal-header-table.js");
/* harmony import */ var _ttf_OS2_Table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ttf-OS2-Table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-OS2-Table.js");
/* harmony import */ var _ttf_post_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ttf-post-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-post-table.js");
/* harmony import */ var _ttf_long_hor_metric__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ttf-long-hor-metric */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-long-hor-metric.js");
/* harmony import */ var _ttf_cmap_sub_table__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ttf-cmap-sub-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-sub-table.js");
/* harmony import */ var _ttf_cmap_table__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ttf-cmap-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-table.js");
/* harmony import */ var _ttf_glyph_info__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ttf-glyph-info */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-info.js");
/* harmony import */ var _ttf_loca_table__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ttf-loca-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-loca-table.js");
/* harmony import */ var _ttf_apple_cmap_sub_table__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ttf-apple-cmap-sub-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js");
/* harmony import */ var _ttf_microsoft_cmap_sub_table__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ttf-microsoft-cmap-sub-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js");
/* harmony import */ var _ttf_trimmed_cmap_sub_table__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ttf-trimmed-cmap-sub-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js");
/* harmony import */ var _ttf_glyph_header__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./ttf-glyph-header */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-header.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _string_tokenizer__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./string-tokenizer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _input_output_big_endian_writer__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./../../input-output/big-endian-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/big-endian-writer.js");
/**
 * TtfReader.ts class for EJ2-PDF
 */























var TtfReader = /** @class */ (function () {
    //Constructors
    function TtfReader(fontData) {
        this.int32Size = 4;
        this.isTtcFont = false;
        this.isMacTtf = false;
        this.metricsName = '';
        this.isMacTTF = false;
        this.missedGlyphs = 0;
        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];
        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];
        this.fontData = fontData;
        this.initialize();
    }
    Object.defineProperty(TtfReader.prototype, "macintosh", {
        //Properties
        /**
         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).
         */
        get: function () {
            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {
                this.macintoshDictionary = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
            }
            return this.macintoshDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TtfReader.prototype, "microsoft", {
        /**
         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).
         */
        get: function () {
            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {
                this.microsoftDictionary = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
            }
            return this.microsoftDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TtfReader.prototype, "macintoshGlyphs", {
        /**
         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).
         */
        get: function () {
            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {
                this.internalMacintoshGlyphs = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
            }
            return this.internalMacintoshGlyphs;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TtfReader.prototype, "microsoftGlyphs", {
        /**
         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).
         */
        get: function () {
            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {
                this.internalMicrosoftGlyphs = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
            }
            return this.internalMicrosoftGlyphs;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    TtfReader.prototype.initialize = function () {
        if (this.metrics === undefined) {
            this.metrics = new _ttf_metrics__WEBPACK_IMPORTED_MODULE_5__["TtfMetrics"]();
        }
        this.readFontDictionary();
        var nameTable = this.readNameTable();
        var headTable = this.readHeadTable();
        this.initializeFontName(nameTable);
        this.metrics.macStyle = headTable.macStyle;
    };
    TtfReader.prototype.readFontDictionary = function () {
        this.offset = 0;
        var version = this.checkPreambula();
        //this.offset += 4;
        var numTables = this.readInt16(this.offset);
        var searchRange = this.readInt16(this.offset);
        var entrySelector = this.readInt16(this.offset);
        var rangeShift = this.readInt16(this.offset);
        if (this.tableDirectory === undefined) {
            this.tableDirectory = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
        }
        for (var i = 0; i < numTables; ++i) {
            var table = new _ttf_table_info__WEBPACK_IMPORTED_MODULE_0__["TtfTableInfo"]();
            var tableKey = this.readString(this.int32Size);
            table.checksum = this.readInt32(this.offset);
            table.offset = this.readInt32(this.offset);
            table.length = this.readInt32(this.offset);
            this.tableDirectory.setValue(tableKey, table);
        }
        this.lowestPosition = this.offset;
        if (!this.isTtcFont) {
            this.fixOffsets();
        }
    };
    TtfReader.prototype.fixOffsets = function () {
        var minOffset = Number.MAX_VALUE;
        // Search for a smallest offset and compare it with the lowest position found.
        var tableKeys = this.tableDirectory.keys();
        for (var i = 0; i < tableKeys.length; i++) {
            var value = this.tableDirectory.getValue(tableKeys[i]);
            var offset = value.offset;
            if (minOffset > offset) {
                minOffset = offset;
                if (minOffset <= this.lowestPosition) {
                    break;
                }
            }
        }
        var shift = minOffset - this.lowestPosition;
        if (shift !== 0) {
            var table = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
            for (var i = 0; i < tableKeys.length; i++) {
                var value = this.tableDirectory.getValue(tableKeys[i]);
                value.offset -= shift;
                table.setValue(tableKeys[i], value);
            }
            this.tableDirectory = table;
        }
    };
    TtfReader.prototype.checkPreambula = function () {
        var version = this.readInt32(this.offset);
        this.isMacTtf = (version === 0x74727565) ? true : false;
        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {
            this.isTtcFont = true;
            this.offset = 0;
            var fontTag = this.readString(4);
            if (fontTag !== 'ttcf') {
                throw new Error('Can not read TTF font data');
            }
            //skip 4
            this.offset += 4;
            var ttcIdentificationNumber = this.readInt32(this.offset);
            if (ttcIdentificationNumber < 0) {
                throw new Error('Can not read TTF font data');
            }
            this.offset = this.readInt32(this.offset);
            version = this.readInt32(this.offset);
        }
        return version;
    };
    TtfReader.prototype.readNameTable = function () {
        var tableInfo = this.getTable('name');
        this.offset = tableInfo.offset;
        var table = new _ttf_name_table__WEBPACK_IMPORTED_MODULE_2__["TtfNameTable"]();
        table.formatSelector = this.readUInt16(this.offset);
        table.recordsCount = this.readUInt16(this.offset);
        table.offset = this.readUInt16(this.offset);
        table.nameRecords = [];
        var recordSize = 12;
        var position = this.offset;
        for (var i = 0; i < table.recordsCount; i++) {
            this.offset = position;
            var record = new _ttf_name_record__WEBPACK_IMPORTED_MODULE_3__["TtfNameRecord"]();
            record.platformID = this.readUInt16(this.offset);
            record.encodingID = this.readUInt16(this.offset);
            record.languageID = this.readUInt16(this.offset);
            record.nameID = this.readUInt16(this.offset);
            record.length = this.readUInt16(this.offset);
            record.offset = this.readUInt16(this.offset);
            this.offset = tableInfo.offset + table.offset + record.offset;
            var unicode = (record.platformID === 0 || record.platformID === 3);
            record.name = this.readString(record.length, unicode);
            table.nameRecords[i] = record;
            position += recordSize;
        }
        return table;
    };
    TtfReader.prototype.readHeadTable = function () {
        var tableInfo = this.getTable('head');
        this.offset = tableInfo.offset;
        var table = new _ttf_head_table__WEBPACK_IMPORTED_MODULE_4__["TtfHeadTable"]();
        table.version = this.readFixed(this.offset);
        table.fontRevision = this.readFixed(this.offset);
        table.checkSumAdjustment = this.readUInt32(this.offset);
        table.magicNumber = this.readUInt32(this.offset);
        table.flags = this.readUInt16(this.offset);
        table.unitsPerEm = this.readUInt16(this.offset);
        table.created = this.readInt64(this.offset);
        table.modified = this.readInt64(this.offset);
        table.xMin = this.readInt16(this.offset);
        table.yMin = this.readInt16(this.offset);
        table.xMax = this.readInt16(this.offset);
        table.yMax = this.readInt16(this.offset);
        table.macStyle = this.readUInt16(this.offset);
        table.lowestReadableSize = this.readUInt16(this.offset);
        table.fontDirectionHint = this.readInt16(this.offset);
        table.indexToLocalFormat = this.readInt16(this.offset);
        table.glyphDataFormat = this.readInt16(this.offset);
        return table;
    };
    TtfReader.prototype.readHorizontalHeaderTable = function () {
        var tableInfo = this.getTable('hhea');
        this.offset = tableInfo.offset;
        var table = new _ttf_horizontal_header_table__WEBPACK_IMPORTED_MODULE_6__["TtfHorizontalHeaderTable"]();
        table.version = this.readFixed(this.offset);
        table.ascender = this.readInt16(this.offset);
        table.descender = this.readInt16(this.offset);
        table.lineGap = this.readInt16(this.offset);
        table.advanceWidthMax = this.readUInt16(this.offset);
        table.minLeftSideBearing = this.readInt16(this.offset);
        table.minRightSideBearing = this.readInt16(this.offset);
        table.xMaxExtent = this.readInt16(this.offset);
        table.caretSlopeRise = this.readInt16(this.offset);
        table.caretSlopeRun = this.readInt16(this.offset);
        //skip 2 * 5
        this.offset += 10;
        table.metricDataFormat = this.readInt16(this.offset);
        table.numberOfHMetrics = this.readUInt16(this.offset);
        return table;
    };
    TtfReader.prototype.readOS2Table = function () {
        var tableInfo = this.getTable('OS/2');
        this.offset = tableInfo.offset;
        var table = new _ttf_OS2_Table__WEBPACK_IMPORTED_MODULE_7__["TtfOS2Table"]();
        table.version = this.readUInt16(this.offset);
        table.xAvgCharWidth = this.readInt16(this.offset);
        table.usWeightClass = this.readUInt16(this.offset);
        table.usWidthClass = this.readUInt16(this.offset);
        table.fsType = this.readInt16(this.offset);
        table.ySubscriptXSize = this.readInt16(this.offset);
        table.ySubscriptYSize = this.readInt16(this.offset);
        table.ySubscriptXOffset = this.readInt16(this.offset);
        table.ySubscriptYOffset = this.readInt16(this.offset);
        table.ySuperscriptXSize = this.readInt16(this.offset);
        table.ySuperscriptYSize = this.readInt16(this.offset);
        table.ySuperscriptXOffset = this.readInt16(this.offset);
        table.ySuperscriptYOffset = this.readInt16(this.offset);
        table.yStrikeoutSize = this.readInt16(this.offset);
        table.yStrikeoutPosition = this.readInt16(this.offset);
        table.sFamilyClass = this.readInt16(this.offset);
        table.panose = this.readBytes(10);
        table.ulUnicodeRange1 = this.readUInt32(this.offset);
        table.ulUnicodeRange2 = this.readUInt32(this.offset);
        table.ulUnicodeRange3 = this.readUInt32(this.offset);
        table.ulUnicodeRange4 = this.readUInt32(this.offset);
        table.vendorIdentifier = this.readBytes(4);
        table.fsSelection = this.readUInt16(this.offset);
        table.usFirstCharIndex = this.readUInt16(this.offset);
        table.usLastCharIndex = this.readUInt16(this.offset);
        table.sTypoAscender = this.readInt16(this.offset);
        table.sTypoDescender = this.readInt16(this.offset);
        table.sTypoLineGap = this.readInt16(this.offset);
        table.usWinAscent = this.readUInt16(this.offset);
        table.usWinDescent = this.readUInt16(this.offset);
        table.ulCodePageRange1 = this.readUInt32(this.offset);
        table.ulCodePageRange2 = this.readUInt32(this.offset);
        if (table.version > 1) {
            table.sxHeight = this.readInt16(this.offset);
            table.sCapHeight = this.readInt16(this.offset);
            table.usDefaultChar = this.readUInt16(this.offset);
            table.usBreakChar = this.readUInt16(this.offset);
            table.usMaxContext = this.readUInt16(this.offset);
        }
        else {
            table.sxHeight = 0;
            table.sCapHeight = 0;
            table.usDefaultChar = 0;
            table.usBreakChar = 0;
            table.usMaxContext = 0;
        }
        return table;
    };
    TtfReader.prototype.readPostTable = function () {
        var tableInfo = this.getTable('post');
        this.offset = tableInfo.offset;
        var table = new _ttf_post_table__WEBPACK_IMPORTED_MODULE_8__["TtfPostTable"]();
        table.formatType = this.readFixed(this.offset);
        table.italicAngle = this.readFixed(this.offset);
        table.underlinePosition = this.readInt16(this.offset);
        table.underlineThickness = this.readInt16(this.offset);
        table.isFixedPitch = this.readUInt32(this.offset);
        table.minType42 = this.readUInt32(this.offset);
        table.maxType42 = this.readUInt32(this.offset);
        table.minType1 = this.readUInt32(this.offset);
        table.maxType1 = this.readUInt32(this.offset);
        return table;
    };
    /**
     * Reads Width of the glyphs.
     */
    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {
        var tableInfo = this.getTable('hmtx');
        this.offset = tableInfo.offset;
        var width = [];
        for (var i = 0; i < glyphCount; i++) {
            var glyph = new _ttf_long_hor_metric__WEBPACK_IMPORTED_MODULE_9__["TtfLongHorMetric"]();
            glyph.advanceWidth = this.readUInt16(this.offset);
            glyph.lsb = this.readInt16(this.offset);
            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;
            width.push(Math.floor(glyphWidth));
        }
        return width;
    };
    /**
     * Reads the cmap table.
     */
    TtfReader.prototype.readCmapTable = function () {
        var tableInfo = this.getTable('cmap');
        this.offset = tableInfo.offset;
        var table = new _ttf_cmap_table__WEBPACK_IMPORTED_MODULE_11__["TtfCmapTable"]();
        table.version = this.readUInt16(this.offset);
        table.tablesCount = this.readUInt16(this.offset);
        var position = this.offset;
        var subTables = [];
        for (var i = 0; i < table.tablesCount; i++) {
            this.offset = position;
            var subTable = new _ttf_cmap_sub_table__WEBPACK_IMPORTED_MODULE_10__["TtfCmapSubTable"]();
            subTable.platformID = this.readUInt16(this.offset);
            subTable.encodingID = this.readUInt16(this.offset);
            subTable.offset = this.readUInt32(this.offset);
            position = this.offset;
            this.readCmapSubTable(subTable);
            subTables[i] = subTable;
        }
        return subTables;
    };
    /**
     * Reads the cmap sub table.
     */
    TtfReader.prototype.readCmapSubTable = function (subTable) {
        var tableInfo = this.getTable('cmap');
        this.offset = tableInfo.offset + subTable.offset;
        var format = this.readUInt16(this.offset);
        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);
        var platform = (encoding === _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Macintosh) ? _enum__WEBPACK_IMPORTED_MODULE_20__["TtfPlatformID"].Macintosh : _enum__WEBPACK_IMPORTED_MODULE_20__["TtfPlatformID"].Microsoft;
        if (encoding !== _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Unknown) {
            switch (format) {
                case _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapFormat"].Apple:
                    this.readAppleCmapTable(subTable, encoding);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapFormat"].Microsoft:
                    this.readMicrosoftCmapTable(subTable, encoding);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapFormat"].Trimmed:
                    this.readTrimmedCmapTable(subTable, encoding);
                    break;
            }
        }
    };
    /**
     * Reads Symbol cmap table.
     */
    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {
        var tableInfo = this.getTable('cmap');
        this.offset = tableInfo.offset + subTable.offset;
        var table = new _ttf_apple_cmap_sub_table__WEBPACK_IMPORTED_MODULE_14__["TtfAppleCmapSubTable"]();
        table.format = this.readUInt16(this.offset);
        table.length = this.readUInt16(this.offset);
        table.version = this.readUInt16(this.offset);
        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {
            this.maxMacIndex = 0;
        }
        for (var i = 0; i < 256; ++i) {
            var glyphInfo = new _ttf_glyph_info__WEBPACK_IMPORTED_MODULE_12__["TtfGlyphInfo"]();
            glyphInfo.index = this.readByte(this.offset);
            glyphInfo.width = this.getWidth(glyphInfo.index);
            glyphInfo.charCode = i;
            this.macintosh.setValue(i, glyphInfo);
            this.addGlyph(glyphInfo, encoding);
            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.
            this.maxMacIndex = Math.max(i, this.maxMacIndex);
        }
    };
    /**
     * Reads Symbol cmap table.
     */
    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {
        var tableInfo = this.getTable('cmap');
        this.offset = tableInfo.offset + subTable.offset;
        var collection = (encoding === _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Unicode) ? this.microsoft : this.macintosh;
        var table = new _ttf_microsoft_cmap_sub_table__WEBPACK_IMPORTED_MODULE_15__["TtfMicrosoftCmapSubTable"]();
        table.format = this.readUInt16(this.offset);
        table.length = this.readUInt16(this.offset);
        table.version = this.readUInt16(this.offset);
        table.segCountX2 = this.readUInt16(this.offset);
        table.searchRange = this.readUInt16(this.offset);
        table.entrySelector = this.readUInt16(this.offset);
        table.rangeShift = this.readUInt16(this.offset);
        var segCount = table.segCountX2 / 2;
        table.endCount = this.readUshortArray(segCount);
        table.reservedPad = this.readUInt16(this.offset);
        table.startCount = this.readUshortArray(segCount);
        table.idDelta = this.readUshortArray(segCount);
        table.idRangeOffset = this.readUshortArray(segCount);
        var length = (table.length / 2 - 8) - (segCount * 4);
        table.glyphID = this.readUshortArray(length);
        // Process glyphIdArray array.
        var codeOffset = 0;
        var index = 0;
        for (var j = 0; j < segCount; j++) {
            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {
                if (table.idRangeOffset[j] === 0) {
                    codeOffset = (k + table.idDelta[j]) & 65535;
                }
                else {
                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];
                    if (index >= table.glyphID.length) {
                        continue;
                    }
                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;
                }
                var glyph = new _ttf_glyph_info__WEBPACK_IMPORTED_MODULE_12__["TtfGlyphInfo"]();
                glyph.index = codeOffset;
                glyph.width = this.getWidth(glyph.index);
                var id = (encoding === _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;
                glyph.charCode = id;
                collection.setValue(id, glyph);
                this.addGlyph(glyph, encoding);
            }
        }
    };
    /**
     * Reads Trimed cmap table.
     */
    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {
        var tableInfo = this.getTable('cmap');
        this.offset = tableInfo.offset + subTable.offset;
        var table = new _ttf_trimmed_cmap_sub_table__WEBPACK_IMPORTED_MODULE_16__["TtfTrimmedCmapSubTable"]();
        table.format = this.readUInt16(this.offset);
        table.length = this.readUInt16(this.offset);
        table.version = this.readUInt16(this.offset);
        table.firstCode = this.readUInt16(this.offset);
        table.entryCount = this.readUInt16(this.offset);
        for (var i = 0; i < table.entryCount; ++i) {
            var glyphInfo = new _ttf_glyph_info__WEBPACK_IMPORTED_MODULE_12__["TtfGlyphInfo"]();
            glyphInfo.index = this.readUInt16(this.offset);
            glyphInfo.width = this.getWidth(glyphInfo.index);
            glyphInfo.charCode = i + table.firstCode;
            this.macintosh.setValue(i, glyphInfo);
            this.addGlyph(glyphInfo, encoding);
            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.
            this.maxMacIndex = Math.max(i, this.maxMacIndex);
        }
    };
    TtfReader.prototype.initializeFontName = function (nameTable) {
        for (var i = 0; i < nameTable.recordsCount; i++) {
            var record = nameTable.nameRecords[i];
            if (record.nameID === 1) {
                //font family
                this.metrics.fontFamily = record.name;
            }
            else if (record.nameID === 6) {
                //post script name
                this.metrics.postScriptName = record.name;
            }
            /* tslint:disable */
            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {
                break;
            }
            /* tslint:disable */
        }
    };
    TtfReader.prototype.getTable = function (name) {
        // if (name === null) {
        //     throw new Error('Argument Null Exception : name');
        // }
        var table = new _ttf_table_info__WEBPACK_IMPORTED_MODULE_0__["TtfTableInfo"]();
        var obj;
        if (this.tableDirectory.containsKey(name)) {
            obj = this.tableDirectory.getValue(name);
        }
        if (obj !== null && obj !== undefined) {
            table = obj;
        }
        return table;
    };
    /**
     * Returns width of the glyph.
     */
    TtfReader.prototype.getWidth = function (glyphCode) {
        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;
        return this.width[glyphCode];
    };
    /**
     * Gets CMAP encoding based on platform ID and encoding ID.
     */
    /* tslint:disable */
    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {
        var format = _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Unknown;
        if (platformID == _enum__WEBPACK_IMPORTED_MODULE_20__["TtfPlatformID"].Microsoft && encodingID == _enum__WEBPACK_IMPORTED_MODULE_20__["TtfMicrosoftEncodingID"].Undefined) {
            // When building a symbol font for Windows,
            // the platform ID should be 3 and the encoding ID should be 0.
            format = _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Symbol;
        }
        else if (platformID == _enum__WEBPACK_IMPORTED_MODULE_20__["TtfPlatformID"].Microsoft && encodingID == _enum__WEBPACK_IMPORTED_MODULE_20__["TtfMicrosoftEncodingID"].Unicode) {
            // When building a Unicode font for Windows,
            // the platform ID should be 3 and the encoding ID should be 1.
            format = _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Unicode;
        }
        else if (platformID == _enum__WEBPACK_IMPORTED_MODULE_20__["TtfPlatformID"].Macintosh && encodingID == _enum__WEBPACK_IMPORTED_MODULE_20__["TtfMacintoshEncodingID"].Roman) {
            // When building a font that will be used on the Macintosh,
            // the platform ID should be 1 and the encoding ID should be 0.
            format = _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Macintosh;
        }
        return format;
    };
    /* tslint:enable */
    /**
     * Adds glyph to the collection.
     */
    TtfReader.prototype.addGlyph = function (glyph, encoding) {
        var collection = null;
        switch (encoding) {
            case _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Unicode:
                collection = this.microsoftGlyphs;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Macintosh:
            case _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Symbol:
                collection = this.macintoshGlyphs;
                break;
        }
        collection.setValue(glyph.index, glyph);
    };
    /**
     * Initializes metrics.
     */
    /* tslint:disable */
    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {
        /* tslint:enable */
        // if (cmapTables === null) {
        //     throw new Error('ArgumentNullException : cmapTables');
        // }
        this.initializeFontName(nameTable);
        // Get font encoding.
        var bSymbol = false;
        for (var i = 0; i < cmapTables.length; i++) {
            var subTable = cmapTables[i];
            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);
            if (encoding === _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCmapEncoding"].Symbol) {
                bSymbol = true;
                break;
            }
        }
        this.metrics.isSymbol = bSymbol;
        this.metrics.macStyle = headTable.macStyle;
        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);
        this.metrics.italicAngle = postTable.italicAngle;
        var factor = 1000 / headTable.unitsPerEm;
        this.metrics.winAscent = os2Table.sTypoAscender * factor;
        this.metrics.macAscent = horizontalHeadTable.ascender * factor;
        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;
        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.
        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;
        this.metrics.winDescent = os2Table.sTypoDescender * factor;
        this.metrics.macDescent = horizontalHeadTable.descender * factor;
        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;
        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;
        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);
        var left = headTable.xMin * factor;
        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);
        var right = headTable.xMax * factor;
        var bottom = this.metrics.macDescent;
        this.metrics.fontBox = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_18__["Rectangle"](left, top, right, bottom);
        // NOTE: Strange!
        this.metrics.stemV = 80;
        this.metrics.widthTable = this.updateWidth();
        this.metrics.contains = this.tableDirectory.containsKey('CFF');
        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;
        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;
    };
    /**
     * Updates chars structure which is used in the case of ansi encoding (256 bytes).
     */
    TtfReader.prototype.updateWidth = function () {
        var count = 256;
        var bytes = [];
        if (this.metrics.isSymbol) {
            for (var i = 0; i < count; i++) {
                var glyphInfo = this.getGlyph(String.fromCharCode(i));
                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;
            }
        }
        else {
            var byteToProcess = [];
            var unknown = '?';
            var space = String.fromCharCode(32);
            for (var i = 0; i < count; i++) {
                byteToProcess[0] = i;
                var text = this.getString(byteToProcess, 0, byteToProcess.length);
                var ch = (text.length > 0) ? text[0] : unknown;
                var glyphInfo = this.getGlyph(ch);
                if (!glyphInfo.empty) {
                    bytes[i] = glyphInfo.width;
                }
                else {
                    glyphInfo = this.getGlyph(space);
                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;
                }
            }
        }
        return bytes;
    };
    /**
     * Returns default glyph.
     */
    TtfReader.prototype.getDefaultGlyph = function () {
        var glyph = this.getGlyph(_string_tokenizer__WEBPACK_IMPORTED_MODULE_19__["StringTokenizer"].whiteSpace);
        return glyph;
    };
    /**
     * Reads unicode string from byte array.
     */
    TtfReader.prototype.getString = function (byteToProcess, start, length) {
        var result = '';
        for (var index = 0; index < length; index++) {
            result += String.fromCharCode(byteToProcess[index + start]);
        }
        return result;
    };
    /**
     * Reads loca table.
     */
    TtfReader.prototype.readLocaTable = function (bShort) {
        var tableInfo = this.getTable('loca');
        this.offset = tableInfo.offset;
        var table = new _ttf_loca_table__WEBPACK_IMPORTED_MODULE_13__["TtfLocaTable"]();
        var buffer = null;
        if (bShort) {
            var len = tableInfo.length / 2;
            buffer = [];
            for (var i = 0; i < len; i++) {
                buffer[i] = this.readUInt16(this.offset) * 2;
            }
        }
        else {
            var len = tableInfo.length / 4;
            buffer = [];
            for (var i = 0; i < len; i++) {
                buffer[i] = this.readUInt32(this.offset);
            }
        }
        table.offsets = buffer;
        return table;
    };
    /**
     * Updates hash table of used glyphs.
     */
    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {
        // if (glyphChars === null) {
        //     throw new Error('Argument Null Exception : glyphChars');
        // }
        // Add zero key.
        if (!glyphChars.containsKey(0)) {
            glyphChars.setValue(0, 0);
        }
        var clone = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
        var glyphCharKeys = glyphChars.keys();
        for (var i = 0; i < glyphCharKeys.length; i++) {
            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));
        }
        for (var i = 0; i < glyphCharKeys.length; i++) {
            var nextKey = glyphCharKeys[i];
            this.processCompositeGlyph(glyphChars, nextKey, locaTable);
        }
    };
    /**
     * Checks if glyph is composite or not.
     */
    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {
        // if (glyphChars === null) {
        //     throw new Error('Argument Null Exception : glyphChars');
        // }
        // Is in range.
        if (glyph < locaTable.offsets.length - 1) {
            var glyphOffset = locaTable.offsets[glyph];
            if (glyphOffset !== locaTable.offsets[glyph + 1]) {
                var tableInfo = this.getTable('glyf');
                this.offset = tableInfo.offset + glyphOffset;
                var glyphHeader = new _ttf_glyph_header__WEBPACK_IMPORTED_MODULE_17__["TtfGlyphHeader"]();
                glyphHeader.numberOfContours = this.readInt16(this.offset);
                glyphHeader.xMin = this.readInt16(this.offset);
                glyphHeader.yMin = this.readInt16(this.offset);
                glyphHeader.xMax = this.readInt16(this.offset);
                glyphHeader.yMax = this.readInt16(this.offset);
                // Glyph is composite.
                if (glyphHeader.numberOfContours < 0) {
                    var skipBytes = 0;
                    var entry = true;
                    while (entry) {
                        var flags = this.readUInt16(this.offset);
                        var glyphIndex = this.readUInt16(this.offset);
                        if (!glyphChars.containsKey(glyphIndex)) {
                            glyphChars.setValue(glyphIndex, 0);
                        }
                        if ((flags & _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCompositeGlyphFlags"].MoreComponents) === 0) {
                            break;
                        }
                        skipBytes = ((flags & _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCompositeGlyphFlags"].Arg1And2AreWords) !== 0) ? 4 : 2;
                        if ((flags & _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCompositeGlyphFlags"].WeHaveScale) !== 0) {
                            skipBytes += 2;
                        }
                        else if ((flags & _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCompositeGlyphFlags"].WeHaveAnXyScale) !== 0) {
                            skipBytes += 4;
                        }
                        else if ((flags & _enum__WEBPACK_IMPORTED_MODULE_20__["TtfCompositeGlyphFlags"].WeHaveTwoByTwo) !== 0) {
                            skipBytes += 2 * 4;
                        }
                        this.offset += skipBytes;
                    }
                }
            }
        }
    };
    /**
     * Creates new glyph tables based on chars that are used for output.
     */
    /* tslint:disable */
    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {
        /* tslint:enable */
        // if (glyphChars === null) {
        //     throw new Error('Argument Null Exception : glyphChars');
        // }
        newLocaTable = [];
        // Sorting used glyphs keys.
        var activeGlyphs = glyphChars.keys();
        activeGlyphs.sort(function (a, b) { return a - b; });
        var glyphSize = 0;
        for (var i = 0; i < activeGlyphs.length; i++) {
            var glyphIndex = activeGlyphs[i];
            if (locaTable.offsets.length > 0) {
                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];
            }
        }
        var glyphSizeAligned = this.align(glyphSize);
        newGlyphTable = [];
        for (var i = 0; i < glyphSizeAligned; i++) {
            newGlyphTable.push(0);
        }
        var nextGlyphOffset = 0;
        var nextGlyphIndex = 0;
        var table = this.getTable('glyf');
        // Creating NewLocaTable - that would hold offsets for filtered glyphs.
        for (var i = 0; i < locaTable.offsets.length; i++) {
            newLocaTable.push(nextGlyphOffset);
            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {
                ++nextGlyphIndex;
                newLocaTable[i] = nextGlyphOffset;
                var oldGlyphOffset = locaTable.offsets[i];
                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;
                if (oldNextGlyphOffset > 0) {
                    this.offset = table.offset + oldGlyphOffset;
                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);
                    newGlyphTable = result.buffer;
                    nextGlyphOffset += oldNextGlyphOffset;
                }
            }
        }
        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };
    };
    /**
     * Updates new Loca table.
     */
    /* tslint:disable */
    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {
        /* tslint:enable */
        if (newLocaTable === null) {
            throw new Error('Argument Null Exception : newLocaTable');
        }
        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;
        var count = this.align(size);
        //BigEndianWiter
        var writer = new _input_output_big_endian_writer__WEBPACK_IMPORTED_MODULE_21__["BigEndianWriter"](count);
        for (var i = 0; i < newLocaTable.length; i++) {
            var value = newLocaTable[i];
            if (bLocaIsShort) {
                value /= 2;
                writer.writeShort(value);
            }
            else {
                writer.writeInt(value);
            }
        }
        return { newLocaUpdated: writer.data, newLocaSize: size };
    };
    /**
     * Aligns number to be divisible on 4.
     */
    TtfReader.prototype.align = function (value) {
        return (value + 3) & (~3);
    };
    /**
     * Returns font program data.
     */
    /* tslint:disable */
    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {
        /* tslint:enable */
        if (newLocaTableOut === null) {
            throw new Error('Argument Null Exception : newLocaTableOut');
        }
        if (newGlyphTable === null) {
            throw new Error('Argument Null Exception : newGlyphTable');
        }
        var tableNames = this.tableNames;
        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);
        var fontProgramLength = result.fontProgramLength;
        var numTables = result.numTables;
        var writer = new _input_output_big_endian_writer__WEBPACK_IMPORTED_MODULE_21__["BigEndianWriter"](fontProgramLength);
        writer.writeInt(0x10000);
        writer.writeShort(numTables);
        var entrySelector = this.entrySelectors[numTables];
        writer.writeShort((1 << (entrySelector & 31)) * 16);
        writer.writeShort(entrySelector);
        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);
        // Writing to destination buffer - checksums && sizes of used tables.
        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);
        // // Writing to destination buffer - used glyphs.
        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);
        return writer.data;
    };
    /* tslint:disable */
    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {
        /* tslint:enable */
        if (newLocaTableOut === null) {
            throw new Error('Argument Null Exception : newLocaTableOut');
        }
        if (newGlyphTable === null) {
            throw new Error('Argument Null Exception : newGlyphTable');
        }
        // glyf and loca are used by default;
        numTables = 2;
        var tableNames = this.tableNames;
        var fontProgramLength = 0;
        for (var i = 0; i < tableNames.length; i++) {
            var tableName = tableNames[i];
            if (tableName !== 'glyf' && tableName !== 'loca') {
                var table = this.getTable(tableName);
                if (!table.empty) {
                    ++numTables;
                    fontProgramLength += this.align(table.length);
                }
            }
        }
        fontProgramLength += newLocaTableOut.length;
        fontProgramLength += newGlyphTable.length;
        var usedTablesSize = numTables * 16 + (3 * 4);
        fontProgramLength += usedTablesSize;
        return { fontProgramLength: fontProgramLength, numTables: numTables };
    };
    /**
     * Writing to destination buffer - checksums and sizes of used tables.
     */
    /* tslint:disable */
    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {
        /* tslint:enable */
        if (writer === null) {
            throw new Error('Argument Null Exception : writer');
        }
        if (newLocaTableOut === null) {
            throw new Error('Argument Null Exception : newLocaTableOut');
        }
        if (newGlyphTable === null) {
            throw new Error('Argument Null Exception : newGlyphTable');
        }
        var tableNames = this.tableNames;
        var usedTablesSize = numTables * 16 + (3 * 4);
        var nextTableSize = 0;
        for (var i = 0; i < tableNames.length; i++) {
            var tableName = tableNames[i];
            var tableInfo = this.getTable(tableName);
            if (tableInfo.empty) {
                continue;
            }
            writer.writeString(tableName);
            if (tableName === 'glyf') {
                var checksum = this.calculateCheckSum(newGlyphTable);
                writer.writeInt(checksum);
                nextTableSize = glyphTableSize;
            }
            else if (tableName === 'loca') {
                var checksum = this.calculateCheckSum(newLocaTableOut);
                writer.writeInt(checksum);
                nextTableSize = locaTableSize;
            }
            else {
                writer.writeInt(tableInfo.checksum);
                nextTableSize = tableInfo.length;
            }
            writer.writeUInt(usedTablesSize);
            writer.writeUInt(nextTableSize);
            usedTablesSize += this.align(nextTableSize);
        }
    };
    /**
     * Gets checksum from source buffer.
     */
    TtfReader.prototype.calculateCheckSum = function (bytes) {
        if (bytes === null) {
            throw new Error('Argument Null Exception : bytes');
        }
        var pos = 0;
        var byte1 = 0;
        var byte2 = 0;
        var byte3 = 0;
        var byte4 = 0;
        for (var i = 0; i < (bytes.length + 1) / 4; i++) {
            byte4 += (bytes[pos++] & 255);
            byte3 += (bytes[pos++] & 255);
            byte2 += (bytes[pos++] & 255);
            byte1 += (bytes[pos++] & 255);
        }
        var result = byte1;
        result += (byte2 << 8);
        result += (byte3 << 16);
        result += (byte4 << 24);
        return result;
    };
    /**
     * Writing to destination buffer - used glyphs.
     */
    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {
        if (writer === null) {
            throw new Error('Argument Null Exception : writer');
        }
        if (newLocaTable === null) {
            throw new Error('Argument Null Exception : newLocaTableOut');
        }
        if (newGlyphTable === null) {
            throw new Error('Argument Null Exception : newGlyphTable');
        }
        var tableNames = this.tableNames;
        for (var i = 0; i < tableNames.length; i++) {
            var tableName = tableNames[i];
            var tableInfo = this.getTable(tableName);
            if (tableInfo.empty) {
                continue;
            }
            if (tableName === 'glyf') {
                writer.writeBytes(newGlyphTable);
            }
            else if (tableName === 'loca') {
                writer.writeBytes(newLocaTable);
            }
            else {
                var count = this.align(tableInfo.length);
                var buff = [];
                for (var i_1 = 0; i_1 < count; i_1++) {
                    buff.push(0);
                }
                this.offset = tableInfo.offset;
                var result = this.read(buff, 0, tableInfo.length);
                writer.writeBytes(result.buffer);
            }
        }
    };
    //public methods
    /**
     * Sets position value of font data.
     */
    TtfReader.prototype.setOffset = function (offset) {
        this.offset = offset;
    };
    /**
     * Creates font Internals
     * @private
     */
    TtfReader.prototype.createInternals = function () {
        this.metrics = new _ttf_metrics__WEBPACK_IMPORTED_MODULE_5__["TtfMetrics"]();
        var nameTable = this.readNameTable();
        var headTable = this.readHeadTable();
        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);
        var horizontalHeadTable = this.readHorizontalHeaderTable();
        var os2Table = this.readOS2Table();
        var postTable = this.readPostTable();
        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);
        var subTables = this.readCmapTable();
        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);
    };
    TtfReader.prototype.getGlyph = function (charCode) {
        if (typeof charCode === 'number') {
            var obj1 = null;
            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {
                if (this.microsoftGlyphs.containsKey(charCode)) {
                    obj1 = this.microsoftGlyphs.getValue(charCode);
                }
            }
            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {
                if (this.macintoshGlyphs.containsKey(charCode)) {
                    obj1 = this.macintoshGlyphs.getValue(charCode);
                }
            }
            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();
            return glyph;
        }
        else {
            var obj = null;
            var code = charCode.charCodeAt(0);
            if (!this.metrics.isSymbol && this.microsoft !== null) {
                if (this.microsoft.containsKey(code)) {
                    obj = this.microsoft.getValue(code);
                    if (code !== _string_tokenizer__WEBPACK_IMPORTED_MODULE_19__["StringTokenizer"].whiteSpace.charCodeAt(0)) {
                        this.isFontPresent = true;
                    }
                }
                else if (code !== _string_tokenizer__WEBPACK_IMPORTED_MODULE_19__["StringTokenizer"].whiteSpace.charCodeAt(0)) {
                    this.isFontPresent = false;
                }
            }
            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {
                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.
                if (this.maxMacIndex !== 0) {
                    code %= this.maxMacIndex + 1;
                }
                else {
                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);
                }
                if (this.macintosh.containsKey(code)) {
                    obj = this.macintosh.getValue(code);
                    this.isFontPresent = true;
                }
            }
            // Fix for StackOverFlow exception in XPS to PDF converter
            if (charCode === _string_tokenizer__WEBPACK_IMPORTED_MODULE_19__["StringTokenizer"].whiteSpace && obj === null) {
                obj = new _ttf_glyph_info__WEBPACK_IMPORTED_MODULE_12__["TtfGlyphInfo"]();
            }
            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();
            return glyph;
        }
    };
    /**
     * Gets hash table with chars indexed by glyph index.
     */
    TtfReader.prototype.getGlyphChars = function (chars) {
        if (chars === null || chars === undefined) {
            throw new Error('Argument Null Exception : chars');
        }
        var dictionary = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
        var charKeys = chars.keys();
        for (var i = 0; i < charKeys.length; i++) {
            var ch = charKeys[i];
            var glyph = this.getGlyph(ch);
            if (!glyph.empty) {
                dictionary.setValue(glyph.index, ch.charCodeAt(0));
            }
        }
        return dictionary;
    };
    /**
     * Gets all glyphs.
     */
    TtfReader.prototype.getAllGlyphs = function () {
        var allGlyphInfo = [];
        var info = new _ttf_glyph_info__WEBPACK_IMPORTED_MODULE_12__["TtfGlyphInfo"]();
        var index = 0;
        for (var i = 0; i < this.width.length; i++) {
            var width = this.width[i];
            info.index = index;
            info.width = width;
            allGlyphInfo.push(info);
            index++;
        }
        return allGlyphInfo;
    };
    /**
     * Reads a font's program.
     * @private
     */
    TtfReader.prototype.readFontProgram = function (chars) {
        var glyphChars = this.getGlyphChars(chars);
        var locaTable = this.readLocaTable(this.bIsLocaShort);
        if (glyphChars.size() < chars.size()) {
            this.missedGlyphs = chars.size() - glyphChars.size();
        }
        this.updateGlyphChars(glyphChars, locaTable);
        /* tslint:disable */
        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);
        /* tslint:enable */
        var glyphTableSize = result1.glyphTableSize;
        var newLocaTable = result1.newLocaTable;
        var newGlyphTable = result1.newGlyphTable;
        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);
        var newLocaSize = result2.newLocaSize;
        var newLocaUpdated = result2.newLocaUpdated;
        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);
        return fontProgram;
    };
    /**
     * Reconverts string to be in proper format saved into PDF file.
     */
    TtfReader.prototype.convertString = function (text) {
        if (text === null) {
            throw new Error('Argument Null Exception : text');
        }
        var glyph = '';
        var i = 0;
        for (var k = 0; k < text.length; k++) {
            var ch = text[k];
            var glyphInfo = this.getGlyph(ch);
            if (!glyphInfo.empty) {
                glyph += String.fromCharCode(glyphInfo.index);
                i++;
            }
        }
        return glyph;
    };
    /**
     * Gets char width.
     */
    TtfReader.prototype.getCharWidth = function (code) {
        var glyphInfo = this.getGlyph(code);
        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();
        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;
        return codeWidth;
    };
    TtfReader.prototype.readString = function (length, isUnicode) {
        if (isUnicode === undefined) {
            return this.readString(length, false);
        }
        else {
            //let buffer : number[] = this.readBytes(length);
            var result = '';
            if (isUnicode) {
                for (var i = 0; i < length; i++) {
                    if (i % 2 !== 0) {
                        result += String.fromCharCode(this.fontData[this.offset]);
                    }
                    this.offset += 1;
                }
            }
            else {
                for (var i = 0; i < length; i++) {
                    result += String.fromCharCode(this.fontData[this.offset]);
                    this.offset += 1;
                }
            }
            return result;
        }
    };
    TtfReader.prototype.readFixed = function (offset) {
        var integer = this.readInt16(offset);
        var sFraction = this.readInt16(offset + 2);
        var fraction = sFraction / 16384;
        return integer + fraction;
    };
    TtfReader.prototype.readInt32 = function (offset) {
        var i1 = this.fontData[offset + 3];
        var i2 = this.fontData[offset + 2];
        var i3 = this.fontData[offset + 1];
        var i4 = this.fontData[offset];
        this.offset += 4;
        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);
    };
    TtfReader.prototype.readUInt32 = function (offset) {
        var i1 = this.fontData[offset + 3];
        var i2 = this.fontData[offset + 2];
        var i3 = this.fontData[offset + 1];
        var i4 = this.fontData[offset];
        this.offset += 4;
        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);
    };
    // private readInt16(offset : number) : number {
    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];
    //     this.offset += 2;
    //     return result;
    // }
    TtfReader.prototype.readInt16 = function (offset) {
        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];
        result = result & (1 << 15) ? result - 0x10000 : result;
        this.offset += 2;
        return result;
    };
    TtfReader.prototype.readInt64 = function (offset) {
        var low = this.readInt32(offset + 4);
        var n = this.readInt32(offset) * 4294967296.0 + low;
        if (low < 0) {
            n += 4294967296;
        }
        return n;
    };
    TtfReader.prototype.readUInt16 = function (offset) {
        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];
        this.offset += 2;
        return result;
    };
    /**
     * Reads ushort array.
     */
    TtfReader.prototype.readUshortArray = function (length) {
        var buffer = [];
        for (var i = 0; i < length; i++) {
            buffer[i] = this.readUInt16(this.offset);
        }
        return buffer;
    };
    TtfReader.prototype.readBytes = function (length) {
        var result = [];
        for (var i = 0; i < length; i++) {
            result.push(this.fontData[this.offset]);
            this.offset += 1;
        }
        return result;
    };
    TtfReader.prototype.readByte = function (offset) {
        var result = this.fontData[offset];
        this.offset += 1;
        return result;
    };
    /**
     * Reads bytes to array in BigEndian order.
     * @private
     */
    TtfReader.prototype.read = function (buffer, index, count) {
        if (buffer === null) {
            throw new Error('Argument Null Exception : buffer');
        }
        var written = 0;
        var read = 0;
        do {
            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {
                buffer[index + i] = this.fontData[this.offset + i];
            }
            read = count - written;
            this.offset += read;
            written += read;
        } while (written < count);
        return { buffer: buffer, written: written };
    };
    return TtfReader;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-table-info.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-table-info.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: TtfTableInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfTableInfo", function() { return TtfTableInfo; });
/**
 * TtfTableInfo.ts class for EJ2-PDF
 */
var TtfTableInfo = /** @class */ (function () {
    function TtfTableInfo() {
    }
    Object.defineProperty(TtfTableInfo.prototype, "empty", {
        //Properties
        /**
         * Gets a value indicating whether this table is empty.
         * @private
         */
        get: function () {
            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);
            return empty;
        },
        enumerable: true,
        configurable: true
    });
    return TtfTableInfo;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js":
/*!********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js ***!
  \********************************************************************************************************************************************************************/
/*! exports provided: TtfTrimmedCmapSubTable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TtfTrimmedCmapSubTable", function() { return TtfTrimmedCmapSubTable; });
/**
 * TtfTrimmedCmapSubTable.ts class for EJ2-PDF
 */
var TtfTrimmedCmapSubTable = /** @class */ (function () {
    function TtfTrimmedCmapSubTable() {
    }
    return TtfTrimmedCmapSubTable;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/unicode-true-type-font.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/unicode-true-type-font.js ***!
  \****************************************************************************************************************************************************************/
/*! exports provided: UnicodeTrueTypeFont */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnicodeTrueTypeFont", function() { return UnicodeTrueTypeFont; });
/* harmony import */ var _graphics_images_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../graphics/images/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/index.js");
/* harmony import */ var _ttf_reader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ttf-reader */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-reader.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pdf-font-metrics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font-metrics.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../input-output/pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/**
 * TrueTypeFont.ts class for EJ2-PDF
 */

















var UnicodeTrueTypeFont = /** @class */ (function () {
    /* tslint:enable */
    //Constructors
    /**
     * Initializes a new instance of the `PdfTrueTypeFont` class.
     * @private
     */
    function UnicodeTrueTypeFont(base64String, size) {
        // Fields
        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        /**
         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_10__["DictionaryProperties"]();
        /**
         * Indicates whether the font program is compressed or not.
         * @private
         */
        this.isCompress = false;
        /**
         * Indicates whether the font is embedded or not.
         */
        this.isEmbedFont = false;
        /**
         * Cmap table's start prefix.
         */
        /* tslint:disable */
        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap' + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\n/CMapName ' + '/Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange' + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].newLine;
        /* tslint:enable */
        /**
         * Cmap table's start suffix.
         */
        this.cmapEndCodespaceRange = 'endcodespacerange' + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].newLine;
        /**
         * Cmap's begin range marker.
         */
        this.cmapBeginRange = 'beginbfrange' + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].newLine;
        /**
         * Cmap's end range marker.
         */
        this.cmapEndRange = 'endbfrange' + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].newLine;
        /**
         * Cmap table's end
         */
        /* tslint:disable */
        this.cmapSuffix = 'endbfrange\nendcmap\nCMapName currentdict ' + '/CMap defineresource pop\nend end' + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].newLine;
        if (base64String === null || base64String === undefined) {
            throw new Error('ArgumentNullException:base64String');
        }
        this.fontSize = size;
        this.fontString = base64String;
        this.Initialize();
    }
    //Implementation
    /**
     * Returns width of the char symbol.
     */
    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {
        var codeWidth = this.ttfReader.getCharWidth(charCode);
        return codeWidth;
    };
    /**
     * Returns width of the text line.
     */
    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {
        // if (line == null) {
        //     throw new Error('ArgumentNullException : line');
        // }
        var width = 0;
        for (var i = 0, len = line.length; i < len; i++) {
            var ch = line[i];
            var charWidth = this.getCharWidth(ch);
            width += charWidth;
        }
        return width;
    };
    /**
     * Initializes a new instance of the `PdfTrueTypeFont` class.
     * @private
     */
    UnicodeTrueTypeFont.prototype.Initialize = function () {
        var byteArray = new _graphics_images_index__WEBPACK_IMPORTED_MODULE_0__["ByteArray"](this.fontString.length);
        byteArray.writeFromBase64String(this.fontString);
        this.fontData = byteArray.internalBuffer;
        this.ttfReader = new _ttf_reader__WEBPACK_IMPORTED_MODULE_1__["TtfReader"](this.fontData);
        this.ttfMetrics = this.ttfReader.metrics;
    };
    UnicodeTrueTypeFont.prototype.createInternals = function () {
        this.fontDictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["PdfDictionary"]();
        this.fontProgram = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_3__["PdfStream"]();
        this.cmap = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_3__["PdfStream"]();
        this.descendantFont = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["PdfDictionary"]();
        this.metrics = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_9__["PdfFontMetrics"]();
        this.ttfReader.createInternals();
        this.ttfMetrics = this.ttfReader.metrics;
        this.initializeMetrics();
        // Create all the dictionaries of the font.
        this.subsetName = this.getFontName();
        this.createDescendantFont();
        this.createCmap();
        this.createFontDictionary();
        this.createFontProgram();
    };
    UnicodeTrueTypeFont.prototype.getInternals = function () {
        return this.fontDictionary;
    };
    /**
     * Initializes metrics.
     */
    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {
        var ttfMetrics = this.ttfReader.metrics;
        this.metrics.ascent = ttfMetrics.macAscent;
        this.metrics.descent = ttfMetrics.macDescent;
        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;
        this.metrics.name = ttfMetrics.fontFamily;
        this.metrics.postScriptName = ttfMetrics.postScriptName;
        this.metrics.size = this.fontSize;
        this.metrics.widthTable = new _pdf_font_metrics__WEBPACK_IMPORTED_MODULE_9__["StandardWidthTable"](ttfMetrics.widthTable);
        this.metrics.lineGap = ttfMetrics.lineGap;
        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;
        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;
        this.metrics.isBold = ttfMetrics.isBold;
    };
    /**
     * Gets random string.
     */
    UnicodeTrueTypeFont.prototype.getFontName = function () {
        var builder = '';
        var name;
        // if (this.isEmbed === false) {
        for (var i = 0; i < 6; i++) {
            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;
            builder += this.nameString[index];
        }
        builder += '+';
        // }
        builder += this.ttfReader.metrics.postScriptName;
        name = builder.toString();
        // if (name === '') {
        //     name = this.ttfReader.metrics.fontFamily;
        // }
        name = this.formatName(name);
        return name;
    };
    /**
     * Generates name of the font.
     */
    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {
        // if (fontName === null) {
        //     throw new Error('ArgumentNullException : fontName');
        // }
        // if (fontName === '') {
        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');
        // }
        var ret = fontName.replace('(', '#28');
        ret = ret.replace(')', '#29');
        ret = ret.replace('[', '#5B');
        ret = ret.replace(']', '#5D');
        ret = ret.replace('<', '#3C');
        ret = ret.replace('>', '#3E');
        ret = ret.replace('{', '#7B');
        ret = ret.replace('}', '#7D');
        ret = ret.replace('/', '#2F');
        ret = ret.replace('%', '#25');
        return ret.replace(' ', '#20');
    };
    /**
     * Creates descendant font.
     */
    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {
        // Set property used to clone Font every time
        this.descendantFont.isFont = true;
        this.descendantFont.descendantFontBeginSave = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["SaveDescendantFontEventHandler"](this);
        this.descendantFont.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.font));
        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.cIDFontType2));
        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.subsetName));
        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.identity));
        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](1000));
        this.fontDescriptor = this.createFontDescriptor();
        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_8__["PdfReferenceHolder"](this.fontDescriptor));
        var systemInfo = this.createSystemInfo();
        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);
    };
    /**
     * Creates font descriptor.
     */
    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {
        var descriptor = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["PdfDictionary"]();
        var metrics = this.ttfReader.metrics;
        // Set property used to clone Font every time
        descriptor.isFont = true;
        descriptor.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.fontDescriptor));
        descriptor.items.setValue(this.dictionaryProperties.fontName, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.subsetName));
        descriptor.items.setValue(this.dictionaryProperties.flags, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](this.getDescriptorFlags()));
        descriptor.items.setValue(this.dictionaryProperties.fontBBox, _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"].fromRectangle(this.getBoundBox()));
        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.widthTable[32]));
        descriptor.items.setValue(this.dictionaryProperties.stemV, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.stemV));
        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.italicAngle));
        descriptor.items.setValue(this.dictionaryProperties.capHeight, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.capHeight));
        descriptor.items.setValue(this.dictionaryProperties.ascent, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.winAscent));
        descriptor.items.setValue(this.dictionaryProperties.descent, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.winDescent));
        descriptor.items.setValue(this.dictionaryProperties.leading, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.leading));
        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.widthTable[32]));
        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_8__["PdfReferenceHolder"](this.fontProgram));
        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](metrics.widthTable[32]));
        descriptor.items.setValue(this.dictionaryProperties.xHeight, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](0));
        descriptor.items.setValue(this.dictionaryProperties.stemH, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](0));
        return descriptor;
    };
    /**
     * Generates cmap.
     * @private
     */
    UnicodeTrueTypeFont.prototype.createCmap = function () {
        this.cmap.cmapBeginSave = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_3__["SaveCmapEventHandler"](this);
    };
    /**
     * Generates font dictionary.
     */
    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {
        // Set property used to clone Font every time
        this.fontDictionary.isFont = true;
        this.fontDictionary.fontDictionaryBeginSave = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["SaveFontDictionaryEventHandler"](this);
        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.font));
        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.subsetName));
        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.type0));
        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.identityH));
        var descFonts = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
        var reference = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_8__["PdfReferenceHolder"](this.descendantFont);
        // Set property used to clone Font every time
        descFonts.isFont = true;
        descFonts.add(reference);
        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);
    };
    /**
     * Creates font program.
     */
    UnicodeTrueTypeFont.prototype.createFontProgram = function () {
        this.fontProgram.fontProgramBeginSave = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_3__["SaveFontProgramEventHandler"](this);
    };
    /**
     * Creates system info dictionary for CID font.
     * @private
     */
    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {
        var systemInfo = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_2__["PdfDictionary"]();
        systemInfo.items.setValue(this.dictionaryProperties.registry, new _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_7__["PdfString"]('Adobe'));
        systemInfo.items.setValue(this.dictionaryProperties.ordering, new _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_7__["PdfString"](this.dictionaryProperties.identity));
        systemInfo.items.setValue(this.dictionaryProperties.supplement, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](0));
        return systemInfo;
    };
    /**
     * Runs before font Dictionary will be saved.
     */
    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {
        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {
            var width = this.getDescendantWidth();
            if (width !== null) {
                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);
            }
        }
    };
    /**
     * Runs before font Dictionary will be saved.
     */
    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {
        this.generateCmap();
    };
    /**
     * Runs before font Dictionary will be saved.
     */
    /* tslint:disable */
    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {
        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {
            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_8__["PdfReferenceHolder"](this.cmap));
        }
    };
    /* tslint:enable */
    /**
     * Runs before font program stream save.
     */
    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {
        this.isCompress = true;
        this.generateFontProgram();
    };
    /**
     * Gets width description pad array for c i d font.
     */
    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {
        var array = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {
            var glyphInfo = [];
            // if (!this.isEmbedFont) {
            var keys = this.usedChars.keys();
            for (var i = 0; i < keys.length; i++) {
                var chLen = keys[i];
                var glyph = this.ttfReader.getGlyph(chLen);
                if (glyph.empty) {
                    continue;
                }
                glyphInfo.push(glyph);
            }
            // } else {
            //     glyphInfo = this.ttfReader.getAllGlyphs();
            // }
            glyphInfo.sort(function (a, b) { return a.index - b.index; });
            var firstGlyphIndex = 0;
            var lastGlyphIndex = 0;
            var firstGlyphIndexWasSet = false;
            var widthDetails = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
            // if (!this.isEmbedFont) {
            for (var i = 0; i < glyphInfo.length; i++) {
                var glyph = glyphInfo[i];
                if (!firstGlyphIndexWasSet) {
                    firstGlyphIndexWasSet = true;
                    firstGlyphIndex = glyph.index;
                    lastGlyphIndex = glyph.index - 1;
                }
                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {
                    // Add glyph index / width.
                    array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](firstGlyphIndex));
                    if (i !== 0) {
                        array.add(widthDetails);
                    }
                    firstGlyphIndex = glyph.index;
                    widthDetails = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
                }
                widthDetails.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](glyph.width));
                if (i + 1 === glyphInfo.length) {
                    array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_6__["PdfNumber"](firstGlyphIndex));
                    array.add(widthDetails);
                }
                lastGlyphIndex = glyph.index;
            }
            // } else {
            //     for (let i : number = 0; i < glyphInfo.length; i++) {
            //         let glyph : TtfGlyphInfo = glyphInfo[i];
            //         if (!firstGlyphIndexWasSet) {
            //             firstGlyphIndexWasSet = true;
            //             lastGlyphIndex = glyph.index - 1;
            //         }
            //         firstGlyphIndex = glyph.index;
            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {
            //             // Add glyph index / width.
            //             widthDetails.add(new PdfNumber(glyph.width));
            //             array.add(new PdfNumber(firstGlyphIndex));
            //             array.add(widthDetails);
            //             widthDetails = new PdfArray();
            //         }
            //         lastGlyphIndex = glyph.index;
            //     }
            // }
        }
        return array;
    };
    /**
     * Creates cmap.
     */
    UnicodeTrueTypeFont.prototype.generateCmap = function () {
        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {
            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);
            if (glyphChars.size() > 0) {
                var keys = glyphChars.keys().sort();
                // add first and last glyph indexes
                var first = keys[0];
                var last = keys[keys.length - 1];
                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].newLine;
                var builder = '';
                builder += this.cmapPrefix;
                builder += middlePart;
                builder += this.cmapEndCodespaceRange;
                var nextRange = 0;
                for (var i = 0; i < keys.length; i++) {
                    if (nextRange === 0) {
                        if (i !== 0) {
                            builder += this.cmapEndRange;
                        }
                        nextRange = Math.min(100, keys.length - i);
                        builder += nextRange;
                        builder += _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_14__["Operators"].whiteSpace;
                        builder += this.cmapBeginRange;
                    }
                    nextRange -= 1;
                    var key = keys[i];
                    /* tslint:disable */
                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\n';
                    /* tslint:enable */
                }
                builder += this.cmapSuffix;
                this.cmap.clearStream();
                this.cmap.isFont = true;
                this.cmap.write(builder);
            }
        }
    };
    /**
     * Generates font program.
     */
    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {
        var fontProgram = null;
        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new _collections_dictionary__WEBPACK_IMPORTED_MODULE_11__["Dictionary"]() : this.usedChars;
        this.ttfReader.setOffset(0);
        fontProgram = this.ttfReader.readFontProgram(this.usedChars);
        this.fontProgram.clearStream();
        this.fontProgram.isFont = true;
        this.fontProgram.writeBytes(fontProgram);
    };
    /**
     * Calculates flags for the font descriptor.
     * @private
     */
    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {
        var flags = 0;
        var metrics = this.ttfReader.metrics;
        if (metrics.isFixedPitch) {
            flags |= _enum__WEBPACK_IMPORTED_MODULE_12__["FontDescriptorFlags"].FixedPitch;
        }
        if (metrics.isSymbol) {
            flags |= _enum__WEBPACK_IMPORTED_MODULE_12__["FontDescriptorFlags"].Symbolic;
        }
        else {
            flags |= _enum__WEBPACK_IMPORTED_MODULE_12__["FontDescriptorFlags"].Nonsymbolic;
        }
        if (metrics.isItalic) {
            flags |= _enum__WEBPACK_IMPORTED_MODULE_12__["FontDescriptorFlags"].Italic;
        }
        if (metrics.isBold) {
            flags |= _enum__WEBPACK_IMPORTED_MODULE_12__["FontDescriptorFlags"].ForceBold;
        }
        return flags;
    };
    /**
     * Calculates BoundBox of the descriptor.
     * @private
     */
    UnicodeTrueTypeFont.prototype.getBoundBox = function () {
        var rect = this.ttfReader.metrics.fontBox;
        var width = Math.abs(rect.right - rect.left);
        var height = Math.abs(rect.top - rect.bottom);
        var rectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_13__["RectangleF"](rect.left, rect.bottom, width, height);
        return rectangle;
    };
    /**
     * Converts integer of decimal system to hex integer.
     */
    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {
        var s = n.toString(16);
        if (isCaseChange) {
            s = s.toUpperCase();
        }
        return '<0000'.substring(0, 5 - s.length) + s + '>';
    };
    /**
     * Stores used symbols.
     */
    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {
        if (text === null) {
            throw new Error('Argument Null Exception : text');
        }
        if (this.usedChars === null || this.usedChars === undefined) {
            this.usedChars = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_11__["Dictionary"]();
        }
        for (var i = 0; i < text.length; i++) {
            var ch = text[i];
            this.usedChars.setValue(ch, String.fromCharCode(0));
        }
        // else {
        //     if (text === null) {
        //         throw new Error('Argument Null Exception : glyphs');
        //     }
        //     if (this.usedChars === null || this.usedChars === undefined) {
        //             this.usedChars = new Dictionary<string, string>();
        //     }
        //     for (let i : number = 0; i < text.length; i++) {
        //         let glyphIndex : number = text[i];
        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);
        //         if (!glyph == null) {
        //             let c : string = glyph.charCode.toLocaleString();
        //             this.usedChars.setValue(c, String.fromCharCode(0));
        //         }
        //     }
        // }
        if (this.isEmbedFont === false) {
            this.getDescendantWidth();
        }
    };
    return UnicodeTrueTypeFont;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/byte-array.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/byte-array.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: ByteArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ByteArray", function() { return ByteArray; });
/**
 * ByteArray class
 * Used to keep information about image stream as byte array.
 * @private
 */
var ByteArray = /** @class */ (function () {
    /**
     * Initialize the new instance for `byte-array` class
     * @hidden
     * @private
     */
    function ByteArray(length) {
        /**
         * Current stream `position`.
         * @default 0
         * @private
         */
        this.mPosition = 0;
        this.buffer = new Uint8Array(length);
        this.dataView = new DataView(this.buffer.buffer);
    }
    Object.defineProperty(ByteArray.prototype, "position", {
        /**
         * Gets and Sets a current `position` of byte array.
         * @hidden
         * @private
         */
        get: function () {
            return this.mPosition;
        },
        set: function (value) {
            this.mPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Read` from current stream position.
     * @default 0
     * @hidden
     * @private
     */
    ByteArray.prototype.read = function (buffer, offset, count) {
        for (var index = offset; index < count; index++) {
            var position = this.position;
            buffer.buffer[index] = this.readByte(position);
            this.position++;
        }
    };
    /**
     * @hidden
     */
    ByteArray.prototype.getBuffer = function (index) {
        return this.buffer[index];
    };
    /**
     * @hidden
     */
    ByteArray.prototype.writeFromBase64String = function (base64) {
        var arr = this.encodedString(base64);
        this.buffer = arr;
    };
    /**
     * @hidden
     */
    ByteArray.prototype.encodedString = function (input) {
        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
        var chr1;
        var chr2;
        var chr3;
        var enc1;
        var enc2;
        var enc3;
        var enc4;
        var i = 0;
        var resultIndex = 0;
        var dataUrlPrefix = 'data:';
        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
        var totalLength = input.length * 3 / 4;
        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {
            totalLength--;
        }
        var output = new Uint8Array(totalLength | 0);
        while (i < input.length) {
            enc1 = keyStr.indexOf(input.charAt(i++));
            enc2 = keyStr.indexOf(input.charAt(i++));
            enc3 = keyStr.indexOf(input.charAt(i++));
            enc4 = keyStr.indexOf(input.charAt(i++));
            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;
            output[resultIndex++] = chr1;
            output[resultIndex++] = chr2;
            output[resultIndex++] = chr3;
        }
        return output;
    };
    /**
     * @hidden
     */
    ByteArray.prototype.readByte = function (offset) {
        return (this.buffer[offset]);
    };
    Object.defineProperty(ByteArray.prototype, "internalBuffer", {
        /**
         * @hidden
         */
        get: function () {
            return this.buffer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ByteArray.prototype, "count", {
        /**
         * @hidden
         */
        get: function () {
            return this.buffer.byteLength;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 'readNextTwoBytes' stream
     * @hidden
     * @private
     */
    ByteArray.prototype.readNextTwoBytes = function (stream) {
        var data = stream.readByte(this.position);
        this.position++;
        data <<= 8;
        data |= stream.readByte(this.position);
        this.position++;
        return data;
    };
    return ByteArray;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: ImageFormat, ImageDecoder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageFormat", function() { return ImageFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageDecoder", function() { return ImageDecoder; });
/* harmony import */ var _byte_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/byte-array.js");
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../primitives/pdf-boolean */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-boolean.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/**
 * ImageDecoder class
 */







/**
 * Specifies the image `format`.
 * @private
 */
var ImageFormat;
(function (ImageFormat) {
    /**
     * Specifies the type of `Unknown`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Unknown"] = 0] = "Unknown";
    /**
     * Specifies the type of `Bmp`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Bmp"] = 1] = "Bmp";
    /**
     * Specifies the type of `Emf`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Emf"] = 2] = "Emf";
    /**
     * Specifies the type of `Gif`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Gif"] = 3] = "Gif";
    /**
     * Specifies the type of `Jpeg`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Jpeg"] = 4] = "Jpeg";
    /**
     * Specifies the type of `Png`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Png"] = 5] = "Png";
    /**
     * Specifies the type of `Wmf`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Wmf"] = 6] = "Wmf";
    /**
     * Specifies the type of `Icon`.
     * @hidden
     * @private
     */
    ImageFormat[ImageFormat["Icon"] = 7] = "Icon";
})(ImageFormat || (ImageFormat = {}));
/**
 * `Decode the image stream`.
 * @private
 */
var ImageDecoder = /** @class */ (function () {
    /**
     * Initialize the new instance for `image-decoder` class.
     * @private
     */
    function ImageDecoder(stream) {
        /**
         * Start of file markers.
         * @hidden
         * @private
         */
        this.sof1Marker = 0x00C1;
        this.sof2Marker = 0x00C2;
        this.sof3Marker = 0x00C3;
        this.sof5Marker = 0x00C5;
        this.sof6Marker = 0x00C6;
        this.sof7Marker = 0x00C7;
        this.sof9Marker = 0x00C9;
        this.sof10Marker = 0x00CA;
        this.sof11Marker = 0x00CB;
        this.sof13Marker = 0x00CD;
        this.sof14Marker = 0x00CE;
        this.sof15Marker = 0x00CF;
        /**
         * Specifies `format` of image.
         * @hidden
         * @private
         */
        this.mFormat = ImageFormat.Unknown;
        /**
         * `Bits per component`.
         * @default 8
         * @hidden
         * @private
         */
        this.mbitsPerComponent = 8;
        /**
         * Internal variable for accessing fields from `DictionryProperties` class.
         * @hidden
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__["DictionaryProperties"]();
        this.mStream = stream;
        this.initialize();
    }
    Object.defineProperty(ImageDecoder.prototype, "height", {
        /**
         * Gets the `height` of image.
         * @hidden
         * @private
         */
        get: function () {
            return this.mHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "width", {
        /**
         * Gets the `width` of image.
         * @hidden
         * @private
         */
        get: function () {
            return this.mWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "bitsPerComponent", {
        /**
         * Gets `bits per component`.
         * @hidden
         * @private
         */
        get: function () {
            return this.mbitsPerComponent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "size", {
        /**
         * Gets the `size` of an image data.
         * @hidden
         * @private
         */
        get: function () {
            return this.mImageData.count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "imageData", {
        /**
         * Gets the value of an `image data`.
         * @hidden
         * @private
         */
        get: function () {
            return this.mImageData;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageDecoder.prototype, "imageDataAsNumberArray", {
        /**
         * Gets the value of an `image data as number array`.
         * @hidden
         * @private
         */
        get: function () {
            return this.mImageData.internalBuffer.buffer;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Initialize` image data and image stream.
     * @hidden
     * @private
     */
    ImageDecoder.prototype.initialize = function () {
        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {
            this.mFormat = ImageFormat.Jpeg;
            this.parseJpegImage();
        }
        this.reset();
        this.mImageData = new _byte_array__WEBPACK_IMPORTED_MODULE_0__["ByteArray"](this.mStream.count);
        this.mStream.read(this.mImageData, 0, this.mImageData.count);
    };
    /**
     * `Reset` stream position into 0.
     * @hidden
     * @private
     */
    ImageDecoder.prototype.reset = function () {
        this.mStream.position = 0;
    };
    /**
     * `Parse` Jpeg image.
     * @hidden
     * @private
     */
    ImageDecoder.prototype.parseJpegImage = function () {
        this.reset();
        var imgData = new _byte_array__WEBPACK_IMPORTED_MODULE_0__["ByteArray"](this.mStream.count);
        this.mStream.read(imgData, 0, imgData.count);
        var i = 4;
        var isLengthExceed = false;
        /* tslint:disable */
        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);
        while (i < imgData.count) {
            i += length;
            if (i < imgData.count) {
                if (imgData.getBuffer(i + 1) === 192) {
                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);
                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);
                    return;
                }
                else {
                    i += 2;
                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);
                }
            }
            else {
                isLengthExceed = true;
                break;
            }
        }
        if (isLengthExceed) {
            this.mStream.position = 0;
            this.skip(this.mStream, 2);
            this.readExceededJPGImage(this.mStream);
        }
        /* tslint:enable */
    };
    Object.defineProperty(ImageDecoder.prototype, "format", {
        /**
         * Gets the image `format`.
         * @private
         * @hidden
         */
        get: function () {
            return this.mFormat;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Checks if JPG`.
     * @private
     * @hidden
     */
    ImageDecoder.prototype.checkIfJpeg = function () {
        this.reset();
        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {
            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {
                return false;
            }
            this.mStream.position++;
        }
        return true;
    };
    /**
     * Return image `dictionary`.
     * @hidden
     * @private
     */
    ImageDecoder.prototype.getImageDictionary = function () {
        if (this.mFormat === ImageFormat.Jpeg) {
            var tempArrayBuffer = this.imageData.internalBuffer.length;
            this.imageStream = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_1__["PdfStream"]();
            this.imageStream.isImage = true;
            var tempString = '';
            var decodedString = '';
            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {
                tempString += String.fromCharCode(null, this.mStream.readByte(i));
            }
            for (var i = 0; i < tempString.length; i++) {
                if (i % 2 !== 0) {
                    decodedString += tempString[i];
                }
            }
            this.imageStream.data = [decodedString];
            this.imageStream.compress = false;
            this.imageStream.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_3__["PdfName"](this.dictionaryProperties.xObject));
            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_3__["PdfName"](this.dictionaryProperties.image));
            this.imageStream.items.setValue(this.dictionaryProperties.width, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](this.width));
            this.imageStream.items.setValue(this.dictionaryProperties.height, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](this.height));
            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](this.bitsPerComponent));
            this.imageStream.items.setValue(this.dictionaryProperties.filter, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_3__["PdfName"](this.dictionaryProperties.dctdecode));
            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_3__["PdfName"](this.getColorSpace()));
            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());
            return this.imageStream;
        }
        else {
            return this.imageStream;
        }
    };
    /**
     * Return `colorSpace` of an image.
     * @hidden
     * @private
     */
    ImageDecoder.prototype.getColorSpace = function () {
        return this.dictionaryProperties.deviceRgb;
    };
    /**
     * Return `decode parameters` of an image.
     * @hidden
     * @private
     */
    ImageDecoder.prototype.getDecodeParams = function () {
        var decodeParams = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_6__["PdfDictionary"]();
        decodeParams.items.setValue(this.dictionaryProperties.columns, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](this.width));
        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new _primitives_pdf_boolean__WEBPACK_IMPORTED_MODULE_5__["PdfBoolean"](true));
        decodeParams.items.setValue(this.dictionaryProperties.k, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](-1));
        decodeParams.items.setValue(this.dictionaryProperties.predictor, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](15));
        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](this.bitsPerComponent));
        return decodeParams;
    };
    /**
     * 'readExceededJPGImage' stream
     * @hidden
     * @private
     */
    ImageDecoder.prototype.readExceededJPGImage = function (stream) {
        this.mStream = stream;
        var isContinueReading = true;
        while (isContinueReading) {
            var marker = this.getMarker(stream);
            switch (marker) {
                case this.sof1Marker:
                case this.sof2Marker:
                case this.sof3Marker:
                case this.sof5Marker:
                case this.sof6Marker:
                case this.sof7Marker:
                case this.sof9Marker:
                case this.sof10Marker:
                case this.sof11Marker:
                case this.sof13Marker:
                case this.sof14Marker:
                case this.sof15Marker:
                    stream.position += 3;
                    this.mHeight = this.mStream.readNextTwoBytes(stream);
                    this.mWidth = this.mStream.readNextTwoBytes(stream);
                    isContinueReading = false;
                    break;
                default:
                    this.skipStream(stream);
                    break;
            }
        }
    };
    /**
     * 'skip' stream
     * @hidden
     * @private
     */
    ImageDecoder.prototype.skip = function (stream, noOfBytes) {
        this.mStream = stream;
        var temp = new _byte_array__WEBPACK_IMPORTED_MODULE_0__["ByteArray"](noOfBytes);
        this.mStream.read(temp, 0, temp.count);
    };
    /**
     * 'getMarker' stream
     * @hidden
     * @private
     */
    ImageDecoder.prototype.getMarker = function (stream) {
        var skippedByte = 0;
        var marker = 32;
        marker = stream.readByte(this.mStream.position);
        stream.position++;
        while (marker !== 255) {
            skippedByte++;
            marker = stream.readByte(this.mStream.position);
            stream.position++;
        }
        do {
            marker = stream.readByte(this.mStream.position);
            stream.position++;
        } while (marker === 255);
        return marker;
    };
    /**
     * 'skipStream' stream
     * @hidden
     * @private
     */
    ImageDecoder.prototype.skipStream = function (stream) {
        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;
        if (markerLength > 0) {
            stream.position += markerLength;
        }
    };
    /**
     * Number array for `png header`.
     * @hidden
     * @private
     */
    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];
    /**
     * Number Array for `jpeg header`.
     * @hidden
     * @private
     */
    ImageDecoder.mJpegHeader = [255, 216];
    /**
     * Number array for `gif header`.
     * @hidden
     * @private
     */
    ImageDecoder.GIF_HEADER = 'G,I,F,8';
    /**
     * Number array for `bmp header.`
     * @hidden
     * @private
     */
    ImageDecoder.BMP_HEADER = 'B,M';
    return ImageDecoder;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/index.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/index.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: ByteArray, ImageFormat, ImageDecoder, PdfBitmap, PdfImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _byte_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/byte-array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ByteArray", function() { return _byte_array__WEBPACK_IMPORTED_MODULE_0__["ByteArray"]; });

/* harmony import */ var _image_decoder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./image-decoder */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageFormat", function() { return _image_decoder__WEBPACK_IMPORTED_MODULE_1__["ImageFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageDecoder", function() { return _image_decoder__WEBPACK_IMPORTED_MODULE_1__["ImageDecoder"]; });

/* harmony import */ var _pdf_bitmap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-bitmap */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBitmap", function() { return _pdf_bitmap__WEBPACK_IMPORTED_MODULE_2__["PdfBitmap"]; });

/* harmony import */ var _pdf_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-image */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfImage", function() { return _pdf_image__WEBPACK_IMPORTED_MODULE_3__["PdfImage"]; });

/**
 * Images classes
 * @hidden
 */






/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: PdfBitmap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBitmap", function() { return PdfBitmap; });
/* harmony import */ var _graphics_images_image_decoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../graphics/images/image-decoder */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js");
/* harmony import */ var _graphics_images_byte_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../graphics/images/byte-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/byte-array.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _pdf_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-image */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfBitmap.ts class for EJ2-PDF
 */




/**
 * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.
 * ```typescript
 * // create a new PDF document.
 * let document : PdfDocument = new PdfDocument();
 * // add a page to the document.
 * let page1 : PdfPage = document.pages.add();
 * // base64 string of an image
 * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';
 * // load the image from the base64 string of original image.
 * let image : PdfBitmap = new PdfBitmap(imageString);
 * // draw the image
 * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));
 * // save the document.
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfBitmap = /** @class */ (function (_super) {
    __extends(PdfBitmap, _super);
    /**
     * Create an instance for `PdfBitmap` class.
     * @param encodedString Base64 string of an image.
     * ```typescript
     * // create a new PDF document.
     * let document : PdfDocument = new PdfDocument();
     * // add a page to the document.
     * let page1 : PdfPage = document.pages.add();
     * // base64 string of an image
     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';
     * //
     * // load the image from the base64 string of original image.
     * let image : PdfBitmap = new PdfBitmap(imageString);
     * //
     * // draw the image
     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));
     * // save the document.
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     */
    function PdfBitmap(encodedString) {
        var _this = _super.call(this) || this;
        //Fields
        /**
         * Specifies the `status` of an image.
         * @default true.
         * @hidden
         * @private
         */
        _this.imageStatus = true;
        /**
         * Internal variable for accessing fields from `DictionryProperties` class.
         * @hidden
         * @private
         */
        _this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__["DictionaryProperties"]();
        _this.loadImage(encodedString);
        return _this;
    }
    /**
     * `Load image`.
     * @hidden
     * @private
     */
    PdfBitmap.prototype.loadImage = function (encodedString) {
        var task = this.initializeAsync(encodedString);
    };
    /**
     * `Initialize` image parameters.
     * @private
     */
    PdfBitmap.prototype.initializeAsync = function (encodedString) {
        var byteArray = new _graphics_images_byte_array__WEBPACK_IMPORTED_MODULE_1__["ByteArray"](encodedString.length);
        byteArray.writeFromBase64String(encodedString);
        this.decoder = new _graphics_images_image_decoder__WEBPACK_IMPORTED_MODULE_0__["ImageDecoder"](byteArray);
        this.height = this.decoder.height;
        this.width = this.decoder.width;
        // FrameCount = BitmapImageDecoder.FrameCount;
        this.bitsPerComponent = this.decoder.bitsPerComponent;
    };
    /**
     * `Saves` the image into stream.
     * @private
     */
    PdfBitmap.prototype.save = function () {
        this.imageStatus = true;
        this.imageStream = this.decoder.getImageDictionary();
    };
    return PdfBitmap;
}(_pdf_image__WEBPACK_IMPORTED_MODULE_3__["PdfImage"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js ***!
  \****************************************************************************************************************************************************/
/*! exports provided: PdfImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfImage", function() { return PdfImage; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _unit_convertor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../unit-convertor */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/unit-convertor.js");



/**
 * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.
 * @private
 */
var PdfImage = /** @class */ (function () {
    function PdfImage() {
    }
    Object.defineProperty(PdfImage.prototype, "width", {
        /**
         * Gets and Sets the `width` of an image.
         * @private
         */
        get: function () {
            return this.imageWidth;
        },
        set: function (value) {
            this.imageWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "height", {
        /**
         * Gets and Sets the `height` of an image.
         * @private
         */
        get: function () {
            return this.imageHeight;
        },
        set: function (value) {
            this.imageHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "size", {
        /**
         * Gets or sets the size of the image.
         * @private
         */
        set: function (value) {
            this.width = value.width;
            this.height = value.height;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "physicalDimension", {
        /**
         * Gets the `physical dimension` of an image.
         * @private
         */
        get: function () {
            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);
            return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](this.width, this.height);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfImage.prototype, "element", {
        // /**
        //  * Gets the `image stream as string`.
        //  * @private
        //  */
        // public static fromString(string : string) : PdfImage {
        //     let image : PdfImage = new PdfBitmap(string);
        //     return image;
        // }
        /**
         * Gets the `element` image stream.
         * @private
         */
        get: function () {
            return this.imageStream;
        },
        enumerable: true,
        configurable: true
    });
    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {
        if (typeof horizontalResolution === 'undefined') {
            var dpiX = _unit_convertor__WEBPACK_IMPORTED_MODULE_2__["PdfUnitConverter"].horizontalResolution;
            var dpiY = _unit_convertor__WEBPACK_IMPORTED_MODULE_2__["PdfUnitConverter"].verticalResolution;
            var size = this.getPointSize(width, height, dpiX, dpiY);
            return size;
        }
        else {
            var ucX = new _unit_convertor__WEBPACK_IMPORTED_MODULE_2__["PdfUnitConverter"](horizontalResolution);
            var ucY = new _unit_convertor__WEBPACK_IMPORTED_MODULE_2__["PdfUnitConverter"](verticalResolution);
            var ptWidth = ucX.convertUnits(width, _enum__WEBPACK_IMPORTED_MODULE_1__["PdfGraphicsUnit"].Pixel, _enum__WEBPACK_IMPORTED_MODULE_1__["PdfGraphicsUnit"].Point);
            var ptHeight = ucY.convertUnits(height, _enum__WEBPACK_IMPORTED_MODULE_1__["PdfGraphicsUnit"].Pixel, _enum__WEBPACK_IMPORTED_MODULE_1__["PdfGraphicsUnit"].Point);
            var size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](ptWidth, ptHeight);
            return size;
        }
    };
    return PdfImage;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js ***!
  \*********************************************************************************************************************************************/
/*! exports provided: PdfColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfColor", function() { return PdfColor; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../input-output/pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");





/**
 * Implements structures and routines working with `color`.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // add a new page to the document
 * let page1 : PdfPage = document.pages.add();
 * // set the font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * //
 * // set color
 * let brushColor : PdfColor = new PdfColor(0, 0, 0);
 * //
 * // create black brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);
 * // draw the text
 * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
 * // save the document
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 * @default black color
 */
var PdfColor = /** @class */ (function () {
    function PdfColor(color1, color2, color3, color4) {
        if (typeof color1 === 'undefined') {
            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {
                this.assignRGB(color2, color3, color4);
            }
            else {
                this.filled = false;
            }
        }
        else if (color1 instanceof PdfColor) {
            this.redColor = color1.r;
            this.greenColor = color1.g;
            this.blueColor = color1.b;
            this.grayColor = color1.gray;
            this.alpha = color1.alpha;
            this.filled = (this.alpha !== 0);
            /* tslint:disable-next-line:max-line-length */
        }
        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {
            if (color1 < 0) {
                color1 = 0;
            }
            if (color1 > 1) {
                color1 = 1;
            }
            this.redColor = color1 * PdfColor.maxColourChannelValue;
            this.greenColor = color1 * PdfColor.maxColourChannelValue;
            this.blueColor = color1 * PdfColor.maxColourChannelValue;
            this.cyanColor = color1;
            this.magentaColor = color1;
            this.yellowColor = color1;
            this.blackColor = color1;
            this.grayColor = color1;
            this.alpha = PdfColor.maxColourChannelValue;
            this.filled = true;
        }
        else if (typeof color4 === 'undefined') {
            this.assignRGB(color1, color2, color3);
        }
        else {
            this.assignRGB(color2, color3, color4, color1);
        }
    }
    /**
     * `Assign` red, green, blue colors with alpha value..
     * @private
     */
    PdfColor.prototype.assignRGB = function (r, g, b, a) {
        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {
            this.filled = false;
        }
        else {
            this.cyanColor = 0;
            this.magentaColor = 0;
            this.yellowColor = 0;
            this.blackColor = 0;
            this.grayColor = 0;
            this.redColor = r;
            this.greenColor = g;
            this.blueColor = b;
            if (typeof a === 'undefined') {
                this.alpha = PdfColor.maxColourChannelValue;
            }
            else {
                this.alpha = a;
            }
            this.filled = true;
            this.assignCMYK(r, g, b);
        }
    };
    /**
     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..
     * @private
     */
    PdfColor.prototype.assignCMYK = function (r, g, b) {
        var red = r / PdfColor.maxColourChannelValue;
        var green = g / PdfColor.maxColourChannelValue;
        var blue = b / PdfColor.maxColourChannelValue;
        var black = _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"].min(1 - red, 1 - green, 1 - blue);
        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);
        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);
        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);
        this.blackColor = black;
        this.cyanColor = cyan;
        this.magentaColor = magenta;
        this.yellowColor = yellow;
    };
    Object.defineProperty(PdfColor.prototype, "r", {
        //Properties
        // public static get Empty():PdfColor
        // {
        //     return this.s_emptyColor
        // }
        /**
         * Gets or sets `Red` channel value.
         * @private
         */
        get: function () {
            return this.redColor;
        },
        set: function (value) {
            this.redColor = value;
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "red", {
        /**
         * Gets the `Red` color
         * @private
         */
        get: function () {
            return (this.r / PdfColor.maxColourChannelValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "b", {
        /**
         * Gets or sets `Blue` channel value.
         * @private
         */
        get: function () {
            return this.blueColor;
        },
        set: function (value) {
            this.blueColor = value;
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "blue", {
        /**
         * Gets the `blue` color.
         * @private
         */
        get: function () {
            return (this.b / PdfColor.maxColourChannelValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "c", {
        /**
         * Gets or sets `Cyan` channel value.
         * @private
         */
        get: function () {
            return this.cyanColor;
        },
        set: function (value) {
            if (value < 0) {
                this.cyanColor = 0;
            }
            else if (value > 1) {
                this.cyanColor = 1;
            }
            else {
                this.cyanColor = value;
            }
            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "k", {
        /**
         * Gets or sets `Black` channel value.
         * @private
         */
        get: function () {
            return this.blackColor;
        },
        set: function (value) {
            if ((value < 0)) {
                this.blackColor = 0;
            }
            else if ((value > 1)) {
                this.blackColor = 1;
            }
            else {
                this.blackColor = value;
            }
            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "m", {
        /**
         * Gets or sets `Magenta` channel value.
         * @private
         */
        get: function () {
            return this.magentaColor;
        },
        set: function (value) {
            if ((value < 0)) {
                this.magentaColor = 0;
            }
            else if ((value > 1)) {
                this.magentaColor = 1;
            }
            else {
                this.magentaColor = value;
            }
            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "y", {
        /**
         * Gets or sets `Yellow` channel value.
         * @private
         */
        get: function () {
            return this.yellowColor;
        },
        set: function (value) {
            if ((value < 0)) {
                this.yellowColor = 0;
            }
            else if ((value > 1)) {
                this.yellowColor = 1;
            }
            else {
                this.yellowColor = value;
            }
            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "g", {
        /**
         *  Gets or sets `Green` channel value.
         * @private
         */
        get: function () {
            return this.greenColor;
        },
        set: function (value) {
            this.greenColor = value;
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "green", {
        /**
         * Gets the `Green` color.
         * @private
         */
        get: function () {
            return (this.g / PdfColor.maxColourChannelValue);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "gray", {
        /**
         * Gets or sets `Gray` channel value.
         * @private
         */
        get: function () {
            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));
        },
        set: function (value) {
            if (value < 0) {
                this.grayColor = 0;
            }
            else if (value > 1) {
                this.grayColor = 1;
            }
            else {
                this.grayColor = value;
            }
            this.r = (this.grayColor * PdfColor.maxColourChannelValue);
            this.g = (this.grayColor * PdfColor.maxColourChannelValue);
            this.b = (this.grayColor * PdfColor.maxColourChannelValue);
            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "isEmpty", {
        /**
         * Gets whether the PDFColor `is Empty` or not.
         * @private
         */
        get: function () {
            return !this.filled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfColor.prototype, "a", {
        /**
         * Gets or sets `Alpha` channel value.
         * @private
         */
        get: function () {
            return this.alpha;
        },
        set: function (value) {
            if (value < 0) {
                this.alpha = 0;
            }
            else {
                // if (this.alpha !== value) {
                this.alpha = value;
                // }
            }
            this.filled = true;
        },
        enumerable: true,
        configurable: true
    });
    //Public methods
    /**
     * Converts `PDFColor to PDF string` representation.
     * @private
     */
    PdfColor.prototype.toString = function (colorSpace, stroke) {
        if (this.isEmpty) {
            return '';
        }
        var str = '';
        switch (colorSpace) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb:
                str = this.rgbToString(stroke);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].GrayScale:
                str = this.grayScaleToString(stroke);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Cmyk:
                str = this.cmykToString(stroke);
                break;
        }
        return str;
    };
    /**
     * Sets `GrayScale` color.
     * @private
     */
    PdfColor.prototype.grayScaleToString = function (ifStroking) {
        var gray = this.gray;
        var colour = '';
        var obj = null;
        /* tslint:disable-next-line:max-line-length */
        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;
        if (obj == null) {
            if (ifStroking) {
                colour = gray.toString() + ' G';
                PdfColor.grayStringsSroke.setValue(gray, colour);
            }
        }
        else {
            colour = obj.toString();
        }
        return colour + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_1__["Operators"].newLine;
    };
    /**
     * Sets `RGB` color.
     * @private
     */
    PdfColor.prototype.rgbToString = function (ifStroking) {
        var r = this.r;
        var g = this.g;
        var b = this.b;
        var key = (r << 16) + (g << 8) + b;
        if (ifStroking) {
            key += 1 << 24;
        }
        var colour = '';
        var obj = null;
        if (PdfColor.rgbStrings.containsKey(key)) {
            obj = PdfColor.rgbStrings.getValue(key);
        }
        if (obj == null) {
            var red = r / PdfColor.maxColourChannelValue;
            var green = g / PdfColor.maxColourChannelValue;
            var blue = b / PdfColor.maxColourChannelValue;
            if (ifStroking) {
                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';
            }
            else {
                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';
            }
            PdfColor.rgbStrings.setValue(key, colour);
        }
        else {
            colour = obj.toString();
        }
        return colour + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_1__["Operators"].newLine;
    };
    /***
     * Sets `CMYK` color.
     * @private
     */
    PdfColor.prototype.cmykToString = function (ifStroking) {
        var cyan = this.c;
        var magenta = this.m;
        var yellow = this.y;
        var black = this.b;
        var colour = '';
        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';
        return colour + _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_1__["Operators"].newLine;
    };
    /**
     * Converts `colour to a PDF array`.
     * @private
     */
    PdfColor.prototype.toArray = function (colorSpace) {
        var array = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
        switch (colorSpace) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb:
                array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"](this.red));
                array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"](this.green));
                array.add(new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"](this.blue));
                break;
        }
        return array;
    };
    //Fields
    /**
     * Holds `RGB colors` converted into strings.
     * @private
     */
    PdfColor.rgbStrings = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_2__["Dictionary"]();
    /**
     * Holds Gray scale colors converted into strings for `stroking`.
     * @private
     */
    PdfColor.grayStringsSroke = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_2__["Dictionary"]();
    /**
     * Holds Gray scale colors converted into strings for `filling`.
     * @private
     */
    PdfColor.grayStringsFill = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_2__["Dictionary"]();
    /**
     * `Max value` of color channel.
     * @private
     */
    PdfColor.maxColourChannelValue = 255.0;
    return PdfColor;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-graphics.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-graphics.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: PdfGraphics, GetResourceEventHandler, PdfGraphicsState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGraphics", function() { return PdfGraphics; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetResourceEventHandler", function() { return GetResourceEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsState", function() { return PdfGraphicsState; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _fonts_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fonts/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony import */ var _input_output_pdf_stream_writer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../input-output/pdf-stream-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js");
/* harmony import */ var _pdf_pen__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./brushes/pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/* harmony import */ var _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fonts/pdf-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js");
/* harmony import */ var _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pdf-transformation-matrix */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transformation-matrix.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/constants.js");
/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");
/* harmony import */ var _fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fonts/pdf-string-format */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js");
/* harmony import */ var _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../collections/object-object-pair/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js");
/* harmony import */ var _pdf_transparency__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pdf-transparency */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transparency.js");
/* harmony import */ var _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./fonts/string-tokenizer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js");
/* harmony import */ var _document_automatic_fields_automatic_field_info_collection__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./../document/automatic-fields/automatic-field-info-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info-collection.js");
/* harmony import */ var _document_automatic_fields_automatic_field_info__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./../document/automatic-fields/automatic-field-info */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info.js");
/* harmony import */ var _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./../input-output/pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/* harmony import */ var _fonts_unicode_true_type_font__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./fonts/unicode-true-type-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/unicode-true-type-font.js");
/* harmony import */ var _fonts_rtl_renderer__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./fonts/rtl-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl-renderer.js");
/* harmony import */ var _figures_enum__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./figures/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js");
/* harmony import */ var _implementation_graphics_brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./../../implementation/graphics/brushes/pdf-gradient-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js");
/* harmony import */ var _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./brushes/pdf-tiling-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js");
/**
 * PdfGraphics.ts class for EJ2-PDF
 */




























/**
 * `PdfGraphics` class represents a graphics context of the objects.
 * It's used for performing all the graphics operations.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // add a new page to the document
 * let page1 : PdfPage = document.pages.add();
 * // set the font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * // create black brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
 * //
 * //graphics of the page
 * let page1Graphics : PdfGraphics = page1.graphics;
 * // draw the text on the page1 graphics
 * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
 * //
 * // save the document
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfGraphics = /** @class */ (function () {
    function PdfGraphics(arg1, arg2, arg3) {
        /**
         * Represents the `Current color space`.
         * @private
         */
        this.currentColorSpace = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb;
        /**
         * Stores `previous rendering mode`.
         * @private
         */
        this.previousTextRenderingMode = _enum__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"].Fill;
        /**
         * Previous `character spacing` value or 0.
         * @private
         */
        this.previousCharacterSpacing = 0.0;
        /**
         * Previous `word spacing` value or 0.
         * @private
         */
        this.previousWordSpacing = 0.0;
        /**
         * The `previously used text scaling` value.
         * @private
         */
        this.previousTextScaling = 100.0;
        /**
         * Instance of `ProcedureSets` class.
         * @private
         */
        this.procedureSets = new _constants__WEBPACK_IMPORTED_MODULE_9__["ProcedureSets"]();
        /**
         * To check wihether it is a `direct text rendering`.
         * @default true
         * @private
         */
        this.isNormalRender = true;
        /**
         * check whether to `use font size` to calculate the shift.
         * @default false
         * @private
         */
        this.isUseFontSize = false;
        /**
         * check whether the font is in `italic type`.
         * @default false
         * @private
         */
        this.isItalic = false;
        /**
         * Check whether it is an `emf Text Matrix`.
         * @default false
         * @private
         */
        this.isEmfTextScaled = false;
        /**
         * Check whether it is an `emf` call.
         * @default false
         * @private
         */
        this.isEmf = false;
        /**
         * Check whether it is an `emf plus` call.
         * @default false
         * @private
         */
        this.isEmfPlus = false;
        /**
         * Check whether it is in `base line format`.
         * @default true
         * @private
         */
        this.isBaselineFormat = true;
        /**
         * Emf Text `Scaling Factor`.
         * @private
         */
        this.emfScalingFactor = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["SizeF"](0, 0);
        /**
         * To check whether the `last color space` of document and garphics is saved.
         * @private
         */
        this.colorSpaceChanged = false;
        /**
         * Stores an instance of `DictionaryProperties`.
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_15__["DictionaryProperties"]();
        /**
         * Checks whether the x co-ordinate is need to set as client size or not.
         * @hidden
         * @private
         */
        this.isOverloadWithPosition = false;
        /**
         * Checks whether the x co-ordinate is need to set as client size or not.
         * @hidden
         * @private
         */
        this.isPointOverload = false;
        /**
         * Current colorspaces.
         * @hidden
         * @private
         */
        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];
        /**
         * Checks the current image `is optimized` or not.
         * @default false.
         * @private
         */
        this.isImageOptimized = false;
        /**
         * Stores the `graphics states`.
         * @private
         */
        this.graphicsState = [];
        /**
         * Indicates whether the object `had trasparency`.
         * @default false
         * @private
         */
        this.istransparencySet = false;
        /**
         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .
         * @default null
         * @private
         */
        this.internalAutomaticFields = null;
        /**
         * Stores the index of the start line that should draw with in the next page.
         * @private
         */
        this.startCutIndex = -1;
        this.getResources = arg2;
        this.canvasSize = arg1;
        if (arg3 instanceof _input_output_pdf_stream_writer__WEBPACK_IMPORTED_MODULE_2__["PdfStreamWriter"]) {
            this.pdfStreamWriter = arg3;
        }
        else {
            this.pdfStreamWriter = new _input_output_pdf_stream_writer__WEBPACK_IMPORTED_MODULE_2__["PdfStreamWriter"](arg3);
        }
        this.initialize();
    }
    Object.defineProperty(PdfGraphics.prototype, "stringLayoutResult", {
        //  Properties
        /**
         * Returns the `result` after drawing string.
         * @private
         */
        get: function () {
            return this.pdfStringLayoutResult;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "size", {
        /**
         * Gets the `size` of the canvas.
         * @private
         */
        get: function () {
            return this.canvasSize;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "mediaBoxUpperRightBound", {
        /**
         * Gets and Sets the value of `MediaBox upper right bound`.
         * @private
         */
        get: function () {
            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {
                this.internalMediaBoxUpperRightBound = 0;
            }
            return this.internalMediaBoxUpperRightBound;
        },
        set: function (value) {
            this.internalMediaBoxUpperRightBound = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "clientSize", {
        /**
         * Gets the `size` of the canvas reduced by margins and page templates.
         * @private
         */
        get: function () {
            return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["SizeF"](this.clipBounds.width, this.clipBounds.height);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "colorSpace", {
        /**
         * Gets or sets the current `color space` of the document
         * @private
         */
        get: function () {
            return this.currentColorSpace;
        },
        set: function (value) {
            this.currentColorSpace = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "streamWriter", {
        /**
         * Gets the `stream writer`.
         * @private
         */
        get: function () {
            return this.pdfStreamWriter;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "matrix", {
        /**
         * Gets the `transformation matrix` reflecting current transformation.
         * @private
         */
        get: function () {
            if (this.transformationMatrix == null) {
                this.transformationMatrix = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
            }
            return this.transformationMatrix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "layer", {
        /**
         * Gets the `layer` for the graphics, if exists.
         * @private
         */
        get: function () {
            return this.pageLayer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "page", {
        /**
         * Gets the `page` for this graphics, if exists.
         * @private
         */
        get: function () {
            return this.pageLayer.page;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphics.prototype, "automaticFields", {
        get: function () {
            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {
                this.internalAutomaticFields = new _document_automatic_fields_automatic_field_info_collection__WEBPACK_IMPORTED_MODULE_17__["PdfAutomaticFieldInfoCollection"]();
            }
            return this.internalAutomaticFields;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * `Initializes` this instance.
     * @private
     */
    PdfGraphics.prototype.initialize = function () {
        this.bStateSaved = false;
        this.currentPen = null;
        this.currentBrush = null;
        this.currentFont = null;
        this.currentColorSpace = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb;
        this.bCSInitialized = false;
        this.transformationMatrix = null;
        this.previousTextRenderingMode = (-1); //.Fill;
        this.previousCharacterSpacing = -1.0;
        this.previousWordSpacing = -1.0;
        this.previousTextScaling = -100.0;
        // this.m_trasparencies = null;
        this.currentStringFormat = null;
        this.clipBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["PointF"](0, 0), this.size);
        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);
    };
    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {
        if (typeof size === 'undefined') {
            if (template == null) {
                throw Error('ArgumentNullException-template');
            }
            this.drawPdfTemplate(template, location, template.size);
        }
        else {
            // let crossTable : PdfCrossTable = null;
            // if (this.pageLayer != null) {
            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;
            // }
            if (template == null) {
                throw Error('ArgumentNullException-template');
            }
            var scaleX = (template.width > 0) ? size.width / template.width : 1;
            var scaleY = (template.height > 0) ? size.height / template.height : 1;
            var bNeedScale = !(scaleX === 1 && scaleY === 1);
            // Save state.
            var state = this.save();
            // Take into consideration that rect location is bottom/left.
            var matrix = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
            if (this.pageLayer != null) {
                this.getTranslateTransform(location.x, location.y + size.height, matrix);
            }
            if (bNeedScale) {
                this.getScaleTransform(scaleX, scaleY, matrix);
            }
            this.pdfStreamWriter.modifyCtm(matrix);
            // Output template.
            var resources = this.getResources.getResources();
            var name_1 = resources.getName(template);
            this.pdfStreamWriter.executeObject(name_1);
            // Restore state.
            this.restore(state);
            //Transfer automatic fields from template.
            var g = template.graphics;
            if (g != null) {
                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {
                    var fieldInfo = g.automaticFields.automaticFields[index];
                    var newLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["PointF"](fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);
                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;
                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;
                    this.automaticFields.add(new _document_automatic_fields_automatic_field_info__WEBPACK_IMPORTED_MODULE_18__["PdfAutomaticFieldInfo"](fieldInfo.field, newLocation, scalingX, scalingY));
                    this.page.dictionary.modify();
                }
            }
            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);
            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);
            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);
            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);
        }
    };
    /* tslint:disable */
    /**
     * @public
     */
    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {
        if (typeof arg1 === 'string' && arg2 instanceof _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_6__["PdfFont"] && (arg3 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_3__["PdfPen"] || arg3 === null) && (arg4 instanceof _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_4__["PdfBrush"] || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof _fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_11__["PdfStringFormat"] || arg7 === null) && typeof arg8 === 'undefined') {
            this.isOverloadWithPosition = true;
            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);
        }
        else {
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            var temparg6 = arg6;
            var temparg7 = arg7;
            var temparg8 = arg8;
            var temparg9 = arg9;
            var layouter = new _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_14__["PdfStringLayouter"]();
            var result = layouter.layout(arg1, arg2, temparg9, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["SizeF"](temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);
            if (!result.empty) {
                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);
                if (temparg7 <= 0) {
                    temparg5 = rect.x;
                    temparg7 = rect.width;
                }
                if (temparg8 <= 0) {
                    temparg6 = rect.y;
                    temparg8 = rect.height;
                }
                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"](temparg5, temparg6, temparg7, temparg8), temparg9);
                this.isEmfTextScaled = false;
                this.emfScalingFactor = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["SizeF"](0, 0);
            }
            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);
            this.isNormalRender = true;
            this.pdfStringLayoutResult = result;
            this.isUseFontSize = false;
        }
    }; /* tslint:enable */
    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {
        if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["PointF"]) {
            var temparg2 = arg2;
            var temparg3 = arg3;
            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);
        }
        else {
            var temparg2 = arg2;
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            this.stateControl(arg1, null, null);
            var sw = this.streamWriter;
            sw.beginPath(temparg2, temparg3);
            sw.appendLineSegment(temparg4, temparg5);
            sw.strokePath();
            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);
        }
    };
    /* tslint:disable */
    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {
        if (arg1 instanceof _pdf_pen__WEBPACK_IMPORTED_MODULE_3__["PdfPen"] && typeof arg2 === 'number') {
            var temparg3 = arg3;
            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);
        }
        else if (arg1 instanceof _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_4__["PdfBrush"] && typeof arg2 === 'number') {
            var temparg3 = arg3;
            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);
        }
        else {
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            var temparg6 = arg6;
            if ((arg2 instanceof _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_24__["PdfTilingBrush"])) {
                this.bCSInitialized = false;
                var xOffset = (this.matrix.matrix.offsetX + temparg3);
                var yOffset = void 0;
                if (((this.layer != null) && (this.layer.page != null))) {
                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);
                }
                else {
                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);
                }
                (arg2).location = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["PointF"](xOffset, yOffset);
                (arg2).graphics.colorSpace = this.colorSpace;
            }
            else if ((arg2 instanceof _implementation_graphics_brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_23__["PdfGradientBrush"])) {
                arg2.colorSpace = this.colorSpace;
            }
            if (arg2 instanceof _brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_5__["PdfSolidBrush"] && arg2.color.isEmpty) {
                arg2 = null;
            }
            var temparg1 = arg1;
            var temparg2 = arg2;
            this.stateControl(temparg1, temparg2, null);
            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);
            this.drawPathHelper(temparg1, temparg2, false);
        }
    };
    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {
        if (typeof arg3 === 'boolean') {
            var temparg3 = arg3;
            this.drawPathHelper(arg1, arg2, _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFillMode"].Winding, temparg3);
        }
        else {
            var temparg3 = arg3;
            var temparg4 = arg4;
            var isPen = arg1 != null;
            var isBrush = arg2 != null;
            var isEvenOdd = (temparg3 === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFillMode"].Alternate);
            if (isPen && isBrush) {
                this.streamWriter.fillStrokePath(isEvenOdd);
            }
            else if (!isPen && !isBrush) {
                this.streamWriter.endPath();
            }
            else if (isPen) {
                this.streamWriter.strokePath();
            }
            else {
                this.streamWriter.fillPath(isEvenOdd);
            }
        }
    };
    /* tslint:disable */
    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {
        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {
            var size = arg1.physicalDimension;
            this.drawImage(arg1, arg2, arg3, size.width, size.height);
        }
        else {
            var temparg2 = arg2;
            var temparg3 = arg3;
            var temparg4 = arg4;
            var temparg5 = arg5;
            arg1.save();
            var matrix = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);
            this.getScaleTransform(arg4, arg5, matrix);
            this.pdfStreamWriter.write('q');
            this.pdfStreamWriter.modifyCtm(matrix);
            // Output template.
            var resources = this.getResources.getResources();
            if (typeof this.pageLayer !== 'undefined' && this.page != null) {
                resources.document = this.page.document;
            }
            var name_2 = resources.getName(arg1);
            if (typeof this.pageLayer !== 'undefined') {
                this.page.setResources(resources);
            }
            this.pdfStreamWriter.executeObject(name_2);
            this.pdfStreamWriter.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_19__["Operators"].restoreState);
            this.pdfStreamWriter.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_19__["Operators"].newLine);
            var resource = this.getResources.getResources();
            resource.requireProcedureSet(this.procedureSets.imageB);
            resource.requireProcedureSet(this.procedureSets.imageC);
            resource.requireProcedureSet(this.procedureSets.imageI);
            resource.requireProcedureSet(this.procedureSets.text);
        }
    };
    //Implementation
    /* tslint:disable */
    /**
     * Returns `bounds` of the line info.
     * @private
     */
    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {
        var bounds;
        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {
            var line = result.lines[lineIndex];
            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);
            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);
            var lineWidth = line.width;
            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);
            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));
            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;
            var x = layoutRectangle.x + hShift;
            /* tslint:disable */
            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */
            var height = result.lineHeight;
            bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"](x, y, width, height);
        }
        else {
            bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"](0, 0, 0, 0);
        }
        return bounds;
    };
    /**
     * Creates `lay outed rectangle` depending on the text settings.
     * @private
     */
    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {
        var layoutedRectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"](x, y, textSize.width, textSize.width);
        if (format != null) {
            switch (format.alignment) {
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Center:
                    layoutedRectangle.x -= layoutedRectangle.width / 2;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Right:
                    layoutedRectangle.x -= layoutedRectangle.width;
                    break;
            }
            switch (format.lineAlignment) {
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfVerticalAlignment"].Middle:
                    layoutedRectangle.y -= layoutedRectangle.height / 2;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfVerticalAlignment"].Bottom:
                    layoutedRectangle.y -= layoutedRectangle.height;
                    break;
            }
        }
        return layoutedRectangle;
    };
    /**
     * Sets the `layer` for the graphics.
     * @private
     */
    PdfGraphics.prototype.setLayer = function (layer) {
        this.pageLayer = layer;
        var page = layer.page;
        if (page != null && typeof page !== 'undefined') {
            page.beginSave = this.pageSave;
        }
    };
    /**
     * Adding page number field before page saving.
     * @private
     */
    /* tslint:disable */
    PdfGraphics.prototype.pageSave = function (page) {
        if (page.graphics.automaticFields != null) {
            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {
                var fieldInfo = page.graphics.automaticFields.automaticFields[i];
                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);
            }
        }
    };
    /**
     * `Draws a layout result`.
     * @private
     */
    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {
        if (!result.empty) {
            this.applyStringSettings(font, pen, brush, format, layoutRectangle);
            // Set text scaling
            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;
            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {
                this.pdfStreamWriter.setTextScaling(textScaling);
                this.previousTextScaling = textScaling;
            }
            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;
            var subScript = (format != null && format.subSuperScript === _fonts_enum__WEBPACK_IMPORTED_MODULE_1__["PdfSubSuperScript"].SubScript);
            var shift = 0;
            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));
            this.shift = shift;
            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);
            this.pdfStreamWriter.setLeading(+height);
            var resultHeight = 0;
            var remainingString = '';
            for (var i = 0; i < result.lines.length; i++) {
                resultHeight += result.lineHeight;
                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {
                    this.startCutIndex = i;
                    break;
                }
            }
            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {
                remainingString += result.lines[j].text;
            }
            var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"](layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);
            this.drawLayoutResult(result, font, format, layoutRectangle);
            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);
            this.isEmfPlus = false;
            this.isUseFontSize = false;
            if (this.startCutIndex !== -1) {
                var page = this.getNextPage();
                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);
            }
        }
        else {
            throw new Error('ArgumentNullException:result');
        }
    };
    /**
     * Gets the `next page`.
     * @private
     */
    PdfGraphics.prototype.getNextPage = function () {
        var section = this.currentPage.section;
        var nextPage = null;
        var index = section.indexOf(this.currentPage);
        if (index === section.count - 1) {
            nextPage = section.add();
        }
        else {
            nextPage = section.getPages()[index + 1];
        }
        return nextPage;
    };
    PdfGraphics.prototype.setClip = function (rectangle, mode) {
        if (typeof mode === 'undefined') {
            this.setClip(rectangle, _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFillMode"].Winding);
        }
        else {
            this.pdfStreamWriter.appendRectangle(rectangle);
            this.pdfStreamWriter.clipPath((mode === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfFillMode"].Alternate));
        }
    };
    /**
     * Applies all the `text settings`.
     * @private
     */
    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {
        if (brush instanceof _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_24__["PdfTilingBrush"]) {
            this.bCSInitialized = false;
            brush.graphics.colorSpace = this.colorSpace;
        }
        else if ((brush instanceof _implementation_graphics_brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_23__["PdfGradientBrush"])) {
            this.bCSInitialized = false;
            brush.colorSpace = this.colorSpace;
        }
        var setLineWidth = false;
        var tm = this.getTextRenderingMode(pen, brush, format);
        this.stateControl(pen, brush, font, format);
        this.pdfStreamWriter.beginText();
        if ((tm) !== this.previousTextRenderingMode) {
            this.pdfStreamWriter.setTextRenderingMode(tm);
            this.previousTextRenderingMode = tm;
        }
        // Set character spacing.
        var cs = (format != null) ? format.characterSpacing : 0;
        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {
            this.pdfStreamWriter.setCharacterSpacing(cs);
            this.previousCharacterSpacing = cs;
        }
        // Set word spacing.
        // NOTE: it works only if the space code is equal to 32 (0x20).
        var ws = (format != null) ? format.wordSpacing : 0;
        if (ws !== this.previousWordSpacing) {
            this.pdfStreamWriter.setWordSpacing(ws);
            this.previousWordSpacing = ws;
        }
    };
    /**
     * Calculates `shift value` if the text is vertically aligned.
     * @private
     */
    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {
        var shift = 0;
        if (boundsHeight >= 0 && format != null && format.lineAlignment !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfVerticalAlignment"].Top) {
            switch (format.lineAlignment) {
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfVerticalAlignment"].Middle:
                    shift = (boundsHeight - textHeight) / 2;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfVerticalAlignment"].Bottom:
                    shift = boundsHeight - textHeight;
                    break;
            }
        }
        return shift;
    };
    /* tslint:disable */
    /**
     * `Draws layout result`.
     * @private
     */
    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {
        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);
        if (vAlignShift !== 0) {
            this.pdfStreamWriter.startNextLine(0, vAlignShift);
        }
        var ttfFont = font;
        var unicode = (ttfFont != null && ttfFont.isUnicode);
        var embed = (ttfFont != null && ttfFont.isEmbedFont);
        var lines = result.lines;
        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {
            var lineInfo = lines[i];
            var line = lineInfo.text;
            var lineWidth = lineInfo.width;
            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);
            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));
            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;
            if (hAlignShift !== 0 && !this.isEmfTextScaled) {
                this.pdfStreamWriter.startNextLine(hAlignShift, 0);
            }
            if (unicode) {
                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);
            }
            else {
                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);
            }
            if (hAlignShift !== 0 && !this.isEmfTextScaled) {
                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);
            }
            if (this.isOverloadWithPosition && lines.length > 1) {
                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);
                layoutRectangle.x = 0;
                layoutRectangle.width = this.clientSize.width;
                this.isOverloadWithPosition = false;
                this.isPointOverload = true;
            }
        }
        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);
        if (vAlignShift !== 0) {
            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));
        }
        this.pdfStreamWriter.endText();
    };
    /**
     * `Draws Ascii line`.
     * @private
     */
    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {
        this.justifyLine(lineInfo, layoutRectangle.width, format);
        var value = '';
        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {
            for (var i = 0; i < lineInfo.text.length; i++) {
                if (lineInfo.text[i] === '(') {
                    value += '\\\(';
                }
                else if (lineInfo.text[i] === ')') {
                    value += '\\\)';
                }
                else {
                    value += lineInfo.text[i];
                }
            }
        }
        if (value === '') {
            value = lineInfo.text;
        }
        var line = '(' + value + ')';
        this.pdfStreamWriter.showNextLineText(new _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_10__["PdfString"](line));
    };
    /**
     * Draws unicode line.
     * @private
     */
    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {
        var line = lineInfo.text;
        var lineWidth = lineInfo.width;
        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);
        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Justify));
        var ttfFont = font;
        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);
        var rtlRender = new _fonts_rtl_renderer__WEBPACK_IMPORTED_MODULE_21__["RtlRenderer"]();
        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextDirection"].None)) {
            var blocks = null;
            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Right);
            if (format !== null && typeof format !== 'undefined' && format.textDirection !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextDirection"].None) {
                /* tslint:disable-next-line:max-line-length */
                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextDirection"].RightToLeft) ? true : false, useWordSpace, format);
            }
            else {
                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);
            }
            var words = null;
            if (blocks.length > 1) {
                if (format !== null && typeof format !== 'undefined' && format.textDirection !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextDirection"].None) {
                    /* tslint:disable-next-line:max-line-length */
                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextDirection"].RightToLeft) ? true : false, useWordSpace, format);
                }
                else {
                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);
                }
            }
            else {
                words = [line];
            }
            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);
        }
        else {
            if (useWordSpace) {
                var result = this.breakUnicodeLine(line, ttfFont, null);
                var blocks = result.tokens;
                var words = result.words;
                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);
            }
            else {
                var token = this.convertToUnicode(line, ttfFont);
                var value = this.getUnicodeString(token);
                this.streamWriter.showNextLineText(value);
            }
        }
    };
    /**
     * Draws array of unicode tokens.
     */
    /* tslint:disable */
    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {
        /* tslint:enable */
        if (blocks == null) {
            throw new Error('Argument Null Exception : blocks');
        }
        if (words == null) {
            throw new Error('Argument Null Exception : words');
        }
        if (font == null) {
            throw new Error('Argument Null Exception : font');
        }
        this.streamWriter.startNextLine();
        var x = 0;
        var xShift = 0;
        var firstLineIndent = 0;
        var paragraphIndent = 0;
        try {
            if (format !== null && typeof format !== 'undefined') {
                firstLineIndent = format.firstLineIndent;
                paragraphIndent = format.paragraphIndent;
                format.firstLineIndent = 0;
                format.paragraphIndent = 0;
            }
            var spaceWidth = font.getCharWidth(_fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_16__["StringTokenizer"].whiteSpace, format) + wordSpacing;
            var characterSpacing = (format != null) ? format.characterSpacing : 0;
            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;
            spaceWidth += characterSpacing + wordSpace;
            for (var i = 0; i < blocks.length; i++) {
                var token = blocks[i];
                var word = words[i];
                var tokenWidth = 0;
                if (x !== 0) {
                    this.streamWriter.startNextLine(x, 0);
                }
                if (word.length > 0) {
                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;
                    tokenWidth += characterSpacing;
                    var val = this.getUnicodeString(token);
                    this.streamWriter.showText(val);
                }
                if (i !== blocks.length - 1) {
                    x = tokenWidth + spaceWidth;
                    xShift += x;
                }
            }
            // Rolback current line position.
            if (xShift > 0) {
                this.streamWriter.startNextLine(-xShift, 0);
            }
        }
        finally {
            if (format !== null && typeof format !== 'undefined') {
                format.firstLineIndent = firstLineIndent;
                format.paragraphIndent = paragraphIndent;
            }
        }
    };
    /**
     * Breakes the unicode line to the words and converts symbols to glyphs.
     */
    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {
        if (line === null) {
            throw new Error('Argument Null Exception : line');
        }
        words = line.split(null);
        var tokens = [];
        for (var i = 0; i < words.length; i++) {
            // Reconvert string according to unicode standard.
            var word = words[i];
            var token = this.convertToUnicode(word, ttfFont);
            tokens[i] = token;
        }
        return { tokens: tokens, words: words };
    };
    /**
     * Creates PdfString from the unicode text.
     */
    PdfGraphics.prototype.getUnicodeString = function (token) {
        if (token === null) {
            throw new Error('Argument Null Exception : token');
        }
        var val = new _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_10__["PdfString"](token);
        val.converted = true;
        val.encode = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_10__["InternalEnum"].ForceEncoding.Ascii;
        return val;
    };
    /**
     * Converts to unicode format.
     */
    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {
        var token = null;
        if (text == null) {
            throw new Error('Argument Null Exception : text');
        }
        if (ttfFont == null) {
            throw new Error('Argument Null Exception : ttfFont');
        }
        if (ttfFont.fontInternal instanceof _fonts_unicode_true_type_font__WEBPACK_IMPORTED_MODULE_20__["UnicodeTrueTypeFont"]) {
            var ttfReader = ttfFont.fontInternal.ttfReader;
            ttfFont.setSymbols(text);
            token = ttfReader.convertString(text);
            var bytes = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_10__["PdfString"].toUnicodeArray(token, false);
            token = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_10__["PdfString"].byteToString(bytes);
        }
        return token;
    };
    /**
     * `Justifies` the line if needed.
     * @private
     */
    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {
        var line = lineInfo.text;
        var lineWidth = lineInfo.width;
        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);
        var hasWordSpacing = (format != null && format.wordSpacing !== 0);
        var symbols = _fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_16__["StringTokenizer"].spaces;
        var whitespacesCount = _fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_16__["StringTokenizer"].getCharsCount(line, symbols);
        var wordSpace = 0;
        if (shouldJustify) {
            // Correct line width.
            if (hasWordSpacing) {
                lineWidth -= (whitespacesCount * format.wordSpacing);
            }
            var difference = boundsWidth - lineWidth;
            wordSpace = difference / whitespacesCount;
            this.pdfStreamWriter.setWordSpacing(wordSpace);
        }
        else {
            // If there is justifying, but the line shouldn't be justified, restore default word spacing.
            if (hasWordSpacing) {
                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);
            }
            else {
                this.pdfStreamWriter.setWordSpacing(0);
            }
        }
        return wordSpace;
    };
    /**
     * `Reset` or reinitialize the current graphic value.
     * @private
     */
    PdfGraphics.prototype.reset = function (size) {
        this.canvasSize = size;
        this.streamWriter.clear();
        this.initialize();
        this.initializeCoordinates();
    };
    /**
     * Checks whether the line should be `justified`.
     * @private
     */
    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {
        var line = lineInfo.text;
        var lineWidth = lineInfo.width;
        var justifyStyle = (format != null && format.alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Justify);
        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);
        var symbols = _fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_16__["StringTokenizer"].spaces;
        var whitespacesCount = _fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_16__["StringTokenizer"].getCharsCount(line, symbols);
        var hasSpaces = (whitespacesCount > 0 && line[0] !== _fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_16__["StringTokenizer"].whiteSpace);
        var goodLineBreakStyle = ((lineInfo.lineType & _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_14__["LineType"].LayoutBreak) > 0);
        /* tslint:disable */
        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Justify)); /* tslint:enable */
        return shouldJustify;
    };
    /* tslint:disable */
    /**
     * Emulates `Underline, Strikeout` of the text if needed.
     * @private
     */
    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {
        if (font.underline || font.strikeout) {
            // Calculate line width.
            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);
            if (linePen != null) {
                // Approximate line positions.
                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);
                var underlineYOffset = 0;
                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;
                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;
                var lines = result.lines;
                // Run through the text and draw lines.
                for (var i = 0, len = result.lineCount; i < len; i++) {
                    var lineInfo = lines[i];
                    var line = lineInfo.text;
                    var lineWidth = lineInfo.width;
                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);
                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));
                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;
                    var x1 = layoutRectangle.x + hShift;
                    /* tslint:disable */
                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;
                    /* tslint:enable */
                    if (font.underline) {
                        var y = underlineYOffset;
                        this.drawLine(linePen, x1, y, x2, y);
                        underlineYOffset += result.lineHeight;
                    }
                    if (font.strikeout) {
                        var y = strikeoutYOffset;
                        this.drawLine(linePen, x1, y, x2, y);
                        strikeoutYOffset += result.lineHeight;
                    }
                    if (this.isPointOverload && lines.length > 1) {
                        layoutRectangle.x = 0;
                        layoutRectangle.width = this.clientSize.width;
                    }
                }
                this.isPointOverload = false;
            }
        }
    };
    /**
     * `Creates a pen` for drawing lines in the text.
     * @private
     */
    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {
        // Calculate line width.
        var lineWidth = font.metrics.getSize(format) / 20;
        var linePen = null;
        // Create a pen fo the lines.
        if (pen != null) {
            linePen = new _pdf_pen__WEBPACK_IMPORTED_MODULE_3__["PdfPen"](pen.color, lineWidth);
        }
        else if (brush != null) {
            linePen = new _pdf_pen__WEBPACK_IMPORTED_MODULE_3__["PdfPen"](brush, lineWidth);
        }
        return linePen;
    };
    /**
     * Return `text rendering mode`.
     * @private
     */
    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {
        var tm = _enum__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"].None;
        if (pen != null && brush != null) {
            tm = _enum__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"].FillStroke;
        }
        else if (pen != null) {
            tm = _enum__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"].Stroke;
        }
        else {
            tm = _enum__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"].Fill;
        }
        if (format != null && format.clipPath) {
            tm |= _enum__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"].ClipFlag;
        }
        return tm;
    };
    /**
     * Returns `line indent` for the line.
     * @private
     */
    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {
        var lineIndent = 0;
        var firstParagraphLine = ((lineInfo.lineType & _fonts_string_layouter__WEBPACK_IMPORTED_MODULE_14__["LineType"].FirstParagraphLine) > 0);
        if (format != null && firstParagraphLine) {
            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;
            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;
        }
        return lineIndent;
    };
    /**
     * Calculates shift value if the line is `horizontaly aligned`.
     * @private
     */
    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {
        var shift = 0;
        if (boundsWidth >= 0 && format != null && format.alignment !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Left) {
            switch (format.alignment) {
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Center:
                    shift = (boundsWidth - lineWidth) / 2;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextAlignment"].Right:
                    shift = boundsWidth - lineWidth;
                    break;
            }
        }
        return shift;
    };
    /**
     * Gets or sets the value that indicates `text direction` mode.
     * @private
     */
    PdfGraphics.prototype.rightToLeft = function (format) {
        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);
        if (format !== null && typeof format !== 'undefined') {
            if (format.textDirection !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfTextDirection"].None && typeof format.textDirection !== 'undefined') {
                rtl = true;
            }
        }
        return rtl;
    };
    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {
        if (typeof format === 'undefined') {
            this.stateControl(pen, brush, font, null);
        }
        else {
            if (brush instanceof _implementation_graphics_brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_23__["PdfGradientBrush"]) {
                this.bCSInitialized = false;
                brush.colorSpace = this.colorSpace;
            }
            if (brush instanceof _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_24__["PdfTilingBrush"]) {
                this.bCSInitialized = false;
                brush.graphics.colorSpace = this.colorSpace;
            }
            var saveState = false;
            if (brush !== null) {
                var solidBrush = brush;
                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {
                    if (this.colorSpaceChanged === false) {
                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;
                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;
                        this.colorSpace = this.pageLayer.page.document.colorSpace;
                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;
                        this.colorSpaceChanged = true;
                    }
                }
                this.initCurrentColorSpace(this.currentColorSpace);
            }
            else if (pen != null) {
                var pdfPen = pen;
                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {
                    /* tslint:disable */
                    this.colorSpace = this.pageLayer.page.document.colorSpace;
                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;
                }
                this.initCurrentColorSpace(this.currentColorSpace);
            }
            this.penControl(pen, saveState);
            this.brushControl(brush, saveState);
            this.fontControl(font, format, saveState);
        }
    };
    /**
     * Initializes the `current color space`.
     * @private
     */
    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {
        var re = this.getResources.getResources();
        if (!this.bCSInitialized) {
            if (this.currentColorSpace != _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].GrayScale) {
                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);
                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);
                this.bCSInitialized = true;
            }
            else {
                this.pdfStreamWriter.setColorSpace('DeviceGray', true);
                this.pdfStreamWriter.setColorSpace('DeviceGray', false);
                this.bCSInitialized = true;
            }
        }
    };
    /**
     * Controls the `pen state`.
     * @private
     */
    PdfGraphics.prototype.penControl = function (pen, saveState) {
        if (pen != null) {
            this.currentPen = pen;
            /* tslint:disable */
            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());
            /* tslint:enable */
            this.currentPen = pen.clone();
        }
    };
    /**
     * Controls the `brush state`.
     * @private
     */
    PdfGraphics.prototype.brushControl = function (brush, saveState) {
        if (brush != null && typeof brush !== 'undefined') {
            var b = brush.clone();
            var lgb = b;
            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof _brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_5__["PdfSolidBrush"]) && !(brush instanceof _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_24__["PdfTilingBrush"])) {
                var m = lgb.matrix;
                var matrix = this.matrix.clone();
                if ((m != null)) {
                    m.multiply(matrix);
                    matrix = m;
                }
                lgb.matrix = matrix;
            }
            this.currentBrush = lgb;
            var br = (brush);
            /* tslint:disable */
            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);
            /* tslint:enable */
            this.currentBrush = brush;
            brush = null;
        }
    };
    /**
     * Saves the font and other `font settings`.
     * @private
     */
    PdfGraphics.prototype.fontControl = function (font, format, saveState) {
        if (font != null) {
            var curSubSuper = (format != null) ? format.subSuperScript : _fonts_enum__WEBPACK_IMPORTED_MODULE_1__["PdfSubSuperScript"].None;
            /* tslint:disable */
            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : _fonts_enum__WEBPACK_IMPORTED_MODULE_1__["PdfSubSuperScript"].None; /* tslint:enable */
            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {
                var resources = this.getResources.getResources();
                this.currentFont = font;
                this.currentStringFormat = format;
                var size = font.metrics.getSize(format);
                /* tslint:disable */
                this.isEmfTextScaled = false;
                var fontName = resources.getName(font);
                this.pdfStreamWriter.setFont(font, fontName, size);
            }
        }
    };
    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {
        if (typeof arg2 === 'undefined') {
            this.istransparencySet = true;
            this.setTransparency(arg1, arg1, _enum__WEBPACK_IMPORTED_MODULE_0__["PdfBlendMode"].Normal);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {
            this.setTransparency(arg1, arg2, _enum__WEBPACK_IMPORTED_MODULE_0__["PdfBlendMode"].Normal);
        }
        else {
            if (this.trasparencies == null) {
                this.trasparencies = new _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_12__["TemporaryDictionary"]();
            }
            var transp = null;
            var td = new TransparencyData(arg1, arg2, arg3);
            if (this.trasparencies.containsKey(td)) {
                transp = this.trasparencies.getValue(td);
            }
            if (transp == null) {
                transp = new _pdf_transparency__WEBPACK_IMPORTED_MODULE_13__["PdfTransparency"](arg1, arg2, arg3);
                this.trasparencies.setValue(td, transp);
            }
            var resources = this.getResources.getResources();
            var name_3 = resources.getName(transp);
            var sw = this.streamWriter;
            sw.setGraphicsState(name_3);
        }
    };
    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {
        if (x instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"] && typeof y === 'undefined') {
            this.clipBounds = x;
            this.pdfStreamWriter.writeComment('Clip margins.');
            this.pdfStreamWriter.appendRectangle(x);
            this.pdfStreamWriter.closePath();
            this.pdfStreamWriter.clipPath(false);
            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');
            this.translateTransform(x.x, x.y);
        }
        else if (typeof x === 'number') {
            var clipArea = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"](left, top, this.size.width - left - right, this.size.height - top - bottom);
            this.clipBounds = clipArea;
            this.pdfStreamWriter.writeComment("Clip margins.");
            this.pdfStreamWriter.appendRectangle(clipArea);
            this.pdfStreamWriter.closePath();
            this.pdfStreamWriter.clipPath(false);
            this.pdfStreamWriter.writeComment("Translate co-ordinate system.");
            this.translateTransform(x, y);
        }
    };
    /**
     * `Updates y` co-ordinate.
     * @private
     */
    PdfGraphics.prototype.updateY = function (y) {
        return -y;
    };
    /**
     * Used to `translate the transformation`.
     * ```typescript
     * // create a new PDF document
     * let document : PdfDocument = new PdfDocument();
     * // create a new page
     * let page1 : PdfPage = document.pages.add();
     * // set pen
     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));
     * //
     * // set translate transform
     * page1.graphics.translateTransform(100, 100);
     * //
     * // draw the rectangle after applying translate transform
     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));
     * // save the document.
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     * @param offsetX The x-coordinate of the translation.
     * @param offsetY The y-coordinate of the translation.
     */
    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {
        var matrix = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
        this.getTranslateTransform(offsetX, offsetY, matrix);
        this.pdfStreamWriter.modifyCtm(matrix);
        this.matrix.multiply(matrix);
    };
    /**
     * `Translates` coordinates of the input matrix.
     * @private
     */
    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {
        input.translate(x, this.updateY(y));
        return input;
    };
    /* tslint:disable */
    /**
     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.
     * ```typescript
     * // create a new PDF document
     * let document : PdfDocument = new PdfDocument();
     * // create a new page
     * let page1 : PdfPage = document.pages.add();
     * // create pen
     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));
     * //
     * // apply scaling trasformation
     * page1.graphics.scaleTransform(1.5, 2);
     * //
     * // draw the rectangle after applying scaling transform
     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));
     * // save the document.
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     * @param scaleX Scale factor in the x direction.
     * @param scaleY Scale factor in the y direction.
     */
    /* tslint:enable */
    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {
        var matrix = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
        this.getScaleTransform(scaleX, scaleY, matrix);
        this.pdfStreamWriter.modifyCtm(matrix);
        this.matrix.multiply(matrix);
    };
    /**
     * `Scales` coordinates of the input matrix.
     * @private
     */
    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {
        if (input == null) {
            input = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
        }
        input.scale(x, y);
        return input;
    };
    /**
     * Applies the specified `rotation` to the transformation matrix of this Graphics.
     * ```typescript
     * // create a new PDF document
     * let document : PdfDocument = new PdfDocument();
     * // create a new page
     * let page1 : PdfPage = document.pages.add();
     * // create pen
     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));
     * //
     * // set RotateTransform with 25 degree of angle
     * page1.graphics.rotateTransform(25);
     * //
     * // draw the rectangle after RotateTransformation
     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));
     * // save the document.
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     * @param angle Angle of rotation in degrees.
     */
    PdfGraphics.prototype.rotateTransform = function (angle) {
        var matrix = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
        this.getRotateTransform(angle, matrix);
        this.pdfStreamWriter.modifyCtm(matrix);
        this.matrix.multiply(matrix);
    };
    /**
     * `Initializes coordinate system`.
     * @private
     */
    PdfGraphics.prototype.initializeCoordinates = function () {
        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]
        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');
        // Translate co-ordinates only, don't flip.
        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {
            if (this.cropBox == null) {
                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {
                    this.translateTransform(0, this.updateY(this.size.height));
                }
                else {
                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));
                }
            }
        }
    };
    /**
     * `Rotates` coordinates of the input matrix.
     * @private
     */
    PdfGraphics.prototype.getRotateTransform = function (angle, input) {
        if (input == null || typeof input === 'undefined') {
            input = new _pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_7__["PdfTransformationMatrix"]();
        }
        input.rotate(this.updateY(angle));
        return input;
    };
    /**
     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.
     * ```typescript
     * // create a new PDF document
     * let document : PdfDocument = new PdfDocument();
     * // create a new page
     * let page1 : PdfPage = document.pages.add();
     * // create pen
     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));
     * //
     * // save the graphics state
     * let state1 : PdfGraphicsState = page1.graphics.save();
     * //
     * page1.graphics.scaleTransform(1.5, 2);
     * // draw the rectangle
     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));
     * // restore the graphics state
     * page1.graphics.restore(state1);
     * // save the document.
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     */
    PdfGraphics.prototype.save = function () {
        var state = new PdfGraphicsState(this, this.matrix.clone());
        state.brush = this.currentBrush;
        state.pen = this.currentPen;
        state.font = this.currentFont;
        state.colorSpace = this.currentColorSpace;
        state.characterSpacing = this.previousCharacterSpacing;
        state.wordSpacing = this.previousWordSpacing;
        state.textScaling = this.previousTextScaling;
        state.textRenderingMode = this.previousTextRenderingMode;
        this.graphicsState.push(state);
        this.pdfStreamWriter.saveGraphicsState();
        return state;
    };
    PdfGraphics.prototype.restore = function (state) {
        if (typeof state === 'undefined') {
            if (this.graphicsState.length > 0) {
                this.doRestoreState();
            }
        }
        else {
            if (this.graphicsState.indexOf(state) !== -1) {
                for (;;) {
                    if (this.graphicsState.length === 0) {
                        break;
                    }
                    var popState = this.doRestoreState();
                    if (popState === state) {
                        break;
                    }
                }
            }
        }
    };
    /**
     * `Restores graphics state`.
     * @private
     */
    PdfGraphics.prototype.doRestoreState = function () {
        var state = this.graphicsState.pop();
        this.transformationMatrix = state.matrix;
        this.currentBrush = state.brush;
        this.currentPen = state.pen;
        this.currentFont = state.font;
        this.currentColorSpace = state.colorSpace;
        this.previousCharacterSpacing = state.characterSpacing;
        this.previousWordSpacing = state.wordSpacing;
        this.previousTextScaling = state.textScaling;
        this.previousTextRenderingMode = state.textRenderingMode;
        this.pdfStreamWriter.restoreGraphicsState();
        return state;
    };
    /* tslint:enable */
    /**
     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.
     * ```typescript
     * // create a new PDF document.
     * let document : PdfDocument = new PdfDocument();
     * // add a page to the document.
     * let page1 : PdfPage = document.pages.add();
     * //Create new PDF path.
     * let path : PdfPath = new PdfPath();
     * //Add line path points.
     * path.addLine(new PointF(10, 100), new PointF(10, 200));
     * path.addLine(new PointF(100, 100), new PointF(100, 200));
     * path.addLine(new PointF(100, 200), new PointF(55, 150));
     * // set pen
     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));
     * // set brush
     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
     * // draw the path
     * page1.graphics.drawPath(pen, brush, path);
     * //
     * // save the document.
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     * @param pen Color of the text.
     * @param brush Color of the text.
     * @param path Draw path.
     */
    PdfGraphics.prototype.drawPath = function (pen, brush, path) {
        if (brush instanceof _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_24__["PdfTilingBrush"]) {
            this.bCSInitialized = false;
            brush.graphics.colorSpace = this.colorSpace;
        }
        else if (brush instanceof _implementation_graphics_brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_23__["PdfGradientBrush"]) {
            this.bCSInitialized = false;
            brush.colorSpace = this.colorSpace;
        }
        this.stateControl(pen, brush, null);
        this.buildUpPath(path.pathPoints, path.pathTypes);
        this.drawPathHelper(pen, brush, path.fillMode, false);
    };
    /* tslint:disable-next-line:max-line-length */
    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {
        if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["RectangleF"]) {
            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);
        }
        else {
            if ((arg7 !== 0)) {
                this.stateControl(arg1, null, null);
                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);
                this.drawPathHelper(arg1, null, false);
            }
        }
    };
    /**
     * Builds up the path.
     * @private
     */
    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {
        var cnt = arg1.length;
        for (var i = 0; i < cnt; ++i) {
            var typeValue = 0;
            var point = arg1[i];
            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {
                case _figures_enum__WEBPACK_IMPORTED_MODULE_22__["PathPointType"].Start:
                    this.pdfStreamWriter.beginPath(point.x, point.y);
                    break;
                case _figures_enum__WEBPACK_IMPORTED_MODULE_22__["PathPointType"].Bezier3:
                    var p2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["PointF"](0, 0);
                    var p3 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_8__["PointF"](0, 0);
                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);
                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);
                    i = result1.i;
                    break;
                case _figures_enum__WEBPACK_IMPORTED_MODULE_22__["PathPointType"].Line:
                    this.pdfStreamWriter.appendLineSegment(point);
                    break;
                default:
                    throw new Error('ArithmeticException - Incorrect path formation.');
            }
            typeValue = arg2[i];
            this.checkFlags(typeValue);
        }
    };
    /**
     * Gets the bezier points from respective arrays.
     * @private
     */
    /* tslint:disable-next-line:max-line-length */
    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {
        var errorMsg = 'Malforming path.';
        ++i;
        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === _figures_enum__WEBPACK_IMPORTED_MODULE_22__["PathPointType"].Bezier3)) {
            p2 = points[i];
            ++i;
            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === _figures_enum__WEBPACK_IMPORTED_MODULE_22__["PathPointType"].Bezier3)) {
                p3 = points[i];
            }
            else {
                throw new Error('ArgumentException : errorMsg');
            }
        }
        else {
            throw new Error('ArgumentException : errorMsg');
        }
        return { i: i, p2: p2, p3: p3 };
    };
    /**
     * Checks path point type flags.
     * @private
     */
    PdfGraphics.prototype.checkFlags = function (type) {
        if ((((type & (_figures_enum__WEBPACK_IMPORTED_MODULE_22__["PathPointType"].CloseSubpath))) === _figures_enum__WEBPACK_IMPORTED_MODULE_22__["PathPointType"].CloseSubpath)) {
            this.pdfStreamWriter.closePath();
        }
    };
    /**
     * Constructs the arc path using Bezier curves.
     * @private
     */
    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {
        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);
        if ((points.length === 0)) {
            return;
        }
        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];
        this.pdfStreamWriter.beginPath(pt[0], pt[1]);
        var i = 0;
        for (i = 0; i < points.length; i = i + 8) {
            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];
            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);
        }
    };
    /**
     * Gets the bezier points for arc constructing.
     * @private
     */
    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {
        if ((numX1 > numX2)) {
            var tmp = void 0;
            tmp = numX1;
            numX1 = numX2;
            numX2 = tmp;
        }
        if ((numY2 > numY1)) {
            var tmp = void 0;
            tmp = numY1;
            numY1 = numY2;
            numY2 = tmp;
        }
        var fragAngle1;
        var numFragments;
        if ((Math.abs(e1) <= 90)) {
            fragAngle1 = e1;
            numFragments = 1;
        }
        else {
            numFragments = (Math.ceil((Math.abs(e1) / 90)));
            fragAngle1 = (e1 / numFragments);
        }
        var xcen = ((numX1 + numX2) / 2);
        var ycen = ((numY1 + numY2) / 2);
        var rx = ((numX2 - numX1) / 2);
        var ry = ((numY2 - numY1) / 2);
        var halfAng = ((fragAngle1 * (Math.PI / 360)));
        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));
        var pointsList = [];
        for (var i = 0; (i < numFragments); i++) {
            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));
            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));
            var cos0 = (Math.cos(thetaValue0));
            var cos1 = (Math.cos(thetaValue1));
            var sin0 = (Math.sin(thetaValue0));
            var sin1 = (Math.sin(thetaValue1));
            if ((fragAngle1 > 0)) {
                /* tslint:disable-next-line:max-line-length */
                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));
            }
            else {
                /* tslint:disable-next-line:max-line-length */
                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));
            }
        }
        return pointsList;
    };
    // Constants
    /**
     * Specifies the mask of `path type values`.
     * @private
     */
    PdfGraphics.pathTypesValuesMask = 0xf;
    /**
     * Checks whether the object is `transparencyObject`.
     * @hidden
     * @private
     */
    PdfGraphics.transparencyObject = false;
    return PdfGraphics;
}());

/**
 * `GetResourceEventHandler` class is alternate for event handlers and delegates.
 * @private
 * @hidden
 */
var GetResourceEventHandler = /** @class */ (function () {
    /**
     * Initialize instance of `GetResourceEventHandler` class.
     * Alternate for event handlers and delegates.
     * @private
     */
    function GetResourceEventHandler(sender) {
        this.sender = sender;
    }
    /**
     * Return the instance of `PdfResources` class.
     * @private
     */
    GetResourceEventHandler.prototype.getResources = function () {
        return this.sender.getResources();
    };
    return GetResourceEventHandler;
}());

var PdfGraphicsState = /** @class */ (function () {
    function PdfGraphicsState(graphics, matrix) {
        /**
         * Stores `previous rendering mode`.
         * @default TextRenderingMode.Fill
         * @private
         */
        this.internalTextRenderingMode = _enum__WEBPACK_IMPORTED_MODULE_0__["TextRenderingMode"].Fill;
        /**
         * `Previous character spacing` value or 0.
         * @default 0.0
         * @private
         */
        this.internalCharacterSpacing = 0.0;
        /**
         * `Previous word spacing` value or 0.
         * @default 0.0
         * @private
         */
        this.internalWordSpacing = 0.0;
        /**
         * The previously used `text scaling value`.
         * @default 100.0
         * @private
         */
        this.internalTextScaling = 100.0;
        /**
         * `Current color space`.
         * @default PdfColorSpace.Rgb
         * @private
         */
        this.pdfColorSpace = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfColorSpace"].Rgb;
        if (typeof graphics !== 'undefined') {
            this.pdfGraphics = graphics;
            this.transformationMatrix = matrix;
        }
    }
    Object.defineProperty(PdfGraphicsState.prototype, "graphics", {
        // Properties
        /**
         * Gets the parent `graphics object`.
         * @private
         */
        get: function () {
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "matrix", {
        /**
         * Gets the `current matrix`.
         * @private
         */
        get: function () {
            return this.transformationMatrix;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "characterSpacing", {
        /**
         * Gets or sets the `current character spacing`.
         * @private
         */
        get: function () {
            return this.internalCharacterSpacing;
        },
        set: function (value) {
            this.internalCharacterSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "wordSpacing", {
        /**
         * Gets or sets the `word spacing` value.
         * @private
         */
        get: function () {
            return this.internalWordSpacing;
        },
        set: function (value) {
            this.internalWordSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "textScaling", {
        /**
         * Gets or sets the `text scaling` value.
         * @private
         */
        get: function () {
            return this.internalTextScaling;
        },
        set: function (value) {
            this.internalTextScaling = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "pen", {
        /**
         * Gets or sets the `current pen` object.
         * @private
         */
        get: function () {
            return this.pdfPen;
        },
        set: function (value) {
            this.pdfPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "brush", {
        /**
         * Gets or sets the `brush`.
         * @private
         */
        get: function () {
            return this.pdfBrush;
        },
        set: function (value) {
            this.pdfBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "font", {
        /**
         * Gets or sets the `current font` object.
         * @private
         */
        get: function () {
            return this.pdfFont;
        },
        set: function (value) {
            this.pdfFont = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "colorSpace", {
        /**
         * Gets or sets the `current color space` value.
         * @private
         */
        get: function () {
            return this.pdfColorSpace;
        },
        set: function (value) {
            this.pdfColorSpace = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGraphicsState.prototype, "textRenderingMode", {
        /**
         * Gets or sets the `text rendering mode`.
         * @private
         */
        get: function () {
            return this.internalTextRenderingMode;
        },
        set: function (value) {
            this.internalTextRenderingMode = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGraphicsState;
}());

var TransparencyData = /** @class */ (function () {
    // Constructors
    /**
     * Initializes a new instance of the `TransparencyData` class.
     * @private
     */
    function TransparencyData(alphaPen, alphaBrush, blendMode) {
        this.alphaPen = alphaPen;
        this.alphaBrush = alphaBrush;
        this.blendMode = blendMode;
    }
    return TransparencyData;
}());


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-margins.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-margins.js ***!
  \***********************************************************************************************************************************************/
/*! exports provided: PdfMargins */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfMargins", function() { return PdfMargins; });
/**
 * PdfMargins.ts class for EJ2-PDF
 * A class representing PDF page margins.
 */
var PdfMargins = /** @class */ (function () {
    /**
     * Initializes a new instance of the `PdfMargins` class.
     * @private
     */
    function PdfMargins() {
        /**
         * Represents the `Default Page Margin` value.
         * @default 0.0
         * @private
         */
        this.pdfMargin = 40.0;
        this.setMargins(this.pdfMargin);
    }
    Object.defineProperty(PdfMargins.prototype, "left", {
        //Properties
        /**
         * Gets or sets the `left margin` size.
         * @private
         */
        get: function () {
            return this.leftMargin;
        },
        set: function (value) {
            this.leftMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "top", {
        /**
         * Gets or sets the `top margin` size.
         * @private
         */
        get: function () {
            return this.topMargin;
        },
        set: function (value) {
            this.topMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "right", {
        /**
         * Gets or sets the `right margin` size.
         * @private
         */
        get: function () {
            return this.rightMargin;
        },
        set: function (value) {
            this.rightMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "bottom", {
        /**
         * Gets or sets the `bottom margin` size.
         * @private
         */
        get: function () {
            return this.bottomMargin;
        },
        set: function (value) {
            this.bottomMargin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfMargins.prototype, "all", {
        /**
         * Sets the `margins`.
         * @private
         */
        set: function (value) {
            this.setMargins(value);
        },
        enumerable: true,
        configurable: true
    });
    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {
        if (typeof margin2 === 'undefined') {
            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;
        }
        else {
            if (typeof margin3 === 'undefined') {
                this.leftMargin = this.rightMargin = margin1;
                this.bottomMargin = this.topMargin = margin2;
            }
            else {
                this.leftMargin = margin1;
                this.topMargin = margin2;
                this.rightMargin = margin3;
                this.bottomMargin = margin4;
            }
        }
    };
    /**
     * `Clones` the object.
     * @private
     */
    PdfMargins.prototype.clone = function () {
        return this;
    };
    return PdfMargins;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: PdfPen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPen", function() { return PdfPen; });
/* harmony import */ var _pdf_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./brushes/pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/**
 * PdfPen.ts class for EJ2-PDF
 */




/**
 * `PdfPen` class defining settings for drawing operations, that determines the color,
 * width, and style of the drawing elements.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * // create a new page
 * let page1 : PdfPage = document.pages.add();
 * // set pen
 * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));
 * // draw rectangle
 * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));
 * // save the document.
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfPen = /** @class */ (function () {
    function PdfPen(arg1, arg2) {
        //Fields
        /**
         * Specifies the `color of the pen`.
         * @default new PdfColor()
         * @private
         */
        this.pdfColor = new _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"](0, 0, 0);
        /**
         * Specifies the `dash offset of the pen`.
         * @default 0
         * @private
         */
        this.dashOffsetValue = 0;
        /**
         * Specifies the `dash pattern of the pen`.
         * @default [0]
         * @private
         */
        this.penDashPattern = [0];
        /**
         * Specifies the `dash style of the pen`.
         * @default Solid
         * @private
         */
        this.pdfDashStyle = _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].Solid;
        /**
         * Specifies the `line cap of the pen`.
         * @default 0
         * @private
         */
        this.pdfLineCap = 0;
        /**
         * Specifies the `line join of the pen`.
         * @default 0
         * @private
         */
        this.pdfLineJoin = 0;
        /**
         * Specifies the `width of the pen`.
         * @default 1.0
         * @private
         */
        this.penWidth = 1.0;
        /**
         * Specifies the `mitter limit of the pen`.
         * @default 0.0
         * @private
         */
        this.internalMiterLimit = 0.0;
        /**
         * Stores the `colorspace` value.
         * @default Rgb
         * @private
         */
        this.colorSpace = _enum__WEBPACK_IMPORTED_MODULE_2__["PdfColorSpace"].Rgb;
        if (arg1 instanceof _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_3__["PdfBrush"]) {
            this.setBrush(arg1);
        }
        else if (arg1 instanceof _pdf_color__WEBPACK_IMPORTED_MODULE_0__["PdfColor"]) {
            this.color = arg1;
        }
        if (typeof arg2 === 'number') {
            this.width = arg2;
        }
    }
    Object.defineProperty(PdfPen.prototype, "color", {
        //Properties
        /**
         * Gets or sets the `color of the pen`.
         * @private
         */
        get: function () {
            return this.pdfColor;
        },
        set: function (value) {
            this.pdfColor = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "dashOffset", {
        /**
         * Gets or sets the `dash offset of the pen`.
         * @private
         */
        get: function () {
            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {
                return 0;
            }
            else {
                return this.dashOffsetValue;
            }
        },
        set: function (value) {
            this.dashOffsetValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "dashPattern", {
        /**
         * Gets or sets the `dash pattern of the pen`.
         * @private
         */
        get: function () {
            return this.penDashPattern;
        },
        set: function (value) {
            this.penDashPattern = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "dashStyle", {
        /**
         * Gets or sets the `dash style of the pen`.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // create a new page
         * let page1 : PdfPage = document.pages.add();
         * // set pen
         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));
         * //
         * // set pen style
         * pen.dashStyle = PdfDashStyle.DashDot;
         * // get pen style
         * let style : PdfDashStyle = pen.dashStyle;
         * //
         * // draw rectangle
         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));
         * // save the document.
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            return this.pdfDashStyle;
        },
        set: function (value) {
            if (this.pdfDashStyle !== value) {
                this.pdfDashStyle = value;
                switch (this.pdfDashStyle) {
                    case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].Custom:
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].Dash:
                        this.penDashPattern = [3, 1];
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].Dot:
                        this.penDashPattern = [1, 1];
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].DashDot:
                        this.penDashPattern = [3, 1, 1, 1];
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].DashDotDot:
                        this.penDashPattern = [3, 1, 1, 1, 1, 1];
                        break;
                    case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].Solid:
                        break;
                    default:
                        this.pdfDashStyle = _enum__WEBPACK_IMPORTED_MODULE_2__["PdfDashStyle"].Solid;
                        this.penDashPattern = [0];
                        break;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "lineCap", {
        /**
         * Gets or sets the `line cap of the pen`.
         * @private
         */
        get: function () {
            return this.pdfLineCap;
        },
        set: function (value) {
            this.pdfLineCap = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "lineJoin", {
        /**
         * Gets or sets the `line join style of the pen`.
         * @private
         */
        get: function () {
            return this.pdfLineJoin;
        },
        set: function (value) {
            this.pdfLineJoin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "miterLimit", {
        /**
         * Gets or sets the `miter limit`.
         * @private
         */
        get: function () {
            return this.internalMiterLimit;
        },
        set: function (value) {
            this.internalMiterLimit = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPen.prototype, "width", {
        /**
         * Gets or sets the `width of the pen`.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // create a new page
         * let page1 : PdfPage = document.pages.add();
         * // set pen
         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));
         * //
         * // set pen width
         * pen.width = 2;
         * //
         * // draw rectangle
         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));
         * // save the document.
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            return this.penWidth;
        },
        set: function (value) {
            this.penWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    //Helper
    /**
     * `Clones` this instance of PdfPen class.
     * @private
     */
    PdfPen.prototype.clone = function () {
        var pen = this;
        return pen;
    };
    /**
     * `Sets the brush`.
     * @private
     */
    PdfPen.prototype.setBrush = function (brush) {
        var sBrush = brush;
        if ((sBrush != null && sBrush instanceof _brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_1__["PdfSolidBrush"])) {
            this.color = sBrush.color;
            this.pdfBrush = sBrush;
        }
        this.color = sBrush.color;
        this.pdfBrush = sBrush;
    };
    /**
     * `Monitors the changes`.
     * @private
     */
    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {
        var diff = false;
        saveState = true;
        if (currentPen == null) {
            diff = true;
        }
        diff = this.dashControl(currentPen, saveState, streamWriter);
        streamWriter.setLineWidth(this.width);
        streamWriter.setLineJoin(this.lineJoin);
        streamWriter.setLineCap(this.lineCap);
        var miterLimit = this.miterLimit;
        if (miterLimit > 0) {
            streamWriter.setMiterLimit(miterLimit);
            diff = true;
        }
        var brush = this.pdfBrush;
        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);
        diff = true;
        return diff;
    };
    /**
     * `Controls the dash style` and behaviour of each line.
     * @private
     */
    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {
        saveState = true;
        var lineWidth = this.width;
        var pattern = this.getPattern();
        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);
        return saveState;
    };
    /**
     * `Gets the pattern` of PdfPen.
     * @private
     */
    PdfPen.prototype.getPattern = function () {
        var pattern = this.dashPattern;
        for (var i = 0; i < pattern.length; ++i) {
            pattern[i] *= this.width;
        }
        return pattern;
    };
    return PdfPen;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-resources.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-resources.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: PdfResources, Guid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfResources", function() { return PdfResources; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Guid", function() { return Guid; });
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../collections/object-object-pair/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _input_output_pdf_cross_table__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../input-output/pdf-cross-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-cross-table.js");
/* harmony import */ var _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fonts/pdf-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js");
/* harmony import */ var _figures_pdf_template__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./figures/pdf-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js");
/* harmony import */ var _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony import */ var _pdf_transparency__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pdf-transparency */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transparency.js");
/* harmony import */ var _graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../graphics/images/pdf-bitmap */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js");
/* harmony import */ var _graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../graphics/images/pdf-image */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js");
/* harmony import */ var _brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./brushes/pdf-gradient-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js");
/* harmony import */ var _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./brushes/pdf-tiling-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfResources.ts class for EJ2-PDF
 */














/**
 * `PdfResources` class used to set resource contents like font, image.
 * @private
 */
var PdfResources = /** @class */ (function (_super) {
    __extends(PdfResources, _super);
    function PdfResources(baseDictionary) {
        var _this = _super.call(this, baseDictionary) || this;
        /**
         * Dictionary for the `properties names`.
         * @private
         */
        _this.properties = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
        return _this;
    }
    Object.defineProperty(PdfResources.prototype, "names", {
        //Properties
        /**
         * Gets the `font names`.
         * @private
         */
        get: function () {
            return this.getNames();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfResources.prototype, "document", {
        /**
         * Get or set the `page document`.
         * @private
         */
        get: function () {
            return this.pdfDocument;
        },
        set: function (value) {
            this.pdfDocument = value;
        },
        enumerable: true,
        configurable: true
    });
    //Public Methods
    /**
     * `Generates name` for the object and adds to the resource if the object is new.
     * @private
     */
    PdfResources.prototype.getName = function (obj) {
        var primitive = obj.element;
        var name = null;
        if (this.names.containsKey(primitive)) {
            name = this.names.getValue(primitive);
        }
        // Object is new.
        if (name == null) {
            var sName = this.generateName();
            name = new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"](sName);
            this.names.setValue(primitive, name);
            if (obj instanceof _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_6__["PdfFont"]) {
                this.add(obj, name);
            }
            else if (obj instanceof _figures_pdf_template__WEBPACK_IMPORTED_MODULE_7__["PdfTemplate"]) {
                this.add(obj, name);
            }
            else if (obj instanceof _brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_12__["PdfGradientBrush"] || obj instanceof _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_13__["PdfTilingBrush"]) {
                this.add(obj, name);
            }
            else if (obj instanceof _pdf_transparency__WEBPACK_IMPORTED_MODULE_9__["PdfTransparency"]) {
                this.add(obj, name);
            }
            else if (obj instanceof _graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_11__["PdfImage"] || obj instanceof _graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_10__["PdfBitmap"]) {
                this.add(obj, name);
            }
        }
        return name;
    };
    /**
     * Gets `resource names` to font dictionaries.
     * @private
     */
    PdfResources.prototype.getNames = function () {
        if (this.pdfNames == null) {
            this.pdfNames = new _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_1__["TemporaryDictionary"]();
        }
        var fonts = this.items.getValue(this.dictionaryProperties.font);
        if (fonts != null) {
            var reference = fonts;
            var dictionary = fonts;
            dictionary = _input_output_pdf_cross_table__WEBPACK_IMPORTED_MODULE_5__["PdfCrossTable"].dereference(fonts);
        }
        return this.pdfNames;
    };
    /**
     * Add `RequireProcedureSet` into procset array.
     * @private
     */
    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {
        if (procedureSetName == null) {
            throw new Error('ArgumentNullException:procedureSetName');
        }
        var procSets = this.items.getValue(this.dictionaryProperties.procset);
        if (procSets == null) {
            procSets = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_3__["PdfArray"]();
            this.items.setValue(this.dictionaryProperties.procset, procSets);
        }
        var name = new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"](procedureSetName);
        if (!procSets.contains(name)) {
            procSets.add(name);
        }
    };
    //Helper Methods
    /**
     * `Remove font` from array.
     * @private
     */
    PdfResources.prototype.removeFont = function (name) {
        var key = null;
        var keys = this.pdfNames.keys();
        for (var index = 0; index < this.pdfNames.size(); index++) {
            if (this.pdfNames.getValue(keys[index]) === new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"](name)) {
                key = keys[index];
                break;
            }
        }
        if (key != null) {
            this.pdfNames.remove(key);
        }
    };
    /**
     * Generates `Unique string name`.
     * @private
     */
    PdfResources.prototype.generateName = function () {
        var name = Guid.getNewGuidString();
        return name;
    };
    PdfResources.prototype.add = function (arg1, arg2) {
        if (arg1 instanceof _fonts_pdf_font__WEBPACK_IMPORTED_MODULE_6__["PdfFont"]) {
            var dictionary = null;
            var fonts = this.items.getValue(this.dictionaryProperties.font);
            if (fonts != null) {
                var reference = fonts;
                dictionary = fonts;
                dictionary = fonts;
            }
            else {
                dictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
                this.items.setValue(this.dictionaryProperties.font, dictionary);
            }
            dictionary.items.setValue(arg2.value, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](arg1.element));
        }
        else if (arg1 instanceof _figures_pdf_template__WEBPACK_IMPORTED_MODULE_7__["PdfTemplate"]) {
            var xobjects = void 0;
            xobjects = this.items.getValue(this.dictionaryProperties.xObject);
            // Create fonts dictionary.
            if (xobjects == null) {
                xobjects = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
                this.items.setValue(this.dictionaryProperties.xObject, xobjects);
            }
            xobjects.items.setValue(arg2.value, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](arg1.element));
        }
        else if (arg1 instanceof _brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_8__["PdfBrush"]) {
            if (arg1 instanceof _brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_12__["PdfGradientBrush"] || arg1 instanceof _brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_13__["PdfTilingBrush"]) {
                var savable = arg1.element;
                if (savable != null) {
                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);
                    // Create a new pattern dictionary.
                    if (pattern == null) {
                        pattern = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
                        this.items.setValue(this.dictionaryProperties.pattern, pattern);
                    }
                    pattern.items.setValue(arg2.value, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](savable));
                }
            }
        }
        else if (arg1 instanceof _pdf_transparency__WEBPACK_IMPORTED_MODULE_9__["PdfTransparency"]) {
            var savable = arg1.element;
            var transDic = null;
            transDic = this.items.getValue(this.dictionaryProperties.extGState);
            // Create a new pattern dictionary.
            if (transDic == null) {
                transDic = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
                this.items.setValue(this.dictionaryProperties.extGState, transDic);
            }
            transDic.items.setValue(arg2.value, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](savable));
        }
        else {
            /* tslint:disable */
            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);
            var parentXObjects = void 0;
            if (typeof this.pdfDocument !== 'undefined') {
                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);
            }
            var values = this.Dictionary.items.values();
            var hasSameImageStream = false;
            var oldReference = void 0;
            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {
                parentXObjects = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);
            }
            else if (typeof this.pdfDocument !== 'undefined') {
                var values_1 = parentXObjects.items.values();
                for (var i = 0; i < values_1.length; i++) {
                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {
                        if (values_1[i].element.data[0] === arg1.element.data[0]) {
                            oldReference = values_1[i];
                            hasSameImageStream = true;
                        }
                    }
                }
            }
            if (xobjects == null) {
                xobjects = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);
            }
            if (hasSameImageStream && typeof oldReference !== 'undefined') {
                xobjects.items.setValue(arg2.value, oldReference);
            }
            else {
                var reference = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](arg1.element);
                xobjects.items.setValue(arg2.value, reference);
                if (typeof this.pdfDocument !== 'undefined') {
                    parentXObjects.items.setValue(arg2.value, reference);
                }
            }
            /* tslint:enable */
        }
    };
    return PdfResources;
}(_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]));

/* tslint:disable */
/**
 * Used to create new guid for resources.
 * @private
 */
var Guid = /** @class */ (function () {
    function Guid() {
    }
    /**
     * Generate `new GUID`.
     * @private
     */
    Guid.getNewGuidString = function () {
        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {
            var random = Math.random() * 16 | 0;
            var result = c === 'a' ? random : (random & 0x3 | 0x8);
            return result.toString(16);
        });
    };
    return Guid;
}());

/* tslint:enable */ 


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transformation-matrix.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transformation-matrix.js ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: PdfTransformationMatrix, Matrix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTransformationMatrix", function() { return PdfTransformationMatrix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Matrix", function() { return Matrix; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/**
 * PdfTransformationMatrix.ts class for EJ2-PDF
 */


/**
 * Class for representing Root `transformation matrix`.
 */
var PdfTransformationMatrix = /** @class */ (function () {
    function PdfTransformationMatrix(value) {
        /**
         * Value for `angle converting`.
         * @default 180.0 / Math.PI
         * @private
         */
        this.radDegFactor = 180.0 / Math.PI;
        if (typeof value === 'undefined') {
            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);
        }
        else {
            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);
        }
    }
    Object.defineProperty(PdfTransformationMatrix.prototype, "matrix", {
        // Properties
        /**
         * Gets or sets the `internal matrix object`.
         * @private
         */
        get: function () {
            return this.transformationMatrix;
        },
        set: function (value) {
            this.transformationMatrix = value;
        },
        enumerable: true,
        configurable: true
    });
    // Public methods
    /**
     * `Translates` coordinates by specified coordinates.
     * @private
     */
    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {
        this.transformationMatrix.translate(offsetX, offsetY);
    };
    /**
     * `Scales` coordinates by specified coordinates.
     * @private
     */
    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {
        this.transformationMatrix.elements[0] = scaleX;
        this.transformationMatrix.elements[3] = scaleY;
    };
    /**
     * `Rotates` coordinate system in counterclockwise direction.
     * @private
     */
    PdfTransformationMatrix.prototype.rotate = function (angle) {
        //Convert from degree to radian 
        angle = (angle * Math.PI) / 180;
        //Rotation 
        this.transformationMatrix.elements[0] = Math.cos(angle);
        this.transformationMatrix.elements[1] = Math.sin(angle);
        this.transformationMatrix.elements[2] = -Math.sin(angle);
        this.transformationMatrix.elements[3] = Math.cos(angle);
    };
    // Overrides
    /**
     * Gets `PDF representation`.
     * @private
     */
    PdfTransformationMatrix.prototype.toString = function () {
        var builder = '';
        var whitespace = ' ';
        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {
            var temp = this.matrix.elements[i];
            builder += _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(this.transformationMatrix.elements[i]);
            builder += whitespace;
        }
        return builder;
    };
    // Implementation
    /**
     * `Multiplies` matrices (changes coordinate system.)
     * @private
     */
    PdfTransformationMatrix.prototype.multiply = function (matrix) {
        this.transformationMatrix.multiply(matrix.matrix);
    };
    /**
     * Converts `degrees to radians`.
     * @private
     */
    PdfTransformationMatrix.degreesToRadians = function (degreesX) {
        return this.degRadFactor * degreesX;
    };
    /**
     * Converts `radians to degrees`.
     * @private
     */
    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {
        return this.radDegFactor * radians;
    };
    /**
     * `Clones` this instance of PdfTransformationMatrix.
     * @private
     */
    PdfTransformationMatrix.prototype.clone = function () {
        return this;
    };
    // Constants
    /**
     * Value for `angle converting`.
     * @default Math.PI / 180.0
     * @private
     */
    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;
    return PdfTransformationMatrix;
}());

var Matrix = /** @class */ (function () {
    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {
        if (typeof arg1 === 'undefined') {
            this.metrixElements = [];
        }
        else if (typeof arg1 === 'number') {
            this.metrixElements = [];
            this.metrixElements.push(arg1);
            this.metrixElements.push(arg2);
            this.metrixElements.push(arg3);
            this.metrixElements.push(arg4);
            this.metrixElements.push(arg5);
            this.metrixElements.push(arg6);
        }
        else {
            this.metrixElements = arg1;
        }
    }
    Object.defineProperty(Matrix.prototype, "elements", {
        // Properties
        /**
         * Gets the `elements`.
         * @private
         */
        get: function () {
            return this.metrixElements;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Matrix.prototype, "offsetX", {
        /**
         * Gets the off set `X`.
         * @private
         */
        get: function () {
            return this.metrixElements[4];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Matrix.prototype, "offsetY", {
        /**
         * Gets the off set `Y`.
         * @private
         */
        get: function () {
            return this.metrixElements[5];
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Translates` coordinates by specified coordinates.
     * @private
     */
    Matrix.prototype.translate = function (offsetX, offsetY) {
        this.metrixElements[4] = offsetX;
        this.metrixElements[5] = offsetY;
    };
    /**
     * `Translates` the specified offset X.
     * @private
     */
    Matrix.prototype.transform = function (point) {
        var x = point.x;
        var y = point.y;
        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;
        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;
        return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](x2, y2);
    };
    /**
     * `Multiplies matrices` (changes coordinate system.)
     * @private
     */
    Matrix.prototype.multiply = function (matrix) {
        var tempMatrix = [];
        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);
        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);
        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);
        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);
        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);
        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);
        for (var i = 0; i < tempMatrix.length; i++) {
            this.elements[i] = tempMatrix[i];
        }
    };
    // IDisposable Members
    /**
     * `Dispose` this instance of PdfTransformationMatrix class.
     * @private
     */
    Matrix.prototype.dispose = function () {
        this.metrixElements = null;
    };
    // ICloneable Members
    /**
     * `Clones` this instance of PdfTransformationMatrix class.
     * @private
     */
    Matrix.prototype.clone = function () {
        var m = new Matrix(this.metrixElements);
        return m;
    };
    return Matrix;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transparency.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transparency.js ***!
  \****************************************************************************************************************************************************/
/*! exports provided: PdfTransparency */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfTransparency", function() { return PdfTransparency; });
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");




/**
 * Represents a simple `transparency`.
 * @private
 */
var PdfTransparency = /** @class */ (function () {
    // Properties
    // /**
    //  * Gets the `stroke` operation alpha value.
    //  * @private
    //  */
    // public get stroke() : number {
    //     let result : number = this.getNumber(this.dictionaryProperties.CA);
    //     return result;
    // }
    // /**
    //  * Gets the `fill` operation alpha value.
    //  * @private
    //  */
    // public get fill() : number {
    //     let result : number = this.getNumber(this.dictionaryProperties.ca);
    //     return result;
    // }
    // /**
    //  * Gets the `blend mode`.
    //  * @private
    //  */
    // public get mode() : PdfBlendMode {
    //     let result : string = this.getName(this.dictionaryProperties.ca);
    //     return PdfBlendMode.Normal;
    // }
    // Constructors
    /**
     * Initializes a new instance of the `Transparency` class.
     * @private
     */
    function PdfTransparency(stroke, fill, mode) {
        // Fields
        /**
         * Internal variable to store `dictionary`.
         * @default new PdfDictionary()
         * @private
         */
        this.dictionary = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]();
        /**
         * Internal variable for accessing fields from `DictionryProperties` class.
         * @default new DictionaryProperties()
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__["DictionaryProperties"]();
        this.dictionary.items.setValue(this.dictionaryProperties.CA, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"](stroke));
        this.dictionary.items.setValue(this.dictionaryProperties.ca, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"](fill));
        this.dictionary.items.setValue(this.dictionaryProperties.BM, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"](mode.toString()));
    }
    Object.defineProperty(PdfTransparency.prototype, "element", {
        // // Implementation
        // /**
        //  * Gets the `number value`.
        //  * @private
        //  */
        // private getNumber(keyName : string) : number {
        //     let result : number = 0.0;
        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;
        //     result = numb.intValue;
        //     return result;
        // }
        // /**
        //  * Gets the `name value`.
        //  * @private
        //  */
        // private getName(keyName : string) : string {
        //     let result : string = null;
        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;
        //     result = name.value;
        //     return result;
        // }
        // IPdfWrapper Members
        /**
         * Gets the `element`.
         * @private
         */
        get: function () {
            return this.dictionary;
        },
        enumerable: true,
        configurable: true
    });
    return PdfTransparency;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/unit-convertor.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/unit-convertor.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: PdfUnitConverter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfUnitConverter", function() { return PdfUnitConverter; });
/**
 * Used to perform `convertion between pixels and points`.
 * @private
 */
var PdfUnitConverter = /** @class */ (function () {
    //constructors
    /**
     * Initializes a new instance of the `UnitConvertor` class with DPI value.
     * @private
     */
    function PdfUnitConverter(dpi) {
        this.updateProportionsHelper(dpi);
    }
    /**
     * `Converts` the value, from one graphics unit to another graphics unit.
     * @private
     */
    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {
        return this.convertFromPixels(this.convertToPixels(value, from), to);
    };
    /**
     * Converts the value `to pixel` from specified graphics unit.
     * @private
     */
    PdfUnitConverter.prototype.convertToPixels = function (value, from) {
        var index = from;
        var result = (value * this.proportions[index]);
        return result;
    };
    /**
     * Converts value, to specified graphics unit `from Pixel`.
     * @private
     */
    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {
        var index = to;
        var result = (value / this.proportions[index]);
        return result;
    };
    /**
     * `Update proportions` matrix according to Graphics settings.
     * @private
     */
    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {
        this.proportions = [
            pixelPerInch / 2.54,
            pixelPerInch / 6.0,
            1,
            pixelPerInch / 72.0,
            pixelPerInch,
            pixelPerInch / 300.0,
            pixelPerInch / 25.4 // Millimeter
        ];
    };
    //Fields
    /**
     * Indicates default `horizontal resolution`.
     * @default 96
     * @private
     */
    PdfUnitConverter.horizontalResolution = 96;
    /**
     * Indicates default `vertical resolution`.
     * @default 96
     * @private
     */
    PdfUnitConverter.verticalResolution = 96;
    return PdfUnitConverter;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/big-endian-writer.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/big-endian-writer.js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: BigEndianWriter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BigEndianWriter", function() { return BigEndianWriter; });
/**
 * Writes data in BigEndian order.
 */
var BigEndianWriter = /** @class */ (function () {
    //Constructors
    /**
     * Creates a new writer.
     */
    function BigEndianWriter(capacity) {
        //Constants
        /**
         * Size of Int32 type.
         */
        this.int32Size = 4;
        /**
         * Size of Int16 type.
         */
        this.int16Size = 2;
        /**
         * Size of long type.
         */
        this.int64Size = 8;
        this.bufferLength = capacity;
        this.buffer = [];
    }
    Object.defineProperty(BigEndianWriter.prototype, "data", {
        //Properties
        /**
         * Gets data written to the writer.
         */
        get: function () {
            if (this.buffer.length < this.bufferLength) {
                var length_1 = this.bufferLength - this.buffer.length;
                for (var i = 0; i < length_1; i++) {
                    this.buffer.push(0);
                }
            }
            return this.buffer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BigEndianWriter.prototype, "position", {
        /// <summary>
        /// Gets position of the internal buffer.
        /// </summary>
        get: function () {
            if (this.internalPosition === undefined || this.internalPosition === null) {
                this.internalPosition = 0;
            }
            return this.internalPosition;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Writes short value.
     */
    BigEndianWriter.prototype.writeShort = function (value) {
        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];
        this.flush(bytes);
    };
    /**
     * Writes int value.
     */
    BigEndianWriter.prototype.writeInt = function (value) {
        var i1 = (value & 0xff000000) >> 24;
        i1 = i1 < 0 ? 256 + i1 : i1;
        var i2 = (value & 0x00ff0000) >> 16;
        i2 = i2 < 0 ? 256 + i2 : i2;
        var i3 = (value & 0x0000ff00) >> 8;
        i3 = i3 < 0 ? 256 + i3 : i3;
        var i4 = value & 0x000000ff;
        i4 = i4 < 0 ? 256 + i4 : i4;
        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];
        this.flush(bytes);
    };
    /**
     * Writes u int value.
     */
    BigEndianWriter.prototype.writeUInt = function (value) {
        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];
        this.flush(buff);
    };
    /**
     * Writes string value.
     */
    BigEndianWriter.prototype.writeString = function (value) {
        if (value == null) {
            throw new Error('Argument Null Exception : value');
        }
        var bytes = [];
        for (var i = 0; i < value.length; i++) {
            bytes.push(value.charCodeAt(i));
        }
        this.flush(bytes);
    };
    /**
     * Writes byte[] value.
     */
    BigEndianWriter.prototype.writeBytes = function (value) {
        this.flush(value);
    };
    // //Implementation
    BigEndianWriter.prototype.flush = function (buff) {
        if (buff === null) {
            throw new Error('Argument Null Exception : buff');
        }
        var position = this.position;
        for (var i = 0; i < buff.length; i++) {
            this.buffer[position] = buff[i];
            position++;
        }
        this.internalPosition += buff.length;
    };
    return BigEndianWriter;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/cross-table.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/cross-table.js ***!
  \***************************************************************************************************************************************************/
/*! exports provided: ObjectType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectType", function() { return ObjectType; });
/**
 * public Enum for `ObjectType`.
 * @private
 */
var ObjectType;
(function (ObjectType) {
    /**
     * Specifies the type of `Free`.
     * @private
     */
    ObjectType[ObjectType["Free"] = 0] = "Free";
    /**
     * Specifies the type of `Normal`.
     * @private
     */
    ObjectType[ObjectType["Normal"] = 1] = "Normal";
    /**
     * Specifies the type of `Packed`.
     * @private
     */
    ObjectType[ObjectType["Packed"] = 2] = "Packed";
})(ObjectType || (ObjectType = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/enum.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/enum.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: ObjectStatus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectStatus", function() { return ObjectStatus; });
/**
 * public Enum for `CompositeFontType`.
 * @private
 */
var ObjectStatus;
(function (ObjectStatus) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    ObjectStatus[ObjectStatus["None"] = 0] = "None";
    /**
     * Specifies the type of `Registered`.
     * @private
     */
    ObjectStatus[ObjectStatus["Registered"] = 1] = "Registered";
})(ObjectStatus || (ObjectStatus = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-cross-table.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-cross-table.js ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: PdfCrossTable, RegisteredObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfCrossTable", function() { return PdfCrossTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisteredObject", function() { return RegisteredObject; });
/* harmony import */ var _input_output_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../input-output/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/enum.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _pdf_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _cross_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cross-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/cross-table.js");
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _document_pdf_catalog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../document/pdf-catalog */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-catalog.js");










/**
 * `PdfCrossTable` is responsible for intermediate level parsing
 * and savingof a PDF document.
 * @private
 */
var PdfCrossTable = /** @class */ (function () {
    function PdfCrossTable() {
        /**
         * The modified `objects` that should be saved.
         * @private
         */
        this.objects = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Holds `maximal generation number` or offset to object.
         * @default 0
         * @private
         */
        this.maxGenNumIndex = 0;
        /**
         * The `number of the objects`.
         * @default 0
         * @private
         */
        this.objectCount = 0;
        /**
         * Internal variable for accessing fields from `DictionryProperties` class.
         * @default new PdfDictionaryProperties()
         * @private
         */
        this.dictionaryProperties = new _pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__["DictionaryProperties"]();
    }
    Object.defineProperty(PdfCrossTable.prototype, "isMerging", {
        //Properties
        /**
         * Gets or sets if the document `is merged`.
         * @private
         */
        get: function () {
            return this.merging;
        },
        set: function (value) {
            this.merging = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "trailer", {
        /**
         * Gets the `trailer`.
         * @private
         */
        get: function () {
            if (this.internalTrailer == null) {
                this.internalTrailer = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_7__["PdfStream"]();
            }
            return this.internalTrailer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "document", {
        /**
         * Gets or sets the main `PdfDocument` class instance.
         * @private
         */
        get: function () {
            return this.pdfDocument;
        },
        set: function (value) {
            this.pdfDocument = value;
            this.items = this.pdfDocument.pdfObjects;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "pdfObjects", {
        /**
         * Gets the catched `PDF object` main collection.
         * @private
         */
        get: function () {
            return this.items;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "objectCollection", {
        /**
         * Gets the `object collection`.
         * @private
         */
        get: function () {
            return this.pdfDocument.pdfObjects;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "count", {
        /**
         * Gets or sets the `number of the objects` within the document.
         * @private
         */
        get: function () {
            return this.objectCount;
        },
        set: function (value) {
            this.objectCount = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfCrossTable.prototype, "nextObjNumber", {
        /**
         * Returns `next available object number`.
         * @private
         */
        get: function () {
            this.count = this.count + 1;
            return this.count;
        },
        enumerable: true,
        configurable: true
    });
    PdfCrossTable.prototype.save = function (writer, filename) {
        this.saveHead(writer);
        var state = false;
        this.mappedReferences = null;
        this.objects.clear();
        this.markTrailerReferences();
        this.saveObjects(writer);
        var saveCount = this.count;
        var xrefPos = writer.position;
        this.registerObject(0, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_5__["PdfReference"](0, -1), true);
        var prevXRef = 0;
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].xref);
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
        this.saveSections(writer);
        this.saveTrailer(writer, this.count, prevXRef);
        this.saveTheEndess(writer, xrefPos);
        this.count = saveCount;
        for (var i = 0; i < this.objectCollection.count; ++i) {
            var oi = this.objectCollection.items(i);
            oi.object.isSaving = false;
        }
        if (typeof filename === 'undefined') {
            return writer.stream.buffer;
        }
        else {
            writer.stream.save(filename);
        }
    };
    /**
     * `Saves the endess` of the file.
     * @private
     */
    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine + _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].startxref + _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
        writer.write(xrefPos.toString() + _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].eof + _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
    };
    /**
     * `Saves the new trailer` dictionary.
     * @private
     */
    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].trailer + _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
        // Save the dictionary.
        var trailer = this.trailer;
        trailer.items.setValue(this.dictionaryProperties.size, new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_8__["PdfNumber"](this.objectCount + 1));
        trailer = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__["PdfDictionary"](trailer); // Make it real dictionary.
        trailer.setEncrypt(false);
        trailer.save(writer);
    };
    /**
     * `Saves the xref section`.
     * @private
     */
    PdfCrossTable.prototype.saveSections = function (writer) {
        var objectNum = 0;
        var count = 0;
        do {
            count = this.prepareSubsection(objectNum);
            this.saveSubsection(writer, objectNum, count);
            objectNum += count;
        } while (count !== 0);
    };
    /**
     * `Saves a subsection`.
     * @private
     */
    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {
        if (count <= 0 || objectNum >= this.count) {
            return;
        }
        var subsectionHead = '{0} {1}{2}';
        writer.write(objectNum + ' ' + (count + 1) + _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
        for (var i = objectNum; i <= objectNum + count; ++i) {
            var obj = this.objects.getValue(i);
            var str = '';
            if (obj.type === _cross_table__WEBPACK_IMPORTED_MODULE_6__["ObjectType"].Free) {
                str = this.getItem(obj.offset, 65535, true);
            }
            else {
                str = this.getItem(obj.offset, obj.generation, false);
            }
            writer.write(str);
        }
    };
    /**
     * Generates string for `xref table item`.
     * @private
     */
    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {
        var returnString = '';
        var addOffsetLength = 10 - offset.toString().length;
        if (genNumber <= 0) {
            genNumber = 0;
        }
        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);
        for (var index = 0; index < addOffsetLength; index++) {
            returnString = returnString + '0';
        }
        returnString = returnString + offset.toString() + ' ';
        for (var index = 0; index < addGenNumberLength; index++) {
            returnString = returnString + '0';
        }
        returnString = returnString + genNumber.toString() + ' ';
        returnString = returnString + ((isFree) ? _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].f : _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].n) + _pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine;
        return returnString;
    };
    /**
     * `Prepares a subsection` of the current section within the cross-reference table.
     * @private
     */
    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {
        var count = 0;
        var i;
        var total = this.count;
        for (var k = 0; k < this.document.pdfObjects.count; k++) {
            var reference = this.document.pdfObjects.items(k).reference;
            var refString = reference.toString();
            var refArray = refString.split(' ');
        }
        if (objectNum >= total) {
            return count;
        }
        // search for first changed indirect object.
        for (i = objectNum; i < total; ++i) {
            break;
        }
        objectNum = i;
        // look up for all indirect objects in one subsection.
        for (; i < total; ++i) {
            ++count;
        }
        return count;
    };
    /**
     * `Marks the trailer references` being saved.
     * @private
     */
    PdfCrossTable.prototype.markTrailerReferences = function () {
        var tempArray;
        var keys = this.trailer.items.keys();
        var values = this.trailer.items.values();
    };
    /**
     * `Saves the head`.
     * @private
     */
    PdfCrossTable.prototype.saveHead = function (writer) {
        var version = this.generateFileVersion(writer.document);
        writer.write('%PDF-' + version);
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
    };
    /**
     * Generates the `version` of the file.
     * @private
     */
    PdfCrossTable.prototype.generateFileVersion = function (document) {
        var iVersion = 4;
        var version = '1.' + iVersion.toString();
        return version;
    };
    PdfCrossTable.prototype.getReference = function (obj, bNew) {
        if (typeof bNew === 'undefined') {
            var wasNew = false;
            return this.getReference(obj, wasNew);
        }
        else {
            //code splitted for reducing lines of code exceeds 100.
            return this.getSubReference(obj, bNew);
        }
    };
    /**
     * Retrieves the `reference` of the object given.
     * @private
     */
    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {
        var isNew = false;
        var wasNew;
        var reference = null;
        // if (obj.IsSaving) {
        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {
            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);
            reference = tempObj.reference;
            wasNew = tempObj.wasNew;
        }
        if (reference == null) {
            if (obj.status === _input_output_enum__WEBPACK_IMPORTED_MODULE_0__["ObjectStatus"].Registered) {
                wasNew = false;
            }
            else {
                wasNew = true;
            }
        }
        else {
            wasNew = false;
        }
        // need to add mapped reference code
        if (reference == null) {
            var objnumber = this.nextObjNumber;
            reference = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_5__["PdfReference"](objnumber, 0);
            var found = void 0;
            if (wasNew) {
                this.document.pdfObjects.add(obj);
                this.document.pdfObjects.trySetReference(obj, reference, found);
                var tempIndex = this.document.pdfObjects.count - 1;
                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;
                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];
                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);
                obj.position = -1;
            }
            else {
                this.document.pdfObjects.trySetReference(obj, reference, found);
            }
            obj.objectCollectionIndex = reference.objNumber;
            obj.status = _input_output_enum__WEBPACK_IMPORTED_MODULE_0__["ObjectStatus"].None;
            isNew = true;
        }
        bNew = isNew || this.bForceNew;
        return reference;
    };
    /**
     * `Saves all objects` in the collection.
     * @private
     */
    PdfCrossTable.prototype.saveObjects = function (writer) {
        var objectCollection = this.objectCollection;
        for (var i = 0; i < objectCollection.count; ++i) {
            var oi = objectCollection.items(i);
            var obj = oi.object;
            obj.isSaving = true;
            this.saveIndirectObject(obj, writer);
        }
    };
    /**
     * `Saves indirect object`.
     * @private
     */
    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {
        var reference = this.getReference(obj);
        if (obj instanceof _document_pdf_catalog__WEBPACK_IMPORTED_MODULE_9__["PdfCatalog"]) {
            this.trailer.items.setValue(this.dictionaryProperties.root, reference);
        }
        // NOTE :  This is needed for correct string objects encryption.
        this.pdfDocument.currentSavingObj = reference;
        var tempArchive = false;
        tempArchive = obj.getArchive();
        var allowedType = !((obj instanceof _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_7__["PdfStream"]) || !tempArchive || (obj instanceof _document_pdf_catalog__WEBPACK_IMPORTED_MODULE_9__["PdfCatalog"]));
        var sigFlag = false;
        this.registerObject(writer.position, reference);
        this.doSaveObject(obj, reference, writer);
    };
    /**
     * Performs `real saving` of the save object.
     * @private
     */
    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {
        var correctPosition = writer.length;
        writer.write(reference.objNumber.toString());
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].whiteSpace);
        writer.write(reference.genNumber.toString());
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].whiteSpace);
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].obj);
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
        obj.save(writer);
        var stream = writer.stream;
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].endObj);
        writer.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_3__["Operators"].newLine);
    };
    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {
        if (typeof free === 'boolean') {
            // Register the object by its number.
            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));
            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);
        }
        else if (typeof free === 'undefined') {
            // Register the object by its number.
            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));
            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);
        }
    };
    /**
     * `Dereferences` the specified primitive object.
     * @private
     */
    PdfCrossTable.dereference = function (obj) {
        var rh = obj;
        if (rh != null) {
            obj = rh.object;
        }
        return obj;
    };
    return PdfCrossTable;
}());

var RegisteredObject = /** @class */ (function () {
    function RegisteredObject(offset, reference, free) {
        var tempOffset = offset;
        this.offsetNumber = tempOffset;
        var tempReference = reference;
        this.generation = tempReference.genNumber;
        this.object = tempReference.objNumber;
        if (typeof free === 'undefined') {
            this.type = _cross_table__WEBPACK_IMPORTED_MODULE_6__["ObjectType"].Normal;
        }
        else {
            this.type = _cross_table__WEBPACK_IMPORTED_MODULE_6__["ObjectType"].Free;
        }
    }
    Object.defineProperty(RegisteredObject.prototype, "objectNumber", {
        //Properties
        /**
         * Gets the `object number`.
         * @private
         */
        get: function () {
            return this.object;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RegisteredObject.prototype, "offset", {
        /**
         * Gets the `offset`.
         * @private
         */
        get: function () {
            var result;
            result = this.offsetNumber;
            return result;
        },
        enumerable: true,
        configurable: true
    });
    return RegisteredObject;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js ***!
  \*****************************************************************************************************************************************************************/
/*! exports provided: DictionaryProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DictionaryProperties", function() { return DictionaryProperties; });
/**
 * dictionaryProperties.ts class for EJ2-PDF
 * PDF dictionary properties.
 * @private
 */
var DictionaryProperties = /** @class */ (function () {
    /**
     * Initialize an instance for `PdfDictionaryProperties` class.
     * @private
     */
    function DictionaryProperties() {
        /**
         * Specifies the value of `Pages`.
         * @private
         */
        this.pages = 'Pages';
        /**
         * Specifies the value of `Kids`.
         * @private
         */
        this.kids = 'Kids';
        /**
         * Specifies the value of `Count`.
         * @private
         */
        this.count = 'Count';
        /**
         * Specifies the value of `Resources`.
         * @private
         */
        this.resources = 'Resources';
        /**
         * Specifies the value of `Type`.
         * @private
         */
        this.type = 'Type';
        /**
         * Specifies the value of `Size`.
         * @private
         */
        this.size = 'Size';
        /**
         * Specifies the value of `MediaBox`.
         * @private
         */
        this.mediaBox = 'MediaBox';
        /**
         * Specifies the value of `Parent`.
         * @private
         */
        this.parent = 'Parent';
        /**
         * Specifies the value of `Root`.
         * @private
         */
        this.root = 'Root';
        /**
         * Specifies the value of `DecodeParms`.
         * @private
         */
        this.decodeParms = 'DecodeParms';
        /**
         * Specifies the value of `Filter`.
         * @private
         */
        this.filter = 'Filter';
        /**
         * Specifies the value of `Font`.
         * @private
         */
        this.font = 'Font';
        /**
         * Specifies the value of `Type1`.
         * @private
         */
        this.type1 = 'Type1';
        /**
         * Specifies the value of `BaseFont`.
         * @private
         */
        this.baseFont = 'BaseFont';
        /**
         * Specifies the value of `Encoding`.
         * @private
         */
        this.encoding = 'Encoding';
        /**
         * Specifies the value of `Subtype`.
         * @private
         */
        this.subtype = 'Subtype';
        /**
         * Specifies the value of `Contents`.
         * @private
         */
        this.contents = 'Contents';
        /**
         * Specifies the value of `ProcSet`.
         * @private
         */
        this.procset = 'ProcSet';
        /**
         * Specifies the value of `ColorSpace`.
         * @private
         */
        this.colorSpace = 'ColorSpace';
        /**
         * Specifies the value of `ExtGState`.
         * @private
         */
        this.extGState = 'ExtGState';
        /**
         * Specifies the value of `Pattern`.
         * @private
         */
        this.pattern = 'Pattern';
        /**
         * Specifies the value of `XObject`.
         * @private
         */
        this.xObject = 'XObject';
        /**
         * Specifies the value of `Length`.
         * @private
         */
        this.length = 'Length';
        /**
         * Specifies the value of `Width`.
         * @private
         */
        this.width = 'Width';
        /**
         * Specifies the value of `Height`.
         * @private
         */
        this.height = 'Height';
        /**
         * Specifies the value of `BitsPerComponent`.
         * @private
         */
        this.bitsPerComponent = 'BitsPerComponent';
        /**
         * Specifies the value of `Image`.
         * @private
         */
        this.image = 'Image';
        /**
         * Specifies the value of `dctdecode`.
         * @private
         */
        this.dctdecode = 'DCTDecode';
        /**
         * Specifies the value of `Columns`.
         * @private
         */
        this.columns = 'Columns';
        /**
         * Specifies the value of `BlackIs1`.
         * @private
         */
        this.blackIs1 = 'BlackIs1';
        /**
         * Specifies the value of `K`.
         * @private
         */
        this.k = 'K';
        /**
         * Specifies the value of `S`.
         * @private
         */
        this.s = 'S';
        /**
         * Specifies the value of `Predictor`.
         * @private
         */
        this.predictor = 'Predictor';
        /**
         * Specifies the value of `DeviceRGB`.
         * @private
         */
        this.deviceRgb = 'DeviceRGB';
        /**
         * Specifies the value of `Next`.
         * @private
         */
        this.next = 'Next';
        /**
         * Specifies the value of `Action`.
         * @private
         */
        this.action = 'Action';
        /**
         * Specifies the value of `Link`.
         * @private
         */
        this.link = 'Link';
        /**
         *
         * Specifies the value of `A`.
         * @private
         */
        this.a = 'A';
        /**
         * Specifies the value of `Annot`.
         * @private
         */
        this.annot = 'Annot';
        /**
         * Specifies the value of `P`.
         * @private
         */
        this.p = 'P';
        /**
         * Specifies the value of `C`.
         * @private
         */
        this.c = 'C';
        /**
         * Specifies the value of `Rect`.
         * @private
         */
        this.rect = 'Rect';
        /**
         * Specifies the value of `URI`.
         * @private
         */
        this.uri = 'URI';
        /**
         * Specifies the value of `Annots`.
         * @private
         */
        this.annots = 'Annots';
        /**
         * Specifies the value of `ca`.
         * @private
         */
        this.ca = 'ca';
        /**
         * Specifies the value of `CA`.
         * @private
         */
        this.CA = 'CA';
        /**
         * Specifies the value of `XYZ`.
         * @private
         */
        this.xyz = 'XYZ';
        /**
         * Specifies the value of `Fit`.
         * @private
         */
        this.fit = 'Fit';
        /**
         * Specifies the value of `Dest`.
         * @private
         */
        this.dest = 'Dest';
        /**
         * Specifies the value of `BM`.
         * @private
         */
        this.BM = 'BM';
        /**
         * Specifies the value of `flatedecode`.
         * @private
         */
        this.flatedecode = 'FlateDecode';
        /**
         * Specifies the value of `Rotate`.
         * @private
         */
        this.rotate = 'Rotate';
        /**
         * Specifies the value of 'bBox'.
         * @private
         */
        this.bBox = 'BBox';
        /**
         * Specifies the value of 'form'.
         * @private
         */
        this.form = 'Form';
        /**
         * Specifies the value of 'w'.
         * @private
         */
        this.w = 'W';
        /**
         * Specifies the value of 'cIDFontType2'.
         * @private
         */
        this.cIDFontType2 = 'CIDFontType2';
        /**
         * Specifies the value of 'cIDToGIDMap'.
         * @private
         */
        this.cIDToGIDMap = 'CIDToGIDMap';
        /**
         * Specifies the value of 'identity'.
         * @private
         */
        this.identity = 'Identity';
        /**
         * Specifies the value of 'dw'.
         * @private
         */
        this.dw = 'DW';
        /**
         * Specifies the value of 'fontDescriptor'.
         * @private
         */
        this.fontDescriptor = 'FontDescriptor';
        /**
         * Specifies the value of 'cIDSystemInfo'.
         * @private
         */
        this.cIDSystemInfo = 'CIDSystemInfo';
        /**
         * Specifies the value of 'fontName'.
         * @private
         */
        this.fontName = 'FontName';
        /**
         * Specifies the value of 'flags'.
         * @private
         */
        this.flags = 'Flags';
        /**
         * Specifies the value of 'fontBBox'.
         * @private
         */
        this.fontBBox = 'FontBBox';
        /**
         * Specifies the value of 'missingWidth'.
         * @private
         */
        this.missingWidth = 'MissingWidth';
        /**
         * Specifies the value of 'stemV'.
         * @private
         */
        this.stemV = 'StemV';
        /**
         * Specifies the value of 'italicAngle'.
         * @private
         */
        this.italicAngle = 'ItalicAngle';
        /**
         * Specifies the value of 'capHeight'.
         * @private
         */
        this.capHeight = 'CapHeight';
        /**
         * Specifies the value of 'ascent'.
         * @private
         */
        this.ascent = 'Ascent';
        /**
         * Specifies the value of 'descent'.
         * @private
         */
        this.descent = 'Descent';
        /**
         * Specifies the value of 'leading'.
         * @private
         */
        this.leading = 'Leading';
        /**
         * Specifies the value of 'avgWidth'.
         * @private
         */
        this.avgWidth = 'AvgWidth';
        /**
         * Specifies the value of 'fontFile2'.
         * @private
         */
        this.fontFile2 = 'FontFile2';
        /**
         * Specifies the value of 'maxWidth'.
         * @private
         */
        this.maxWidth = 'MaxWidth';
        /**
         * Specifies the value of 'xHeight'.
         * @private
         */
        this.xHeight = 'XHeight';
        /**
         * Specifies the value of 'stemH'.
         * @private
         */
        this.stemH = 'StemH';
        /**
         * Specifies the value of 'registry'.
         * @private
         */
        this.registry = 'Registry';
        /**
         * Specifies the value of 'ordering'.
         * @private
         */
        this.ordering = 'Ordering';
        /**
         * Specifies the value of 'supplement'.
         * @private
         */
        this.supplement = 'Supplement';
        /**
         * Specifies the value of 'type0'.
         * @private
         */
        this.type0 = 'Type0';
        /**
         * Specifies the value of 'identityH'.
         * @private
         */
        this.identityH = 'Identity-H';
        /**
         * Specifies the value of 'toUnicode'.
         * @private
         */
        this.toUnicode = 'ToUnicode';
        /**
         * Specifies the value of 'descendantFonts'.
         * @private
         */
        this.descendantFonts = 'DescendantFonts';
        /**
         * Specifies the value of 'background'.
         * @private
         */
        this.background = 'Background';
        /**
         * Specifies the value of 'shading'.
         * @private
         */
        this.shading = 'Shading';
        /**
         * Specifies the value of 'matrix'.
         * @private
         */
        this.matrix = 'Matrix';
        /**
         * Specifies the value of 'antiAlias'.
         * @private
         */
        this.antiAlias = 'AntiAlias';
        /**
         * Specifies the value of 'function'.
         * @private
         */
        this.function = 'Function';
        /**
         * Specifies the value of 'extend'.
         * @private
         */
        this.extend = 'Extend';
        /**
         * Specifies the value of 'shadingType'.
         * @private
         */
        this.shadingType = 'ShadingType';
        /**
         * Specifies the value of 'coords'.
         * @private
         */
        this.coords = 'Coords';
        /**
         * Specifies the value of 'domain'.
         * @private
         */
        this.domain = 'Domain';
        /**
         * Specifies the value of 'range'.
         * @private
         */
        this.range = 'Range';
        /**
         * Specifies the value of 'functionType'.
         * @private
         */
        this.functionType = 'FunctionType';
        /**
         * Specifies the value of 'bitsPerSample'.
         * @private
         */
        this.bitsPerSample = 'BitsPerSample';
        /**
         * Specifies the value of 'patternType'.
         * @private
         */
        this.patternType = 'PatternType';
        /**
         * Specifies the value of 'paintType'.
         * @private
         */
        this.paintType = 'PaintType';
        /**
         * Specifies the value of 'tilingType'.
         * @private
         */
        this.tilingType = 'TilingType';
        /**
         * Specifies the value of 'xStep'.
         * @private
         */
        this.xStep = 'XStep';
        /**
         * Specifies the value of 'yStep'.
         * @private
         */
        this.yStep = 'YStep';
        //
    }
    return DictionaryProperties;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-main-object-collection.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-main-object-collection.js ***!
  \******************************************************************************************************************************************************************/
/*! exports provided: PdfMainObjectCollection, ObjectInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfMainObjectCollection", function() { return PdfMainObjectCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectInfo", function() { return ObjectInfo; });
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/enum.js");
/**
 * PdfMainObjectCollection.ts class for EJ2-PDF
 */


/**
 * The collection of all `objects` within a PDF document.
 * @private
 */
var PdfMainObjectCollection = /** @class */ (function () {
    function PdfMainObjectCollection() {
        //Fields
        /**
         * The collection of the `indirect objects`.
         * @default []
         * @private
         */
        this.objectCollections = [];
        /**
         * The collection of the `Indirect objects`.
         * @default new Dictionary<number, ObjectInfo>()
         * @private
         */
        this.mainObjectCollection = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
        /**
         * The collection of `primitive objects`.
         * @private
         */
        this.primitiveObjectCollection = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
    }
    Object.defineProperty(PdfMainObjectCollection.prototype, "count", {
        //Properties
        /**
         * Gets the `count`.
         * @private
         */
        get: function () {
            return this.objectCollections.length;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the value of `ObjectInfo` from object collection.
     * @private
     */
    PdfMainObjectCollection.prototype.items = function (index) {
        return this.objectCollections[index];
    };
    Object.defineProperty(PdfMainObjectCollection.prototype, "outIsNew", {
        //Methods
        /**
         * Specifies the value of `IsNew`.
         * @private
         */
        get: function () {
            return this.isNew;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Adds` the specified element.
     * @private
     */
    PdfMainObjectCollection.prototype.add = function (element) {
        var objInfo = new ObjectInfo(element);
        this.objectCollections.push(objInfo);
        if (!this.primitiveObjectCollection.containsKey(element)) {
            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);
        }
        element.position = this.index = this.objectCollections.length - 1;
        element.status = _enum__WEBPACK_IMPORTED_MODULE_1__["ObjectStatus"].Registered;
    };
    /**
     * `Looks` through the collection for the object specified.
     * @private
     */
    PdfMainObjectCollection.prototype.lookFor = function (obj) {
        var index = -1;
        if (obj.position !== -1) {
            return obj.position;
        }
        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {
            index = this.primitiveObjectCollection.getValue(obj);
        }
        else {
            for (var i = this.count - 1; i >= 0; i--) {
                var oi = this.objectCollections[i];
                if (oi.object === obj) {
                    index = i;
                    break;
                }
            }
        }
        return index;
    };
    /**
     * Gets the `reference of the object`.
     * @private
     */
    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {
        this.index = this.lookFor(index);
        var reference;
        this.isNew = false;
        var oi = this.objectCollections[this.index];
        reference = oi.reference;
        var obj = { reference: reference, wasNew: isNew };
        return obj;
    };
    /**
     * Tries to set the `reference to the object`.
     * @private
     */
    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {
        var result = true;
        found = true;
        this.index = this.lookFor(obj);
        var oi = this.objectCollections[this.index];
        oi.setReference(reference);
        return result;
    };
    PdfMainObjectCollection.prototype.destroy = function () {
        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {
            var obj = _a[_i];
            if (obj !== undefined) {
                obj.pdfObject.position = -1;
                obj.pdfObject.isSaving = undefined;
                obj.pdfObject.objectCollectionIndex = undefined;
                obj.pdfObject.position = undefined;
            }
        }
        this.objectCollections = [];
        this.mainObjectCollection = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
        this.primitiveObjectCollection = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
    };
    return PdfMainObjectCollection;
}());

var ObjectInfo = /** @class */ (function () {
    function ObjectInfo(obj, reference) {
        this.pdfObject = obj;
        this.pdfReference = reference;
    }
    Object.defineProperty(ObjectInfo.prototype, "object", {
        //Properties
        /**
         * Gets the `object`.
         * @private
         */
        get: function () {
            return this.pdfObject;
        },
        set: function (value) {
            this.pdfObject = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ObjectInfo.prototype, "reference", {
        /**
         * Gets the `reference`.
         * @private
         */
        get: function () {
            return this.pdfReference;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the `reference`.
     * @private
     */
    ObjectInfo.prototype.setReference = function (reference) {
        this.pdfReference = reference;
    };
    return ObjectInfo;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js ***!
  \*****************************************************************************************************************************************************/
/*! exports provided: Operators */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Operators", function() { return Operators; });
/**
 * PdfOperators.ts class for EJ2-PDF
 * Class of string PDF common operators.
 * @private
 */
var Operators = /** @class */ (function () {
    /**
     * Create an instance of `PdfOperator` class.
     * @private
     */
    function Operators() {
        /**
         * Specifies the value of `test`.
         * @private
         */
        this.forTest = 'test';
        this.forTest = Operators.obj;
    }
    /**
     * Specifies the value of `obj`.
     * @private
     */
    Operators.obj = 'obj';
    /**
     * Specifies the value of `endObj`.
     * @private
     */
    Operators.endObj = 'endobj';
    /**
     * Specifies the value of `R`.
     * @private
     */
    Operators.r = 'R';
    /**
     * Specifies the value of ` `.
     * @private
     */
    Operators.whiteSpace = ' ';
    /**
     * Specifies the value of `/`.
     * @private
     */
    Operators.slash = '/';
    /**
     * Specifies the value of `\r\n`.
     * @private
     */
    Operators.newLine = '\r\n';
    /**
     * Specifies the value of `stream`.
     * @private
     */
    Operators.stream = 'stream';
    /**
     * Specifies the value of `endStream`.
     * @private
     */
    Operators.endStream = 'endstream';
    /**
     * Specifies the value of `xref`.
     * @private
     */
    Operators.xref = 'xref';
    /**
     * Specifies the value of `f`.
     * @private
     */
    Operators.f = 'f';
    /**
     * Specifies the value of `n`.
     * @private
     */
    Operators.n = 'n';
    /**
     * Specifies the value of `trailer`.
     * @private
     */
    Operators.trailer = 'trailer';
    /**
     * Specifies the value of `startxref`.
     * @private
     */
    Operators.startxref = 'startxref';
    /**
     * Specifies the value of `eof`.
     * @private
     */
    Operators.eof = '%%EOF';
    /**
     * Specifies the value of `header`.
     * @private
     */
    Operators.header = '%PDF-1.5';
    /**
     * Specifies the value of `beginText`.
     * @private
     */
    Operators.beginText = 'BT';
    /**
     * Specifies the value of `endText`.
     * @private
     */
    Operators.endText = 'ET';
    /**
     * Specifies the value of `m`.
     * @private
     */
    Operators.beginPath = 'm';
    /**
     * Specifies the value of `l`.
     * @private
     */
    Operators.appendLineSegment = 'l';
    /**
     * Specifies the value of `S`.
     * @private
     */
    Operators.stroke = 'S';
    /**
     * Specifies the value of `f`.
     * @private
     */
    Operators.fill = 'f';
    /**
     * Specifies the value of `f*`.
     * @private
     */
    Operators.fillEvenOdd = 'f*';
    /**
     * Specifies the value of `B`.
     * @private
     */
    Operators.fillStroke = 'B';
    /**
     * Specifies the value of `B*`.
     * @private
     */
    Operators.fillStrokeEvenOdd = 'B*';
    /**
     * Specifies the value of `c`.
     * @private
     */
    Operators.appendbeziercurve = 'c';
    /**
     * Specifies the value of `re`.
     * @private
     */
    Operators.appendRectangle = 're';
    /**
     * Specifies the value of `q`.
     * @private
     */
    Operators.saveState = 'q';
    /**
     * Specifies the value of `Q`.
     * @private
     */
    Operators.restoreState = 'Q';
    /**
     * Specifies the value of `Do`.
     * @private
     */
    Operators.paintXObject = 'Do';
    /**
     * Specifies the value of `cm`.
     * @private
     */
    Operators.modifyCtm = 'cm';
    /**
     * Specifies the value of `Tm`.
     * @private
     */
    Operators.modifyTM = 'Tm';
    /**
     * Specifies the value of `w`.
     * @private
     */
    Operators.setLineWidth = 'w';
    /**
     * Specifies the value of `J`.
     * @private
     */
    Operators.setLineCapStyle = 'J';
    /**
     * Specifies the value of `j`.
     * @private
     */
    Operators.setLineJoinStyle = 'j';
    /**
     * Specifies the value of `d`.
     * @private
     */
    Operators.setDashPattern = 'd';
    /**
     * Specifies the value of `i`.
     * @private
     */
    Operators.setFlatnessTolerance = 'i';
    /**
     * Specifies the value of `h`.
     * @private
     */
    Operators.closePath = 'h';
    /**
     * Specifies the value of `s`.
     * @private
     */
    Operators.closeStrokePath = 's';
    /**
     * Specifies the value of `b`.
     * @private
     */
    Operators.closeFillStrokePath = 'b';
    /**
     * Specifies the value of `setCharacterSpace`.
     * @private
     */
    Operators.setCharacterSpace = 'Tc';
    /**
     * Specifies the value of `setWordSpace`.
     * @private
     */
    Operators.setWordSpace = 'Tw';
    /**
     * Specifies the value of `setHorizontalScaling`.
     * @private
     */
    Operators.setHorizontalScaling = 'Tz';
    /**
     * Specifies the value of `setTextLeading`.
     * @private
     */
    Operators.setTextLeading = 'TL';
    /**
     * Specifies the value of `setFont`.
     * @private
     */
    Operators.setFont = 'Tf';
    /**
     * Specifies the value of `setRenderingMode`.
     * @private
     */
    Operators.setRenderingMode = 'Tr';
    /**
     * Specifies the value of `setTextRise`.
     * @private
     */
    Operators.setTextRise = 'Ts';
    /**
     * Specifies the value of `setTextScaling`.
     * @private
     */
    Operators.setTextScaling = 'Tz';
    /**
     * Specifies the value of `setCoords`.
     * @private
     */
    Operators.setCoords = 'Td';
    /**
     * Specifies the value of `goToNextLine`.
     * @private
     */
    Operators.goToNextLine = 'T*';
    /**
     * Specifies the value of `setText`.
     * @private
     */
    Operators.setText = 'Tj';
    /**
     * Specifies the value of `setTextWithFormatting`.
     * @private
     */
    Operators.setTextWithFormatting = 'TJ';
    /**
     * Specifies the value of `setTextOnNewLine`.
     * @private
     */
    Operators.setTextOnNewLine = '\'';
    /**
     * Specifies the value of `selectcolorspaceforstroking`.
     * @private
     */
    Operators.selectcolorspaceforstroking = 'CS';
    /**
     * Specifies the value of `selectcolorspacefornonstroking`.
     * @private
     */
    Operators.selectcolorspacefornonstroking = 'cs';
    /**
     * Specifies the value of `setrbgcolorforstroking`.
     * @private
     */
    Operators.setrbgcolorforstroking = 'RG';
    /**
     * Specifies the value of `setrbgcolorfornonstroking`.
     * @private
     */
    Operators.setrbgcolorfornonstroking = 'rg';
    /**
     * Specifies the value of `K`.
     * @private
     */
    Operators.setcmykcolorforstroking = 'K';
    /**
     * Specifies the value of `k`.
     * @private
     */
    Operators.setcmykcolorfornonstroking = 'k';
    /**
     * Specifies the value of `G`.
     * @private
     */
    Operators.setgraycolorforstroking = 'G';
    /**
     * Specifies the value of `g`.
     * @private
     */
    Operators.setgraycolorfornonstroking = 'g';
    /**
     * Specifies the value of `W`.
     * @private
     */
    Operators.clipPath = 'W';
    /**
     * Specifies the value of `clipPathEvenOdd`.
     * @private
     */
    Operators.clipPathEvenOdd = 'W*';
    /**
     * Specifies the value of `n`.
     * @private
     */
    Operators.endPath = 'n';
    /**
     * Specifies the value of `setGraphicsState`.
     * @private
     */
    Operators.setGraphicsState = 'gs';
    /**
     * Specifies the value of `%`.
     * @private
     */
    Operators.comment = '%';
    /**
     * Specifies the value of `*`.
     * @private
     */
    Operators.evenOdd = '*';
    /**
     * Specifies the value of `M`.
     * @private
     */
    Operators.setMiterLimit = 'M';
    /**
     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.
     * @public
     */
    Operators.setColorAndPattern = 'scn';
    /**
     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.
     */
    Operators.setColorAndPatternStroking = 'SCN';
    return Operators;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: PdfStreamWriter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfStreamWriter", function() { return PdfStreamWriter; });
/* harmony import */ var _pdf_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");





/**
 * Helper class to `write PDF graphic streams` easily.
 * @private
 */
var PdfStreamWriter = /** @class */ (function () {
    /**
     * Initialize an instance of `PdfStreamWriter` class.
     * @private
     */
    function PdfStreamWriter(stream) {
        if (stream == null) {
            throw new Error('ArgumentNullException:stream');
        }
        this.stream = stream;
    }
    //Implementation
    /**
     * `Clear` the stream.
     * @public
     */
    PdfStreamWriter.prototype.clear = function () {
        this.stream.clearStream();
    };
    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {
        if (dictionaryName instanceof _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__["PdfName"]) {
            this.stream.write(dictionaryName.toString());
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setGraphicsState);
        }
        else {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].slash);
            this.stream.write(dictionaryName);
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setGraphicsState);
        }
    };
    /**
     * `Executes the XObject`.
     * @private
     */
    PdfStreamWriter.prototype.executeObject = function (name) {
        this.stream.write(name.toString());
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].paintXObject);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
    };
    /**
     * `Closes path object`.
     * @private
     */
    PdfStreamWriter.prototype.closePath = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].closePath);
    };
    /**
     * `Clips the path`.
     * @private
     */
    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].clipPath);
        if (useEvenOddRule) {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].evenOdd);
        }
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].endPath);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
    };
    /**
     * `Closes, then fills and strokes the path`.
     * @private
     */
    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].closeFillStrokePath);
        if (useEvenOddRule) {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].evenOdd);
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
        else {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
    };
    /**
     * `Fills and strokes path`.
     * @private
     */
    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].fillStroke);
        if (useEvenOddRule) {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].evenOdd);
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
        else {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
    };
    /**
     * `Fills path`.
     * @private
     */
    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].fill);
        if (useEvenOddRule) {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].evenOdd);
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
        else {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
    };
    /**
     * `Ends the path`.
     * @private
     */
    PdfStreamWriter.prototype.endPath = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].n);
    };
    /**
     * `Closes and fills the path`.
     * @private
     */
    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].closePath);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].fill);
        if (useEvenOddRule) {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].evenOdd);
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
        else {
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
    };
    /**
     * `Closes and strokes the path`.
     * @private
     */
    PdfStreamWriter.prototype.closeStrokePath = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].closeStrokePath);
    };
    /**
     * `Sets the text scaling`.
     * @private
     */
    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {
        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(textScaling));
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setTextScaling);
    };
    /**
     * `Strokes path`.
     * @private
     */
    PdfStreamWriter.prototype.strokePath = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].stroke);
    };
    /**
     * `Restores` the graphics state.
     * @private
     */
    PdfStreamWriter.prototype.restoreGraphicsState = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].restoreState);
    };
    /**
     * `Saves` the graphics state.
     * @private
     */
    PdfStreamWriter.prototype.saveGraphicsState = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].saveState);
    };
    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {
        if (typeof arg1 === 'undefined') {
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].goToNextLine);
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"]) {
            this.writePoint(arg1);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setCoords);
        }
        else {
            this.writePoint(arg1, arg2);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setCoords);
        }
    };
    /**
     * Shows the `text`.
     * @private
     */
    PdfStreamWriter.prototype.showText = function (text) {
        this.checkTextParam(text);
        this.writeText(text);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setText);
    };
    /**
     * Sets `text leading`.
     * @private
     */
    PdfStreamWriter.prototype.setLeading = function (leading) {
        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(leading));
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setTextLeading);
    };
    /**
     * `Begins the path`.
     * @private
     */
    PdfStreamWriter.prototype.beginPath = function (x, y) {
        this.writePoint(x, y);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].beginPath);
    };
    /**
     * `Begins text`.
     * @private
     */
    PdfStreamWriter.prototype.beginText = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].beginText);
    };
    /**
     * `Ends text`.
     * @private
     */
    PdfStreamWriter.prototype.endText = function () {
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].endText);
    };
    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"]) {
            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);
        }
        else {
            this.writePoint(arg1, arg2);
            this.writePoint(arg3, arg4);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].appendRectangle);
        }
    };
    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"]) {
            this.appendLineSegment(arg1.x, arg1.y);
        }
        else {
            this.writePoint(arg1, arg2);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].appendLineSegment);
        }
    };
    /**
     * Sets the `text rendering mode`.
     * @private
     */
    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {
        this.stream.write(renderingMode.toString());
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setRenderingMode);
    };
    /**
     * Sets the `character spacing`.
     * @private
     */
    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {
        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(charSpacing));
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setCharacterSpace);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
    };
    /**
     * Sets the `word spacing`.
     * @private
     */
    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {
        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(wordSpacing));
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setWordSpace);
    };
    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {
        if (arg1 instanceof _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__["PdfString"]) {
            this.checkTextParam(arg1);
            this.writeText(arg1);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setTextOnNewLine);
        }
        else {
            this.checkTextParam(arg1);
            this.writeText(arg1, arg2);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setTextOnNewLine);
        }
    };
    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {
        if (arg1 instanceof _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__["PdfName"] && typeof arg2 === 'boolean') {
            var temparg1 = arg1;
            var temparg2 = arg2;
            // if (temparg1 == null) {
            //     throw new Error('ArgumentNullException:name');
            // }
            var op = (temparg2) ? _pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].selectcolorspaceforstroking : _pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].selectcolorspacefornonstroking;
            this.stream.write(temparg1.toString());
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
            this.stream.write(op);
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
        else {
            var temparg1 = arg1;
            var temparg2 = arg2;
            this.setColorSpace(new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__["PdfName"](temparg1), temparg2);
        }
    };
    /**
     * Modifies current `transformation matrix`.
     * @private
     */
    PdfStreamWriter.prototype.modifyCtm = function (matrix) {
        if (matrix == null) {
            throw new Error('ArgumentNullException:matrix');
        }
        this.stream.write(matrix.toString());
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].modifyCtm);
    };
    PdfStreamWriter.prototype.setFont = function (font, name, size) {
        if (typeof name === 'string') {
            this.setFont(font, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__["PdfName"](name), size);
        }
        else {
            if (font == null) {
                throw new Error('ArgumentNullException:font');
            }
            this.stream.write(name.toString());
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
            this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(size));
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setFont);
        }
    };
    /**
     * `Writes the operator`.
     * @private
     */
    PdfStreamWriter.prototype.writeOperator = function (opcode) {
        this.stream.write(opcode);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
    };
    PdfStreamWriter.prototype.checkTextParam = function (text) {
        if (text == null) {
            throw new Error('ArgumentNullException:text');
        }
        if (typeof text === 'string' && text === '') {
            throw new Error('ArgumentException:The text can not be an empty string, text');
        }
    };
    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {
        if ((arg1 instanceof _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__["PdfString"]) && (typeof arg2 === 'undefined')) {
            this.stream.write(arg1.pdfEncode());
        }
        else {
            var start = void 0;
            var end = void 0;
            if (arg2) {
                start = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__["PdfString"].hexStringMark[0];
                end = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__["PdfString"].hexStringMark[1];
            }
            else {
                start = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__["PdfString"].stringMark[0];
                end = _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_3__["PdfString"].stringMark[1];
            }
            this.stream.write(start);
            this.stream.write(arg1);
            this.stream.write(end);
        }
    };
    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {
        if ((arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"]) && (typeof arg2 === 'undefined')) {
            this.writePoint(arg1.x, arg1.y);
        }
        else {
            var temparg1 = arg1;
            this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(temparg1));
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.
            arg2 = this.updateY(arg2);
            this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(arg2));
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        }
    };
    /**
     * `Updates y` co-ordinate.
     * @private
     */
    PdfStreamWriter.prototype.updateY = function (arg) {
        return -arg;
    };
    /**
     * `Writes string` to the file.
     * @private
     */
    PdfStreamWriter.prototype.write = function (string) {
        var builder = '';
        builder += string;
        builder += _pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine;
        this.writeOperator(builder);
    };
    /**
     * `Writes comment` to the file.
     * @private
     */
    PdfStreamWriter.prototype.writeComment = function (comment) {
        if (comment != null && comment.length > 0) {
            var builder = '';
            builder += _pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].comment;
            builder += _pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace;
            builder += comment;
            //builder.Append( Operators.NewLine );
            this.writeOperator(builder);
        }
        else {
            throw new Error('Invalid comment');
        }
    };
    /**
     * Sets the `color and space`.
     * @private
     */
    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {
        if (!color.isEmpty) {
            // bool test = color is PdfExtendedColor;
            this.stream.write(color.toString(colorSpace, forStroking));
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
        }
    };
    // public setLineDashPattern(pattern : number[], patternOffset : number) : void
    // {
    //     let pat : PdfArray = new PdfArray(pattern);
    //     let off : PdfNumber = new PdfNumber(patternOffset);
    //     this.setLineDashPatternHelper(pat, off);
    // }
    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void
    // {
    //     pattern.Save(this);
    //     this.m_stream.write(Operators.whiteSpace);
    //     patternOffset.Save(this);
    //     this.m_stream.write(Operators.whiteSpace);
    //     this.writeOperator(Operators.setDashPattern);
    // }
    /**
     * Sets the `line dash pattern`.
     * @private
     */
    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {
        // let pat : PdfArray = new PdfArray(pattern);
        // let off : PdfNumber = new PdfNumber(patternOffset);
        // this.setLineDashPatternHelper(pat, off);
        this.setLineDashPatternHelper(pattern, patternOffset);
    };
    /**
     * Sets the `line dash pattern`.
     * @private
     */
    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {
        var tempPattern = '[';
        if (pattern.length > 1) {
            for (var index = 0; index < pattern.length; index++) {
                if (index === pattern.length - 1) {
                    tempPattern += pattern[index].toString();
                }
                else {
                    tempPattern += pattern[index].toString() + ' ';
                }
            }
        }
        tempPattern += '] ';
        tempPattern += patternOffset.toString();
        tempPattern += ' ' + _pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setDashPattern;
        this.stream.write(tempPattern);
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].newLine);
    };
    /**
     * Sets the `miter limit`.
     * @private
     */
    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {
        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(miterLimit));
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setMiterLimit);
    };
    /**
     * Sets the `width of the line`.
     * @private
     */
    PdfStreamWriter.prototype.setLineWidth = function (width) {
        this.stream.write(_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"].floatToString(width));
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setLineWidth);
    };
    /**
     * Sets the `line cap`.
     * @private
     */
    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {
        this.stream.write((lineCapStyle).toString());
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setLineCapStyle);
    };
    /**
     * Sets the `line join`.
     * @private
     */
    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {
        this.stream.write((lineJoinStyle).toString());
        this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setLineJoinStyle);
    };
    Object.defineProperty(PdfStreamWriter.prototype, "position", {
        //IPdfWriter members
        /**
         * Gets or sets the current `position` within the stream.
         * @private
         */
        get: function () {
            return this.stream.position;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStreamWriter.prototype, "length", {
        /**
         * Gets `stream length`.
         * @private
         */
        get: function () {
            var returnValue = 0;
            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {
                for (var index = 0; index < this.stream.data.length; index++) {
                    returnValue += this.stream.data[index].length;
                }
            }
            return returnValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStreamWriter.prototype, "document", {
        /**
         * Gets and Sets the `current document`.
         * @private
         */
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    /* tslint:disable-next-line:max-line-length */
    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && arg3 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"]) {
            this.writePoint(arg1.x, arg1.y);
            this.writePoint(arg2.x, arg2.y);
            this.writePoint(arg3.x, arg3.y);
        }
        else {
            this.writePoint(arg1, arg2);
            this.writePoint(arg3, arg4);
            this.writePoint(arg5, arg6);
        }
        this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].appendbeziercurve);
    };
    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {
        if ((colours != null)) {
            var count = colours.length;
            var i = 0;
            for (i = 0; i < count; ++i) {
                this.stream.write(colours[i].toString());
                this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
            }
        }
        if ((patternName != null)) {
            this.stream.write(patternName.toString());
            this.stream.write(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].whiteSpace);
        }
        if (forStroking) {
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setColorAndPatternStroking);
        }
        else {
            this.writeOperator(_pdf_operators__WEBPACK_IMPORTED_MODULE_0__["Operators"].setColorAndPattern);
        }
    };
    return PdfStreamWriter;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: PdfWriter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfWriter", function() { return PdfWriter; });
/**
 * Used to `write a string` into output file.
 * @private
 */
var PdfWriter = /** @class */ (function () {
    /**
     * Initialize an instance of `PdfWriter` class.
     * @private
     */
    function PdfWriter(stream) {
        this.streamWriter = stream;
    }
    Object.defineProperty(PdfWriter.prototype, "document", {
        //properties
        /**
         * Gets and Sets the `document`.
         * @private
         */
        get: function () {
            return this.pdfDocument;
        },
        set: function (value) {
            this.pdfDocument = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfWriter.prototype, "position", {
        /**
         * Gets the `position`.
         * @private
         */
        get: function () {
            return this.streamWriter.buffer.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfWriter.prototype, "length", {
        /**
         * Gets  the `length` of the stream'.
         * @private
         */
        get: function () {
            return this.streamWriter.buffer.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfWriter.prototype, "stream", {
        /**
         * Gets the `stream`.
         * @private
         */
        get: function () {
            var result = this.streamWriter;
            return result;
        },
        enumerable: true,
        configurable: true
    });
    //public Methods
    /**
     * `Writes the specified data`.
     * @private
     */
    PdfWriter.prototype.write = function (overload) {
        var data = [];
        var tempOverload = overload;
        this.streamWriter.write(tempOverload);
    };
    return PdfWriter;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js ***!
  \*************************************************************************************************************************************/
/*! exports provided: PdfPageOrientation, PdfPageRotateAngle, PdfNumberStyle, PdfDockStyle, PdfAlignmentStyle, TemplateType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageOrientation", function() { return PdfPageOrientation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageRotateAngle", function() { return PdfPageRotateAngle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfNumberStyle", function() { return PdfNumberStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDockStyle", function() { return PdfDockStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfAlignmentStyle", function() { return PdfAlignmentStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplateType", function() { return TemplateType; });
/**
 * public Enum for `PdfPageOrientation`.
 * @private
 */
var PdfPageOrientation;
(function (PdfPageOrientation) {
    /**
     * Specifies the type of `Portrait`.
     * @private
     */
    PdfPageOrientation[PdfPageOrientation["Portrait"] = 0] = "Portrait";
    /**
     * Specifies the type of `Landscape`.
     * @private
     */
    PdfPageOrientation[PdfPageOrientation["Landscape"] = 1] = "Landscape";
})(PdfPageOrientation || (PdfPageOrientation = {}));
/**
 * public Enum for `PdfPageRotateAngle`.
 * @private
 */
var PdfPageRotateAngle;
(function (PdfPageRotateAngle) {
    /**
     * Specifies the type of `RotateAngle0`.
     * @private
     */
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle0"] = 0] = "RotateAngle0";
    /**
     * Specifies the type of `RotateAngle90`.
     * @private
     */
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle90"] = 1] = "RotateAngle90";
    /**
     * Specifies the type of `RotateAngle180`.
     * @private
     */
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle180"] = 2] = "RotateAngle180";
    /**
     * Specifies the type of `RotateAngle270`.
     * @private
     */
    PdfPageRotateAngle[PdfPageRotateAngle["RotateAngle270"] = 3] = "RotateAngle270";
})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));
/**
 * public Enum for `PdfNumberStyle`.
 * @private
 */
var PdfNumberStyle;
(function (PdfNumberStyle) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    PdfNumberStyle[PdfNumberStyle["None"] = 0] = "None";
    /**
     * Specifies the type of `Numeric`.
     * @private
     */
    PdfNumberStyle[PdfNumberStyle["Numeric"] = 1] = "Numeric";
    /**
     * Specifies the type of `LowerLatin`.
     * @private
     */
    PdfNumberStyle[PdfNumberStyle["LowerLatin"] = 2] = "LowerLatin";
    /**
     * Specifies the type of `LowerRoman`.
     * @private
     */
    PdfNumberStyle[PdfNumberStyle["LowerRoman"] = 3] = "LowerRoman";
    /**
     * Specifies the type of `UpperLatin`.
     * @private
     */
    PdfNumberStyle[PdfNumberStyle["UpperLatin"] = 4] = "UpperLatin";
    /**
     * Specifies the type of `UpperRoman`.
     * @private
     */
    PdfNumberStyle[PdfNumberStyle["UpperRoman"] = 5] = "UpperRoman";
})(PdfNumberStyle || (PdfNumberStyle = {}));
/**
 * public Enum for `PdfDockStyle`.
 * @private
 */
var PdfDockStyle;
(function (PdfDockStyle) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    PdfDockStyle[PdfDockStyle["None"] = 0] = "None";
    /**
     * Specifies the type of `Bottom`.
     * @private
     */
    PdfDockStyle[PdfDockStyle["Bottom"] = 1] = "Bottom";
    /**
     * Specifies the type of `Top`.
     * @private
     */
    PdfDockStyle[PdfDockStyle["Top"] = 2] = "Top";
    /**
     * Specifies the type of `Left`.
     * @private
     */
    PdfDockStyle[PdfDockStyle["Left"] = 3] = "Left";
    /**
     * Specifies the type of `Right`.
     * @private
     */
    PdfDockStyle[PdfDockStyle["Right"] = 4] = "Right";
    /**
     * Specifies the type of `Fill`.
     * @private
     */
    PdfDockStyle[PdfDockStyle["Fill"] = 5] = "Fill";
})(PdfDockStyle || (PdfDockStyle = {}));
/**
 * public Enum for `PdfAlignmentStyle`.
 * @private
 */
var PdfAlignmentStyle;
(function (PdfAlignmentStyle) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["None"] = 0] = "None";
    /**
     * Specifies the type of `TopLeft`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["TopLeft"] = 1] = "TopLeft";
    /**
     * Specifies the type of `TopCenter`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["TopCenter"] = 2] = "TopCenter";
    /**
     * Specifies the type of `TopRight`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["TopRight"] = 3] = "TopRight";
    /**
     * Specifies the type of `MiddleLeft`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["MiddleLeft"] = 4] = "MiddleLeft";
    /**
     * Specifies the type of `MiddleCenter`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["MiddleCenter"] = 5] = "MiddleCenter";
    /**
     * Specifies the type of `MiddleRight`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["MiddleRight"] = 6] = "MiddleRight";
    /**
     * Specifies the type of `BottomLeft`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["BottomLeft"] = 7] = "BottomLeft";
    /**
     * Specifies the type of `BottomCenter`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["BottomCenter"] = 8] = "BottomCenter";
    /**
     * Specifies the type of `BottomRight`.
     * @private
     */
    PdfAlignmentStyle[PdfAlignmentStyle["BottomRight"] = 9] = "BottomRight";
})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));
/**
 * public Enum for `TemplateType`.
 * @private
 */
var TemplateType;
(function (TemplateType) {
    /**
     * Specifies the type of `None`.
     * @private
     */
    TemplateType[TemplateType["None"] = 0] = "None";
    /**
     * Specifies the type of `Top`.
     * @private
     */
    TemplateType[TemplateType["Top"] = 1] = "Top";
    /**
     * Specifies the type of `Bottom`.
     * @private
     */
    TemplateType[TemplateType["Bottom"] = 2] = "Bottom";
    /**
     * Specifies the type of `Left`.
     * @private
     */
    TemplateType[TemplateType["Left"] = 3] = "Left";
    /**
     * Specifies the type of `Right`.
     * @private
     */
    TemplateType[TemplateType["Right"] = 4] = "Right";
})(TemplateType || (TemplateType = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/page-added-event-arguments.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/page-added-event-arguments.js ***!
  \***********************************************************************************************************************************************************/
/*! exports provided: PageAddedEventArgs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageAddedEventArgs", function() { return PageAddedEventArgs; });
/**
 * Provides data for `PageAddedEventHandler` event.
 * This event raises when adding the new PDF page to the PDF document.
 */
var PageAddedEventArgs = /** @class */ (function () {
    function PageAddedEventArgs(page) {
        if (typeof page !== 'undefined') {
            this.pdfPage = page;
        }
        else {
            this.pdfPage = null;
        }
    }
    Object.defineProperty(PageAddedEventArgs.prototype, "page", {
        /**
         * Gets the `newly added page`.
         * @private
         */
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    return PageAddedEventArgs;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-document-page-collection.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-document-page-collection.js ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: PdfDocumentPageCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentPageCollection", function() { return PdfDocumentPageCollection; });
/* harmony import */ var _pdf_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-page */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js");
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");


/**
 * Represents a virtual collection of all the pages in the document.
 * @private
 */
var PdfDocumentPageCollection = /** @class */ (function () {
    //constructor
    /**
     * Initializes a new instance of the `PdfPageCollection` class.
     * @private
     */
    function PdfDocumentPageCollection(document) {
        /**
         * It holds the page collection with the `index`.
         * @private
         */
        this.pdfPageCollectionIndex = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_1__["Dictionary"]();
        this.document = document;
    }
    Object.defineProperty(PdfDocumentPageCollection.prototype, "count", {
        //Property
        /**
         * Gets the total `number of the pages`.
         * @private
         */
        get: function () {
            return this.countPages();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDocumentPageCollection.prototype, "pageCollectionIndex", {
        /**
         * Gets a `page index` from the document.
         * @private
         */
        get: function () {
            return this.pdfPageCollectionIndex;
        },
        enumerable: true,
        configurable: true
    });
    PdfDocumentPageCollection.prototype.add = function (page) {
        if (typeof page === 'undefined') {
            var page_1 = new _pdf_page__WEBPACK_IMPORTED_MODULE_0__["PdfPage"]();
            this.add(page_1);
            return page_1;
        }
        else {
            var section = this.getLastSection();
            section.add(page);
        }
    };
    /**
     * Returns `last section` in the document.
     * @private
     */
    PdfDocumentPageCollection.prototype.getLastSection = function () {
        var sc = this.document.sections;
        if (sc.section.length === 0) {
            sc.add();
        }
        var section = sc.section[sc.section.length - 1];
        return section;
    };
    /**
     * Called when `new page has been added`.
     * @private
     */
    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {
        // if (PageAdded !== null)
        // {
        //     PageAdded(this, args);
        // }
    };
    /**
     * Gets the `total number of pages`.
     * @private
     */
    PdfDocumentPageCollection.prototype.countPages = function () {
        var sc = this.document.sections;
        var count = 0;
        for (var index = 0; index < sc.section.length; index++) {
            count += sc.section[index].count;
        }
        return count;
    };
    /**
     * Gets the `page object` from page index.
     * @private
     */
    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {
        return this.getPage(index);
    };
    /**
     * Gets a page by its `index` in the document.
     * @private
     */
    PdfDocumentPageCollection.prototype.getPage = function (index) {
        if ((index < 0) || (index >= this.count)) {
            throw Error('ArgumentOutOfRangeException("index", "Value can not be less 0")');
        }
        var page = null;
        var sectionStartIndex = 0;
        var sectionCount = 0;
        var pageIndex = 0;
        var length = this.document.sections.count;
        for (var i = 0; i < length; i++) {
            var section = this.document.sections.section[i];
            sectionCount = section.count;
            pageIndex = index - sectionStartIndex;
            // We found a section containing the page.
            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {
                page = section.getPages()[pageIndex];
                break;
            }
            sectionStartIndex += sectionCount;
        }
        return page;
    };
    /**
     * Gets the `index of` the page in the document.
     * @private
     */
    PdfDocumentPageCollection.prototype.indexOf = function (page) {
        var index = -1;
        if (page == null) {
            throw new Error('ArgumentNullException: page');
        }
        else {
            var numPages = 0;
            for (var i = 0, len = this.document.sections.count; i < len; i++) {
                var section = this.document.sections.pdfSectionCollection(i);
                index = section.indexOf(page);
                if (index >= 0) {
                    index += numPages;
                    break;
                }
                else {
                    index = -1;
                }
                numPages += section.count;
            }
        }
        return index;
    };
    /**
     * `Removes` the specified page.
     * @private
     */
    PdfDocumentPageCollection.prototype.remove = function (page) {
        if (page == null) {
            throw Error('ArgumentNullException("page")');
        }
        var section = null;
        var len;
        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {
            section = this.document.sections.pdfSectionCollection(i);
            if (section.pages.contains(page)) {
                section.pages.remove(page);
                break;
            }
        }
        return section;
    };
    return PdfDocumentPageCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-base.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-base.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: PdfPageBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageBase", function() { return PdfPageBase; });
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _pdf_page_layer_collection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-page-layer-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer-collection.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _graphics_pdf_resources__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../graphics/pdf-resources */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-resources.js");




/**
 * The abstract base class for all pages,
 * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.
 * @private
 */
var PdfPageBase = /** @class */ (function () {
    //constructors
    /**
     * Initializes a new instance of the `PdfPageBase` class.
     * @private
     */
    function PdfPageBase(dictionary) {
        /**
         * `Index` of the default layer.
         * @default -1.
         * @private
         */
        this.defLayerIndex = -1;
        /**
         * Local variable to store if page `updated`.
         * @default false.
         * @private
         */
        this.modified = false;
        /**
         * Instance of `DictionaryProperties` class.
         * @hidden
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_2__["DictionaryProperties"]();
        this.pageDictionary = dictionary;
    }
    Object.defineProperty(PdfPageBase.prototype, "section", {
        //Properties
        /**
         * Gets the `section` of a page.
         * @private
         */
        get: function () {
            // if (this.pdfSection === null) {
            //     throw new Error('PdfException : Page must be added to some section before using.');
            // }
            return this.pdfSection;
        },
        set: function (value) {
            this.pdfSection = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "dictionary", {
        /**
         * Gets the page `dictionary`.
         * @private
         */
        get: function () {
            return this.pageDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "element", {
        /**
         * Gets the wrapped `element`.
         * @private
         */
        get: function () {
            return this.pageDictionary;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "defaultLayer", {
        /**
         * Gets the `default layer` of the page (Read only).
         * @private
         */
        get: function () {
            var layer = this.layers;
            var index = this.defaultLayerIndex;
            var returnlayer = layer.items(index);
            return returnlayer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "defaultLayerIndex", {
        /**
         * Gets or sets `index of the default layer`.
         * @private
         */
        get: function () {
            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {
                var layer = this.layerCollection.add();
                this.defLayerIndex = this.layerCollection.indexOf(layer);
            }
            return this.defLayerIndex;
        },
        /**
         * Gets or sets` index of the default layer`.
         * @private
         */
        set: function (value) {
            if (value < 0 || value > this.layers.count - 1) {
                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');
            }
            else {
                this.defLayerIndex = value;
                this.modified = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageBase.prototype, "layers", {
        /**
         * Gets the collection of the page's `layers` (Read only).
         * @private
         */
        get: function () {
            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {
                this.layerCollection = new _pdf_page_layer_collection__WEBPACK_IMPORTED_MODULE_1__["PdfPageLayerCollection"](this);
            }
            return this.layerCollection;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Return an instance of `PdfResources` class.
     * @private
     */
    PdfPageBase.prototype.getResources = function () {
        if (this.resources == null) {
            this.resources = new _graphics_pdf_resources__WEBPACK_IMPORTED_MODULE_3__["PdfResources"]();
            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);
        }
        return this.resources;
    };
    Object.defineProperty(PdfPageBase.prototype, "contents", {
        /**
         * Gets `array of page's content`.
         * @private
         */
        get: function () {
            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);
            var contents = obj;
            var rh = obj;
            if (contents == null) {
                contents = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_0__["PdfArray"]();
                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);
            }
            return contents;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets the `resources`.
     * @private
     */
    PdfPageBase.prototype.setResources = function (res) {
        this.resources = res;
        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);
        this.modified = true;
    };
    return PdfPageBase;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer-collection.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer-collection.js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: PdfPageLayerCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayerCollection", function() { return PdfPageLayerCollection; });
/* harmony import */ var _pdf_page_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-page-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-base.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _pdf_page_layer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-page-layer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer.js");
/* harmony import */ var _general_pdf_collection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../general/pdf-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-collection.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfPageLayerCollection.ts class for EJ2-PDF
 */






/**
 * The class provides methods and properties to handle the collections of `PdfPageLayer`.
 */
var PdfPageLayerCollection = /** @class */ (function (_super) {
    __extends(PdfPageLayerCollection, _super);
    function PdfPageLayerCollection(page) {
        var _this = _super.call(this) || this;
        /**
         * Stores the `number of first level layers` in the document.
         * @default 0
         * @private
         */
        _this.parentLayerCount = 0;
        /**
         * Indicates if `Sublayer` is present.
         * @default false
         * @private
         */
        _this.sublayer = false;
        /**
         * Stores the `optional content dictionary`.
         * @private
         */
        _this.optionalContent = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__["PdfDictionary"]();
        if (page instanceof _pdf_page_base__WEBPACK_IMPORTED_MODULE_0__["PdfPageBase"]) {
            // if (page == null) {
            //     throw new Error('ArgumentNullException:page');
            // }
            _this.page = page;
            var lPage = page;
            // if (lPage != null) {
            _this.parseLayers(lPage);
            // }
        }
        return _this;
    }
    PdfPageLayerCollection.prototype.items = function (index, value) {
        if (typeof index === 'number' && typeof value === 'undefined') {
            var obj = this.list[index];
            return obj;
        }
        else {
            if (value == null) {
                throw new Error('ArgumentNullException: layer');
            }
            if (value.page !== this.page) {
                throw new Error('ArgumentException: The layer belongs to another page');
            }
            // // Add/remove the layer.
            // let layer : PdfPageLayer = this.items(index);
            // if (layer != null) {
            //     this.RemoveLayer(layer);
            // }
            // this.List[index] = value;
            // this.InsertLayer(index, value);
        }
    };
    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {
        if (typeof firstArgument === 'undefined') {
            var layer = new _pdf_page_layer__WEBPACK_IMPORTED_MODULE_2__["PdfPageLayer"](this.page);
            layer.name = '';
            this.add(layer);
            return layer;
        }
        else if (firstArgument instanceof _pdf_page_layer__WEBPACK_IMPORTED_MODULE_2__["PdfPageLayer"]) {
            // if (layer == null)
            //     throw new ArgumentNullException("layer");
            // if (layer.Page != m_page)
            //     throw new ArgumentException("The layer belongs to another page");
            var index = this.list.push(firstArgument);
            // Register layer.
            this.addLayer(index, firstArgument);
            return index;
        }
        else {
            return 0;
        }
    };
    /**
     * Registers `layer` at the page.
     * @private
     */
    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {
        var reference = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](layer);
        this.page.contents.add(reference);
    };
    // private RemoveLayer(layer : PdfPageLayer) : void {
    //     if (layer == null) {
    //         throw new Error('ArgumentNullException:layer');
    //     }
    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);
    //     if (this.page != null) {
    //         this.page.Contents.Remove(reference);
    //     }
    // }
    /**
     * Inserts `PdfPageLayer` into the collection at specified index.
     * @private
     */
    PdfPageLayerCollection.prototype.insert = function (index, layer) {
        // if (index < 0)
        //     throw new ArgumentOutOfRangeException("index", "Value can not be less 0");
        // if (layer == null)
        //     throw new ArgumentNullException("layer");
        // if (layer.Page != m_page)
        //     throw new ArgumentException("The layer belongs to another page");
        var list = [];
        var length = this.list.length;
        for (var i = index; i < length; i++) {
            list.push(this.list.pop());
        }
        this.list.push(layer);
        for (var i = 0; i < list.length; i++) {
            this.list.push(list[i]);
        }
        // Register layer.
        this.insertLayer(index, layer);
    };
    /**
     * Registers layer at the page.
     * @private
     */
    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {
        if (layer == null) {
            throw new Error('ArgumentNullException:layer');
        }
        var reference = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](layer);
        this.page.contents.insert(index, reference);
    };
    // tslint:disable
    /**
     * `Parses the layers`.
     * @private
     */
    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {
        // if (loadedPage == null) {
        //     throw new Error('ArgumentNullException:loadedPage');
        // }
        var contents = this.page.contents;
        var resource = this.page.getResources();
        var crossTable = null;
        var ocproperties = null;
        var propertie = null;
        var isLayerAdded = false;
        // if (loadedPage instanceof PdfPage) {
        crossTable = loadedPage.crossTable;
        // } else {
        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;
        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;
        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).
        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;
        // }
        var saveStream = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_5__["PdfStream"]();
        var restoreStream = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_5__["PdfStream"]();
        var saveState = 'q';
        var newLine = '\n';
        var restoreState = 'Q';
        // for (let index : number = 0; index < contents.Items.length; index++) {
        //     let obj : IPdfPrimitive = contents[index];
        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;
        //     if (stream == null)
        //         throw new PdfDocumentException("Invalid contents array.");
        //     // if (stream.Compress)
        //     {
        //         if (!loadedPage.Imported)
        //             stream.Decompress();
        //     }
        //     byte[] contentId = stream.Data;
        //     string str = PdfString.ByteToString(contentId);
        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==
        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))
        //     {
        //         byte[] content = stream.Data;
        //         byte[] data = new byte[content.Length + 4];
        //         data[0] = SaveState;
        //         data[1] = NewLine;
        //         content.CopyTo(data, 2);
        //         data[data.Length - 2] = NewLine;
        //         data[data.Length - 1] = RestoreState;
        //         stream.Data = data;
        //     }
        //     if (ocproperties != null)
        //     {
        //         if (Propertie != null)
        //         {
        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)
        //             {
        //                 String Key = prop.Key.ToString();
        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;
        //                 PdfDictionary Dict = null;
        //                 if (refh != null)
        //                 {
        //                     Dict = refh.Object as PdfDictionary;
        //                 }
        //                 else
        //                 {
        //                     Dict = prop.Value as PdfDictionary;
        //                 }
        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;
        //                 if (m_usage != null)
        //                 {
        //                     if (str.Contains(Key))
        //                     {
        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);
        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])
        //                         as PdfDictionary;
        //                         if (printoption != null)
        //                         {
        //                             layer.m_printOption = printoption;
        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)
        //                             {
        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))
        //                                 {
        //                                     string printState = (value.Value as PdfName).Value;
        //                                     if (printState.Equals(DictionaryProperties.OCGON))
        //                                     {
        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;
        //                                         break;
        //                                     }
        //                                     else
        //                                     {
        //                                         layer.PrintState = PdfPrintState.NeverPrint;
        //                                         break;
        //                                     }
        //                                 }
        //                             }
        //                         }
        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;
        //                         layer.Name = layerName.Value;
        //                         List.add(layer);
        //                         isLayerAdded = true;
        //                         if(!str.Contains("EMC"))
        //                         break;
        //                     }
        //                 }
        //                 else
        //                 {
        //                     if (str.Contains(Key))
        //                     {
        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);
        //                         List.add(layer);
        //                         if(Dict.ContainsKey(DictionaryProperties.Name))
        //                         {
        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;
        //                         layer.Name = layerName.Value;
        //                         }
        //                         isLayerAdded = true;
        //                         break;
        //                     }
        //                 }
        //             }
        //         }
        //     }
        //     if (!isLayerAdded)
        //     {
        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);
        //         List.add(layer);
        //     }
        //     else
        //         isLayerAdded = false;
        // }
        var saveData = [];
        saveData.push(saveState);
        saveStream.data = saveData;
        contents.insert(0, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](saveStream));
        saveData = [];
        saveData.push(restoreState);
        restoreStream.data = saveData;
        contents.insert(contents.count, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](restoreStream));
    };
    /**
     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.
     * @private
     */
    PdfPageLayerCollection.prototype.indexOf = function (layer) {
        if (layer == null) {
            throw new Error('ArgumentNullException: layer');
        }
        var index = this.list.indexOf(layer);
        return index;
    };
    return PdfPageLayerCollection;
}(_general_pdf_collection__WEBPACK_IMPORTED_MODULE_3__["PdfCollection"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer.js ***!
  \***********************************************************************************************************************************************/
/*! exports provided: PdfPageLayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayer", function() { return PdfPageLayer; });
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _graphics_pdf_graphics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../graphics/pdf-graphics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-graphics.js");
/* harmony import */ var _pdf_page_layer_collection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pdf-page-layer-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer-collection.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");





/**
 * The `PdfPageLayer` used to create layers in PDF document.
 * @private
 */
var PdfPageLayer = /** @class */ (function () {
    function PdfPageLayer(page, streamClipPageTemplates) {
        // private bSaved : boolean;
        /**
         * Local Variable to store the `color space` of the document.
         * @private
         */
        this.pdfColorSpace = _graphics_enum__WEBPACK_IMPORTED_MODULE_4__["PdfColorSpace"].Rgb;
        /**
         * Local Variable to set `visibility`.
         * @default true
         * @private
         */
        this.isVisible = true;
        /**
         * Indicates if `Sublayer` is present.
         * @default false
         * @private
         */
        this.sublayer = false;
        /**
         * Local variable to store `length` of the graphics.
         * @default 0
         * @private
         */
        this.contentLength = 0;
        /**
         * Instance for `PdfDictionaryProperties` Class.
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__["DictionaryProperties"]();
        if (page === null) {
            throw new Error('ArgumentNullException:page');
        }
        this.pdfPage = page;
        this.clipPageTemplates = true;
        if (typeof streamClipPageTemplates === 'undefined') {
            this.content = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_0__["PdfStream"]();
        }
        else if (streamClipPageTemplates instanceof _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_0__["PdfStream"] || streamClipPageTemplates === null) {
            if (streamClipPageTemplates === null) {
                throw new Error('ArgumentNullException:stream');
            }
            this.content = streamClipPageTemplates;
        }
        else {
            this.content = new _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_0__["PdfStream"]();
            this.clipPageTemplates = streamClipPageTemplates;
        }
    }
    Object.defineProperty(PdfPageLayer.prototype, "colorSpace", {
        // Properties
        /**
         * Get or set the `color space`.
         * @private
         */
        get: function () {
            return this.pdfColorSpace;
        },
        set: function (value) {
            this.pdfColorSpace = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "page", {
        /**
         * Gets parent `page` of the layer.
         * @private
         */
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "layerId", {
        /**
         * Gets and Sets the `id of the layer`.
         * @private
         */
        get: function () {
            return this.layerid;
        },
        set: function (value) {
            this.layerid = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "name", {
        /**
         * Gets or sets the `name` of the layer.
         * @private
         */
        get: function () {
            return this.layerName;
        },
        set: function (value) {
            this.layerName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "visible", {
        /**
         * Gets or sets the `visibility` of the layer.
         * @private
         */
        get: function () {
            return this.isVisible;
        },
        set: function (value) {
            this.isVisible = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "graphics", {
        /**
         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.
         * @private
         */
        get: function () {
            if ((this.pdfGraphics == null)) {
                this.initializeGraphics(this.page);
            }
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageLayer.prototype, "layers", {
        /**
         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.
         * @private
         */
        get: function () {
            if (this.layer == null) {
                this.layer = new _pdf_page_layer_collection__WEBPACK_IMPORTED_MODULE_2__["PdfPageLayerCollection"](this.page);
                this.layer.sublayer = true;
                return this.layer;
            }
            else {
                return this.layer;
            }
        },
        enumerable: true,
        configurable: true
    });
    // Implementation
    /**
     * `Adds` a new PDF Page layer.
     * @private
     */
    PdfPageLayer.prototype.add = function () {
        var layer = new PdfPageLayer(this.pdfPage);
        layer.name = '';
        return layer;
    };
    /**
     * Returns a value indicating the `sign` of a single-precision floating-point number.
     * @private
     */
    PdfPageLayer.prototype.sign = function (number) {
        if (number === 0) {
            return 0;
        }
        else if (number > 0) {
            return 1;
        }
        else {
            return -1;
        }
    };
    /**
     * `Initializes Graphics context` of the layer.
     * @private
     */
    PdfPageLayer.prototype.initializeGraphics = function (page) {
        var oPage = page;
        var gr = new _graphics_pdf_graphics__WEBPACK_IMPORTED_MODULE_1__["GetResourceEventHandler"](this.page);
        var cropBox = null;
        this.pdfGraphics = new _graphics_pdf_graphics__WEBPACK_IMPORTED_MODULE_1__["PdfGraphics"](page.size, gr, this.content);
        this.pdfGraphics.mediaBoxUpperRightBound = 0;
        if (oPage != null) {
            var sc = oPage.section.parent;
            if (sc != null) {
                this.pdfGraphics.colorSpace = sc.document.colorSpace;
                this.colorSpace = sc.document.colorSpace;
            }
        }
        // Transform coordinates to the left/top and activate margins.
        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));
        // if (page != null) {
        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {
            this.pdfGraphics.initializeCoordinates();
        }
        else {
            // this.m_graphics.InitializeCoordinates(page);
        }
        var clipRect = oPage.section.getActualBounds(oPage, true);
        var margins = oPage.section.pageSettings.margins;
        if (this.clipPageTemplates) {
            if (page.origin.x >= 0 && page.origin.y >= 0) {
                this.pdfGraphics.clipTranslateMargins(clipRect);
            }
        }
        else {
            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);
        }
        this.pdfGraphics.setLayer(this);
        // this.bSaved = false;
    };
    Object.defineProperty(PdfPageLayer.prototype, "element", {
        // IPdfWrapper Members
        /**
         * Gets the wrapped `element`.
         * @private
         */
        get: function () {
            return this.content;
        },
        enumerable: true,
        configurable: true
    });
    return PdfPageLayer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-settings.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-settings.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: PdfPageSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageSettings", function() { return PdfPageSettings; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _pdf_page_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-page-size */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-size.js");
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");
/* harmony import */ var _graphics_pdf_margins__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../graphics/pdf-margins */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-margins.js");
/**
 * PdfPageSettings.ts class for EJ2-PDF
 */




/**
 * The class provides various `setting` related with PDF pages.
 */
var PdfPageSettings = /** @class */ (function () {
    function PdfPageSettings(margins) {
        //Fields
        /**
         * The page `margins`.
         * @private
         */
        this.pageMargins = new _graphics_pdf_margins__WEBPACK_IMPORTED_MODULE_3__["PdfMargins"]();
        /**
         * The page `size`.
         * @default a4
         * @private
         */
        this.pageSize = _pdf_page_size__WEBPACK_IMPORTED_MODULE_1__["PdfPageSize"].a4;
        /**
         * The page `rotation angle`.
         * @default PdfPageRotateAngle.RotateAngle0
         * @private
         */
        this.rotateAngle = _enum__WEBPACK_IMPORTED_MODULE_2__["PdfPageRotateAngle"].RotateAngle0;
        /**
         * The page `orientation`.
         * @default PdfPageOrientation.Portrait
         * @private
         */
        this.pageOrientation = _enum__WEBPACK_IMPORTED_MODULE_2__["PdfPageOrientation"].Portrait;
        /**
         * The page `origin`.
         * @default 0,0
         * @private
         */
        this.pageOrigin = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["PointF"](0, 0);
        /**
         * Checks the Whether the `rotation` is applied or not.
         * @default false
         * @private
         */
        this.isRotation = false;
        if (typeof margins === 'number') {
            this.pageMargins.setMargins(margins);
        }
    }
    Object.defineProperty(PdfPageSettings.prototype, "size", {
        //Properties
        /**
         * Gets or sets the `size` of the page.
         * @private
         */
        get: function () {
            return this.pageSize;
        },
        set: function (value) {
            this.setSize(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "orientation", {
        /**
         * Gets or sets the page `orientation`.
         * @private
         */
        get: function () {
            return this.pageOrientation;
        },
        set: function (orientation) {
            if (this.pageOrientation !== orientation) {
                this.pageOrientation = orientation;
                this.updateSize(orientation);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "margins", {
        /**
         * Gets or sets the `margins` of the page.
         * @private
         */
        get: function () {
            return this.pageMargins;
        },
        set: function (value) {
            this.pageMargins = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "width", {
        /**
         * Gets or sets the `width` of the page.
         * @private
         */
        get: function () {
            return this.pageSize.width;
        },
        set: function (value) {
            this.pageSize.width = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "height", {
        /**
         * Gets or sets the `height` of the page.
         * @private
         */
        get: function () {
            return this.pageSize.height;
        },
        set: function (value) {
            this.pageSize.height = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "origin", {
        /**
         * Gets or sets the `origin` of the page.
         * @private
         */
        get: function () {
            return this.pageOrigin;
        },
        set: function (value) {
            this.pageOrigin = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageSettings.prototype, "rotate", {
        /**
         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.
         * @private
         */
        get: function () {
            return this.rotateAngle;
        },
        set: function (value) {
            this.rotateAngle = value;
            this.isRotation = true;
        },
        enumerable: true,
        configurable: true
    });
    //Methods
    /**
     * `Update page size` depending on orientation.
     * @private
     */
    PdfPageSettings.prototype.updateSize = function (orientation) {
        var min = Math.min(this.pageSize.width, this.pageSize.height);
        var max = Math.max(this.pageSize.width, this.pageSize.height);
        switch (orientation) {
            case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfPageOrientation"].Portrait:
                this.pageSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](min, max);
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_2__["PdfPageOrientation"].Landscape:
                this.pageSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](max, min);
                break;
        }
    };
    /**
     * Creates a `clone` of the object.
     * @private
     */
    PdfPageSettings.prototype.clone = function () {
        var settings = this;
        settings.pageMargins = this.pageMargins.clone();
        // if (GetTransition() != null)
        // {
        //     settings.Transition = (PdfPageTransition)Transition.clone();
        // }
        return settings;
    };
    /**
     * Returns `size`, shrinked by the margins.
     * @private
     */
    PdfPageSettings.prototype.getActualSize = function () {
        var width = this.width - (this.margins.left + this.margins.right);
        var height = this.height - (this.margins.top + this.margins.bottom);
        var size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](width, height);
        return size;
    };
    /**
     * Sets `size` to the page aaccording to the orientation.
     * @private
     */
    PdfPageSettings.prototype.setSize = function (size) {
        var min = Math.min(size.width, size.height);
        var max = Math.max(size.width, size.height);
        if (this.orientation === _enum__WEBPACK_IMPORTED_MODULE_2__["PdfPageOrientation"].Portrait) {
            this.pageSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](min, max);
        }
        else {
            this.pageSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](max, min);
        }
    };
    return PdfPageSettings;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-size.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-size.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: PdfPageSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageSize", function() { return PdfPageSize; });
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/**
 * PdfPageSize.ts class for EJ2-PDF
 */

/**
 * Represents information about various predefined `page sizes`.
 */
var PdfPageSize = /** @class */ (function () {
    //constructor
    /**
     * Initialize an instance for `PdfPageSize` class.
     * @private
     */
    function PdfPageSize() {
        // 
    }
    /**
     * Specifies the size of `letter`.
     * @private
     */
    PdfPageSize.letter = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](612, 792);
    /**
     * Specifies the size of `note`.
     * @private
     */
    PdfPageSize.note = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](540, 720);
    /**
     * Specifies the size of `legal`.
     * @private
     */
    PdfPageSize.legal = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](612, 1008);
    /**
     * Specifies the size of `a0`.
     * @private
     */
    PdfPageSize.a0 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](2380, 3368);
    /**
     * Specifies the size of `a1`.
     * @private
     */
    PdfPageSize.a1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](1684, 2380);
    /**
     * Specifies the size of `a2`.
     * @private
     */
    PdfPageSize.a2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](1190, 1684);
    /**
     * Specifies the size of `a3`.
     * @private
     */
    PdfPageSize.a3 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](842, 1190);
    /**
     * Specifies the size of `a4`.
     * @private
     */
    PdfPageSize.a4 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](595, 842);
    /**
     * Specifies the size of `a5`.
     * @private
     */
    PdfPageSize.a5 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](421, 595);
    /**
     * Specifies the size of `a6`.
     * @private
     */
    PdfPageSize.a6 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](297, 421);
    /**
     * Specifies the size of `a7`.
     * @private
     */
    PdfPageSize.a7 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](210, 297);
    /**
     * Specifies the size of `a8`.
     * @private
     */
    PdfPageSize.a8 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](148, 210);
    /**
     * Specifies the size of `a9`.
     * @private
     */
    PdfPageSize.a9 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](105, 148);
    /**
     * Specifies the size of `a10`.
     * @private
     */
    PdfPageSize.a10 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](74, 105);
    /**
     * Specifies the size of `b0`.
     * @private
     */
    PdfPageSize.b0 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](2836, 4008);
    /**
     * Specifies the size of `b1`.
     * @private
     */
    PdfPageSize.b1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](2004, 2836);
    /**
     * Specifies the size of `b2`.
     * @private
     */
    PdfPageSize.b2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](1418, 2004);
    /**
     * Specifies the size of `b3`.
     * @private
     */
    PdfPageSize.b3 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](1002, 1418);
    /**
     * Specifies the size of `b4`.
     * @private
     */
    PdfPageSize.b4 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](709, 1002);
    /**
     * Specifies the size of `b5`.
     * @private
     */
    PdfPageSize.b5 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](501, 709);
    /**
     * Specifies the size of `archE`.
     * @private
     */
    PdfPageSize.archE = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](2592, 3456);
    /**
     * Specifies the size of `archD`.
     * @private
     */
    PdfPageSize.archD = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](1728, 2592);
    /**
     * Specifies the size of `archC`.
     * @private
     */
    PdfPageSize.archC = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](1296, 1728);
    /**
     * Specifies the size of `archB`.
     * @private
     */
    PdfPageSize.archB = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](864, 1296);
    /**
     * Specifies the size of `archA`.
     * @private
     */
    PdfPageSize.archA = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](648, 864);
    /**
     * Specifies the size of `flsa`.
     * @private
     */
    PdfPageSize.flsa = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](612, 936);
    /**
     * Specifies the size of `halfLetter`.
     * @private
     */
    PdfPageSize.halfLetter = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](396, 612);
    /**
     * Specifies the size of `letter11x17`.
     * @private
     */
    PdfPageSize.letter11x17 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](792, 1224);
    /**
     * Specifies the size of `ledger`.
     * @private
     */
    PdfPageSize.ledger = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_0__["SizeF"](1224, 792);
    return PdfPageSize;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-template-element.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-template-element.js ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: PdfPageTemplateElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPageTemplateElement", function() { return PdfPageTemplateElement; });
/* harmony import */ var _enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../graphics/figures/pdf-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js");
/* harmony import */ var _pdf_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-page */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js");
/**
 * PdfPageTemplateElement.ts class for EJ2-Pdf
 */





/**
 * Describes a `page template` object that can be used as header/footer, watermark or stamp.
 */
var PdfPageTemplateElement = /** @class */ (function () {
    /* tslint:disable */
    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {
        if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"] && typeof arg2 === 'undefined') {
            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"] && arg2 instanceof _pdf_page__WEBPACK_IMPORTED_MODULE_3__["PdfPage"] && typeof arg3 === 'undefined') {
            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"] && arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"] && typeof arg3 === 'undefined') {
            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"] && arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"] && arg3 instanceof _pdf_page__WEBPACK_IMPORTED_MODULE_3__["PdfPage"] && typeof arg4 === 'undefined') {
            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);
        }
        else if (arg1 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"] && typeof arg2 === 'undefined') {
            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);
        }
        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {
            this.InitiateBounds(0, 0, arg1, arg2, null);
        }
        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof _pdf_page__WEBPACK_IMPORTED_MODULE_3__["PdfPage"] && typeof arg4 === 'undefined') {
            this.InitiateBounds(0, 0, arg1, arg2, arg3);
        }
        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {
            this.InitiateBounds(arg1, arg2, arg3, arg4, null);
        }
        else {
            this.InitiateBounds(arg1, arg2, arg3, arg4, null);
            // this.graphics.colorSpace = this.page.document.colorSpace;
        }
        /* tslint:enable */
    }
    Object.defineProperty(PdfPageTemplateElement.prototype, "dock", {
        // Properties
        /**
         * Gets or sets the `dock style` of the page template element.
         * @private
         */
        get: function () {
            return this.dockStyle;
        },
        set: function (value) {
            // if (this.dockStyle !== value && this.Type === TemplateType.None) {
            this.dockStyle = value;
            // Reset alignment.
            this.resetAlignment();
            // }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "alignment", {
        /**
         * Gets or sets `alignment` of the page template element.
         * @private
         */
        get: function () {
            return this.alignmentStyle;
        },
        set: function (value) {
            // if (this.alignmentStyle !== value) {
            this.setAlignment(value);
            // }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "foreground", {
        /**
         * Indicates whether the page template is located `in front of the page layers or behind of it`.
         * @private
         */
        get: function () {
            return this.isForeground;
        },
        set: function (value) {
            // if (this.foreground !== value) {
            this.isForeground = value;
            // }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "background", {
        /**
         * Indicates whether the page template is located `behind of the page layers or in front of it`.
         * @private
         */
        get: function () {
            return !this.isForeground;
        },
        set: function (value) {
            this.isForeground = !value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "location", {
        /**
         * Gets or sets `location` of the page template element.
         * @private
         */
        get: function () {
            return this.currentLocation;
        },
        set: function (value) {
            if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
                this.currentLocation = value;
            }
            else {
                //
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "x", {
        /**
         * Gets or sets `X` co-ordinate of the template element on the page.
         * @private
         */
        get: function () {
            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;
            return value;
        },
        set: function (value) {
            if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
                this.currentLocation.x = value;
            }
            else {
                //
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "y", {
        /**
         * Gets or sets `Y` co-ordinate of the template element on the page.
         * @private
         */
        get: function () {
            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;
            return value;
        },
        set: function (value) {
            if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
                this.currentLocation.y = value;
            }
            else {
                //
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "size", {
        /**
         * Gets or sets `size` of the page template element.
         * @private
         */
        get: function () {
            return this.template.size;
        },
        set: function (value) {
            if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
                this.template.reset(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "width", {
        /**
         * Gets or sets `width` of the page template element.
         * @private
         */
        get: function () {
            return this.template.width;
        },
        set: function (value) {
            if (this.template.width !== value && this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
                var size = this.template.size;
                size.width = value;
                this.template.reset(size);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "height", {
        /**
         * Gets or sets `height` of the page template element.
         * @private
         */
        get: function () {
            return this.template.height;
        },
        set: function (value) {
            if (this.template.height !== value && this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
                var size = this.template.size;
                size.height = value;
                this.template.reset(size);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "graphics", {
        /**
         * Gets `graphics` context of the page template element.
         * @private
         */
        get: function () {
            return this.template.graphics;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "template", {
        /**
         * Gets Pdf `template` object.
         * @private
         */
        get: function () {
            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {
            //     this.pdfTemplate = new PdfTemplate(this.size);
            // }
            return this.pdfTemplate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "type", {
        /**
         * Gets or sets `type` of the usage of this page template.
         * @private
         */
        get: function () {
            return this.templateType;
        },
        set: function (value) {
            this.updateDocking(value);
            this.templateType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPageTemplateElement.prototype, "bounds", {
        /**
         * Gets or sets `bounds` of the page template.
         * @public
         */
        get: function () {
            return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](this.x, this.y), this.size);
        },
        set: function (value) {
            if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
                this.location = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](value.x, value.y);
                this.size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"](value.width, value.height);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Initialize Bounds` Initialize the bounds value of the template.
     * @private
     */
    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {
        this.x = arg1;
        this.y = arg2;
        this.pdfTemplate = new _graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_2__["PdfTemplate"](arg3, arg4);
        // this.graphics.colorSpace = this.page.document.colorSpace;
    };
    /**
     * `Updates Dock` property if template is used as header/footer.
     * @private
     */
    PdfPageTemplateElement.prototype.updateDocking = function (type) {
        if (type !== _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
            switch (type) {
                case _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Top:
                    this.dock = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Top;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Bottom:
                    this.dock = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Bottom;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Left:
                    this.dock = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Left;
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Right:
                    this.dock = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Right;
                    break;
            }
            this.resetAlignment();
        }
    };
    /**
     * `Resets alignment` of the template.
     * @private
     */
    PdfPageTemplateElement.prototype.resetAlignment = function () {
        this.alignment = _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].None;
    };
    /**
     * `Sets alignment` of the template.
     * @private
     */
    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {
        if (this.dock === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].None) {
            this.alignmentStyle = alignment;
        }
        else {
            // Template is docked and alignment has been changed.
            var canBeSet = false;
            switch (this.dock) {
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Left:
                    canBeSet = (alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopLeft || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleLeft ||
                        alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomLeft || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].None);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Top:
                    canBeSet = (alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopLeft || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopCenter ||
                        alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopRight || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].None);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Right:
                    canBeSet = (alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopRight || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleRight ||
                        alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomRight || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].None);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Bottom:
                    canBeSet = (alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomLeft || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomCenter
                        || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomRight || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].None);
                    break;
                case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Fill:
                    canBeSet = (alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleCenter || alignment === _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].None);
                    break;
            }
            if (canBeSet) {
                this.alignmentStyle = alignment;
            }
        }
    };
    /**
     * Draws the template.
     * @private
     */
    PdfPageTemplateElement.prototype.draw = function (layer, document) {
        var page = layer.page;
        var bounds = this.calculateBounds(page, document);
        if (bounds.x === -0) {
            bounds.x = 0;
        }
        layer.graphics.drawPdfTemplate(this.template, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["PointF"](bounds.x, bounds.y), new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["SizeF"](bounds.width, bounds.height));
    };
    /**
     * Calculates bounds of the page template.
     * @private
     */
    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {
        var result = this.bounds;
        if (this.alignmentStyle !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].None) {
            result = this.getAlignmentBounds(page, document);
        }
        else if (this.dockStyle !== _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].None) {
            result = this.getDockBounds(page, document);
        }
        return result;
    };
    /**
     * Calculates bounds according to the alignment.
     * @private
     */
    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {
        var result = this.bounds;
        if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
            result = this.getSimpleAlignmentBounds(page, document);
        }
        else {
            result = this.getTemplateAlignmentBounds(page, document);
        }
        return result;
    };
    /**
     * Calculates bounds according to the alignment.
     * @private
     */
    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {
        var bounds = this.bounds;
        var pdfSection = page.section;
        var actualBounds = pdfSection.getActualBounds(document, page, false);
        var x = this.x;
        var y = this.y;
        switch (this.alignmentStyle) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopLeft:
                x = 0;
                y = 0;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopCenter:
                x = (actualBounds.width - this.width) / 2;
                y = 0;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopRight:
                x = actualBounds.width - this.width;
                y = 0;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleLeft:
                x = 0;
                y = (actualBounds.height - this.height) / 2;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleCenter:
                x = (actualBounds.width - this.width) / 2;
                y = (actualBounds.height - this.height) / 2;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleRight:
                x = actualBounds.width - this.width;
                y = (actualBounds.height - this.height) / 2;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomLeft:
                x = 0;
                y = actualBounds.height - this.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomCenter:
                x = (actualBounds.width - this.width) / 2;
                y = actualBounds.height - this.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomRight:
                x = actualBounds.width - this.width;
                y = actualBounds.height - this.height;
                break;
        }
        bounds.x = x;
        bounds.y = y;
        return bounds;
    };
    /**
     * Calculates bounds according to the alignment.
     * @private
     */
    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {
        var result = this.bounds;
        var section = page.section;
        var actualBounds = section.getActualBounds(document, page, false);
        var x = this.x;
        var y = this.y;
        switch (this.alignmentStyle) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopLeft:
                if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Left) {
                    x = -actualBounds.x;
                    y = 0;
                }
                else if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Top) {
                    x = -actualBounds.x;
                    y = -actualBounds.y;
                }
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopCenter:
                x = (actualBounds.width - this.width) / 2;
                y = -actualBounds.y;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].TopRight:
                if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Right) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = 0;
                }
                else if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Top) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = -actualBounds.y;
                }
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleLeft:
                x = -actualBounds.x;
                y = (actualBounds.height - this.height) / 2;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleCenter:
                x = (actualBounds.width - this.width) / 2;
                y = (actualBounds.height - this.height) / 2;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].MiddleRight:
                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                y = (actualBounds.height - this.height) / 2;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomLeft:
                if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Left) {
                    x = -actualBounds.x;
                    y = actualBounds.height - this.height;
                }
                else if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Bottom) {
                    x = -actualBounds.x;
                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                }
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomCenter:
                x = (actualBounds.width - this.width) / 2;
                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfAlignmentStyle"].BottomRight:
                if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Right) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = actualBounds.height - this.height;
                }
                else if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].Bottom) {
                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                }
                break;
        }
        result.x = x;
        result.y = y;
        return result;
    };
    /**
     * Calculates bounds according to the docking.
     * @private
     */
    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {
        var result = this.bounds;
        if (this.type === _enum__WEBPACK_IMPORTED_MODULE_0__["TemplateType"].None) {
            result = this.getSimpleDockBounds(page, document);
        }
        else {
            result = this.getTemplateDockBounds(page, document);
        }
        return result;
    };
    /**
     * Calculates bounds according to the docking.
     * @private
     */
    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {
        var result = this.bounds;
        var section = page.section;
        var actualBounds = section.getActualBounds(document, page, false);
        var x = this.x;
        var y = this.y;
        var width = this.width;
        var height = this.height;
        switch (this.dockStyle) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Left:
                x = 0;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Top:
                x = 0;
                y = 0;
                width = actualBounds.width;
                height = this.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Right:
                x = actualBounds.width - this.width;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Bottom:
                x = 0;
                y = actualBounds.height - this.height;
                width = actualBounds.width;
                height = this.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Fill:
                x = 0;
                x = 0;
                width = actualBounds.width;
                height = actualBounds.height;
                break;
        }
        result = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](x, y, width, height);
        return result;
    };
    /**
     * Calculates template bounds basing on docking if template is a page template.
     * @private
     */
    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {
        var result = this.bounds;
        var section = page.section;
        var actualBounds = section.getActualBounds(document, page, false);
        var actualSize = section.pageSettings.getActualSize();
        var x = this.x;
        var y = this.y;
        var width = this.width;
        var height = this.height;
        switch (this.dockStyle) {
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Left:
                x = -actualBounds.x;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Top:
                x = -actualBounds.x;
                y = -actualBounds.y;
                width = actualSize.width;
                height = this.height;
                if (actualBounds.height < 0) {
                    y = -actualBounds.y + actualSize.height;
                }
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Right:
                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;
                y = 0;
                width = this.width;
                height = actualBounds.height;
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Bottom:
                x = -actualBounds.x;
                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;
                width = actualSize.width;
                height = this.height;
                if (actualBounds.height < 0) {
                    y -= actualSize.height;
                }
                break;
            case _enum__WEBPACK_IMPORTED_MODULE_0__["PdfDockStyle"].Fill:
                x = 0;
                x = 0;
                width = actualBounds.width;
                height = actualBounds.height;
                break;
        }
        result = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_1__["RectangleF"](x, y, width, height);
        return result;
    };
    return PdfPageTemplateElement;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js ***!
  \*****************************************************************************************************************************************/
/*! exports provided: PdfPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPage", function() { return PdfPage; });
/* harmony import */ var _pdf_page_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-page-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-base.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _annotations_annotation_collection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../annotations/annotation-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation-collection.js");
/* harmony import */ var _pdf_page_layer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pdf-page-layer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * Provides methods and properties to create pages and its elements.
 * `PdfPage` class inherited from the `PdfPageBase` class.
 * ```typescript
 * // create a new PDF document
 * let document : PdfDocument = new PdfDocument();
 * //
 * // add a new page to the document
 * let page1 : PdfPage = document.pages.add();
 * //
 * // set the font
 * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
 * // create black brush
 * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
 * // draw the text
 * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
 * // save the document
 * document.save('output.pdf');
 * // destroy the document
 * document.destroy();
 * ```
 */
var PdfPage = /** @class */ (function (_super) {
    __extends(PdfPage, _super);
    //constructors
    /**
     * Initialize the new instance for `PdfPage` class.
     * @private
     */
    function PdfPage() {
        var _this = _super.call(this, new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__["PdfDictionary"]()) || this;
        /**
         * Stores the instance of `PdfAnnotationCollection` class.
         * @hidden
         * @default null
         * @private
         */
        _this.annotationCollection = null;
        /**
         * Stores the instance of `PageBeginSave` event for Page Number Field.
         * @default null
         * @private
         */
        _this.beginSave = null;
        _this.initialize();
        return _this;
    }
    Object.defineProperty(PdfPage.prototype, "document", {
        //Properties
        /**
         * Gets current `document`.
         * @private
         */
        get: function () {
            if (this.section !== null && this.section.parent !== null) {
                return this.section.parent.document;
            }
            else {
                return null;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "graphics", {
        /**
         * Get the current `graphics`.
         * ```typescript
         * // create a new PDF document
         * let document : PdfDocument = new PdfDocument();
         * // add a new page to the document
         * let page1 : PdfPage = document.pages.add();
         * //
         * // get graphics
         * let graphics : PdfGraphics = page1.graphics;
         * //
         * // set the font
         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
         * // create black brush
         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
         * // draw the text
         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));
         * // save the document
         * document.save('output.pdf');
         * // destroy the document
         * document.destroy();
         * ```
         */
        get: function () {
            var result = this.defaultLayer.graphics;
            result.currentPage = this;
            return result;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "crossTable", {
        /**
         * Gets the `cross table`.
         * @private
         */
        get: function () {
            if (this.section === null) {
                throw new Error('PdfDocumentException : Page is not created');
            }
            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "size", {
        /**
         * Gets the size of the PDF page- Read only.
         * @public
         */
        get: function () {
            return this.section.pageSettings.size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "origin", {
        /**
         * Gets the `origin` of the page.
         * @private
         */
        get: function () {
            return this.section.pageSettings.origin;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPage.prototype, "annotations", {
        /**
         * Gets a collection of the `annotations` of the page- Read only.
         * @private
         */
        get: function () {
            if (this.annotationCollection == null) {
                this.annotationCollection = new _annotations_annotation_collection__WEBPACK_IMPORTED_MODULE_5__["PdfAnnotationCollection"](this);
                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {
                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);
                // }
                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);
            }
            return this.annotationCollection;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * `Initializes` a page.
     * @private
     */
    PdfPage.prototype.initialize = function () {
        this.dictionary.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_2__["PdfName"]('Page'));
        this.dictionary.pageBeginDrawTemplate = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_1__["SaveTemplateEventHandler"](this);
    };
    /**
     * Sets parent `section` to the page.
     * @private
     */
    PdfPage.prototype.setSection = function (section) {
        this.section = section;
        this.dictionary.items.setValue(this.dictionaryProperties.parent, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_3__["PdfReferenceHolder"](section));
    };
    /**
     * `Resets the progress`.
     * @private
     */
    PdfPage.prototype.resetProgress = function () {
        this.isProgressOn = false;
    };
    /**
     * Get the page size reduced by page margins and page template dimensions.
     * ```typescript
     * // create a new PDF document
     * let document : PdfDocument = new PdfDocument();
     * // add a pages to the document
     * let page1 : PdfPage = document.pages.add();
     * // create new standard font
     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);
     * // set brush
     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));
     * //
     * // set the specified point using `getClientSize` method
     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);
     * // draw the text
     * page1.graphics.drawString('Hello World', font, blackBrush, point);
     * //
     * // save the document
     * document.save('output.pdf');
     * // destroy the document
     * document.destroy();
     * ```
     */
    PdfPage.prototype.getClientSize = function () {
        var returnValue = this.section.getActualBounds(this, true);
        return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_4__["SizeF"](returnValue.width, returnValue.height);
    };
    /**
     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.
     * @private
     */
    PdfPage.prototype.pageBeginSave = function () {
        var doc = this.document;
        if (typeof doc !== undefined && doc != null) {
            this.drawPageTemplates(doc);
        }
        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {
            this.beginSave(this);
        }
    };
    /**
     * Helper method to draw template elements.
     * @private
     */
    PdfPage.prototype.drawPageTemplates = function (document) {
        // Draw Background templates.
        var hasBackTemplates = this.section.containsTemplates(document, this, false);
        if (hasBackTemplates) {
            var backLayer = new _pdf_page_layer__WEBPACK_IMPORTED_MODULE_6__["PdfPageLayer"](this, false);
            this.layers.insert(0, backLayer);
            this.section.drawTemplates(this, backLayer, document, false);
            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {
                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {
                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];
                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);
                }
            }
        }
        // Draw Foreground templates.
        var hasFrontTemplates = this.section.containsTemplates(document, this, true);
        if (hasFrontTemplates) {
            var frontLayer = new _pdf_page_layer__WEBPACK_IMPORTED_MODULE_6__["PdfPageLayer"](this, false);
            this.layers.add(frontLayer);
            this.section.drawTemplates(this, frontLayer, document, true);
        }
    };
    return PdfPage;
}(_pdf_page_base__WEBPACK_IMPORTED_MODULE_0__["PdfPageBase"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-collection.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-collection.js ***!
  \*******************************************************************************************************************************************************/
/*! exports provided: PdfSectionCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSectionCollection", function() { return PdfSectionCollection; });
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _pdf_section__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pdf-section */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");








/**
 * Represents the `collection of the sections`.
 * @private
 */
var PdfSectionCollection = /** @class */ (function () {
    //constructor
    /**
     * Initializes a new instance of the `PdfSectionCollection` class.
     * @private
     */
    function PdfSectionCollection(document) {
        /**
         * @hidden
         * @private
         */
        this.sections = [];
        /**
         * @hidden
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__["DictionaryProperties"]();
        // if (document === null) {
        //     throw new Error('ArgumentNullException : document');
        // }
        this.pdfDocument = document.clone();
        this.initialize();
    }
    Object.defineProperty(PdfSectionCollection.prototype, "section", {
        //Properties
        /**
         * Gets the `Section` collection.
         */
        get: function () {
            return this.sections;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionCollection.prototype, "document", {
        /**
         * Gets a parent `document`.
         * @private
         */
        get: function () {
            return this.pdfDocument;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionCollection.prototype, "count", {
        /**
         * Gets the `number of sections` in a document.
         * @private
         */
        get: function () {
            return this.sections.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionCollection.prototype, "element", {
        /**
         * Gets the wrapped `element`.
         * @private
         */
        get: function () {
            return this.pages;
        },
        enumerable: true,
        configurable: true
    });
    //Methods
    /**
     * `Initializes the object`.
     * @private
     */
    PdfSectionCollection.prototype.initialize = function () {
        this.sectionCount = new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_0__["PdfNumber"](0);
        this.sectionCollection = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__["PdfArray"]();
        this.pages = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["PdfDictionary"]();
        this.pages.beginSave = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["SaveSectionCollectionEventHandler"](this);
        this.pages.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_1__["PdfName"]('Pages'));
        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);
        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);
        this.pages.items.setValue(this.dictionaryProperties.resources, new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_3__["PdfDictionary"]());
        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);
    };
    /**
     * Initializes a new instance of the `PdfSectionCollection` class.
     * @private
     */
    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {
        if (index < 0 || index >= this.count) {
            throw new Error('IndexOutOfRangeException()');
        }
        return this.sections[index];
    };
    /**
     * In fills dictionary by the data from `Page settings`.
     * @private
     */
    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {
        // if (container === null) {
        //     throw new Error('ArgumentNullException : container');
        // }
        // if (pageSettings === null) {
        //     throw new Error('ArgumentNullException : pageSettings');
        // }
        var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](), pageSettings.size);
        container.items.setValue(this.dictionaryProperties.mediaBox, _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__["PdfArray"].fromRectangle(bounds));
    };
    /**
     * `Adds` the specified section.
     * @private
     */
    PdfSectionCollection.prototype.add = function (section) {
        if (typeof section === 'undefined') {
            var section_1 = new _pdf_section__WEBPACK_IMPORTED_MODULE_6__["PdfSection"](this.pdfDocument);
            this.add(section_1);
            return section_1;
        }
        else {
            // if (section === null) {
            //     throw new Error('ArgumentNullException : section');
            // }
            var r = this.checkSection(section);
            this.sections.push(section);
            section.parent = this;
            this.sectionCollection.add(r);
            return this.sections.indexOf(section);
        }
    };
    /**
     * `Checks` if the section is within the collection.
     * @private
     */
    PdfSectionCollection.prototype.checkSection = function (section) {
        var r = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_4__["PdfReferenceHolder"](section);
        var contains = this.sectionCollection.contains(r);
        // if (contains) {
        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');
        // }
        return r;
    };
    /**
     * Catches the Save event of the dictionary to `count the pages`.
     * @private
     */
    PdfSectionCollection.prototype.countPages = function () {
        var count = 0;
        this.sections.forEach(function (n) { return (count += n.count); });
        return count;
    };
    /**
     * Catches the Save event of the dictionary to `count the pages`.
     * @hidden
     * @private
     */
    PdfSectionCollection.prototype.beginSave = function () {
        this.sectionCount.intValue = this.countPages();
    };
    //Fields
    /**
     * Rotate factor for page `rotation`.
     * @default 90
     * @private
     */
    PdfSectionCollection.rotateFactor = 90;
    return PdfSectionCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-page-collection.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-page-collection.js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: PdfSectionPageCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSectionPageCollection", function() { return PdfSectionPageCollection; });
/**
 * Represents the `collection of pages in a section`.
 * @private
 */
var PdfSectionPageCollection = /** @class */ (function () {
    // Constructors
    /**
     * Initializes a new instance of the `PdfSectionPageCollection` class.
     * @private
     */
    function PdfSectionPageCollection(section) {
        //  Fields
        /**
         * @hidden
         * @private
         */
        this.pdfSection = null;
        if (section == null) {
            throw Error('ArgumentNullException("section")');
        }
        this.section = section;
    }
    Object.defineProperty(PdfSectionPageCollection.prototype, "section", {
        // Properties
        /**
         * Gets the `PdfPage` at the specified index.
         * @private
         */
        get: function () {
            return this.pdfSection;
        },
        set: function (value) {
            this.pdfSection = value;
        },
        enumerable: true,
        configurable: true
    });
    // Public Methods
    /**
     * `Determines` whether the specified page is within the collection.
     * @private
     */
    PdfSectionPageCollection.prototype.contains = function (page) {
        return this.section.contains(page);
    };
    /**
     * `Removes` the specified page from collection.
     * @private
     */
    PdfSectionPageCollection.prototype.remove = function (page) {
        this.section.remove(page);
    };
    /**
     * `Adds` a new page from collection.
     * @private
     */
    PdfSectionPageCollection.prototype.add = function () {
        return this.section.add();
    };
    return PdfSectionPageCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-templates.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-templates.js ***!
  \******************************************************************************************************************************************************/
/*! exports provided: PdfSectionTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSectionTemplate", function() { return PdfSectionTemplate; });
/* harmony import */ var _document_pdf_document_template__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../document/pdf-document-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-template.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfSectionTemplate.ts class for EJ2-PDF
 */

/**
 * Represents a `page template` for all the pages in the section.
 */
var PdfSectionTemplate = /** @class */ (function (_super) {
    __extends(PdfSectionTemplate, _super);
    // Constructors
    /**
     * `Creates a new object`.
     * @private
     */
    function PdfSectionTemplate() {
        var _this = _super.call(this) || this;
        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;
        return _this;
    }
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentLeftTemplate", {
        // Properties
        /**
         * Gets or sets value indicating whether parent `Left page template should be used or not`.
         * @private
         */
        get: function () {
            return this.leftValue;
        },
        set: function (value) {
            this.leftValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentTopTemplate", {
        /**
         * Gets or sets value indicating whether parent `Top page template should be used or not`.
         * @private
         */
        get: function () {
            return this.topValue;
        },
        set: function (value) {
            this.topValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentRightTemplate", {
        /**
         * Gets or sets value indicating whether parent `Right page template should be used or not`.
         * @private
         */
        get: function () {
            return this.rightValue;
        },
        set: function (value) {
            this.rightValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentBottomTemplate", {
        /**
         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.
         * @private
         */
        get: function () {
            return this.bottomValue;
        },
        set: function (value) {
            this.bottomValue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSectionTemplate.prototype, "applyDocumentStamps", {
        /**
         * Gets or sets value indicating whether the `stamp value` is true or not.
         * @private
         */
        get: function () {
            return this.stampValue;
        },
        set: function (value) {
            this.stampValue = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfSectionTemplate;
}(_document_pdf_document_template__WEBPACK_IMPORTED_MODULE_0__["PdfDocumentTemplate"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: PdfSection, PageSettingsState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfSection", function() { return PdfSection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PageSettingsState", function() { return PageSettingsState; });
/* harmony import */ var _pdf_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-page */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js");
/* harmony import */ var _page_added_event_arguments__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./page-added-event-arguments */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/page-added-event-arguments.js");
/* harmony import */ var _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _pdf_section_collection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pdf-section-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-collection.js");
/* harmony import */ var _pdf_section_page_collection__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pdf-section-page-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-page-collection.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _pdf_section_templates__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pdf-section-templates */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-templates.js");













/**
 * Represents a `section` entity. A section it's a set of the pages with similar page settings.
 */
var PdfSection = /** @class */ (function () {
    function PdfSection(document, pageSettings) {
        //Fields
        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)
        /**
         * @hidden
         * @private
         */
        this.pageAdded = new _page_added_event_arguments__WEBPACK_IMPORTED_MODULE_1__["PageAddedEventArgs"]();
        /**
         * @hidden
         * @private
         */
        this.pdfPages = [];
        /**
         * @hidden
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_7__["DictionaryProperties"]();
        this.pdfDocument = document;
        if (typeof pageSettings === 'undefined') {
            this.settings = document.pageSettings.clone();
            this.initialSettings = this.settings.clone();
        }
        else {
            this.settings = pageSettings.clone();
            this.initialSettings = this.settings.clone();
        }
        this.initialize();
    }
    Object.defineProperty(PdfSection.prototype, "parent", {
        //Property
        /**
         * Gets or sets the `parent`.
         * @private
         */
        get: function () {
            return this.sectionCollection;
        },
        set: function (value) {
            this.sectionCollection = value;
            this.section.items.setValue(this.dictionaryProperties.parent, new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_2__["PdfReferenceHolder"](value));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "parentDocument", {
        /**
         * Gets the `parent document`.
         * @private
         */
        get: function () {
            return this.pdfDocument;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "pageSettings", {
        /**
         * Gets or sets the `page settings` of the section.
         * @private
         */
        get: function () {
            return this.settings;
        },
        set: function (value) {
            if (value != null) {
                this.settings = value;
            }
            else {
                throw Error('Value can not be null.');
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "element", {
        /**
         * Gets the wrapped `element`.
         * @private
         */
        get: function () {
            return this.section;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "count", {
        /**
         * Gets the `count` of the pages in the section.
         * @private
         */
        get: function () {
            return this.pagesReferences.count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "template", {
        /**
         * Gets or sets a `template` for the pages in the section.
         * @private
         */
        get: function () {
            if (this.pageTemplate == null) {
                this.pageTemplate = new _pdf_section_templates__WEBPACK_IMPORTED_MODULE_11__["PdfSectionTemplate"]();
            }
            return this.pageTemplate;
        },
        set: function (value) {
            this.pageTemplate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "document", {
        /**
         * Gets the `document`.
         * @private
         */
        get: function () {
            return this.sectionCollection.document;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfSection.prototype, "pages", {
        /**
         * Gets the collection of `pages` in a section (Read only)
         * @private
         */
        get: function () {
            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {
                this.pagesCollection = new _pdf_section_page_collection__WEBPACK_IMPORTED_MODULE_9__["PdfSectionPageCollection"](this);
            }
            return this.pagesCollection;
        },
        enumerable: true,
        configurable: true
    });
    //methods
    /**
     * `Return the page collection` of current section.
     * @private
     */
    PdfSection.prototype.getPages = function () {
        return this.pdfPages;
    };
    /**
     * `Translates` point into native coordinates of the page.
     * @private
     */
    PdfSection.prototype.pointToNativePdf = function (page, point) {
        var bounds = this.getActualBounds(page, true);
        point.x += bounds.x;
        point.y = this.pageSettings.height - (point.y);
        return point;
    };
    /**
     * Sets the page setting of the current section.
     * @public
     * @param settings Instance of `PdfPageSettings`
     */
    PdfSection.prototype.setPageSettings = function (settings) {
        this.settings = settings;
        this.state.orientation = settings.orientation;
        this.state.rotate = settings.rotate;
        this.state.size = settings.size;
        this.state.origin = settings.origin;
    };
    /**
     * `Initializes` the object.
     * @private
     */
    PdfSection.prototype.initialize = function () {
        this.pagesReferences = new _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_3__["PdfArray"]();
        this.section = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_6__["PdfDictionary"]();
        this.state = new PageSettingsState(this.pdfDocument);
        this.section.sectionBeginSave = new _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_6__["SaveSectionEventHandler"](this, this.state);
        this.pageCount = new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](0);
        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);
        this.section.items.setValue(this.dictionaryProperties.type, new _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_5__["PdfName"](this.dictionaryProperties.pages));
        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);
    };
    /**
     * Checks whether any template should be printed on this layer.
     * @private
     * @param document The parent document.
     * @param page The parent page.
     * @param foreground Layer z-order.
     * @returns True - if some content should be printed on the layer, False otherwise.
     */
    PdfSection.prototype.containsTemplates = function (document, page, foreground) {
        var documentHeaders = this.getDocumentTemplates(document, page, foreground);
        var sectionTemplates = this.getSectionTemplates(page, foreground);
        return (documentHeaders.length > 0 || sectionTemplates.length > 0);
    };
    /**
     * Returns array of the document templates.
     * @private
     * @param document The parent document.
     * @param page The parent page.
     * @param headers If true - return headers/footers, if false - return simple templates.
     * @param foreground If true - return foreground templates, if false - return background templates.
     * @returns Returns array of the document templates.
     */
    /* tslint:disable */
    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {
        var templates = [];
        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {
            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {
                templates.push(document.template.getTop(page));
            }
        }
        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {
            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {
                templates.push(document.template.getBottom(page));
            }
        }
        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {
            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {
                templates.push(document.template.getLeft(page));
            }
        }
        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {
            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {
                templates.push(document.template.getRight(page));
            }
        }
        return templates;
    };
    /**
     * Returns array of the section templates.
     * @private
     * @param page The parent page.
     * @param foreground If true - return foreground templates, if false - return background templates.
     * @returns Returns array of the section templates.
     */
    /* tslint:disable */
    PdfSection.prototype.getSectionTemplates = function (page, foreground) {
        var templates = [];
        if (this.template.getTop(page) != null) {
            var pageTemplate = this.template.getTop(page);
            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {
                templates.push(pageTemplate);
            }
        }
        if (this.template.getBottom(page) != null) {
            var pageTemplate = this.template.getBottom(page);
            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {
                templates.push(pageTemplate);
            }
        }
        if (this.template.getLeft(page) != null) {
            var pageTemplate = this.template.getLeft(page);
            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {
                templates.push(pageTemplate);
            }
        }
        if (this.template.getRight(page) != null) {
            var pageTemplate = this.template.getRight(page);
            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {
                templates.push(pageTemplate);
            }
        }
        return templates;
    };
    /* tslint:enable */
    /**
     * `Adds` the specified page.
     * @private
     */
    PdfSection.prototype.add = function (page) {
        if (typeof page === 'undefined') {
            var page_1 = new _pdf_page__WEBPACK_IMPORTED_MODULE_0__["PdfPage"]();
            this.add(page_1);
            return page_1;
        }
        else {
            var r = this.checkPresence(page);
            this.pdfPages.push(page);
            this.pagesReferences.add(r);
            page.setSection(this);
            page.resetProgress();
            this.pageAddedMethod(page);
        }
    };
    /**
     * `Checks the presence`.
     * @private
     */
    PdfSection.prototype.checkPresence = function (page) {
        var rh = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_2__["PdfReferenceHolder"](page);
        var contains = false;
        var sc = this.parent;
        for (var index = 0; index < sc.section.length; index++) {
            var section = sc.section[index];
            contains = contains || section.contains(page);
        }
        return rh;
    };
    /**
     * `Determines` whether the page in within the section.
     * @private
     */
    PdfSection.prototype.contains = function (page) {
        var index = this.indexOf(page);
        return (0 <= index);
    };
    /**
     * Get the `index of` the page.
     * @private
     */
    PdfSection.prototype.indexOf = function (page) {
        for (var index = 0; index < this.pdfPages.length; index++) {
            if (this.pdfPages[index] === page) {
                return this.pdfPages.indexOf(page);
            }
        }
        var r = new _primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_2__["PdfReferenceHolder"](page);
        return this.pagesReferences.indexOf(r);
    };
    /**
     * Call two event's methods.
     * @hidden
     * @private
     */
    PdfSection.prototype.pageAddedMethod = function (page) {
        //Create event's arguments
        var args = new _page_added_event_arguments__WEBPACK_IMPORTED_MODULE_1__["PageAddedEventArgs"](page);
        this.onPageAdded(args);
        var parent = this.parent;
        parent.document.pages.onPageAdded(args);
        this.pageCount.intValue = this.count;
    };
    /**
     * Called when the page has been added.
     * @hidden
     * @private
     */
    PdfSection.prototype.onPageAdded = function (args) {
        //
    };
    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {
        if (arg1 instanceof _pdf_page__WEBPACK_IMPORTED_MODULE_0__["PdfPage"] && typeof arg2 === 'boolean') {
            var result = void 0;
            var document_1 = this.parent.document;
            result = this.getActualBounds(document_1, arg1, arg2);
            return result;
        }
        else {
            arg1 = arg1;
            arg2 = arg2;
            arg3 = arg3;
            var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_10__["RectangleF"](0, 0, 0, 0);
            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;
            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;
            var left = this.getLeftIndentWidth(arg1, arg2, arg3);
            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);
            var right = this.getRightIndentWidth(arg1, arg2, arg3);
            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);
            bounds.x += left;
            bounds.y += top_1;
            bounds.width -= (left + right);
            bounds.height -= (top_1 + bottom);
            return bounds;
        }
    };
    /**
     * Calculates width of the `left indent`.
     * @private
     */
    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.left : 0;
        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;
        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;
        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;
        return value;
    };
    /**
     * Calculates `Height` of the top indent.
     * @private
     */
    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.top : 0;
        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;
        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;
        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;
        return value;
    };
    /**
     * Calculates `width` of the right indent.
     * @private
     */
    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.right : 0;
        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;
        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;
        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;
        return value;
    };
    /**
     * Calculates `Height` of the bottom indent.
     * @private
     */
    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {
        if (document == null) {
            throw new Error('ArgumentNullException:document');
        }
        if (page == null) {
            throw new Error('ArgumentNullException:page');
        }
        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;
        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;
        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;
        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;
        return value;
    };
    /**
     * `Removes` the page from the section.
     * @private
     */
    PdfSection.prototype.remove = function (page) {
        if (page == null) {
            throw Error('ArgumentNullException("page")');
        }
        var index = this.pdfPages.indexOf(page);
        this.pagesReferences.removeAt(index);
        var temproaryPages = [];
        for (var j = 0; j < index; j++) {
            temproaryPages.push(this.pdfPages[j]);
        }
        for (var j = index + 1; j < this.pdfPages.length; j++) {
            temproaryPages.push(this.pdfPages[j]);
        }
        this.pdfPages = temproaryPages;
    };
    /**
     * In fills dictionary by the data from `Page settings`.
     * @private
     */
    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {
        var bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_10__["RectangleF"](state.origin, state.size);
        container.items.setValue(this.dictionaryProperties.mediaBox, _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_3__["PdfArray"].fromRectangle(bounds));
        var rotate = 0;
        rotate = _pdf_section_collection__WEBPACK_IMPORTED_MODULE_8__["PdfSectionCollection"].rotateFactor * state.rotate;
        var angle = new _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_4__["PdfNumber"](rotate);
        container.items.setValue(this.dictionaryProperties.rotate, angle);
    };
    /**
     * Catches the Save event of the dictionary.
     * @hidden
     * @private
     */
    PdfSection.prototype.beginSave = function (state, writer) {
        var doc = writer.document;
        this.applyPageSettings(this.section, doc.pageSettings, state);
    };
    /**
     * Draws page templates on the page.
     * @private
     */
    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {
        var documentHeaders = this.getDocumentTemplates(document, page, foreground);
        var sectionHeaders = this.getSectionTemplates(page, foreground);
        this.drawTemplatesHelper(layer, document, documentHeaders);
        this.drawTemplatesHelper(layer, document, sectionHeaders);
    };
    /**
     * Draws page templates on the page.
     * @private
     */
    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {
        if (templates != null && templates.length > 0) {
            var len = templates.length;
            for (var i = 0; i < len; i++) {
                var template = templates[i];
                template.draw(layer, document);
            }
        }
    };
    return PdfSection;
}());

var PageSettingsState = /** @class */ (function () {
    //Public Constructor
    /**
     * New instance to store the `PageSettings`.
     * @private
     */
    function PageSettingsState(document) {
        this.pageOrientation = document.pageSettings.orientation;
        this.pageRotate = document.pageSettings.rotate;
        this.pageSize = document.pageSettings.size;
        this.pageOrigin = document.pageSettings.origin;
    }
    Object.defineProperty(PageSettingsState.prototype, "orientation", {
        //public Properties
        /**
         * @hidden
         * @private
         */
        get: function () {
            return this.pageOrientation;
        },
        set: function (value) {
            this.pageOrientation = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageSettingsState.prototype, "rotate", {
        /**
         * @hidden
         * @private
         */
        get: function () {
            return this.pageRotate;
        },
        set: function (value) {
            this.pageRotate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageSettingsState.prototype, "size", {
        /**
         * @hidden
         * @private
         */
        get: function () {
            return this.pageSize;
        },
        set: function (value) {
            this.pageSize = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PageSettingsState.prototype, "origin", {
        /**
         * @hidden
         * @private
         */
        get: function () {
            return this.pageOrigin;
        },
        set: function (value) {
            this.pageOrigin = value;
        },
        enumerable: true,
        configurable: true
    });
    return PageSettingsState;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js ***!
  \***********************************************************************************************************************************************/
/*! exports provided: PdfArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfArray", function() { return PdfArray; });
/* harmony import */ var _pdf_number__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../input-output/pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");


/**
 * `PdfArray` class is used to perform array related primitive operations.
 * @private
 */
var PdfArray = /** @class */ (function () {
    function PdfArray(array) {
        //Fields
        /**
         * `startMark` - '['
         * @private
         */
        this.startMark = '[';
        /**
         * `endMark` - ']'.
         * @private
         */
        this.endMark = ']';
        /**
         * Internal variable to store the `position`.
         * @default -1
         * @private
         */
        this.position9 = -1;
        /**
         * Internal variable to hold `cloned object`.
         * @default null
         * @private
         */
        this.clonedObject9 = null;
        /**
         * Represents the Font dictionary.
         * @hidden
         * @private
         */
        this.isFont = false;
        if (typeof array === 'undefined') {
            this.internalElements = [];
        }
        else {
            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {
                var tempNumberArray = array;
                for (var index = 0; index < tempNumberArray.length; index++) {
                    var pdfNumber = new _pdf_number__WEBPACK_IMPORTED_MODULE_0__["PdfNumber"](tempNumberArray[index]);
                    this.add(pdfNumber);
                }
                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {
            }
            else {
                var tempArray = array;
                // if (tempArray.Elements.length > 0) {
                this.internalElements = [];
                for (var index = 0; index < tempArray.elements.length; index++) {
                    this.internalElements.push(tempArray.elements[index]);
                }
                // }
            }
        }
    }
    //property
    /**
     * Gets the `IPdfSavable` at the specified index.
     * @private
     */
    PdfArray.prototype.items = function (index) {
        // if (index < 0 || index >= this.Count) {
        //     throw new Error('ArgumentOutOfRangeException : index, The index can"t be less then zero or greater then Count.');
        // }
        return this.internalElements[index];
    };
    Object.defineProperty(PdfArray.prototype, "count", {
        /**
         * Gets the `count`.
         * @private
         */
        get: function () {
            return this.internalElements.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "status", {
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.status9;
        },
        set: function (value) {
            this.status9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.isSaving9;
        },
        set: function (value) {
            this.isSaving9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            return this.clonedObject9;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.position9;
        },
        set: function (value) {
            this.position9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index9;
        },
        set: function (value) {
            this.index9 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "CrossTable", {
        /**
         * Returns `PdfCrossTable` associated with the object.
         * @private
         */
        get: function () {
            return this.pdfCrossTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfArray.prototype, "elements", {
        /**
         * Gets the `elements` of the Pdf Array.
         * @private
         */
        get: function () {
            return this.internalElements;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Adds` the specified element to the PDF array.
     * @private
     */
    PdfArray.prototype.add = function (element) {
        // if (element === null) {
        //     throw new Error('ArgumentNullException : obj');
        // }
        if (typeof this.internalElements === 'undefined') {
            this.internalElements = [];
        }
        this.internalElements.push(element);
        this.markedChange();
    };
    /**
     * `Marks` the object changed.
     * @private
     */
    PdfArray.prototype.markedChange = function () {
        this.bChanged = true;
    };
    /**
     * `Determines` whether the specified element is within the array.
     * @private
     */
    PdfArray.prototype.contains = function (element) {
        var returnValue = false;
        for (var index = 0; index < this.internalElements.length; index++) {
            var tempElement = this.internalElements[index];
            var inputElement = element;
            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {
                if (tempElement.value === inputElement.value) {
                    return true;
                }
            }
            // if (this.internalElements[index] === element) {
            //     returnValue = true;
            // }
        }
        return returnValue;
    };
    /**
     * Returns the `primitive object` of input index.
     * @private
     */
    PdfArray.prototype.getItems = function (index) {
        // if (index < 0 || index >= this.Count) {
        //     throw new Error('ArgumentOutOfRangeException : index , The index can"t be less then zero or greater then Count.');
        // }
        return this.internalElements[index];
    };
    /**
     * `Saves` the object using the specified writer.
     * @private
     */
    PdfArray.prototype.save = function (writer) {
        // if (writer === null) {
        //     throw new Error('ArgumentNullException : writer');
        // }
        writer.write(this.startMark);
        for (var i = 0, len = this.count; i < len; i++) {
            this.getItems(i).save(writer);
            if (i + 1 !== len) {
                writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_1__["Operators"].whiteSpace);
            }
        }
        writer.write(this.endMark);
    };
    /**
     * Creates a `copy of PdfArray`.
     * @private
     */
    PdfArray.prototype.clone = function (crossTable) {
        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {
        //     return this.clonedObject9;
        // } else {
        this.clonedObject9 = null;
        // Else clone the object.
        var newArray = new PdfArray();
        for (var index = 0; index < this.internalElements.length; index++) {
            var obj = this.internalElements[index];
            newArray.add(obj.clone(crossTable));
        }
        newArray.pdfCrossTable = crossTable;
        this.clonedObject9 = newArray;
        return newArray;
    };
    /**
     * Creates filled PDF array `from the rectangle`.
     * @private
     */
    PdfArray.fromRectangle = function (bounds) {
        var values = [bounds.x, bounds.y, bounds.width, bounds.height];
        var array = new PdfArray(values);
        return array;
    };
    // /**
    //  * Creates the rectangle from filled PDF array.
    //  * @private
    //  */
    // public ToRectangle() : RectangleF {
    //     if (this.Count < 4) {
    //         throw Error('InvalidOperationException-Can not convert to rectangle.');
    //     }
    //     let x1 : number;
    //     let x2 : number;
    //     let y1 : number;
    //     let y2 : number;
    //     let num : PdfNumber = this.getItems(0) as PdfNumber;
    //     x1 = num.IntValue;
    //     num = this.getItems(1) as PdfNumber;
    //     y1 = num.IntValue;
    //     num = this.getItems(2) as PdfNumber;
    //     x2 = num.IntValue;
    //     num = this.getItems(3) as PdfNumber;
    //     y2 = num.IntValue;
    //     let x : number = Math.min(x1, x2);
    //     let y : number = Math.min(y1, y2);
    //     let width : number = Math.abs(x1 - x2);
    //     let height : number = Math.abs(y1 - y2);
    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));
    //     return rect;
    // }
    /**
     * `Inserts` the element into the array.
     * @private
     */
    PdfArray.prototype.insert = function (index, element) {
        if (index < this.internalElements.length && index > 0) {
            var tempElements = [];
            for (var i = 0; i < index; i++) {
                tempElements.push(this.internalElements[i]);
            }
            tempElements.push(element);
            for (var i = index; i < this.internalElements.length; i++) {
                tempElements.push(this.internalElements[i]);
            }
            this.internalElements = tempElements;
        }
        else {
            this.internalElements.push(element);
        }
        this.markChanged();
    };
    /**
     * `Checks whether array contains the element`.
     * @private
     */
    PdfArray.prototype.indexOf = function (element) {
        return this.internalElements.indexOf(element);
    };
    /**
     * `Removes` element from the array.
     * @private
     */
    PdfArray.prototype.remove = function (element) {
        // if (element === null) {
        //     throw new Error('ArgumentNullException : element');
        // }
        var index = this.internalElements.indexOf(element);
        // if (index >= 0 && index < this.internalElements.length) {
        this.internalElements[index] = null;
        // }
        this.markChanged();
    };
    /**
     * `Remove` the element from the array by its index.
     * @private
     */
    PdfArray.prototype.removeAt = function (index) {
        // this.internalElements.RemoveAt(index);
        if (this.internalElements.length > index) {
            var tempArray = [];
            for (var i = 0; i < index; i++) {
                tempArray.push(this.internalElements[i]);
            }
            for (var i = index + 1; i < this.internalElements.length; i++) {
                tempArray.push(this.internalElements[i]);
            }
            this.internalElements = tempArray;
        }
        this.markChanged();
    };
    /**
     * `Clear` the array.
     * @private
     */
    PdfArray.prototype.clear = function () {
        this.internalElements = [];
        this.markChanged();
    };
    /**
     * `Marks` the object changed.
     * @private
     */
    PdfArray.prototype.markChanged = function () {
        this.bChanged = true;
    };
    return PdfArray;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-boolean.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-boolean.js ***!
  \*************************************************************************************************************************************************/
/*! exports provided: PdfBoolean */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBoolean", function() { return PdfBoolean; });
/**
 * `PdfBoolean` class is used to perform boolean related primitive operations.
 * @private
 */
var PdfBoolean = /** @class */ (function () {
    //constructor
    /**
     * Initializes a new instance of the `PdfBoolean` class.
     * @private
     */
    function PdfBoolean(value) {
        /**
         * Internal variable to store the `position`.
         * @default -1
         * @private
         */
        this.currentPosition = -1;
        this.value = value;
    }
    Object.defineProperty(PdfBoolean.prototype, "status", {
        //Properties
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.objectStatus;
        },
        set: function (value) {
            this.objectStatus = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.saving;
        },
        set: function (value) {
            this.saving = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index;
        },
        set: function (value) {
            this.index = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.currentPosition;
        },
        set: function (value) {
            this.currentPosition = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBoolean.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            var rValue = null;
            return rValue;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Saves` the object using the specified writer.
     * @private
     */
    PdfBoolean.prototype.save = function (writer) {
        writer.write(this.boolToStr(this.value));
    };
    /**
     * Creates a `copy of PdfBoolean`.
     * @private
     */
    PdfBoolean.prototype.clone = function (crossTable) {
        var newNumber = new PdfBoolean(this.value);
        return newNumber;
    };
    // Implementation
    /**
     * Converts `boolean to string` - 0/1 'true'/'false'.
     * @private
     */
    PdfBoolean.prototype.boolToStr = function (value) {
        return value ? 'true' : 'false';
    };
    return PdfBoolean;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js ***!
  \****************************************************************************************************************************************************/
/*! exports provided: PdfDictionary, SaveSectionCollectionEventHandler, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler, SaveAnnotationEventHandler, SaveSectionEventHandler, SaveTemplateEventHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfDictionary", function() { return PdfDictionary; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveSectionCollectionEventHandler", function() { return SaveSectionCollectionEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveDescendantFontEventHandler", function() { return SaveDescendantFontEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveFontDictionaryEventHandler", function() { return SaveFontDictionaryEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveAnnotationEventHandler", function() { return SaveAnnotationEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveSectionEventHandler", function() { return SaveSectionEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveTemplateEventHandler", function() { return SaveTemplateEventHandler; });
/* harmony import */ var _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony import */ var _pdf_name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../input-output/pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");




/**
 * `PdfDictionary` class is used to perform primitive operations.
 * @private
 */
var PdfDictionary = /** @class */ (function () {
    function PdfDictionary(dictionary) {
        /**
         * Internal variable to store the `position`.
         * @default -1
         * @private
         */
        this.position7 = -1;
        /**
         * The `IPdfSavable` with the specified key.
         * @private
         */
        this.primitiveItems = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
        /**
         * `Start marker` for dictionary.
         * @private
         */
        this.prefix = '<<';
        /**
         * `End marker` for dictionary.
         * @private
         */
        this.suffix = '>>';
        /**
         * @hidden
         * @private
         */
        this.resources = [];
        /**
         * Internal variable to hold `cloned object`.
         * @default null
         * @private
         */
        this.object = null;
        /**
         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.
         * @default true
         * @private
         */
        this.archive = true;
        /**
         * Represents the Font dictionary.
         * @hidden
         * @private
         */
        this.isFont = false;
        if (typeof dictionary === 'undefined') {
            this.primitiveItems = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
            this.encrypt = true;
            this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__["DictionaryProperties"]();
        }
        else {
            this.primitiveItems = new _collections_dictionary__WEBPACK_IMPORTED_MODULE_0__["Dictionary"]();
            var keys = dictionary.items.keys();
            var values = dictionary.items.values();
            for (var index = 0; index < dictionary.items.size(); index++) {
                this.primitiveItems.setValue(keys[index], values[index]);
            }
            this.status = dictionary.status;
            this.freezeChanges(this);
            this.encrypt = true;
            this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_3__["DictionaryProperties"]();
        }
    }
    Object.defineProperty(PdfDictionary.prototype, "items", {
        //Properties
        /**
         * Gets or sets the `IPdfSavable` with the specified key.
         * @private
         */
        get: function () {
            return this.primitiveItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "status", {
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.status7;
        },
        set: function (value) {
            this.status7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.isSaving7;
        },
        set: function (value) {
            this.isSaving7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index7;
        },
        set: function (value) {
            this.index7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            return this.object;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.position7;
        },
        set: function (value) {
            this.position7 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "Count", {
        /**
         * Gets the `count`.
         * @private
         */
        get: function () {
            return this.primitiveItems.size();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfDictionary.prototype, "Dictionary", {
        /**
         * Collection of `items` in the object.
         * @private
         */
        get: function () {
            return this;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get flag if need to `archive` dictionary.
     * @private
     */
    PdfDictionary.prototype.getArchive = function () {
        return this.archive;
    };
    /**
     * Set flag if need to `archive` dictionary.
     * @private
     */
    PdfDictionary.prototype.setArchive = function (value) {
        this.archive = value;
    };
    /**
     * Sets flag if `encryption` is needed.
     * @private
     */
    PdfDictionary.prototype.setEncrypt = function (value) {
        this.encrypt = value;
        this.modify();
    };
    /**
     * Gets flag if `encryption` is needed.
     * @private
     */
    PdfDictionary.prototype.getEncrypt = function () {
        return this.encrypt;
    };
    /**
     * `Freezes` the changes.
     * @private
     */
    PdfDictionary.prototype.freezeChanges = function (freezer) {
        this.bChanged = false;
    };
    /**
     * Creates a `copy of PdfDictionary`.
     * @private
     */
    PdfDictionary.prototype.clone = function (crossTable) {
        //Need to add more codings
        var newDict = new PdfDictionary();
        return newDict;
    };
    /**
     * `Mark` this instance modified.
     * @private
     */
    PdfDictionary.prototype.modify = function () {
        this.bChanged = true;
    };
    /**
     * `Removes` the specified key.
     * @private
     */
    PdfDictionary.prototype.remove = function (key) {
        if (typeof key !== 'string') {
            this.primitiveItems.remove(key.value);
            this.modify();
        }
        else {
            this.remove(new _pdf_name__WEBPACK_IMPORTED_MODULE_1__["PdfName"](key));
        }
    };
    /**
     * `Determines` whether the dictionary contains the key.
     * @private
     */
    PdfDictionary.prototype.containsKey = function (key) {
        var returnValue = false;
        returnValue = this.primitiveItems.containsKey(key.toString());
        return returnValue;
    };
    /**
     * Raises event `BeginSave`.
     * @private
     */
    PdfDictionary.prototype.onBeginSave = function () {
        this.beginSave.sender.beginSave();
    };
    /**
     * Raises event `Font Dictionary BeginSave`.
     * @private
     */
    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {
        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();
    };
    /**
     * Raises event `Descendant Font BeginSave`.
     * @private
     */
    PdfDictionary.prototype.onDescendantFontBeginSave = function () {
        this.descendantFontBeginSave.sender.descendantFontBeginSave();
    };
    /**
     * Raises event 'BeginSave'.
     * @private
     */
    PdfDictionary.prototype.onTemplateBeginSave = function () {
        this.pageBeginDrawTemplate.sender.pageBeginSave();
    };
    /**
     * Raises event `BeginSave`.
     * @private
     */
    PdfDictionary.prototype.onBeginAnnotationSave = function () {
        this.annotationBeginSave.sender.beginSave();
    };
    /**
     * Raises event `BeginSave`.
     * @private
     */
    PdfDictionary.prototype.onSectionBeginSave = function (writer) {
        var saveEvent = this.sectionBeginSave;
        saveEvent.sender.beginSave(saveEvent.state, writer);
    };
    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {
        if (typeof bRaiseEvent === 'undefined') {
            this.save(writer, true);
        }
        else {
            writer.write(this.prefix);
            if (typeof this.beginSave !== 'undefined') {
                this.onBeginSave();
            }
            if (typeof this.descendantFontBeginSave !== 'undefined') {
                this.onDescendantFontBeginSave();
            }
            if (typeof this.fontDictionaryBeginSave !== 'undefined') {
                this.onFontDictionaryBeginSave();
            }
            if (typeof this.annotationBeginSave !== 'undefined') {
                this.onBeginAnnotationSave();
            }
            if (typeof this.sectionBeginSave !== 'undefined') {
                this.onSectionBeginSave(writer);
            }
            if (typeof this.pageBeginDrawTemplate !== 'undefined') {
                this.onTemplateBeginSave();
            }
            // }
            if (this.Count > 0) {
                this.saveItems(writer);
            }
            writer.write(this.suffix);
            writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__["Operators"].newLine);
        }
    };
    /**
     * `Save dictionary items`.
     * @private
     */
    PdfDictionary.prototype.saveItems = function (writer) {
        writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__["Operators"].newLine);
        var keys = this.primitiveItems.keys();
        var values = this.primitiveItems.values();
        for (var index = 0; index < keys.length; index++) {
            var key = keys[index];
            var name_1 = new _pdf_name__WEBPACK_IMPORTED_MODULE_1__["PdfName"](key);
            name_1.save(writer);
            writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__["Operators"].whiteSpace);
            var resources = values[index];
            resources.save(writer);
            writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__["Operators"].newLine);
        }
    };
    return PdfDictionary;
}());

var SaveSectionCollectionEventHandler = /** @class */ (function () {
    /**
     * New instance for `save section collection event handler` class.
     * @private
     */
    function SaveSectionCollectionEventHandler(sender) {
        this.sender = sender;
    }
    return SaveSectionCollectionEventHandler;
}());

var SaveDescendantFontEventHandler = /** @class */ (function () {
    /**
     * New instance for `save section collection event handler` class.
     * @private
     */
    function SaveDescendantFontEventHandler(sender) {
        this.sender = sender;
    }
    return SaveDescendantFontEventHandler;
}());

var SaveFontDictionaryEventHandler = /** @class */ (function () {
    /**
     * New instance for `save section collection event handler` class.
     * @private
     */
    function SaveFontDictionaryEventHandler(sender) {
        this.sender = sender;
    }
    return SaveFontDictionaryEventHandler;
}());

var SaveAnnotationEventHandler = /** @class */ (function () {
    /**
     * New instance for `save annotation event handler` class.
     * @private
     */
    function SaveAnnotationEventHandler(sender) {
        this.sender = sender;
    }
    return SaveAnnotationEventHandler;
}());

var SaveSectionEventHandler = /** @class */ (function () {
    // constructors
    /**
     * New instance for `save section event handler` class.
     * @private
     */
    function SaveSectionEventHandler(sender, state) {
        this.sender = sender;
        this.state = state;
    }
    return SaveSectionEventHandler;
}());

/**
 * SaveTemplateEventHandler class used to store information about template elements.
 * @private
 * @hidden
 */
var SaveTemplateEventHandler = /** @class */ (function () {
    /**
     * New instance for save section collection event handler class.
     * @public
     */
    function SaveTemplateEventHandler(sender) {
        this.sender = sender;
    }
    return SaveTemplateEventHandler;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: PdfName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfName", function() { return PdfName; });
/**
 * `PdfName` class is used to perform name (element names) related primitive operations.
 * @private
 */
var PdfName = /** @class */ (function () {
    function PdfName(value) {
        /**
         * `Start symbol` of the name object.
         * @default /
         * @private
         */
        this.stringStartMark = '/';
        /**
         * `Value` of the element.
         * @private
         */
        this.internalValue = '';
        /**
         * Indicates if the object is currently in `saving state or not`.
         * @default false
         * @private
         */
        this.isSaving6 = false;
        /**
         * Internal variable to store the `position`.
         * @default -1
         * @private
         */
        this.position6 = -1;
        this.internalValue = this.normalizeValue(value);
    }
    Object.defineProperty(PdfName.prototype, "status", {
        //property
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.status6;
        },
        set: function (value) {
            this.status6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.isSaving6;
        },
        set: function (value) {
            this.isSaving6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index6;
        },
        set: function (value) {
            this.index6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.position6;
        },
        set: function (value) {
            this.position6 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfName.prototype, "value", {
        /**
         * Gets or sets the `value` of the object.
         * @private
         */
        get: function () {
            return this.internalValue;
        },
        set: function (value) {
            // if (value !== this.value) {
            var val = value;
            if (value !== null && value.length > 0) {
                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;
                val = value;
                this.internalValue = this.normalizeValue(val);
            }
            else {
                this.internalValue = val;
            }
            // }
        },
        enumerable: true,
        configurable: true
    });
    //public methods
    /**
     * `Saves` the name using the specified writer.
     * @private
     */
    PdfName.prototype.save = function (writer) {
        // if (writer === null) {
        //     throw new Error('ArgumentNullException : writer');
        // }
        writer.write(this.toString());
    };
    /**
     * Gets `string` representation of the primitive.
     * @private
     */
    PdfName.prototype.toString = function () {
        return (this.stringStartMark + this.escapeString(this.value));
    };
    /**
     * Creates a `copy of PdfName`.
     * @private
     */
    PdfName.prototype.clone = function (crossTable) {
        var newName = new PdfName();
        newName.value = this.internalValue;
        return newName;
    };
    /**
     * Replace some characters with its `escape sequences`.
     * @private
     */
    PdfName.prototype.escapeString = function (stringValue) {
        // if (str === null) {
        //     throw new Error('ArgumentNullException : str');
        // }
        // if (str === '') {
        //     return str;
        // }
        var result = '';
        var len = 0;
        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {
            var ch = stringValue[i];
            var index = PdfName.delimiters.indexOf(ch);
            // switch (ch) {
            //     case '\r' :
            //         result = result + '\\r';
            //         break;
            //     case '\n' :
            //         result = result + '\n';
            //         break;
            //     case '(' :
            //     case ')' :
            //     case '\\' :
            //         //result.Append( '\\' ).Append( ch );
            //         result = result + ch;
            //         break;
            //     default :
            //         result = result + ch;
            //         break;
            // }
            result = result + ch;
        }
        return result;
    };
    //methiods
    /**
     * Replace a symbol with its code with the precedence of the `sharp sign`.
     * @private
     */
    PdfName.prototype.normalizeValue = function (value, c) {
        // if (typeof c === undefined) {
        //     let str : string = value;
        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {
        //         str = this.normalizeValue(str, c);
        //     }
        //     return str;
        // } else {
        var strFormat = '#{0:X}';
        //return value.replace(c.toString(),String.format(strFormat,c));
        return value;
        // }
    };
    /**
     * PDF `special characters`.
     * @private
     */
    PdfName.delimiters = '()<>[]{}/%}';
    /**
     * The symbols that are not allowed in PDF names and `should be replaced`.
     * @private
     */
    PdfName.replacements = [' ', '\t', '\n', '\r'];
    return PdfName;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: PdfNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfNumber", function() { return PdfNumber; });
/**
 * `PdfNumber` class is used to perform number related primitive operations.
 * @private
 */
var PdfNumber = /** @class */ (function () {
    /**
     * Initializes a new instance of the `PdfNumber` class.
     * @private
     */
    function PdfNumber(value) {
        /**
         * Sotres the `position`.
         * @default -1
         * @private
         */
        this.position5 = -1;
        this.value = value;
    }
    Object.defineProperty(PdfNumber.prototype, "intValue", {
        /**
         * Gets or sets the `integer` value.
         * @private
         */
        get: function () {
            return this.value;
        },
        set: function (value) {
            this.value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "isInteger", {
        /**
         * Gets or sets a value indicating whether this instance `is integer`.
         * @private
         */
        get: function () {
            return this.integer;
        },
        set: function (value) {
            this.integer = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "status", {
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.status5;
        },
        set: function (value) {
            this.status5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.isSaving5;
        },
        set: function (value) {
            this.isSaving5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index5;
        },
        set: function (value) {
            this.index5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.position5;
        },
        set: function (value) {
            this.position5 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfNumber.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            var rValue = null;
            return rValue;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Saves the object`.
     * @private
     */
    PdfNumber.prototype.save = function (writer) {
        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)
    };
    /**
     * Creates a `copy of PdfNumber`.
     * @private
     */
    PdfNumber.prototype.clone = function (crossTable) {
        var newNumber = new PdfNumber(this.value);
        return newNumber;
    };
    /**
     * Converts a `float value to a string` using Adobe PDF rules.
     * @private
     */
    PdfNumber.floatToString = function (number) {
        // let tempString1 : string = number.toString();
        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;
        var returnString = number.toFixed(2);
        if (returnString === '0.00') {
            returnString = '.00';
        }
        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;
        // for (let index : number = 0; index < prefixLength; index++) {
        //     returnString += '0';
        // }
        // returnString += tempString2 + '.00';
        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;
        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;
        // for (let index : number = 0; index < suffixLength; index++) {
        //     returnString += '0';
        // }
        return returnString;
    };
    /**
     * Determines the `minimum of the three values`.
     * @private
     */
    PdfNumber.min = function (x, y, z) {
        var r = Math.min(x, y);
        return Math.min(z, r);
    };
    return PdfNumber;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js ***!
  \***************************************************************************************************************************************************/
/*! exports provided: PdfReference, PdfReferenceHolder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfReference", function() { return PdfReference; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfReferenceHolder", function() { return PdfReferenceHolder; });
/* harmony import */ var _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony import */ var _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony import */ var _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");







/**
 * `PdfReference` class is used to perform reference related primitive operations.
 * @private
 */
var PdfReference = /** @class */ (function () {
    function PdfReference(objNumber, genNumber) {
        /**
         * Holds the `index` number of the object.
         * @default -1
         * @private
         */
        this.index3 = -1;
        /**
         * Internal variable to store the `position`.
         * @default -1
         * @private
         */
        this.position3 = -1;
        /**
         * Holds the `object number`.
         * @default 0
         * @private
         */
        this.objNumber = 0;
        /**
         * Holds the `generation number` of the object.
         * @default 0
         * @private
         */
        this.genNumber = 0;
        if (typeof objNumber === 'number' && typeof genNumber === 'number') {
            this.objNumber = objNumber;
            this.genNumber = genNumber;
            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {
        }
        else {
            this.objNumber = Number(objNumber);
            this.genNumber = Number(genNumber);
        }
    }
    Object.defineProperty(PdfReference.prototype, "status", {
        //Property
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.status3;
        },
        set: function (value) {
            this.status3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.isSaving3;
        },
        set: function (value) {
            this.isSaving3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index3;
        },
        set: function (value) {
            this.index3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.position3;
        },
        set: function (value) {
            this.position3 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReference.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            var returnObject3 = null;
            return returnObject3;
        },
        enumerable: true,
        configurable: true
    });
    //IPdfPrimitives methods
    /**
     * `Saves` the object.
     * @private
     */
    PdfReference.prototype.save = function (writer) {
        writer.write(this.toString());
    };
    /**
     * Returns a `string` representing the object.
     * @private
     */
    PdfReference.prototype.toString = function () {
        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';
    };
    /**
     * Creates a `deep copy` of the IPdfPrimitive object.
     * @private
     */
    PdfReference.prototype.clone = function (crossTable) {
        return null;
    };
    return PdfReference;
}());

/**
 * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.
 * @private
 */
var PdfReferenceHolder = /** @class */ (function () {
    function PdfReferenceHolder(obj1, obj2) {
        /**
         * Holds the `index` number of the object.
         * @default -1
         * @private
         */
        this.index4 = -1;
        /**
         * Internal variable to store the `position`.
         * @default -1
         * @private
         */
        this.position4 = -1;
        /**
         * The `index` of the object within the object collection.
         * @default -1
         * @private
         */
        this.objectIndex = -1;
        /**
         * @hidden
         * @private
         */
        this.dictionaryProperties = new _input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_0__["DictionaryProperties"]();
        // if (typeof obj2 === 'undefined') {
        this.initialize(obj1);
        // }
        // else {
        //     if (obj2 === null) {
        //         throw new Error('ArgumentNullException : crossTable');
        //     }
        //     if (obj1 === null) {
        //         throw new Error('ArgumentNullException : reference');
        //     }
        //     this.crossTable = obj2;
        //     let tempObj1 : PdfReference = <PdfReference>obj1;
        //     this.reference = tempObj1;
        // }
    }
    Object.defineProperty(PdfReferenceHolder.prototype, "status", {
        //Properties
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.status4;
        },
        set: function (value) {
            this.status4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.isSaving4;
        },
        set: function (value) {
            this.isSaving4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index4;
        },
        set: function (value) {
            this.index4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.position4;
        },
        set: function (value) {
            this.position4 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "object", {
        /**
         * Gets the `object` the reference is of.
         * @private
         */
        get: function () {
            // if ((this.reference != null) || (this.object == null)) {
            //     this.object = this.GetterObject();
            // }
            return this.primitiveObject;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "reference", {
        /**
         * Gets the `reference`.
         * @private
         */
        get: function () {
            return this.pdfReference;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "index", {
        /**
         * Gets the `index` of the object.
         * @private
         */
        get: function () {
            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;
            // this.objectIndex = items.GetObjectIndex(this.reference);
            // if (this.objectIndex < 0) {
            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);
            //     this.objectIndex = items.Count - 1;
            // }
            return this.objectIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfReferenceHolder.prototype, "element", {
        /**
         * Gets the `element`.
         * @private
         */
        get: function () {
            return this.primitiveObject;
        },
        enumerable: true,
        configurable: true
    });
    PdfReferenceHolder.prototype.initialize = function (obj1) {
        if (obj1 instanceof _primitives_pdf_array__WEBPACK_IMPORTED_MODULE_2__["PdfArray"]
            || obj1 instanceof _primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_5__["PdfDictionary"]
            || obj1 instanceof _primitives_pdf_name__WEBPACK_IMPORTED_MODULE_4__["PdfName"]
            || obj1 instanceof _primitives_pdf_number__WEBPACK_IMPORTED_MODULE_3__["PdfNumber"]
            || obj1 instanceof _primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_1__["PdfStream"]
            || obj1 instanceof PdfReference
            || obj1 instanceof _primitives_pdf_string__WEBPACK_IMPORTED_MODULE_6__["PdfString"]) {
            this.primitiveObject = obj1;
        }
        else {
            var tempObj = obj1;
            this.initialize(tempObj.element);
        }
    };
    /**
     * `Writes` a reference into a PDF document.
     * @private
     */
    PdfReferenceHolder.prototype.save = function (writer) {
        // if (writer == null) {
        //     throw new Error('ArgumentNullException : writer');
        // }
        var position = writer.position;
        var cTable = writer.document.crossTable;
        // if (cTable.Document instanceof PdfDocument) {
        this.object.isSaving = true;
        // }
        var reference = null;
        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {
        //     if (this.reference === null) {
        //         reference = cTable.GetReference(this.Object);
        //     } else {
        //         reference = this.reference;
        //     }
        // } else {
        //     reference = cTable.GetReference(this.Object);
        // }
        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {
        reference = cTable.getReference(this.object);
        // }
        // if (writer.Position !== position) {
        //     writer.Position = position;
        // }
        reference.save(writer);
    };
    /**
     * Creates a `copy of PdfReferenceHolder`.
     * @private
     */
    PdfReferenceHolder.prototype.clone = function (crossTable) {
        var refHolder = null;
        var temp = null;
        var refNum = '';
        var reference = null;
        // Restricts addition of same object multiple time.
        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {
            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);
            return refHolder;
        }
        if (Object instanceof PdfNumber) {
            return new PdfNumber((Object as PdfNumber).IntValue);
        }
        */
        // if (Object instanceof PdfDictionary) {
        //     // Meaning the referenced page is not available for import.
        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);
        //     let dict : PdfDictionary = Object as PdfDictionary;
        //     if (dict.ContainsKey(type)) {
        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;
        //         if (pageName !== null) {
        //             if (pageName.Value === 'Page') {
        //                 return new PdfNull();
        //             }
        //         }
        //     }
        // }
        /* if (Object instanceof PdfName) {
            return new PdfName ((Object as PdfName ).Value);
        }
        */
        // Resolves circular references.
        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {
        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;
        //     if (obj !== null) {
        //         reference = crossTable.GetReference(obj);
        //         return new PdfReferenceHolder(reference, crossTable);
        //     } else {
        //         return new PdfNull();
        //     }
        // }
        /*if (this.Reference !== null) {
            crossTable.PrevReference.push(this.Reference);
        }
        reference = crossTable.GetReference(temp);
        refHolder = new PdfReferenceHolder(reference, crossTable);
        return refHolder;
        */
        return null;
    };
    return PdfReferenceHolder;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: PdfStream, SaveCmapEventHandler, SaveFontProgramEventHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfStream", function() { return PdfStream; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveCmapEventHandler", function() { return SaveCmapEventHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveFontProgramEventHandler", function() { return SaveFontProgramEventHandler; });
/* harmony import */ var _pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony import */ var _pdf_number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony import */ var _input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../input-output/pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/* harmony import */ var _pdf_name__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony import */ var _pdf_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony import */ var _pdf_reference__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony import */ var _syncfusion_ej2_compression__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-compression */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-compression/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();







/**
 * `PdfStream` class is used to perform stream related primitive operations.
 * @private
 */
var PdfStream = /** @class */ (function (_super) {
    __extends(PdfStream, _super);
    function PdfStream(dictionary, data) {
        var _this = _super.call(this, dictionary) || this;
        //Constants
        /**
         * @hidden
         * @private
         */
        _this.dicPrefix = 'stream';
        /**
         * @hidden
         * @private
         */
        _this.dicSuffix = 'endstream';
        /**
         * Internal variable to hold `cloned object`.
         * @private
         */
        _this.clonedObject2 = null;
        /**
         * @hidden
         * @private
         */
        _this.bCompress = true;
        /**
         * @hidden
         * @private
         */
        _this.isImageStream = false;
        /**
         * @hidden
         * @private
         */
        _this.isFontStream = false;
        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {
            _this.dataStream2 = [];
            _this.dataStream2 = data;
            _this.bCompress2 = false;
        }
        else {
            _this.dataStream2 = [];
            _this.bCompress2 = true;
            //Pending
        }
        return _this;
    }
    Object.defineProperty(PdfStream.prototype, "internalStream", {
        /**
         * Gets the `internal` stream.
         * @private
         */
        get: function () {
            return this.dataStream2;
        },
        set: function (value) {
            this.dataStream2 = [];
            this.dataStream2 = value;
            this.modify();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStream.prototype, "isImage", {
        /**
         * Gets or sets 'is image' flag.
         * @private
         */
        get: function () {
            return this.isImageStream;
        },
        set: function (value) {
            this.isImageStream = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStream.prototype, "isFont", {
        /**
         * Gets or sets 'is font' flag.
         * @private
         */
        get: function () {
            return this.isFontStream;
        },
        set: function (value) {
            this.isFontStream = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStream.prototype, "compress", {
        /**
         * Gets or sets `compression` flag.
         * @private
         */
        get: function () {
            return this.bCompress;
        },
        set: function (value) {
            this.bCompress = value;
            this.modify();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfStream.prototype, "data", {
        /**
         * Gets or sets the `data`.
         * @private
         */
        get: function () {
            return this.dataStream2;
        },
        set: function (value) {
            this.dataStream2 = [];
            this.dataStream2 = value;
            this.modify();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * `Clear` the internal stream.
     * @private
     */
    PdfStream.prototype.clearStream = function () {
        this.internalStream = [];
        if (this.items.containsKey(this.dictionaryProperties.filter)) {
            this.remove(this.dictionaryProperties.filter);
        }
        this.bCompress = true;
        this.modify();
    };
    /**
     * `Writes` the specified string.
     * @private
     */
    PdfStream.prototype.write = function (text) {
        if (text == null) {
            throw new Error('ArgumentNullException:text');
        }
        if (text.length <= 0) {
            throw new Error('ArgumentException: Can not write an empty string, text');
        }
        this.dataStream2.push(text);
        this.modify();
    };
    /**
     * `Writes` the specified bytes.
     * @private
     */
    PdfStream.prototype.writeBytes = function (data) {
        if (data === null) {
            throw new Error('ArgumentNullException:data');
        }
        if (data.length <= 0) {
            throw new Error('ArgumentException: Can not write an empty bytes, data');
        }
        var text = '';
        for (var i = 0; i < data.length; i++) {
            text += String.fromCharCode(data[i]);
        }
        this.dataStream2.push(text);
        this.modify();
    };
    /**
     * Raises event `Cmap BeginSave`.
     * @private
     */
    PdfStream.prototype.onCmapBeginSave = function () {
        this.cmapBeginSave.sender.cmapBeginSave();
    };
    /**
     * Raises event `Font Program BeginSave`.
     * @private
     */
    PdfStream.prototype.onFontProgramBeginSave = function () {
        this.fontProgramBeginSave.sender.fontProgramBeginSave();
    };
    /**
     * `Compresses the content` if it's required.
     * @private
     */
    PdfStream.prototype.compressContent = function (data, writer) {
        if (this.bCompress) {
            var byteArray = [];
            for (var i = 0; i < data.length; i++) {
                byteArray.push(data.charCodeAt(i));
            }
            var dataArray = new Uint8Array(byteArray);
            var sw = new _syncfusion_ej2_compression__WEBPACK_IMPORTED_MODULE_6__["CompressedStreamWriter"]();
            // data = 'Hello World!!!';
            sw.write(dataArray, 0, dataArray.length);
            sw.close();
            data = sw.getCompressedString;
            this.addFilter(this.dictionaryProperties.flatedecode);
        }
        return data;
    };
    /**
     * `Adds a filter` to the filter array.
     * @private
     */
    PdfStream.prototype.addFilter = function (filterName) {
        var obj = this.items.getValue(this.dictionaryProperties.filter);
        if (obj instanceof _pdf_reference__WEBPACK_IMPORTED_MODULE_5__["PdfReferenceHolder"]) {
            var rh = obj;
            obj = rh.object;
        }
        var array = obj;
        var name = obj;
        if (name != null) {
            array = new _pdf_array__WEBPACK_IMPORTED_MODULE_4__["PdfArray"]();
            array.insert(0, name);
            this.items.setValue(this.dictionaryProperties.filter, array);
        }
        name = new _pdf_name__WEBPACK_IMPORTED_MODULE_3__["PdfName"](filterName);
        if (array == null) {
            this.items.setValue(this.dictionaryProperties.filter, name);
        }
        else {
            array.insert(0, name);
        }
    };
    /**
     * `Saves` the object using the specified writer.
     * @private
     */
    PdfStream.prototype.save = function (writer) {
        if (typeof this.cmapBeginSave !== 'undefined') {
            this.onCmapBeginSave();
        }
        if (typeof this.fontProgramBeginSave !== 'undefined') {
            this.onFontProgramBeginSave();
        }
        var data = '';
        for (var i = 0; i < this.data.length; i++) {
            data = data + this.data[i];
        }
        if (data.length > 1 && !this.isImage && !this.isFont) {
            data = 'q\r\n' + data + 'Q\r\n';
        }
        data = this.compressContent(data, writer);
        var length = data.length;
        this.items.setValue(this.dictionaryProperties.length, new _pdf_number__WEBPACK_IMPORTED_MODULE_1__["PdfNumber"](length));
        _super.prototype.save.call(this, writer, false);
        writer.write(this.dicPrefix);
        writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__["Operators"].newLine);
        if (data.length > 0) {
            writer.write(data);
        }
        writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__["Operators"].newLine);
        writer.write(this.dicSuffix);
        writer.write(_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_2__["Operators"].newLine);
    };
    /**
     * Converts `bytes to string`.
     * @private
     */
    PdfStream.bytesToString = function (byteArray) {
        var output = '';
        for (var i = 0; i < byteArray.length; i++) {
            output = output + String.fromCharCode(byteArray[i]);
        }
        return output;
    };
    return PdfStream;
}(_pdf_dictionary__WEBPACK_IMPORTED_MODULE_0__["PdfDictionary"]));

var SaveCmapEventHandler = /** @class */ (function () {
    /**
     * New instance for `save section collection event handler` class.
     * @private
     */
    function SaveCmapEventHandler(sender) {
        this.sender = sender;
    }
    return SaveCmapEventHandler;
}());

var SaveFontProgramEventHandler = /** @class */ (function () {
    /**
     * New instance for `save section collection event handler` class.
     * @private
     */
    function SaveFontProgramEventHandler(sender) {
        this.sender = sender;
    }
    return SaveFontProgramEventHandler;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: InternalEnum, PdfString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InternalEnum", function() { return InternalEnum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfString", function() { return PdfString; });
/**
 * `PdfString` class is used to perform string related primitive operations.
 * @private
 */
var InternalEnum;
(function (InternalEnum) {
    //Internals
    /**
     * public Enum for `ForceEncoding`.
     * @private
     */
    var ForceEncoding;
    (function (ForceEncoding) {
        /**
         * Specifies the type of `None`.
         * @private
         */
        ForceEncoding[ForceEncoding["None"] = 0] = "None";
        /**
         * Specifies the type of `Ascii`.
         * @private
         */
        ForceEncoding[ForceEncoding["Ascii"] = 1] = "Ascii";
        /**
         * Specifies the type of `Unicode`.
         * @private
         */
        ForceEncoding[ForceEncoding["Unicode"] = 2] = "Unicode";
    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));
    /**
     * public Enum for `SourceType`.
     * @private
     */
    var SourceType;
    (function (SourceType) {
        /**
         * Specifies the type of `StringValue`.
         * @private
         */
        SourceType[SourceType["StringValue"] = 0] = "StringValue";
        /**
         * Specifies the type of `ByteBuffer`.
         * @private
         */
        SourceType[SourceType["ByteBuffer"] = 1] = "ByteBuffer";
    })(SourceType || (SourceType = {}));
})(InternalEnum || (InternalEnum = {}));
var PdfString = /** @class */ (function () {
    function PdfString(value) {
        /**
         * Value indicating whether the string was converted to hex.
         * @default false
         * @private
         */
        this.bHex = false;
        /**
         * Internal variable to store the `position`.
         * @default -1
         * @private
         */
        this.position1 = -1;
        /**
         * Internal variable to hold `cloned object`.
         * @default null
         * @private
         */
        this.clonedObject1 = null;
        /**
         * `Shows` if the data of the stream was decrypted.
         * @default false
         * @private
         */
        this.bDecrypted = false;
        /**
         * Shows if the data of the stream `was decrypted`.
         * @default false
         * @private
         */
        this.isParentDecrypted = false;
        /**
         * Gets a value indicating whether the object is `packed or not`.
         * @default false
         * @private
         */
        this.isPacked = false;
        /**
         * @hidden
         * @private
         */
        this.isFormField = false;
        /**
         * @hidden
         * @private
         */
        this.isColorSpace = false;
        /**
         * @hidden
         * @private
         */
        this.isHexString = true;
        if (typeof value === 'undefined') {
            this.bHex = false;
        }
        else {
            if (!(value.length > 0 && value[0] === '0xfeff')) {
                this.stringValue = value;
                this.data = [];
                for (var i = 0; i < value.length; ++i) {
                    this.data.push(value.charCodeAt(i));
                }
            }
        }
    }
    Object.defineProperty(PdfString.prototype, "hex", {
        //Property
        /**
         * Gets a value indicating whether string is in `hex`.
         * @private
         */
        get: function () {
            return this.bHex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "value", {
        /**
         * Gets or sets string `value` of the object.
         * @private
         */
        get: function () {
            return this.stringValue;
        },
        set: function (value) {
            this.stringValue = value;
            this.data = null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "status", {
        /**
         * Gets or sets the `Status` of the specified object.
         * @private
         */
        get: function () {
            return this.status1;
        },
        set: function (value) {
            this.status1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "isSaving", {
        /**
         * Gets or sets a value indicating whether this document `is saving` or not.
         * @private
         */
        get: function () {
            return this.isSaving1;
        },
        set: function (value) {
            this.isSaving1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "objectCollectionIndex", {
        /**
         * Gets or sets the `index` value of the specified object.
         * @private
         */
        get: function () {
            return this.index1;
        },
        set: function (value) {
            this.index1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "clonedObject", {
        /**
         * Returns `cloned object`.
         * @private
         */
        get: function () {
            return this.clonedObject1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "position", {
        /**
         * Gets or sets the `position` of the object.
         * @private
         */
        get: function () {
            return this.position1;
        },
        set: function (value) {
            this.position1 = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "CrossTable", {
        /**
         * Returns `PdfCrossTable` associated with the object.
         * @private
         */
        get: function () {
            return this.crossTable;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "converted", {
        /**
         * Gets a value indicating whether to check if the value has unicode characters.
         * @private
         */
        get: function () {
            return this.bConverted;
        },
        /**
         * sets a value indicating whether to check if the value has unicode characters.
         * @private
         */
        set: function (value) {
            this.bConverted = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfString.prototype, "encode", {
        /**
         * Gets value indicating whether we should convert data to Unicode.
         */
        get: function () {
            return this.bForceEncoding;
        },
        set: function (value) {
            this.bForceEncoding = value;
        },
        enumerable: true,
        configurable: true
    });
    //Methods
    /**
     * Converts `bytes to string using hex format` for representing string.
     * @private
     */
    PdfString.bytesToHex = function (bytes) {
        if (bytes == null) {
            return '';
        }
        var builder = '';
        return builder;
    };
    /**
     * `Saves` the object using the specified writer.
     * @private
     */
    PdfString.prototype.save = function (writer) {
        if (writer === null) {
            throw new Error('ArgumentNullException : writer');
        }
        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {
            writer.write(this.pdfEncode());
        }
        else {
            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);
        }
    };
    PdfString.prototype.pdfEncode = function () {
        var result = '';
        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {
            var data = this.escapeSymbols(this.value);
            for (var i = 0; i < data.length; i++) {
                result += String.fromCharCode(data[i]);
            }
            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];
        }
        else {
            result = this.value;
        }
        return result;
    };
    PdfString.prototype.escapeSymbols = function (value) {
        var data = [];
        for (var i = 0; i < value.length; i++) {
            var currentData = value.charCodeAt(i);
            switch (currentData) {
                case 40:
                case 41:
                    data.push(92);
                    data.push(currentData);
                    break;
                case 13:
                    data.push(92);
                    data.push(114);
                    break;
                case 92:
                    data.push(92);
                    data.push(currentData);
                    break;
                default:
                    data.push(currentData);
                    break;
            }
        }
        return data;
    };
    /**
     * Creates a `copy of PdfString`.
     * @private
     */
    PdfString.prototype.clone = function (crossTable) {
        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {
            return this.clonedObject1;
        }
        else {
            this.clonedObject1 = null;
        }
        var newString = new PdfString(this.stringValue);
        newString.bHex = this.bHex;
        newString.crossTable = crossTable;
        newString.isColorSpace = this.isColorSpace;
        this.clonedObject1 = newString;
        return newString;
    };
    /**
     * Converts string to array of unicode symbols.
     */
    PdfString.toUnicodeArray = function (value, bAddPrefix) {
        if (value == null) {
            throw new Error('Argument Null Exception : value');
        }
        var startIndex = 0;
        var output = [];
        for (var i = 0; i < value.length; i++) {
            var code = value.charCodeAt(i);
            output.push(code / 256 >>> 0);
            output.push(code & 0xff);
        }
        return output;
    };
    /**
     * Converts byte data to string.
     */
    PdfString.byteToString = function (data) {
        if (data == null) {
            throw new Error('Argument Null Exception : stream');
        }
        var result = '';
        for (var i = 0; i < data.length; ++i) {
            result += String.fromCharCode(data[i]);
        }
        return result;
    };
    //constants = ;
    /**
     * `General markers` for string.
     * @private
     */
    PdfString.stringMark = '()';
    /**
     * `Hex markers` for string.
     * @private
     */
    PdfString.hexStringMark = '<>';
    /**
     * Format of password data.
     * @private
     */
    PdfString.hexFormatPattern = '{0:X2}';
    return PdfString;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/layout/grid-layouter.js":
/*!************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/layout/grid-layouter.js ***!
  \************************************************************************************************************************************************************************/
/*! exports provided: PdfGridLayouter, PdfGridLayoutResult, PdfGridLayoutFormat, GridCellEventArgs, PdfGridBeginCellDrawEventArgs, PdfGridEndCellDrawEventArgs, PdfCancelEventArgs, BeginPageLayoutEventArgs, EndPageLayoutEventArgs, PdfGridBeginPageLayoutEventArgs, PdfGridEndPageLayoutEventArgs, RowLayoutResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayouter", function() { return PdfGridLayouter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutResult", function() { return PdfGridLayoutResult; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutFormat", function() { return PdfGridLayoutFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GridCellEventArgs", function() { return GridCellEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginCellDrawEventArgs", function() { return PdfGridBeginCellDrawEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndCellDrawEventArgs", function() { return PdfGridEndCellDrawEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfCancelEventArgs", function() { return PdfCancelEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BeginPageLayoutEventArgs", function() { return BeginPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EndPageLayoutEventArgs", function() { return EndPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginPageLayoutEventArgs", function() { return PdfGridBeginPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndPageLayoutEventArgs", function() { return PdfGridEndPageLayoutEventArgs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RowLayoutResult", function() { return RowLayoutResult; });
/* harmony import */ var _pdf_grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pdf-grid */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid.js");
/* harmony import */ var _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../graphics/fonts/pdf-string-format */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/pdf-borders */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js");
/* harmony import */ var _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../../graphics/figures/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js");
/* harmony import */ var _graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../../graphics/figures/base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _styles_style__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/style */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js");
/* harmony import */ var _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../../collections/object-object-pair/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js");
/* harmony import */ var _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../../graphics/fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _document_pdf_document__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../../document/pdf-document */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();










/**
 * Class `lay outing the text`.
 *
 */
var PdfGridLayouter = /** @class */ (function (_super) {
    __extends(PdfGridLayouter, _super);
    //constructor
    /**
     * Initialize a new instance for `PdfGrid` class.
     * @private
     */
    function PdfGridLayouter(baseFormat) {
        var _this = _super.call(this, baseFormat) || this;
        /**
         * @hidden
         * @private
         */
        _this.gridInitialWidth = 0;
        /**
         * @hidden
         * @private
         */
        _this.gridSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](0, 0);
        _this.parentCellIndex = 0;
        _this.tempWidth = 0;
        _this.childheight = 0;
        /**
         * Check weather it is `child grid or not`.
         * @private
         */
        _this.isChildGrid = false;
        /**
         * @hidden
         * @private
         */
        _this.hasRowSpanSpan = false;
        /**
         * @hidden
         * @private
         */
        _this.isRearranged = false;
        /**
         * @hidden
         * @private
         */
        _this.pageBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"]();
        /**
         * @hidden
         * @private
         */
        _this.listOfNavigatePages = [];
        /**
         * @hidden
         * @private
         */
        _this.flag = true;
        /**
         * @hidden
         * @private
         */
        _this.columnRanges = [];
        /**
         * @hidden
         * @private
         */
        _this.currentLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](0, 0);
        /**
         * @hidden
         * @private
         */
        _this.breakRow = true;
        _this.slr = null;
        _this.remainderText = null;
        _this.isPaginate = false;
        /**
         * Checks whether the x co-ordinate is need to set as client size or not.
         * @hidden
         * @private
         */
        _this.isOverloadWithPosition = false;
        return _this;
    }
    Object.defineProperty(PdfGridLayouter.prototype, "Grid", {
        //Properties
        get: function () {
            return this.elements;
        },
        enumerable: true,
        configurable: true
    });
    // Constructors
    /**
     * Initializes a new instance of the `StringLayouter` class.
     * @private
     */
    //Public methods
    /**
     * `Layouts` the text.
     * @private
     */
    /**
     * `Layouts` the specified graphics.
     * @private
     */
    /**
     * `Layouts` the specified graphics.
     * @private
     */
    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult
    public layout(graphics : PdfGraphics, bounds : RectangleF) : void
    public layout(graphics : PdfGraphics, bounds : PointF) : void
    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {
        if (graphics instanceof PdfGraphics) {
        if (bounds instanceof PointF) {
            if (bounds.x === 0) {
                bounds.x = PdfBorders.default.right.width / 2;
            }
            if (bounds.y === 0) {
                bounds.y = PdfBorders.default.top.width / 2;
            }
            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));
            this.layout(graphics, boundaries);
        } else {
            let width : number = graphics.clientSize.width;
            let parameter : PdfLayoutParams = new PdfLayoutParams();
            parameter.bounds = bounds;
            this.currentGraphics = graphics;
            if (graphics.layer != null) {
                let index : number = 0;
                if (this.currentGraphics.page instanceof PdfPage) {
                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);
                } else {
                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;
                }
            } else {
                this.layoutInternal(parameter);
            }
        }
    }
    }*/
    /**
     * Gets the `format`.
     * @private
     */
    PdfGridLayouter.prototype.getFormat = function (format) {
        var f = format;
        return f;
    };
    /**
     * `Layouts` the element.
     * @private
     */
    PdfGridLayouter.prototype.layoutInternal = function (param) {
        var format = this.getFormat(param.format);
        this.gridLayoutFormat = this.getFormat(param.format);
        this.currentPage = param.page;
        if (this.currentPage !== null) {
            var pageHeight = this.currentPage.getClientSize().height;
            var pageWidth = this.currentPage.getClientSize().width;
            this.currentPageBounds = this.currentPage.getClientSize();
        }
        else {
            throw Error('Can not set page as null');
            //this.currentPageBounds = this.currentGraphics.clientSize;
        }
        this.currentGraphics = this.currentPage.graphics;
        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;
        // if (this.currentGraphics.layer !== null) {
        //     let index : number = 0;
        //     if (this.currentGraphics.page instanceof PdfPage) {
        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);
        //     } else {
        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;
        //     }
        //     this.listOfNavigatePages.push(index);
        // }
        var index = 0;
        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);
        this.listOfNavigatePages.push(index);
        if (format != null && format.break === _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutBreakType"].FitColumnsToPage) {
            this.currentBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](param.bounds.x, param.bounds.y), new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](this.Grid.columns.width, this.currentGraphics.clientSize.height));
        }
        else {
            this.currentBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);
        }
        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);
        if (this.Grid.rows.count !== 0) {
            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :
                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);
        }
        else if (this.Grid.headers.count !== 0) {
            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -
            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);
            this.currentBounds.width = param.bounds.width;
        }
        else {
            throw Error('Please add row or header into grid');
        }
        this.startLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](param.bounds.x, param.bounds.y);
        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {
        //     this.currentBounds.width = this.currentGraphics.clientSize.width;
        //     this.currentBounds.width -= this.currentBounds.x;
        // }
        // if (this.Grid.isChildGrid) {
        //     this.childheight = param.bounds.height;
        // }
        // if (param.format !== null && param.format.usePaginateBounds) {
        //     if (param.format.paginateBounds.height > 0) {
        //         this.currentBounds.height = param.format.paginateBounds.height;
        //     }
        //} else 
        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {
            this.currentBounds.height = param.bounds.height;
        }
        if (!this.Grid.isChildGrid) {
            this.hType = this.Grid.style.horizontalOverflowType;
        }
        if (!this.Grid.style.allowHorizontalOverflow) {
            this.columnRanges = [];
            this.Grid.measureColumnsWidth(this.currentBounds);
            this.columnRanges.push([0, this.Grid.columns.count - 1]);
        }
        else {
            this.Grid.measureColumnsWidth();
            this.determineColumnDrawRanges();
        }
        if (this.Grid.hasRowSpanSpan) {
            for (var i = 0; i < this.Grid.rows.count; i++) {
                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {
                    this.Grid.rows.getRow(i).isRowHeightSet = true;
                }
            }
        }
        var result = this.layoutOnPage(param);
        return result;
    };
    // /* tslint:enable */
    /**
     * `Determines the column draw ranges`.
     * @private
     */
    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {
        var startColumn = 0;
        var endColumn = 0;
        var cellWidths = 0;
        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;
        for (var i = 0; i < this.Grid.columns.count; i++) {
            cellWidths += this.Grid.columns.getColumn(i).width;
            if (cellWidths >= availableWidth) {
                var subWidths = 0;
                for (var j = startColumn; j <= i; j++) {
                    subWidths += this.Grid.columns.getColumn(j).width;
                    if (subWidths > availableWidth) {
                        break;
                    }
                    endColumn = j;
                }
                this.columnRanges.push([startColumn, endColumn]);
                startColumn = endColumn + 1;
                endColumn = startColumn;
                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;
            }
        }
        // if (startColumn !== this.columns.Count) {
        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);
        // }
    };
    /**
     * `Layouts the on page`.
     * @private
     */
    PdfGridLayouter.prototype.layoutOnPage = function (param) {
        /* tslint:disable */
        this.pageBounds.x = param.bounds.x;
        this.pageBounds.y = param.bounds.y;
        this.pageBounds.height = param.bounds.height;
        var format = this.getFormat(param.format);
        var endArgs = null;
        var result = null;
        var layoutedPages = new _collections_object_object_pair_dictionary__WEBPACK_IMPORTED_MODULE_7__["TemporaryDictionary"]();
        var startPage = param.page;
        var isParentCell = false;
        var cellBounds = [];
        for (var index = 0; index < this.columnRanges.length; index++) {
            var range = this.columnRanges[index];
            this.cellStartIndex = range[0];
            this.cellEndIndex = range[1];
            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);
            this.currentBounds = returnObject.currentBounds;
            this.currentRowIndex = returnObject.currentRowIndex;
            // if (returnObject.returnValue) {
            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);
            //     break;
            // }
            //Draw Headers.
            var drawHeader = void 0;
            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {
                var row = this.Grid.headers.getHeader(i_1);
                var headerHeight = this.currentBounds.y;
                this.isHeader = true;
                if (startPage != this.currentPage) {
                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {
                        if (row.cells.getCell(k).isCellMergeContinue) {
                            row.cells.getCell(k).isCellMergeContinue = false;
                            row.cells.getCell(k).value = "";
                        }
                    }
                }
                // RowLayoutResult
                var headerResult = this.drawRow(row);
                if (headerHeight === this.currentBounds.y) {
                    drawHeader = true;
                    if (PdfGridLayouter.repeatRowIndex === -1) {
                        PdfGridLayouter.repeatRowIndex = i_1;
                    }
                }
                else {
                    drawHeader = false;
                }
                if (!headerResult.isFinish && startPage !== null
                    && format.layout !== _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutType"].OnePage && drawHeader) {
                    this.startLocation.x = this.currentBounds.x;
                    this.currentPage = this.getNextPageformat(format);
                    this.startLocation.y = this.currentBounds.y;
                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)
                        this.currentBounds.x += this.startLocation.x;
                    this.drawRow(row);
                }
                this.isHeader = false;
            }
            var i = 0;
            var length_1 = this.Grid.rows.count;
            var repeatRow = void 0;
            var startingHeight = 0;
            var flag = true;
            //Here is to draw parent Grid and Cells
            cellBounds = [];
            //Draw row by row with the specified cell range.
            for (var j = 0; j < this.Grid.rows.count; j++) {
                var row = this.Grid.rows.getRow(j);
                i++;
                this.currentRowIndex = i - 1;
                var originalHeight = this.currentBounds.y;
                startPage = this.currentPage;
                PdfGridLayouter.repeatRowIndex = -1;
                if (flag && row.grid.isChildGrid) {
                    startingHeight = originalHeight;
                    flag = false;
                }
                var rowResult = null;
                ///rowResult = this.drawRow(row);
                /*if(!row.isrowFinish) {
                    if(!row.grid.isgridSplit){
                        rowResult = this.drawRow(row);
                        row.isrowFinish = true;
                        row.isrowDraw = true;
                    } else {
                        if(!row.isrowDraw){
                            rowResult = this.drawRow(row);
                            row.isrowFinish = true;
                            row.isrowDraw = true;
                            row.grid.isgridSplit = false;
                        } else {
                            rowResult =  null;
                            break;
                        }
                    }
                }
                else {
                    //row.isrowFinish = false;
                    //rowResult = this.drawRow(row);
                    rowResult = null;
                    break;
                    
                }             */
                if (this.Grid.splitChildRowIndex == -1) {
                    rowResult = this.drawRow(row);
                    row.isrowFinish = true;
                }
                else {
                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {
                        rowResult = this.drawRow(row);
                        row.isrowFinish = true;
                    }
                    else if (row.isrowFinish) {
                        continue;
                    }
                    else {
                        break;
                    }
                }
                //rowResult = this.drawRow(row);
                cellBounds.push(rowResult.bounds.width);
                /*if (row.isRowBreaksNextPage)
                    {
                        let x : number  = 0;
                        for (let l : number = 0; l < row.cells.count; l++)
                        {
                            let isNestedRowBreak : boolean = false;
                            if (row.height == row.cells.getCell(l).height)
                            {
                                let n : number;
                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;
                                for (let m : number = grid.rows.count; 0 < m; m--)
                                {
                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))
                                    {
                                        isNestedRowBreak = true;
                                        break;
                                    }
                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)
                                    {
                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;
                                        break;
                                    }
                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;
                                }
                            }
                            if (isNestedRowBreak)
                                break;
                        }
                        for (let j : number = 0; j < row.cells.count; j++)
                        {

                            if (row.height > row.cells.getCell(j).height)
                            {
                                row.cells.getCell(j).value = " ";
                                let rect : RectangleF ;
                                let page : PdfPage = this.getNextPage(this.currentPage);
                                let section : PdfSection = this.currentPage.section;
                                let index : number = section.indexOf(page);
                                for (let k : number = 0; k < (section.count - 1) - index; k++)
                                {
                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);
                                    PdfGridLayouter.repeatRowIndex = -1;
                                    row.cells.getCell(j).draw(page.graphics, rect, false);
                                    page = this.getNextPage(page);
                                }
                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);

                                row.cells.getCell(j).draw(page.graphics, rect, false);
                            }
                            x += row.grid.columns.getColumn(j).width;
                        }
                    }*/
                //if height remains same, it is understood that row is not drawn in the page
                if (originalHeight === this.currentBounds.y) {
                    repeatRow = true;
                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);
                }
                else {
                    repeatRow = false;
                    PdfGridLayouter.repeatRowIndex = -1;
                }
                while (!rowResult.isFinish && startPage != null) {
                    var tempResult = this.getLayoutResult();
                    /*if (startPage != this.currentPage)
                        {
                            if (row.grid.isChildGrid && row.grid.ParentCell != null)
                            {
                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));
                                bounds.x += param.bounds.x;
                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)
                                {
                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;
                                    if (bounds.height > this.currentPageBounds.height)
                                    {
                                        bounds.height = this.currentPageBounds.height - bounds.y;
                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);
                                    }
                                }
                                // Draw border for cells in the nested grid cell's row.
                                for (let c : number = 0; c < row.cells.count; c++)
                                {
                                    let cell : PdfGridCell = row.cells.getCell(c);
                                    let cellWidth :  number= 0;
                                    if (cell.columnSpan > 1)
                                    {
                                        for (; c < cell.columnSpan; c++)
                                            cellWidth += row.grid.columns.getColumn(c).width;
                                    }
                                    else
                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);
                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));
                                    bounds.x += cellWidth;
                                    c += (cell.columnSpan - 1);
                                }
                            }
                        }
                        */
                    endArgs = this.raisePageLayouted(tempResult);
                    if (endArgs.cancel || repeatRow)
                        break;
                    else if (this.Grid.allowRowBreakAcrossPages) {
                        //If there is no space in the current page, add new page and then draw the remaining row.
                        this.currentPage = this.getNextPageformat(format);
                        originalHeight = this.currentBounds.y;
                        var location_1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](_styles_pdf_borders__WEBPACK_IMPORTED_MODULE_3__["PdfBorders"].default.right.width / 2, _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_3__["PdfBorders"].default.top.width / 2);
                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&
                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {
                            this.currentBounds.x += this.startLocation.x;
                            this.currentBounds.y += this.startLocation.y;
                        }
                        if (this.isPaginate) {
                            this.startLocation.y = this.currentBounds.y;
                            this.isPaginate = false;
                        }
                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {
                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {
                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {
                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;
                                }
                            }
                        }
                        if (row.grid.ParentCell != null) {
                            row.grid.ParentCell.row.isRowBreaksNextPage = true;
                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;
                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {
                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;
                            }
                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;
                        }
                        /*if (row.noOfPageCount > 1)
                        {
                            let temp : number = row.rowBreakHeightValue;
                            for (let j : number = 1; j < row.noOfPageCount; j++)
                            {
                                row.rowBreakHeightValue = 0;
                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);
                                this.drawRow(row);
                                this.currentPage = this.getNextPageformat(format);
                                startPage = this.currentPage;
                            }
                            row.rowBreakHeightValue = temp;
                            row.noOfPageCount = 1;
                            rowResult = this.drawRow(row);
                        } else {
                            rowResult = this.drawRow(row);
                        }
                        /*if(row.grid.isChildGrid){
                            row.isrowFinish = false;
                            row.isrowDraw = false;
                            row.grid.isgridSplit = true;
                            row.grid.ParentCell.row.grid.isgridSplit = true;
                            //rowResult.isFinish = false;
                            break;
                        }*/
                        if (row.grid.isChildGrid) {
                            //row.grid.isgridSplit = true;
                            row.isrowFinish = false;
                            //row.grid.ParentCell.row.grid.isgridSplit = true;
                            row.grid.splitChildRowIndex = row.rowIndex;
                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;
                            if (row.grid.ParentCell.row.grid.isGridSplit) {
                                row.grid.ParentCell.row.noOfPageCount += 1;
                                row.grid.ParentCell.row.grid.isGridSplit = false;
                            }
                            break;
                        }
                        if (row.noOfPageCount < 1) {
                            if (row.grid.splitChildRowIndex != -1) {
                                row.grid.isGridSplit = true;
                            }
                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)
                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {
                                var x = row.style.border.left.width / 2;
                                var y = row.style.border.top.width / 2;
                                if (this.currentBounds.x === _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_3__["PdfBorders"].default.right.width / 2 && this.currentBounds.y === _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_3__["PdfBorders"].default.right.width / 2) {
                                    var newBound = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](x, y, this.currentBounds.width, this.currentBounds.height);
                                    this.currentBounds = newBound;
                                }
                            }
                            if (this.Grid.repeatHeader) {
                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {
                                    var headerRepeat = this.Grid.headers.getHeader(j_1);
                                    this.drawRow(headerRepeat);
                                }
                            }
                            rowResult = this.drawRow(row);
                            if (row.noOfPageCount >= 1) {
                                var temp = row.rowBreakHeightValue;
                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {
                                    //this.currentPage.section.add();
                                    var tempResult1 = this.getLayoutResult();
                                    endArgs = this.raisePageLayouted(tempResult1);
                                    this.currentPage = this.getNextPageformat(format);
                                    originalHeight = this.currentBounds.y;
                                    //row.rowBreakHeightValue = 0;
                                    if (row.grid.splitChildRowIndex != -1) {
                                        row.grid.isGridSplit = true;
                                    }
                                    this.currentBounds.y = 0.5;
                                    if (this.Grid.repeatHeader) {
                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {
                                            var header = this.Grid.headers.getHeader(i_3);
                                            this.drawRow(header);
                                        }
                                    }
                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);
                                    this.drawRow(row);
                                }
                                // row.rowBreakHeight = temp;
                                // row.noOfPageCount = 1;
                                // rowResult = this.drawRow(row);
                            }
                            row.grid.splitChildRowIndex = -1;
                            row.grid.isGridSplit = false;
                            rowResult.isFinish = true;
                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;
                            //this.currentBounds.y = rowResult.bounds.y;
                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {
                                if (row.cells.getCell(i_4).value instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;
                                }
                            }
                        }
                    }
                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)
                    // {
                    //     this.currentPage = this.getNextPageformat(format);
                    //     break;
                    // }
                    // else if (i >= length)
                    //     break;
                }
                if (!rowResult.isFinish && startPage !== null && format.layout !== _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutType"].OnePage && repeatRow) {
                    // During pagination, cell position is maintained here.
                    this.startLocation.x = this.currentBounds.x;
                    var isAddNextPage = false;
                    this.currentPage = this.getNextPageformat(format);
                    /*if (!this.Grid.isSingleGrid)
                    {
                        for ( let j : number= 0; j < this.Grid.rows.count; j++)
                        {
                            let isWidthGreaterthanParent : boolean = false;
                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)
                            {
                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)
                                    isWidthGreaterthanParent = true;
                            }
                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)
                            {
                                isAddNextPage = true;
                            }
                        }
                    }
                    if (!this.Grid.isRearranged && isAddNextPage)
                         {
                             let section : PdfSection = this.currentPage.section;
                             
                             //this.currentPage = section.add();
                         
                             this.currentGraphics = this.currentPage.graphics;
                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());
                          
                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);
                         }
                         else
                         {
                             this.currentPage = this.getNextPageformat(format);
                         }
                         if (format.paginateBounds.y == 0)
                             this.currentBounds.y = PdfBorders.default.top.width/2;
                         else
                         {
                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;
                             
                         }
                         if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex))
                             break;*/
                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&
                        param.bounds.height > 0 && !this.Grid.isChildGrid) {
                        this.currentBounds.height = param.bounds.height;
                    }
                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {
                        this.currentBounds.y = _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_3__["PdfBorders"].default.top.width / 2;
                    }
                    else {
                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;
                    }
                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&
                        param.bounds.y > 0 && !this.Grid.isChildGrid) {
                        this.currentBounds.y = param.bounds.y;
                    }
                    this.startLocation.y = this.currentBounds.y;
                    if ((format.paginateBounds.x === format.paginateBounds.y) &&
                        (format.paginateBounds.y === format.paginateBounds.height) &&
                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {
                        this.currentBounds.x += this.startLocation.x;
                    }
                    if (this.currentBounds.x === _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_3__["PdfBorders"].default.left.width / 2) {
                        this.currentBounds.y += this.startLocation.x;
                    }
                    if (this.Grid.repeatHeader) {
                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {
                            var header = this.Grid.headers.getHeader(i_5);
                            this.drawRow(header);
                        }
                    }
                    this.drawRow(row);
                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {
                        layoutedPages.add(this.currentPage, range);
                    }
                }
                if (row.NestedGridLayoutResult != null) {
                    // Position for next row in the grid.
                    this.currentPage = row.NestedGridLayoutResult.page;
                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.
                    this.startLocation = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);
                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);
                    this.currentBounds.y = recalHeight;
                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;
                    if (startPage != this.currentPage) {
                        var secion = this.currentPage.section;
                        var startIndex = secion.indexOf(startPage) + 1;
                        var endIndex = secion.indexOf(this.currentPage);
                        for (var page = startIndex; page < endIndex + 1; page++) {
                            var pageGraphics = this.currentPage.graphics;
                            var location_2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](format.paginateBounds.x, format.paginateBounds.y);
                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :
                                (this.currentBounds.height - location_2.y);
                            if (height <= pageGraphics.clientSize.height)
                                height += param.bounds.y;
                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)
                            //     location.x += param.bounds.x;
                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;
                            // Draw border for last paginated row containing nested grid.
                            for (var c = 0; c < row.cells.count; c++) {
                                var cell = row.cells.getCell(c);
                                var cellWidth = 0;
                                var totalwidth = 0;
                                if (cell.value instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {
                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;
                                    }
                                }
                                else {
                                    totalwidth = cell.width;
                                }
                                // if (cell.columnSpan > 1)
                                // {
                                //     for (; c < cell.columnSpan; c++)
                                //         cellWidth += row.grid.columns.getColumn(c).width;
                                // }
                                // else
                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);
                                cell.drawCellBorders(pageGraphics, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](location_2, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](cellWidth, height)));
                                location_2.x += cellWidth;
                                c += (cell.columnSpan - 1);
                            }
                        }
                        // So, nested grid drawing is completed for the current row. Update page.
                        // Otherwise, the next nested grid of the parent will draw borders from start.
                        startPage = this.currentPage;
                    }
                }
            }
            var isPdfGrid = false;
            var maximumCellBoundsWidth = 0;
            if (cellBounds.length > 0) {
                maximumCellBoundsWidth = cellBounds[0];
            }
            var largeNavigatePage = [[1, 2]];
            for (var c = 0; c < this.Grid.rows.count; c++) {
                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;
                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;
                    isPdfGrid = true;
                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)
                    // {
                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;
                    //     largeNavigatePage[0][1] = cellBounds[c];
                    // }
                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))
                    // {
                    //     largeNavigatePage[0][1] = cellBounds[c];
                    // }
                }
            }
            if (!isPdfGrid && cellBounds.length > 0) {
                for (var c = 0; c < i - 1; c++) {
                    if (maximumCellBoundsWidth < cellBounds[c]) {
                        maximumCellBoundsWidth = cellBounds[c];
                    }
                }
                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;
            }
            else {
                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];
            }
            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1
                && startPage != null && format.layout != _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutType"].OnePage) {
                isParentCell = this.Grid.isChildGrid;
                if (largeNavigatePage[0][0] != 0) {
                    var section = this.currentPage.section;
                    var pageIndex = section.indexOf(this.currentPage);
                    this.currentGraphics = this.currentPage.graphics;
                    this.currentBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](0, 0), this.currentPage.getClientSize());
                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);
                }
                else {
                    this.currentPage = this.getNextPageformat(format);
                }
                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);
                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)
                // {
                //     this.currentBounds.x += this.startLocation.x;
                //     this.currentBounds.y += this.startLocation.y;
                // }
            }
            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutType"].OnePage) {
                this.currentPage = this.getNextPageformat(format);
                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)
                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {
                    this.currentBounds.x += this.startLocation.x;
                    this.currentBounds.y += this.startLocation.y;
                    //this.currentBounds.height = this.pageBounds.height;
                }
            }
        }
        result = this.getLayoutResult();
        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == _styles_style__WEBPACK_IMPORTED_MODULE_6__["PdfHorizontalOverflowType"].NextPage) {
            this.reArrangePages(layoutedPages);
        }
        this.raisePageLayouted(result);
        return result;
    };
    /* tslint:enable */
    /**
     * Gets the `next page`.
     * @private
     */
    PdfGridLayouter.prototype.getNextPageformat = function (format) {
        var section = this.currentPage.section;
        var nextPage = null;
        var index = section.indexOf(this.currentPage);
        this.flag = false;
        if (index === section.count - 1) {
            nextPage = section.add();
        }
        else {
            nextPage = section.getPages()[index + 1];
        }
        this.currentGraphics = nextPage.graphics;
        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);
        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {
            this.listOfNavigatePages.push(pageindex);
        }
        this.currentBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](0, 0), nextPage.getClientSize());
        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)
            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {
            this.currentBounds.x = format.paginateBounds.x;
            this.currentBounds.y = format.paginateBounds.y;
            this.currentBounds.height = format.paginateBounds.height;
        }
        return nextPage;
    };
    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {
        var defaultFormat = new _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_1__["PdfStringFormat"]();
        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&
            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&
            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&
            format.lineAlignment === defaultFormat.lineAlignment
            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&
            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&
            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&
            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&
            format.wordWrap === defaultFormat.wordWrap);
    };
    /**
     * `Raises BeforeCellDraw event`.
     * @private
     */
    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {
        var args = null;
        if (this.Grid.raiseBeginCellDraw) {
            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);
            this.Grid.onBeginCellDraw(args);
            style = args.style;
        }
        return style;
    };
    /**
     * `Raises AfterCellDraw event`.
     * @private
     */
    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {
        var args = null;
        if (this.Grid.raiseEndCellDraw) {
            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);
            this.Grid.onEndCellDraw(args);
        }
    };
    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {
        var document = this.currentPage.document;
        var pages = [];
        var keys = layoutedPages.keys();
        var values = layoutedPages.values();
        for (var i = 0; i < keys.length; i++) {
            var page = keys[i];
            page.section = null;
            pages.push(page);
            document.pages.remove(page);
        }
        /* tslint:disable */
        for (var i = 0; i < layoutedPages.size(); i++) {
            var count = 0;
            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {
                var page = pages[j];
                if (document.pages.indexOf(page) === -1) {
                    document.pages.add(page);
                }
            }
        }
        /* tslint:enable */
    };
    /**
     * Gets the `layout result`.
     * @private
     */
    PdfGridLayouter.prototype.getLayoutResult = function () {
        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {
            for (var i = 0; i < this.Grid.rows.count; i++) {
                var row = this.Grid.rows.getRow(i);
                if (row.rowBreakHeight > 0 && row.repeatFlag) {
                    this.startLocation.y = this.currentPage.origin.y;
                }
            }
        }
        var bounds;
        if (!this.isChanged) {
            bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](this.startLocation, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](this.currentBounds.width, this.currentBounds.y -
                this.startLocation.y));
        }
        // else {
        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -
        //                              this.currentLocation.y));
        // }
        /* tslint:enable */
        return new PdfGridLayoutResult(this.currentPage, bounds);
    };
    /**
     * `Recalculate row height` for the split cell to be drawn.
     * @private
     */
    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {
        var newHeight = 0.0;
        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {
            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||
                typeof row.cells.getCell(i).remainingString === 'undefined')) {
                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());
            }
        }
        return Math.max(height, newHeight);
    };
    /**
     * `Raises BeforePageLayout event`.
     * @private
     */
    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {
        var cancel = false;
        if (this.Grid.raiseBeginPageLayout) {
            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);
            this.Grid.onBeginPageLayout(args);
            // if (currentBounds !== args.Bounds) {
            //     this.isChanged = true;
            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);
            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,
            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,
            //                                                                 args.Bounds.height)));
            // }
            cancel = args.cancel;
            currentBounds = args.bounds;
            currentRow = args.startRowIndex;
        }
        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };
    };
    /**
     * `Raises PageLayout event` if needed.
     * @private
     */
    PdfGridLayouter.prototype.raisePageLayouted = function (result) {
        var args = new PdfGridEndPageLayoutEventArgs(result);
        if (this.Grid.raiseEndPageLayout) {
            this.Grid.onEndPageLayout(args);
        }
        return args;
    };
    PdfGridLayouter.prototype.drawRow = function (row, result, height) {
        if (typeof result === 'undefined') {
            //.. Check if required space available.
            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        
            var result_1 = new RowLayoutResult();
            var rowHeightWithSpan = 0;
            var location_3 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](0, 0);
            var size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](0, 0);
            var isHeader = false;
            if (row.rowSpanExists) {
                var maxSpan = 0;
                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);
                if (currRowIndex === -1) {
                    currRowIndex = this.Grid.headers.indexOf(row);
                    if (currRowIndex !== -1) {
                        isHeader = true;
                    }
                }
                for (var i = 0; i < row.cells.count; i++) {
                    var cell = row.cells.getCell(i);
                    maxSpan = Math.max(maxSpan, cell.rowSpan);
                }
                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {
                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);
                }
                // let rowMaxHeight : number = rowHeightWithSpan;
                // for (let i : number = 0; i < row.cells.count; i++ ) {
                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;
                // }
                // let flag : boolean = true;
                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);
                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {
                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {
                //         flag = false;
                //         break;
                //     }
                // }
                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {
                //     row.height += (rowMaxHeight - rowHeightWithSpan);
                // }                
            }
            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;
            if (this.Grid.isChildGrid && this.Grid.ParentCell != null) {
                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.
                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +
                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {
                //     if (this.Grid.allowRowBreakAcrossPages) {
                //         result.isFinish = true;
                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {
                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {
                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;
                //             }
                //             this.currentBounds.x = this.startLocation.x;
                //         }
                //         result.bounds = this.currentBounds ;
                //         this.drawRowWithBreak(result, row, calculatedHeight);
                //     } else {
                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       
                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {
                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;
                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -
                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;
                //         }
                //         result.isFinish = false;
                //         this.drawRow( row, result, calculatedHeight);
                //     }
                // } else
                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >
                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom
                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +
                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {
                    //If a row is repeated and still cannot fit in page, proceed draw.
                    if (this.Grid.ParentCell.row.grid.LayoutFormat.break === _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutBreakType"].FitPage) {
                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);
                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);
                    }
                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {
                        if (this.Grid.allowRowBreakAcrossPages) {
                            result_1.isFinish = true;
                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {
                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {
                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;
                            //     // }
                            //     this.currentBounds.x = this.startLocation.x;
                            // }
                            result_1.bounds = this.currentBounds;
                            this.drawRowWithBreak(result_1, row, calculatedHeight);
                            row.repeatFlag = true;
                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;
                        }
                        // else {
                        //     result.isFinish = false;
                        //     row.repeatFlag = false;
                        //     this.drawRow( row, result, calculatedHeight);
                        // }
                    }
                    // else {
                    //     result.isFinish = false;
                    // }
                }
                else {
                    result_1.isFinish = true;
                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {
                        row.repeatFlag = true;
                    }
                    else {
                        row.repeatFlag = false;
                        calculatedHeight = row.height;
                    }
                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {
                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {
                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;
                        }
                    }
                    this.drawRow(row, result_1, calculatedHeight);
                }
            }
            else {
                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.
                if (calculatedHeight > this.currentPageBounds.height) {
                    if (this.Grid.allowRowBreakAcrossPages) {
                        result_1.isFinish = true;
                        //result.bounds = this.currentBounds;
                        this.drawRowWithBreak(result_1, row, calculatedHeight);
                        row.isrowFinish = true;
                        row.repeatFlag = true;
                        if (row.grid.splitChildRowIndex !== -1) {
                            result_1.isFinish = false;
                        }
                    }
                    // else {
                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.
                    //     result.isFinish = false;
                    //     this.drawRow( row, result, calculatedHeight);
                    // }
                }
                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||
                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||
                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {
                    // If a row is repeated and still cannot fit in page, proceed draw.
                    var isFit = false;
                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {
                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0 && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell !== null && (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight) > this.currentBounds.height) {
                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);
                        }
                        else
                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);
                        if (isFit) {
                            this.isPaginate = true;
                        }
                    }
                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutType"].Paginate && this.Grid.LayoutFormat.break != _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutBreakType"].FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {
                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);
                        if (!isFit)
                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);
                        if (isFit && this.slr != null && this.slr.lineCount > 1) {
                            //It may text cutoff issue
                            isFit = false;
                        }
                        this.remainderText = null;
                    }
                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {
                        if (this.Grid.allowRowBreakAcrossPages) {
                            result_1.isFinish = true;
                            this.drawRowWithBreak(result_1, row, calculatedHeight);
                            row.repeatFlag = true;
                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;
                            if (row.grid.splitChildRowIndex !== -1) {
                                result_1.isFinish = false;
                            }
                        }
                        else {
                            result_1.isFinish = false;
                            this.drawRow(row, result_1, calculatedHeight);
                        }
                    }
                    else {
                        result_1.isFinish = false;
                    }
                }
                else {
                    result_1.isFinish = true;
                    this.drawRow(row, result_1, calculatedHeight);
                    row.repeatFlag = false;
                }
            }
            return result_1;
        }
        else {
            var skipcell = false;
            var location_4 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](this.currentBounds.x, this.currentBounds.y);
            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <
            //                 this.currentPage.getClientSize().width) {
            //     location.x = this.startLocation.x;
            // }
            result.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](location_4, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](0, 0));
            height = this.ReCalculateHeight(row, height);
            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {
                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));
                // let cancelSpans : boolean = false;
                if (!cancelSpans) {
                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {
                        row.cells.getCell(i + j).isCellMergeContinue = true;
                    }
                }
                var size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](this.Grid.columns.getColumn(i).width, height);
                // if (size.width > this.currentGraphics.clientSize.width) {
                //     size.width = this.currentGraphics.clientSize.width;
                // }
                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {
                //     if (size.width >= this.currentGraphics.clientSize.width) {
                //         size.width -= 2 * this.currentBounds.x;
                //     }
                // }
                /* tslint:disable */
                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&
                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {
                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;
                }
                var cellstyle = row.cells.getCell(i).style;
                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&
                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');
                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](location_4, size), tempValue, cellstyle);
                //row.cells.getCell(i).style = cellstyle;
                if (!skipcell) {
                    if (row.cells.getCell(i).value instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                        var grid = row.cells.getCell(i).value;
                        grid.parentCellIndex = i;
                    }
                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](location_4, size), cancelSpans);
                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||
                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {
                        row.rowOverflowIndex = this.cellEndIndex;
                    }
                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >
                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&
                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {
                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?
                            stringResult.remainder : '' : '';
                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;
                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;
                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;
                    }
                }
                /* tslint:enable */
                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&
                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');
                if (!cancelSpans) {
                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](location_4, size), tempValue, row.cells.getCell(i).style);
                }
                if (row.cells.getCell(i).value instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                    var grid = row.cells.getCell(i).value;
                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {
                        location_4.x = grid.rowLayoutBoundsWidth;
                        location_4.x += grid.style.cellSpacing;
                    }
                    else {
                        location_4.x += this.Grid.columns.getColumn(i).width;
                    }
                }
                else {
                    location_4.x += this.Grid.columns.getColumn(i).width;
                }
            }
            if (!row.rowMergeComplete || row.isRowHeightSet) {
                this.currentBounds.y += height;
            }
            result.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](result.bounds.x, result.bounds.y), new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](location_4.x, location_4.y));
        }
    };
    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {
        var isFit = false;
        var layouter = new _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_8__["PdfStringLayouter"]();
        for (var i = 0; i < gridRow.cells.count; i++) {
            var cell = gridRow.cells.getCell(i);
            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {
                var font = null;
                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {
                    font = cell.style.font;
                }
                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {
                    font = cell.row.style.font;
                }
                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {
                    font = cell.row.grid.style.font;
                }
                else {
                    font = _document_pdf_document__WEBPACK_IMPORTED_MODULE_9__["PdfDocument"].defaultFont;
                }
                this.remainderText = gridRow.cells.getCell(i).value;
                var width = gridRow.cells.getCell(i).width;
                if (grid.columns.getColumn(i).isCustomWidth && gridRow.cells.getCell(i).width > grid.columns.getColumn(i).width) {
                    width = grid.columns.getColumn(i).width;
                }
                this.slr = layouter.layout(gridRow.cells.getCell(i).value, font, gridRow.cells.getCell(i).stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](width, currentHeight), false, this.currentPageBounds);
                var height = this.slr.actualSize.height;
                if (height == 0) {
                    isFit = false;
                    break;
                }
                else if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {
                    isFit = true;
                    break;
                }
            }
        }
        return isFit;
    };
    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {
        var location = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](this.currentBounds.x, this.currentBounds.y);
        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {
            location.x = this.startLocation.x;
        }
        result.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](location, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](0, 0));
        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;
        // Calculate the remaining height.
        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {
            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;
        }
        // else {
        //     row.rowBreakHeight = calculateHeight;
        //     result.isFinish = false;
        //     return;
        // }
        // No need to explicit break if the row height is equal to grid height.
        for (var i = 0; i < row.cells.count; i++) {
            var cell = row.cells.getCell(i);
            var cellHeight = cell.measureHeight();
            if (cellHeight === calculateHeight && cell.value instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                row.rowBreakHeight = 0;
            }
            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {
            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;
            // }
        }
        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {
            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&
                (row.cells.getCell(i).columnSpan > 1));
            // if (!cancelSpans) {
            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {
            //         row.cells.getCell(i + k).isCellMergeContinue = true;
            //     }
            //}
            var size = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :
                this.currentPageBounds.height);
            // if (size.width === 0) {
            //     size = new SizeF(row.cells.getCell(i).width, size.height);
            // }
            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&
            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {
            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;
            // }
            var cellstyle1 = row.cells.getCell(i).style;
            row.cells.getCell(i).style = cellstyle1;
            var skipcell = false;
            var stringResult = null;
            if (!skipcell) {
                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](location, size), cancelSpans);
            }
            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.
            if (row.rowBreakHeight > 0.0) {
                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {
                    row.cells.getCell(i).FinishedDrawingCell = false;
                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;
                    if (row.grid.isChildGrid) {
                        row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;
                    }
                }
            }
            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;
            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&
            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;
            // if (!cancelSpans) {
            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,
            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            
            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),
            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',
            //                             row.cells.getCell(i).style);
            //     }                
            if (row.cells.getCell(i).value instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                var grid = row.cells.getCell(i).value;
                this.rowBreakPageHeightCellIndex = i;
                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;
                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){
                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);
                //             this.Grid.listOfNavigatePages.push(pageIndex);
                //     }
                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {
                    location.x = this.rowLayoutBoundsWidth;
                    location.x += grid.style.cellSpacing;
                }
                else {
                    location.x += this.Grid.columns.getColumn(i).width;
                }
            }
            else {
                location.x += this.Grid.columns.getColumn(i).width;
            }
        }
        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;
        result.bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"](result.bounds.x, result.bounds.y), new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](location.x, location.y));
    };
    /**
     * @hidden
     * @private
     */
    PdfGridLayouter.repeatRowIndex = -1;
    return PdfGridLayouter;
}(_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["ElementLayouter"]));

// recalculateBounds : boolean, clientSize : SizeF
//Implementation
/**
 * `Initializes` internal data.
 * @private
 */
//Internal declaration
var PdfGridLayoutResult = /** @class */ (function (_super) {
    __extends(PdfGridLayoutResult, _super);
    /**
     * Constructor
     * @private
     */
    function PdfGridLayoutResult(page, bounds) {
        return _super.call(this, page, bounds) || this;
    }
    return PdfGridLayoutResult;
}(_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutResult"]));

/**
 * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.
 */
var PdfGridLayoutFormat = /** @class */ (function (_super) {
    __extends(PdfGridLayoutFormat, _super);
    /**
     * Initializes a new instance of the `PdfGridLayoutFormat` class.
     * @private
     */
    function PdfGridLayoutFormat(baseFormat) {
        return _super.call(this, baseFormat) || this;
    }
    return PdfGridLayoutFormat;
}(_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_5__["PdfLayoutFormat"]));

var GridCellEventArgs = /** @class */ (function () {
    // Constructors
    /**
     * Initialize a new instance for `GridCellEventArgs` class.
     * @private
     */
    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {
        this.gridRowIndex = rowIndex;
        this.gridCellIndex = cellIndex;
        this.internalValue = value;
        this.gridBounds = bounds;
        this.pdfGraphics = graphics;
    }
    Object.defineProperty(GridCellEventArgs.prototype, "rowIndex", {
        // Properties
        /**
         * Gets the value of current `row index`.
         * @private
         */
        get: function () {
            return this.gridRowIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "cellIndex", {
        /**
         * Gets the value of current `cell index`.
         * @private
         */
        get: function () {
            return this.gridCellIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "value", {
        /**
         * Gets the actual `value` of current cell.
         * @private
         */
        get: function () {
            return this.internalValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "bounds", {
        /**
         * Gets the `bounds` of current cell.
         * @private
         */
        get: function () {
            return this.gridBounds;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCellEventArgs.prototype, "graphics", {
        /**
         * Gets the instance of `current graphics`.
         * @private
         */
        get: function () {
            return this.pdfGraphics;
        },
        enumerable: true,
        configurable: true
    });
    return GridCellEventArgs;
}());

var PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {
    __extends(PdfGridBeginCellDrawEventArgs, _super);
    // Constructors
    /**
     * Initializes a new instance of the `StartCellLayoutEventArgs` class.
     * @private
     */
    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {
        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;
        _this.style = style;
        return _this;
    }
    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, "skip", {
        // Properties
        /**
         * Gets or sets a value indicating whether the value of this cell should be `skipped`.
         * @private
         */
        get: function () {
            return this.bSkip;
        },
        set: function (value) {
            this.bSkip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, "style", {
        /**
         * Gets or sets a `style` value of the cell.
         * @private
         */
        get: function () {
            return this.cellStyle;
        },
        set: function (value) {
            this.cellStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridBeginCellDrawEventArgs;
}(GridCellEventArgs));

var PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {
    __extends(PdfGridEndCellDrawEventArgs, _super);
    // Constructors
    /**
     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.
     * @private
     */
    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {
        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;
        _this.cellStyle = style;
        return _this;
    }
    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, "style", {
        // Propertise
        /**
         * Get the `PdfGridCellStyle`.
         * @private
         */
        get: function () {
            return this.cellStyle;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridEndCellDrawEventArgs;
}(GridCellEventArgs));

var PdfCancelEventArgs = /** @class */ (function () {
    function PdfCancelEventArgs() {
    }
    Object.defineProperty(PdfCancelEventArgs.prototype, "cancel", {
        // Properties
        /**
         * Gets and Sets the value of `cancel`.
         * @private
         */
        get: function () {
            return this.isCancel;
        },
        set: function (value) {
            this.isCancel = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfCancelEventArgs;
}());

var BeginPageLayoutEventArgs = /** @class */ (function (_super) {
    __extends(BeginPageLayoutEventArgs, _super);
    // Constructors
    /**
     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.
     * @private
     */
    function BeginPageLayoutEventArgs(bounds, page) {
        var _this = _super.call(this) || this;
        _this.bounds = bounds;
        _this.pdfPage = page;
        return _this;
    }
    Object.defineProperty(BeginPageLayoutEventArgs.prototype, "bounds", {
        // Properties
        /**
         * Gets or sets value that indicates the lay outing `bounds` on the page.
         * @private
         */
        get: function () {
            return this.cellBounds;
        },
        set: function (value) {
            this.cellBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BeginPageLayoutEventArgs.prototype, "page", {
        /**
         * Gets the `page` where the lay outing should start.
         * @private
         */
        get: function () {
            return this.pdfPage;
        },
        enumerable: true,
        configurable: true
    });
    return BeginPageLayoutEventArgs;
}(PdfCancelEventArgs));

/**
 * `EndPageLayoutEventArgs` class is alternate for end page layout events.
 */
var EndPageLayoutEventArgs = /** @class */ (function (_super) {
    __extends(EndPageLayoutEventArgs, _super);
    // Constructors
    /**
     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.
     * @private
     */
    function EndPageLayoutEventArgs(result) {
        var _this = _super.call(this) || this;
        _this.layoutResult = result;
        return _this;
    }
    Object.defineProperty(EndPageLayoutEventArgs.prototype, "result", {
        // Properties
        /**
         * Gets the lay outing `result` of the page.
         * @private
         */
        get: function () {
            return this.layoutResult;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EndPageLayoutEventArgs.prototype, "nextPage", {
        /**
         * Gets or sets a value indicating the `next page` where the element should be layout.
         * @private
         */
        get: function () {
            return this.nextPdfPage;
        },
        set: function (value) {
            this.nextPdfPage = value;
        },
        enumerable: true,
        configurable: true
    });
    return EndPageLayoutEventArgs;
}(PdfCancelEventArgs));

/**
 * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.
 */
var PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {
    __extends(PdfGridBeginPageLayoutEventArgs, _super);
    // Constructors
    /**
     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.
     * @private
     */
    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {
        var _this = _super.call(this, bounds, page) || this;
        _this.startRow = startRow;
        return _this;
    }
    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, "startRowIndex", {
        // Properties
        /**
         * Gets the `start row index`.
         * @private
         */
        get: function () {
            return this.startRow;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridBeginPageLayoutEventArgs;
}(BeginPageLayoutEventArgs));

/**
 * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.
 */
var PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {
    __extends(PdfGridEndPageLayoutEventArgs, _super);
    // Constructors
    /**
     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.
     * @private
     */
    function PdfGridEndPageLayoutEventArgs(result) {
        return _super.call(this, result) || this;
    }
    return PdfGridEndPageLayoutEventArgs;
}(EndPageLayoutEventArgs));

var RowLayoutResult = /** @class */ (function () {
    //Constructors
    /**
     * Initializes a new instance of the `RowLayoutResult` class.
     * @private
     */
    function RowLayoutResult() {
        this.layoutedBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](0, 0, 0, 0);
    }
    Object.defineProperty(RowLayoutResult.prototype, "isFinish", {
        /**
         * Gets or sets a value indicating whether this instance `is finish`.
         * @private
         */
        get: function () {
            return this.bIsFinished;
        },
        set: function (value) {
            this.bIsFinished = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RowLayoutResult.prototype, "bounds", {
        /**
         * Gets or sets the `bounds`.
         * @private
         */
        get: function () {
            return this.layoutedBounds;
        },
        set: function (value) {
            this.layoutedBounds = value;
        },
        enumerable: true,
        configurable: true
    });
    return RowLayoutResult;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-cell.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-cell.js ***!
  \*****************************************************************************************************************************************************************/
/*! exports provided: PdfGridCell, PdfGridCellCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridCell", function() { return PdfGridCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellCollection", function() { return PdfGridCellCollection; });
/* harmony import */ var _pdf_grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-grid */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid.js");
/* harmony import */ var _styles_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/style */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js");
/* harmony import */ var _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../graphics/fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony import */ var _document_pdf_document__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../document/pdf-document */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js");
/* harmony import */ var _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../graphics/fonts/pdf-string-format */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _tables_light_tables_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../tables/light-tables/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/tables/light-tables/enum.js");
/* harmony import */ var _graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./../../graphics/brushes/pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/* harmony import */ var _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./../../graphics/pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony import */ var _graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./../../graphics/images/pdf-image */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js");
/* harmony import */ var _graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./../../graphics/images/pdf-bitmap */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js");
/* harmony import */ var _annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./../../annotations/pdf-text-web-link */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js");
/* harmony import */ var _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./../../graphics/figures/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js");
/* harmony import */ var _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./../../structured-elements/grid/layout/grid-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/layout/grid-layouter.js");
/* harmony import */ var _implementation_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../implementation/graphics/figures/base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
















/**
 * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.
 */
var PdfGridCell = /** @class */ (function () {
    function PdfGridCell(row) {
        /**
         * `Width` of the cell.
         * @default 0
         * @private
         */
        this.cellWidth = 0;
        /**
         * `Height` of the cell.
         * @default 0
         * @private
         */
        this.cellHeight = 0;
        /**
         * `tempval`to stores current width .
         * @default 0
         * @private
         */
        this.tempval = 0;
        this.fontSpilt = false;
        /**
         * Specifies weather the `cell is drawn`.
         * @default true
         * @private
         */
        this.finsh = true;
        /**
         * The `remaining height` of row span.
         * @default 0
         * @private
         */
        this.rowSpanRemainingHeight = 0;
        this.hasRowSpan = false;
        this.hasColSpan = false;
        /**
         * the 'isFinish' is set to page finish
         */
        this.isFinish = true;
        /**
         * The `present' to store the current cell.
         * @default false
         * @private
         */
        this.present = false;
        this.gridRowSpan = 1;
        this.colSpan = 1;
        if (typeof row !== 'undefined') {
            this.gridRow = row;
        }
    }
    Object.defineProperty(PdfGridCell.prototype, "isCellMergeContinue", {
        //Properties
        get: function () {
            return this.internalIsCellMergeContinue;
        },
        set: function (value) {
            this.internalIsCellMergeContinue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "isRowMergeContinue", {
        get: function () {
            return this.internalIsRowMergeContinue;
        },
        set: function (value) {
            this.internalIsRowMergeContinue = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "isCellMergeStart", {
        get: function () {
            return this.internalIsCellMergeStart;
        },
        set: function (value) {
            this.internalIsCellMergeStart = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "isRowMergeStart", {
        get: function () {
            return this.internalIsRowMergeStart;
        },
        set: function (value) {
            this.internalIsRowMergeStart = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "remainingString", {
        /**
         * Gets or sets the `remaining string` after the row split between pages.
         * @private
         */
        get: function () {
            return this.remaining;
        },
        set: function (value) {
            this.remaining = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "FinishedDrawingCell", {
        /**
         * Gets or sets the `FinishedDrawingCell` .
         * @private
         */
        get: function () {
            return this.isFinish;
        },
        set: function (value) {
            this.isFinish = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "stringFormat", {
        /**
         * Gets or sets the `string format`.
         * @private
         */
        get: function () {
            if (this.format == null) {
                this.format = new _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_4__["PdfStringFormat"]();
            }
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "row", {
        /**
         * Gets or sets the parent `row`.
         * @private
         */
        get: function () {
            return this.gridRow;
        },
        set: function (value) {
            this.gridRow = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "value", {
        /**
         * Gets or sets the `value` of the cell.
         * @private
         */
        get: function () {
            return this.objectValue;
        },
        set: function (value) {
            this.objectValue = value;
            if (this.objectValue instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
                this.row.grid.isSingleGrid = false;
                var grid = this.objectValue;
                grid.ParentCell = this;
                this.objectValue.isChildGrid = true;
                var rowCount = this.row.grid.rows.count;
                for (var i = 0; i < rowCount; i++) {
                    var row = this.row.grid.rows.getRow(i);
                    var colCount = row.cells.count;
                    for (var j = 0; j < colCount; j++) {
                        var cell = row.cells.getCell(j);
                        cell.parent = this;
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "rowSpan", {
        /**
         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.
         * @private
         */
        get: function () {
            return this.gridRowSpan;
        },
        set: function (value) {
            if (value < 1) {
                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');
            }
            else {
                this.gridRowSpan = value;
                this.row.rowSpanExists = true;
                this.row.grid.hasRowSpanSpan = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "style", {
        /**
         * Gets or sets the cell `style`.
         * @private
         */
        get: function () {
            if (this.cellStyle == null) {
                this.cellStyle = new _styles_style__WEBPACK_IMPORTED_MODULE_1__["PdfGridCellStyle"]();
            }
            return this.cellStyle;
        },
        set: function (value) {
            this.cellStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "height", {
        /**
         * Gets the `height` of the PdfGrid cell.[Read-Only].
         * @private
         */
        get: function () {
            if (this.cellHeight === 0) {
                this.cellHeight = this.measureHeight();
            }
            return this.cellHeight;
        },
        set: function (value) {
            this.cellHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "columnSpan", {
        /**
         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.
         * @private
         */
        get: function () {
            return this.colSpan;
        },
        set: function (value) {
            if (value < 1) {
                throw Error('Invalid span specified, must be greater than or equal to 1');
            }
            else {
                this.colSpan = value;
                this.row.columnSpanExists = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCell.prototype, "width", {
        /**
         * Gets the `width` of the PdfGrid cell.[Read-Only].
         * @private
         */
        get: function () {
            if (this.cellWidth === 0 || this.row.grid.isComplete) {
                this.cellWidth = this.measureWidth();
            }
            return Math.round(this.cellWidth);
        },
        set: function (value) {
            this.cellWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * `Calculates the width`.
     * @private
     */
    PdfGridCell.prototype.measureWidth = function () {
        // .. Calculate the cell text width.
        // .....Add border widths, cell spacings and paddings to the width.
        var width = 0;
        var layouter = new _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_2__["PdfStringLayouter"]();
        if (typeof this.objectValue === 'string') {
            /* tslint:disable */
            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](Number.MAX_VALUE, Number.MAX_VALUE), false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](0, 0));
            width += slr.actualSize.width;
            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;
        }
        else if (this.objectValue instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
            width = this.objectValue.size.width;
            //width += this.objectValue.style.cellSpacing;
        }
        else if (this.objectValue instanceof _graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_10__["PdfImage"] || this.objectValue instanceof _graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_11__["PdfBitmap"]) {
            width += this.objectValue.width;
        }
        else if (this.objectValue instanceof _annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_12__["PdfTextWebLink"]) {
            var webLink = this.objectValue;
            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](0, 0), false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](0, 0));
            /* tslint:enable */
            width += result.actualSize.width;
            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;
        }
        if (!(this.objectValue instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"])) {
            if (this.style.cellPadding != null) {
                width += (this.style.cellPadding.left + this.style.cellPadding.right);
            }
            else {
                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);
            }
        }
        else {
            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {
                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {
                    width += this.style.cellPadding.left;
                }
                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {
                    width += this.style.cellPadding.right;
                }
            }
            else {
                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {
                    width += this.row.grid.style.cellPadding.left;
                }
                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {
                    width += this.row.grid.style.cellPadding.right;
                }
            }
        }
        width += this.row.grid.style.cellSpacing;
        return width;
    };
    /**
     * Draw the `cell background`.
     * @private
     */
    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {
        var backgroundBrush = this.getBackgroundBrush();
        //graphics.isTemplateGraphics = true;
        if (backgroundBrush != null) {
            graphics.save();
            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);
            graphics.restore();
        }
        if (this.style.backgroundImage != null) {
            var image = this.getBackgroundImage();
            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);
        }
    };
    /**
     * `Adjusts the text layout area`.
     * @private
     */
    /* tslint:disable */
    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {
        //Add Padding value to its Cell Bounds
        var returnBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["RectangleF"](bounds.x, bounds.y, bounds.width, bounds.height);
        if (!(this.objectValue instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"])) {
            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {
                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;
                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;
                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);
                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);
                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);
            }
            else {
                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;
                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;
                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);
                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);
                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);
                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);
                if (this.rowSpan === 1) {
                    returnBounds.width -= (this.style.borders.left.width);
                }
            }
        }
        else {
            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {
                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;
                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;
                }
                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {
                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;
                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;
                }
                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {
                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;
                }
                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {
                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;
                }
            }
            else {
                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {
                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;
                    returnBounds.width -= this.style.cellPadding.left;
                }
                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {
                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;
                    returnBounds.height -= this.style.cellPadding.top;
                }
                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {
                    returnBounds.width -= this.style.cellPadding.right;
                }
                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {
                    returnBounds.height -= this.style.cellPadding.bottom;
                }
            }
            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);
            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);
        }
        return returnBounds;
    };
    /**
     * `Draws` the specified graphics.
     * @private
     */
    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {
        var isrowbreak = false;
        /*if (!this.row.grid.isSingleGrid)
        {
            //Check whether the Grid Span to Nextpage
            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))
            {
                this.DrawParentCells(graphics, bounds, true);
            }
            else if (this.row.grid.rows.count > 1)
            {
                for (let i : number  = 0; i < this.row.grid.rows.count; i++)
                {
                    if (this.row == this.row.grid.rows.getRow(i))
                    {
                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)
                            isrowbreak = true;
                        if ((i > 0) && (isrowbreak))
                            this.DrawParentCells(graphics, bounds, false);
                    }
                }
            }
        } */
        var result = null;
        /*if (cancelSubsequentSpans)
        {
            //..Cancel all subsequent cell spans, if no space exists.
            let currentCellIndex : number = this.row.cells.indexOf(this);
            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)
            {
                this.row.cells.getCell(i).isCellMergeContinue = false;
                this.row.cells.getCell(i).isRowMergeContinue = false;
            }
            this.colSpan = 1;
        }*/
        //..Skip cells which were already covered by spanmap.
        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {
            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {
                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {
                    return result;
                }
            }
            else {
                return result;
            }
        }
        //Adjust bounds with Row and Column Spacing
        bounds = this.adjustOuterLayoutArea(bounds, graphics);
        this.drawCellBackground(graphics, bounds);
        var textPen = this.getTextPen();
        var textBrush = this.getTextBrush();
        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {
            textBrush = new _graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_8__["PdfSolidBrush"](new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_9__["PdfColor"](0, 0, 0));
        }
        var font = this.getTextFont();
        var strFormat = this.getStringFormat();
        var innerLayoutArea = bounds;
        if (innerLayoutArea.height >= graphics.clientSize.height) {
            // If to break row to next page.
            if (this.row.grid.allowRowBreakAcrossPages) {
                innerLayoutArea.height -= innerLayoutArea.y;
                //bounds.height -= bounds.y;
                // if(this.row.grid.isChildGrid)
                // {
                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;
                // }
            }
            // if user choose to cut the row whose height is more than page height.
            // else
            // {
            //     innerLayoutArea.height = graphics.clientSize.height;
            //     bounds.height = graphics.clientSize.height;
            // }
        }
        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);
        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {
            var temp = void 0;
            var layoutRectangle = void 0;
            if (innerLayoutArea.height < font.height)
                layoutRectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["RectangleF"](innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);
            else
                layoutRectangle = innerLayoutArea;
            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {
                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;
                if (this.row.grid.splitChildRowIndex != -1) {
                    this.fontSpilt = true;
                    this.row.rowFontSplit = true;
                }
                if (height > 0 && height < font.height)
                    layoutRectangle.height = height;
                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)
                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;
                // else if (bounds.height < font.height)
                //     layoutRectangle.height = bounds.height;
                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)
                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        
            }
            if (this.gridRow.grid.style.cellSpacing != 0) {
                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;
                bounds.width -= this.gridRow.grid.style.cellSpacing;
            }
            if (this.isFinish) {
                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){
                //     this.remaining = '';
                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);
                // } else {
                temp = this.remaining === '' ? this.remaining : this.objectValue;
                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);
                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {
                    this.remaining = '';
                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);
                }
            }
            else {
                if (typeof this.remaining == 'undefined' || this.remaining === null) {
                    this.remaining = '';
                }
                if (this.row.repeatFlag) {
                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);
                }
                //  else {
                //     if(this.row.grid.ParentCell.row.repeatFlag) {
                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    
                //     } else {
                //         layoutRectangle.height = this.row.height;
                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);
                //         bounds.height = this.row.height;
                //     }
                //  }
                this.isFinish = true;
                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);
            }
            result = graphics.stringLayoutResult;
            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {
            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;
            // }
        }
        else if (this.objectValue instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
            var childGrid = this.objectValue;
            childGrid.isChildGrid = true;
            childGrid.ParentCell = this;
            var layoutRect = void 0;
            layoutRect = innerLayoutArea;
            if (this.gridRow.grid.style.cellSpacing != 0) {
                bounds.width -= this.gridRow.grid.style.cellSpacing;
            }
            // layoutRect = bounds;
            // if (this.style.cellPadding != null){
            //     layoutRect = bounds;            
            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)
            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)
            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {
            //     layoutRect = innerLayoutArea;
            // }
            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){
            //     layoutRect = bounds;
            // }           
            var layouter = new _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_14__["PdfGridLayouter"](childGrid);
            var format = new _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_14__["PdfGridLayoutFormat"]();
            if (this.row.grid.LayoutFormat != null)
                format = this.row.grid.LayoutFormat;
            else
                format.layout = _graphics_figures_enum__WEBPACK_IMPORTED_MODULE_13__["PdfLayoutType"].Paginate;
            var param = new _implementation_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_15__["PdfLayoutParams"]();
            if (graphics.layer != null) {
                // Define layout parameters.
                param.page = graphics.page;
                param.bounds = layoutRect;
                param.format = format;
                //Set the span 
                childGrid.setSpan();
                childGrid.checkSpan();
                // Draw the child grid.
                var childGridResult = layouter.Layouter(param);
                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);
                this.value = childGrid;
                if (this.row.grid.splitChildRowIndex !== -1) {
                    this.height = this.row.rowBreakHeightValue;
                }
                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))
                 {
                    childGridResult.bounds.height = this.row.rowBreakHeightValue;
                    if (this.row.rowBreakHeight == 0)
                        this.row.NestedGridLayoutResult = childGridResult;
                    else
                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;
                    //bounds.height = this.row.rowBreakHeight;
                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.
                    //bounds.height = graphics.clientSize.height - bounds.y;
                }
            }
        }
        else if (this.objectValue instanceof _graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_10__["PdfImage"] || this.objectValue instanceof _graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_11__["PdfBitmap"]) {
            var imageBounds = void 0;
            if (this.objectValue.width <= innerLayoutArea.width) {
                imageBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["RectangleF"](innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);
            }
            else {
                imageBounds = innerLayoutArea;
            }
            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);
        }
        else if (this.objectValue instanceof _annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_12__["PdfTextWebLink"]) {
            this.objectValue.draw(graphics.currentPage, innerLayoutArea);
        }
        else if (typeof this.objectValue === 'undefined') {
            this.objectValue = "";
            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);
            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {
                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);
            }
            if (this.gridRow.grid.style.cellSpacing != 0) {
                bounds.width -= this.gridRow.grid.style.cellSpacing;
            }
        }
        if (this.style.borders != null) {
            if (!this.fontSpilt)
                this.drawCellBorders(graphics, bounds);
            else {
                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {
                    this.row.rowFontSplit = false;
                    this.drawCellBorders(graphics, bounds);
                }
            }
        }
        return result;
    };
    /* tslint:enable */
    /**
     * Draws the `cell border` constructed by drawing lines.
     * @private
     */
    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {
        if (this.row.grid.style.borderOverlapStyle === _tables_light_tables_enum__WEBPACK_IMPORTED_MODULE_7__["PdfBorderOverlapStyle"].Inside) {
            bounds.x += this.style.borders.left.width;
            bounds.y += this.style.borders.top.width;
            bounds.width -= this.style.borders.right.width;
            bounds.height -= this.style.borders.bottom.width;
        }
        var p1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x, bounds.y + bounds.height);
        var p2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x, bounds.y);
        var pen = this.cellStyle.borders.left;
        if (this.cellStyle.borders.left.dashStyle === _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfDashStyle"].Solid) {
            pen.lineCap = _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfLineCap"].Square;
        }
        // SetTransparency(ref graphics, pen);
        if (pen.width !== 0) {
            graphics.drawLine(pen, p1, p2);
        }
        p1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x + bounds.width, bounds.y);
        p2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x + bounds.width, bounds.y + bounds.height);
        pen = this.cellStyle.borders.right;
        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {
            p1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](graphics.clientSize.width - (pen.width / 2), bounds.y);
            p2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);
        }
        if (this.cellStyle.borders.right.dashStyle === _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfDashStyle"].Solid) {
            pen.lineCap = _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfLineCap"].Square;
        }
        if (pen.width !== 0) {
            graphics.drawLine(pen, p1, p2);
        }
        p1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x, bounds.y);
        p2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x + bounds.width, bounds.y);
        pen = this.cellStyle.borders.top;
        if (this.cellStyle.borders.top.dashStyle === _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfDashStyle"].Solid) {
            pen.lineCap = _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfLineCap"].Square;
        }
        if (pen.width !== 0) {
            graphics.drawLine(pen, p1, p2);
        }
        p1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x + bounds.width, bounds.y + bounds.height);
        p2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x, bounds.y + bounds.height);
        pen = this.cellStyle.borders.bottom;
        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {
            p1 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"]((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));
            p2 = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["PointF"](bounds.x, (graphics.clientSize.height - (pen.width / 2)));
        }
        if (this.cellStyle.borders.bottom.dashStyle === _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfDashStyle"].Solid) {
            pen.lineCap = _graphics_enum__WEBPACK_IMPORTED_MODULE_6__["PdfLineCap"].Square;
        }
        if (pen.width !== 0) {
            graphics.drawLine(pen, p1, p2);
        }
    };
    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {
    //     let alpha : number = (pen.color.a / 255) as number;
    //     graphics.save();
    //     graphics.setTransparency(alpha);
    // }
    /**
     * `Adjusts the outer layout area`.
     * @private
     */
    /* tslint:disable */
    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {
        var isHeader = false;
        var cellSpacing = this.row.grid.style.cellSpacing;
        if (cellSpacing > 0) {
            bounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["RectangleF"](bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);
        }
        var currentColIndex = this.row.cells.indexOf(this);
        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {
            var span = this.columnSpan;
            if (span == 1 && this.isCellMergeContinue) {
                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {
                    if (this.row.cells.getCell(j).isCellMergeContinue)
                        span++;
                    else
                        break;
                }
            }
            var totalWidth = 0;
            for (var i = currentColIndex; i < currentColIndex + span; i++) {
                if (this.row.grid.style.allowHorizontalOverflow) {
                    var width = void 0;
                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;
                    if (this.row.grid.size.width > g.clientSize.width) {
                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;
                    }
                    else {
                        width = totalWidth + this.row.grid.columns.getColumn(i).width;
                    }
                    if (width > compWidth) {
                        break;
                    }
                }
                totalWidth += this.row.grid.columns.getColumn(i).width;
            }
            totalWidth -= this.row.grid.style.cellSpacing;
            bounds.width = totalWidth;
        }
        if (this.rowSpan > 1 || this.row.rowSpanExists) {
            var span = this.rowSpan;
            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);
            if (currentRowIndex == -1) {
                currentRowIndex = this.row.grid.headers.indexOf(this.row);
                if (currentRowIndex != -1) {
                    isHeader = true;
                }
            }
            // if (span == 1 && this.isCellMergeContinue) {
            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)
            //         {
            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);
            //             if (flag)
            //                 span++;
            //             else
            //                 break;
            //         }
            // }
            var totalHeight = 0;
            var max = 0;
            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {
                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);
                var row = this.row.grid.rows.getRow(i);
                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);
                /*if (this.rowSpan > 1)
                    {
                        for (let k : number = 0; k < this.row.cells.count; k++) {
                            let cell : PdfGridCell = this.row.cells.getCell(k);
                            if(cell.rowSpan>1)
                            {
                                let tempHeight : number =0;
                                
                                for (let j :number = i; j < i +cell.rowSpan; j++)
                                {
                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)
                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;
                                    tempHeight += this.row.grid.rows.getRow(j).height;
                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)
                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;
                                }
                                //To check the Row spanned cell height is greater than the total spanned row height.
                                if(cell.height>tempHeight)
                                {
                                    if (max < (cell.height - tempHeight))
                                    {
                                        max = cell.height - tempHeight;
                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)
                                        {
                                            max += this.rowSpanRemainingHeight;
                                        }
                                        let index :number = row.cells.indexOf(cell);
                                        //set the m_rowspanRemainingHeight to last rowspanned row.
                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;
                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;
                                    }
                                }
                            }
                        }
                    }
                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)
                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/
            }
            var cellIndex = this.row.cells.indexOf(this);
            totalHeight -= this.row.grid.style.cellSpacing;
            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {
            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;
            //      totalHeight = this.row.cells.getCell(cellIndex).height;
            //      bounds.height = totalHeight;
            // } else {
            bounds.height = totalHeight;
            //  }
            if (!this.row.rowMergeComplete) {
                bounds.height = totalHeight;
            }
        }
        return bounds;
    };
    /* tslint:enable */
    /**
     * Gets the `text font`.
     * @private
     */
    PdfGridCell.prototype.getTextFont = function () {
        if (typeof this.style.font !== 'undefined' && this.style.font != null) {
            return this.style.font;
        }
        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {
            return this.row.style.font;
        }
        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {
            return this.row.grid.style.font;
        }
        else {
            return _document_pdf_document__WEBPACK_IMPORTED_MODULE_3__["PdfDocument"].defaultFont;
        }
    };
    /**
     * Gets the `text brush`.
     * @private
     */
    PdfGridCell.prototype.getTextBrush = function () {
        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {
            return this.style.textBrush;
        }
        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {
            return this.row.style.textBrush;
        }
        else {
            return this.row.grid.style.textBrush;
        }
    };
    /**
     * Gets the `text pen`.
     * @private
     */
    PdfGridCell.prototype.getTextPen = function () {
        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {
            return this.style.textPen;
        }
        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {
            return this.row.style.textPen;
        }
        else {
            return this.row.grid.style.textPen;
        }
    };
    /**
     * Gets the `background brush`.
     * @private
     */
    PdfGridCell.prototype.getBackgroundBrush = function () {
        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {
            return this.style.backgroundBrush;
        }
        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {
            return this.row.style.backgroundBrush;
        }
        else {
            return this.row.grid.style.backgroundBrush;
        }
    };
    /**
     * Gets the `background image`.
     * @private
     */
    PdfGridCell.prototype.getBackgroundImage = function () {
        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {
            return this.style.backgroundImage;
        }
        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {
            return this.row.style.backgroundImage;
        }
        else {
            return this.row.grid.style.backgroundImage;
        }
    };
    /**
     * Gets the current `StringFormat`.
     * @private
     */
    PdfGridCell.prototype.getStringFormat = function () {
        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {
            return this.style.stringFormat;
        }
        else {
            return this.stringFormat;
        }
    };
    /**
     * Calculates the `height`.
     * @private
     */
    PdfGridCell.prototype.measureHeight = function () {
        // .. Calculate the cell text height.
        // .....Add border widths, cell spacings and paddings to the height.
        var width = this.calculateWidth();
        // //check whether the Current PdfGridCell has padding
        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);
            //width -= (this.style.borders.left.width + this.style.borders.right.width);
        }
        else {
            width -= (this.style.cellPadding.right + this.style.cellPadding.left);
            width -= (this.style.borders.left.width + this.style.borders.right.width);
        }
        var height = 0;
        var layouter = new _graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_2__["PdfStringLayouter"]();
        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {
            var currentValue = this.objectValue;
            /* tslint:disable */
            if (!this.isFinish)
                currentValue = !(this.remaining === null || this.remaining === '' ||
                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;
            var slr = null;
            var cellIndex = this.row.cells.indexOf(this);
            if (this.gridRow.grid.style.cellSpacing != 0) {
                width -= this.gridRow.grid.style.cellSpacing * 2;
            }
            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {
                if (this.gridRow.grid.isChildGrid) {
                    if (width < 0) {
                        this.tempval = width;
                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);
                        }
                        else {
                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);
                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);
                        }
                    }
                    else {
                        this.tempval = width;
                    }
                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](this.tempval, 0), false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](0, 0));
                    height += slr.actualSize.height;
                }
                else {
                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](width, 0), false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](0, 0));
                    height += slr.actualSize.height;
                }
            }
            /* tslint:enable */
            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;
        }
        else if (this.objectValue instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"]) {
            var cellIndex = this.row.cells.indexOf(this);
            var internalWidth = 0;
            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {
                internalWidth = this.calculateWidth();
                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {
                    internalWidth -= this.style.cellPadding.left;
                }
                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {
                    internalWidth -= this.style.cellPadding.right;
                }
            }
            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {
                internalWidth = this.calculateWidth();
                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {
                    internalWidth -= this.row.grid.style.cellPadding.left;
                }
                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {
                    internalWidth -= this.row.grid.style.cellPadding.right;
                }
            }
            else {
                internalWidth = this.calculateWidth();
            }
            this.objectValue.tempWidth = internalWidth;
            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {
                height = this.objectValue.size.height;
            }
            else {
                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;
            }
            if (this.gridRow.grid.style.cellSpacing !== 0) {
                width -= this.gridRow.grid.style.cellSpacing * 2;
                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);
            }
            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {
                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {
                    height += this.row.grid.style.cellPadding.top;
                }
                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {
                    height += this.row.grid.style.cellPadding.bottom;
                }
            }
            height += this.objectValue.style.cellSpacing;
        }
        else if (this.objectValue instanceof _graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_10__["PdfImage"] || this.objectValue instanceof _graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_11__["PdfBitmap"]) {
            height += this.objectValue.height;
        }
        else if (this.objectValue instanceof _annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_12__["PdfTextWebLink"]) {
            var webLink = this.objectValue;
            /* tslint:disable */
            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](width, 0), false, new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_5__["SizeF"](0, 0));
            /* tslint:enable */
            height += slr.actualSize.height;
            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;
        }
        else if (typeof this.objectValue === 'undefined') {
            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);
            }
            else {
                width -= (this.style.cellPadding.right + this.style.cellPadding.left);
                width -= (this.style.borders.left.width + this.style.borders.right.width);
            }
            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;
        }
        //Add padding top and bottom value to height
        if (!(this.objectValue instanceof _pdf_grid__WEBPACK_IMPORTED_MODULE_0__["PdfGrid"])) {
            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);
            }
            else {
                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);
            }
        }
        else {
            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {
                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {
                    height += this.row.grid.style.cellPadding.top;
                }
                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {
                    height += this.row.grid.style.cellPadding.bottom;
                }
            }
            else {
                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {
                    height += this.style.cellPadding.top;
                }
                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {
                    height += this.style.cellPadding.bottom;
                }
            }
        }
        height += this.row.grid.style.cellSpacing;
        return height;
    };
    /**
     * return the calculated `width` of the cell.
     * @private
     */
    PdfGridCell.prototype.calculateWidth = function () {
        var cellIndex = this.row.cells.indexOf(this);
        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);
        var columnSpan = this.columnSpan;
        var width = 0;
        if (columnSpan === 1) {
            for (var i = 0; i < columnSpan; i++) {
                width += this.row.grid.columns.getColumn(cellIndex + i).width;
            }
        }
        else if (columnSpan > 1) {
            for (var i = 0; i < columnSpan; i++) {
                width += this.row.grid.columns.getColumn(cellIndex + i).width;
                if ((i + 1) < columnSpan) {
                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;
                }
            }
        }
        if (this.parent != null && this.parent.row.width > 0) {
            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {
                width = 0;
                for (var j = 0; j < this.parent.columnSpan; j++) {
                    width += this.parent.row.grid.columns.getColumn(j).width;
                }
                width = width / this.row.cells.count;
            }
        }
        return width;
    };
    return PdfGridCell;
}());

/**
 * `PdfGridCellCollection` class provides access to an ordered,
 * strongly typed collection of 'PdfGridCell' objects.
 * @private
 */
var PdfGridCellCollection = /** @class */ (function () {
    //Constructor
    /**
     * Initializes a new instance of the `PdfGridCellCollection` class with the row.
     * @private
     */
    function PdfGridCellCollection(row) {
        /**
         * @hidden
         * @private
         */
        this.cells = [];
        this.gridRow = row;
    }
    //Properties
    /**
     * Gets the current `cell`.
     * @private
     */
    PdfGridCellCollection.prototype.getCell = function (index) {
        if (index < 0 || index >= this.count) {
            throw new Error('IndexOutOfRangeException');
        }
        return this.cells[index];
    };
    Object.defineProperty(PdfGridCellCollection.prototype, "count", {
        /**
         * Gets the cells `count`.[Read-Only].
         * @private
         */
        get: function () {
            return this.cells.length;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridCellCollection.prototype.add = function (cell) {
        if (typeof cell === 'undefined') {
            var tempcell = new PdfGridCell();
            this.add(tempcell);
            return cell;
        }
        else {
            cell.row = this.gridRow;
            this.cells.push(cell);
        }
    };
    /**
     * Returns the `index of` a particular cell in the collection.
     * @private
     */
    PdfGridCellCollection.prototype.indexOf = function (cell) {
        return this.cells.indexOf(cell);
    };
    return PdfGridCellCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-column.js":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-column.js ***!
  \*******************************************************************************************************************************************************************/
/*! exports provided: PdfGridColumn, PdfGridColumnCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumn", function() { return PdfGridColumn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumnCollection", function() { return PdfGridColumnCollection; });
/* harmony import */ var _pdf_grid_cell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-grid-cell */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-cell.js");
/* harmony import */ var _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../graphics/fonts/pdf-string-format */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js");


/**
 * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.
 */
var PdfGridColumn = /** @class */ (function () {
    //Constructors
    /**
     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.
     * @private
     */
    function PdfGridColumn(grid) {
        /**
         * The `width` of the column.
         * @default 0
         * @private
         */
        this.columnWidth = 0;
        this.grid = grid;
    }
    Object.defineProperty(PdfGridColumn.prototype, "width", {
        /**
         * Gets or sets the `width` of the 'PdfGridColumn'.
         * @private
         */
        get: function () {
            return this.columnWidth;
        },
        set: function (value) {
            this.isCustomWidth = true;
            this.columnWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridColumn.prototype, "format", {
        /**
         * Gets or sets the information about the text `formatting`.
         * @private
         */
        get: function () {
            if (this.stringFormat == null) {
                this.stringFormat = new _graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_1__["PdfStringFormat"](); //GetDefaultFormat();
            }
            return this.stringFormat;
        },
        set: function (value) {
            this.stringFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridColumn;
}());

/**
 * `PdfGridColumnCollection` class provides access to an ordered,
 * strongly typed collection of 'PdfGridColumn' objects.
 * @private
 */
var PdfGridColumnCollection = /** @class */ (function () {
    //properties
    //Constructors
    /**
     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.
     * @private
     */
    function PdfGridColumnCollection(grid) {
        /**
         * @hidden
         * @private
         */
        this.internalColumns = [];
        /**
         * @hidden
         * @private
         */
        this.columnWidth = 0;
        this.grid = grid;
        this.internalColumns = [];
    }
    //Iplementation
    /**
     * `Add` a new column to the 'PdfGrid'.
     * @private
     */
    PdfGridColumnCollection.prototype.add = function (count) {
        // public add(column : PdfGridColumn) : void
        // public add(arg : number|PdfGridColumn) : void {
        // if (typeof arg === 'number') {
        for (var i = 0; i < count; i++) {
            this.internalColumns.push(new PdfGridColumn(this.grid));
            for (var index = 0; index < this.grid.rows.count; index++) {
                var row = this.grid.rows.getRow(index);
                var cell = new _pdf_grid_cell__WEBPACK_IMPORTED_MODULE_0__["PdfGridCell"]();
                cell.value = '';
                row.cells.add(cell);
            }
        }
        // } else {
        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);
        //     this.columns.push(column);
        //     return column;
        // }
    };
    Object.defineProperty(PdfGridColumnCollection.prototype, "count", {
        /**
         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].
         * @private
         */
        get: function () {
            return this.internalColumns.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridColumnCollection.prototype, "width", {
        /**
         * Gets the `widths`.
         * @private
         */
        get: function () {
            if (this.columnWidth === 0) {
                this.columnWidth = this.measureColumnsWidth();
            }
            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {
                this.columnWidth = this.grid.initialWidth;
                this.grid.isPageWidth = true;
            }
            return this.columnWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridColumnCollection.prototype, "columns", {
        /**
         * Gets the `array of PdfGridColumn`.[Read-Only]
         * @private
         */
        get: function () {
            return this.internalColumns;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Gets the `PdfGridColumn` from the specified index.[Read-Only]
     * @private
     */
    PdfGridColumnCollection.prototype.getColumn = function (index) {
        if (index >= 0 && index <= this.columns.length) {
            return this.columns[index];
        }
        else {
            throw Error('can not get the column from the index: ' + index);
        }
    };
    //Implementation
    /**
     * `Calculates the column widths`.
     * @private
     */
    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {
        var totalWidth = 0;
        this.grid.measureColumnsWidth();
        for (var i = 0, count = this.internalColumns.length; i < count; i++) {
            totalWidth += this.internalColumns[i].width;
        }
        return totalWidth;
    };
    /**
     * Gets the `widths of the columns`.
     * @private
     */
    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {
        var widths = [];
        var summ = 0.0;
        var subFactor = this.count;
        for (var i = 0; i < this.count; i++) {
            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {
                this.internalColumns[i].width = 0;
            }
            else {
                widths[i] = this.internalColumns[i].width;
                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {
                    totalWidth -= this.internalColumns[i].width;
                    subFactor--;
                }
                else {
                    widths[i] = 0;
                }
            }
        }
        for (var i = 0; i < this.count; i++) {
            var width = totalWidth / subFactor;
            if (widths[i] <= 0) {
                widths[i] = width;
            }
        }
        return widths;
    };
    return PdfGridColumnCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-row.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-row.js ***!
  \****************************************************************************************************************************************************************/
/*! exports provided: PdfGridRow, PdfGridRowCollection, PdfGridHeaderCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridRow", function() { return PdfGridRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowCollection", function() { return PdfGridRowCollection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridHeaderCollection", function() { return PdfGridHeaderCollection; });
/* harmony import */ var _pdf_grid_cell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-grid-cell */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-cell.js");
/* harmony import */ var _styles_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles/style */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js");


/**
 * `PdfGridRow` class provides customization of the settings for the particular row.
 */
var PdfGridRow = /** @class */ (function () {
    //Constructor
    /**
     * Initializes a new instance of the `PdfGridRow` class with the parent grid.
     * @private
     */
    function PdfGridRow(grid) {
        /**
         * Stores the index of the overflowing row.
         * @private
         */
        this.gridRowOverflowIndex = 0;
        /**
         * The `height` of the row.
         * @private
         */
        this.rowHeight = 0;
        /**
         * The `width` of the row.
         * @private
         */
        this.rowWidth = 0;
        /**
         * The `isFinish` of the row.
         * @private
         */
        this.isrowFinish = false;
        /**
         * Check whether the Row span row height `is set explicitly`.
         * @default false
         * @public
         */
        this.isRowSpanRowHeightSet = false;
        /**
         * The `page count` of the row.
         * @public
         */
        this.noOfPageCount = 0;
        /**
         * Check whether the row height `is set explicitly`.
         * @default false
         * @private
         */
        this.isRowHeightSet = false;
        this.isPageBreakRowSpanApplied = false;
        /**
         * Check weather the row merge `is completed` or not.
         * @default true
         * @private
         */
        this.isRowMergeComplete = true;
        this.repeatFlag = false;
        this.rowFontSplit = false;
        this.pdfGrid = grid;
    }
    Object.defineProperty(PdfGridRow.prototype, "rowSpanExists", {
        //Properties
        /**
         * Gets or sets a value indicating [`row span exists`].
         * @private
         */
        get: function () {
            return this.bRowSpanExists;
        },
        set: function (value) {
            this.bRowSpanExists = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "cells", {
        /**
         * Gets the `cells` from the selected row.[Read-Only].
         * @private
         */
        get: function () {
            if (this.gridCells == null) {
                this.gridCells = new _pdf_grid_cell__WEBPACK_IMPORTED_MODULE_0__["PdfGridCellCollection"](this);
            }
            return this.gridCells;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "grid", {
        /**
         * Gets or sets the parent `grid`.
         * @private
         */
        get: function () {
            return this.pdfGrid;
        },
        set: function (value) {
            this.pdfGrid = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "style", {
        /**
         * Gets or sets the row `style`.
         * @private
         */
        get: function () {
            if (typeof this.rowStyle === 'undefined') {
                this.rowStyle = new _styles_style__WEBPACK_IMPORTED_MODULE_1__["PdfGridRowStyle"]();
                this.rowStyle.setParent(this);
            }
            return this.rowStyle;
        },
        set: function (value) {
            this.rowStyle = value;
            for (var i = 0; i < this.cells.count; i++) {
                this.cells.getCell(i).style.borders = value.border;
                if (typeof value.font !== 'undefined') {
                    this.cells.getCell(i).style.font = value.font;
                }
                if (typeof value.backgroundBrush !== 'undefined') {
                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;
                }
                if (typeof value.backgroundImage !== 'undefined') {
                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;
                }
                if (typeof value.textBrush !== 'undefined') {
                    this.cells.getCell(i).style.textBrush = value.textBrush;
                }
                if (typeof value.textPen !== 'undefined') {
                    this.cells.getCell(i).style.textPen = value.textPen;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowBreakHeight", {
        /**
         * `Height` of the row yet to be drawn after split.
         * @private
         */
        get: function () {
            if (typeof this.gridRowBreakHeight === 'undefined') {
                this.gridRowBreakHeight = 0;
            }
            return this.gridRowBreakHeight;
        },
        set: function (value) {
            this.gridRowBreakHeight = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowOverflowIndex", {
        /**
         * `over flow index` of the row.
         * @private
         */
        get: function () {
            return this.gridRowOverflowIndex;
        },
        set: function (value) {
            this.gridRowOverflowIndex = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "height", {
        /**
         * Gets or sets the `height` of the row.
         * @private
         */
        get: function () {
            if (!this.isRowHeightSet) {
                this.rowHeight = this.measureHeight();
            }
            return this.rowHeight;
        },
        set: function (value) {
            this.rowHeight = value;
            this.isRowHeightSet = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "width", {
        /**
         * Gets or sets the `width` of the row.
         * @private
         */
        get: function () {
            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {
                this.rowWidth = this.measureWidth();
            }
            return this.rowWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "NestedGridLayoutResult", {
        /**
         * Gets or sets the row `Nested grid Layout Result`.
         * @private
         */
        get: function () {
            return this.gridResult;
        },
        set: function (value) {
            this.gridResult = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "columnSpanExists", {
        /**
         * Gets or sets a value indicating [`column span exists`].
         * @private
         */
        get: function () {
            return this.bColumnSpanExists;
        },
        set: function (value) {
            this.bColumnSpanExists = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowMergeComplete", {
        /**
         * Check whether the Row `has row span or row merge continue`.
         * @private
         */
        get: function () {
            return this.isRowMergeComplete;
        },
        set: function (value) {
            this.isRowMergeComplete = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRow.prototype, "rowIndex", {
        /**
         * Returns `index` of the row.
         * @private
         */
        get: function () {
            return this.grid.rows.rowCollection.indexOf(this);
        },
        enumerable: true,
        configurable: true
    });
    //Implementation
    /**
     * `Calculates the height`.
     * @private
     */
    PdfGridRow.prototype.measureHeight = function () {
        var rowSpanRemainingHeight = 0;
        var rowHeight;
        var maxHeight = 0;
        if (this.cells.getCell(0).rowSpan > 1) {
            rowHeight = 0;
        }
        else {
            rowHeight = this.cells.getCell(0).height;
        }
        for (var i = 0; i < this.cells.count; i++) {
            var cell = this.cells.getCell(i);
            //get the maximum rowspan remaining height.
            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {
                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;
            }
            //skip the cell if row spanned.
            // if (cell.isRowMergeContinue) {
            //     continue;
            // }
            // if (!cell.isRowMergeContinue) {
            //     this.rowMergeComplete = false;
            // }
            this.rowMergeComplete = false;
            if (cell.rowSpan > 1) {
                var cellIn = i;
                var rowin = this.grid.rows.rowCollection.indexOf(this);
                for (var j = 0; j < cell.rowSpan; j++) {
                    if ((j + 1) < cell.rowSpan) {
                        this.grid.rows.getRow(rowin + j + 1).cells.getCell(cellIn).hasRowSpan = true;
                    }
                }
                if (maxHeight < cell.height) {
                    maxHeight = cell.height;
                }
                continue;
            }
            rowHeight = Math.max(rowHeight, cell.height);
        }
        if (maxHeight > rowHeight) {
            rowHeight = maxHeight;
        }
        if (rowHeight === 0) {
            rowHeight = maxHeight;
        }
        else if (rowSpanRemainingHeight > 0) {
            rowHeight += rowSpanRemainingHeight;
        }
        return rowHeight;
    };
    PdfGridRow.prototype.measureWidth = function () {
        var rowWid = 0;
        for (var i = 0; i < this.grid.columns.count; i++) {
            var column = this.grid.columns.getColumn(i);
            rowWid += column.width;
        }
        return rowWid;
    };
    return PdfGridRow;
}());

/**
 * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.
 * @private
 */
var PdfGridRowCollection = /** @class */ (function () {
    // Constructor
    /**
     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.
     * @private
     */
    function PdfGridRowCollection(grid) {
        this.rows = [];
        this.grid = grid;
    }
    Object.defineProperty(PdfGridRowCollection.prototype, "count", {
        //Properties
        /**
         * Gets the number of header in the `PdfGrid`.[Read-Only].
         * @private
         */
        get: function () {
            return this.rows.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridRowCollection.prototype, "rowCollection", {
        //Implementation
        /**
         * Return the row collection of the `grid`.
         * @private
         */
        get: function () {
            return this.rows;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowCollection.prototype.addRow = function (arg) {
        if (typeof arg === 'undefined') {
            var temprow = new PdfGridRow(this.grid);
            this.addRow(temprow);
            return temprow;
        }
        else {
            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);
            arg.style.setFont(this.grid.style.font);
            arg.style.setTextBrush(this.grid.style.textBrush);
            arg.style.setTextPen(this.grid.style.textPen);
            if (arg.cells.count === 0) {
                for (var i = 0; i < this.grid.columns.count; i++) {
                    arg.cells.add(new _pdf_grid_cell__WEBPACK_IMPORTED_MODULE_0__["PdfGridCell"]());
                }
            }
            this.rows.push(arg);
        }
    };
    /**
     * Return the row by index.
     * @private
     */
    PdfGridRowCollection.prototype.getRow = function (index) {
        return this.rows[index];
    };
    return PdfGridRowCollection;
}());

/**
 * `PdfGridHeaderCollection` class provides customization of the settings for the header.
 * @private
 */
var PdfGridHeaderCollection = /** @class */ (function () {
    //constructor
    /**
     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.
     * @private
     */
    function PdfGridHeaderCollection(grid) {
        /**
         * The array to store the `rows` of the grid header.
         * @private
         */
        this.rows = [];
        this.grid = grid;
        this.rows = [];
    }
    //Properties
    /**
     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].
     * @private
     */
    PdfGridHeaderCollection.prototype.getHeader = function (index) {
        // if (index < 0 || index >= Count) {
        //     throw new IndexOutOfRangeException();
        // }
        return (this.rows[index]);
    };
    Object.defineProperty(PdfGridHeaderCollection.prototype, "count", {
        /**
         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]
         * @private
         */
        get: function () {
            return this.rows.length;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridHeaderCollection.prototype.add = function (arg) {
        if (typeof arg === 'number') {
            var row = void 0;
            for (var i = 0; i < arg; i++) {
                row = new PdfGridRow(this.grid);
                for (var j = 0; j < this.grid.columns.count; j++) {
                    row.cells.add(new _pdf_grid_cell__WEBPACK_IMPORTED_MODULE_0__["PdfGridCell"]());
                }
                this.rows.push(row);
            }
            return this.rows;
        }
        else {
            this.rows.push(arg);
        }
    };
    PdfGridHeaderCollection.prototype.indexOf = function (row) {
        return this.rows.indexOf(row);
    };
    return PdfGridHeaderCollection;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid.js":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid.js ***!
  \************************************************************************************************************************************************************/
/*! exports provided: PdfGrid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGrid", function() { return PdfGrid; });
/* harmony import */ var _pdf_grid_column__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-grid-column */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-column.js");
/* harmony import */ var _pdf_grid_row__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pdf-grid-row */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-row.js");
/* harmony import */ var _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony import */ var _graphics_figures_layout_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../../graphics/figures/layout-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/layout-element.js");
/* harmony import */ var _graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../../graphics/figures/base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony import */ var _styles_style__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./styles/style */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js");
/* harmony import */ var _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./styles/pdf-borders */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js");
/* harmony import */ var _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../../structured-elements/grid/layout/grid-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/layout/grid-layouter.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * PdfGrid.ts class for EJ2-PDF
 */








var PdfGrid = /** @class */ (function (_super) {
    __extends(PdfGrid, _super);
    //constructor
    /**
     * Initialize a new instance for `PdfGrid` class.
     * @private
     */
    function PdfGrid() {
        var _this = _super.call(this) || this;
        /**
         * @hidden
         * @private
         */
        _this.gridSize = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](0, 0);
        /**
         * Check the child grid is ' split or not'
         */
        _this.isGridSplit = false;
        /**
         * @hidden
         * @private
         */
        _this.isRearranged = false;
        /**
         * @hidden
         * @private
         */
        _this.pageBounds = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"]();
        /**
         * @hidden
         * @private
         */
        _this.listOfNavigatePages = [];
        /**
         * @hidden
         * @private
         */
        _this.parentCellIndex = 0;
        _this.tempWidth = 0;
        /**
         * @hidden
         * @private
         */
        _this.breakRow = true;
        _this.splitChildRowIndex = -1;
        /**
         * The event raised on `begin cell lay outing`.
         * @event
         * @private
         */
        //public beginPageLayout : Function;
        /**
         * The event raised on `end cell lay outing`.
         * @event
         * @private
         */
        //public endPageLayout : Function;
        _this.hasRowSpanSpan = false;
        _this.hasColumnSpan = false;
        _this.isSingleGrid = true;
        return _this;
    }
    Object.defineProperty(PdfGrid.prototype, "raiseBeginCellDraw", {
        //Properties
        /**
         * Gets a value indicating whether the `start cell layout event` should be raised.
         * @private
         */
        get: function () {
            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "raiseEndCellDraw", {
        /**
         * Gets a value indicating whether the `end cell layout event` should be raised.
         * @private
         */
        get: function () {
            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "repeatHeader", {
        /**
         * Gets or sets a value indicating whether to `repeat header`.
         * @private
         */
        get: function () {
            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {
                this.bRepeatHeader = false;
            }
            return this.bRepeatHeader;
        },
        set: function (value) {
            this.bRepeatHeader = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "allowRowBreakAcrossPages", {
        /**
         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.
         * @private
         */
        get: function () {
            return this.breakRow;
        },
        set: function (value) {
            this.breakRow = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "columns", {
        /**
         * Gets the `column` collection of the PdfGrid.[Read-Only]
         * @private
         */
        get: function () {
            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {
                this.gridColumns = new _pdf_grid_column__WEBPACK_IMPORTED_MODULE_0__["PdfGridColumnCollection"](this);
            }
            return this.gridColumns;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "rows", {
        /**
         * Gets the `row` collection from the PdfGrid.[Read-Only]
         * @private
         */
        get: function () {
            if (this.gridRows == null) {
                this.gridRows = new _pdf_grid_row__WEBPACK_IMPORTED_MODULE_1__["PdfGridRowCollection"](this);
            }
            return this.gridRows;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "headers", {
        /**
         * Gets the `headers` collection from the PdfGrid.[Read-Only]
         * @private
         */
        get: function () {
            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {
                this.gridHeaders = new _pdf_grid_row__WEBPACK_IMPORTED_MODULE_1__["PdfGridHeaderCollection"](this);
            }
            return this.gridHeaders;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "initialWidth", {
        /**
         * Indicating `initial width` of the page.
         * @private
         */
        get: function () {
            return this.gridInitialWidth;
        },
        set: function (value) {
            this.gridInitialWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "style", {
        /**
         * Gets or sets the `grid style`.
         * @private
         */
        get: function () {
            if (this.gridStyle == null) {
                this.gridStyle = new _styles_style__WEBPACK_IMPORTED_MODULE_5__["PdfGridStyle"]();
            }
            return this.gridStyle;
        },
        set: function (value) {
            if (this.gridStyle == null) {
                this.gridStyle = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "isPageWidth", {
        /**
         * Gets a value indicating whether the grid column width is considered to be `page width`.
         * @private
         */
        get: function () {
            return this.ispageWidth;
        },
        set: function (value) {
            this.ispageWidth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "isChildGrid", {
        /**
         * Gets or set if grid `is nested grid`.
         * @private
         */
        get: function () {
            return this.ischildGrid;
        },
        set: function (value) {
            this.ischildGrid = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "size", {
        /**
         * Gets or set if grid ' is split or not'
         * @public
         */
        // public get isGridSplit() : boolean {
        //     return this.isgridSplit;
        // }
        // public set isGridSplit(value : boolean) {
        //     this.isgridSplit = value;
        // }public get isGridSplit() : boolean {
        //     return this.isgridSplit;
        // }
        // public set isGridSplit(value : boolean) {
        //     this.isgridSplit = value;
        // }
        /**
         * Gets the `size`.
         * @private
         */
        get: function () {
            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {
                this.gridSize = this.measure();
            }
            return this.gridSize;
            // } else {
            //     return this.gridSize;
            // }
        },
        set: function (value) {
            this.gridSize = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "ParentCell", {
        get: function () {
            return this.parentCell;
        },
        set: function (value) {
            this.parentCell = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGrid.prototype, "LayoutFormat", {
        get: function () {
            return this.layoutFormat;
        },
        enumerable: true,
        configurable: true
    });
    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {
        if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(arg1, arg2.x, arg2.y);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {
            return this.drawHelper(arg1, arg2, arg3, null);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"] && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {
            return this.drawHelper(arg1, arg2, null);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["PointF"] && typeof arg2.width === 'undefined' && arg3 instanceof _graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutFormat"]) {
            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);
        }
        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof _graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_4__["PdfLayoutFormat"] || arg4 == null)) {
            var width = (arg1.graphics.clientSize.width - arg2);
            var layoutRectangle = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](arg2, arg3, width, 0);
            return this.drawHelper(arg1, layoutRectangle, arg4);
        }
        else if (arg2 instanceof _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"] && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {
            return this.drawHelper(arg1, arg2, null);
        }
        else {
            return this.drawHelper(arg1, arg2, arg3);
        }
    };
    /**
     * `measures` this instance.
     * @private
     */
    PdfGrid.prototype.measure = function () {
        var height = 0;
        var width = this.columns.width;
        for (var i = 0; i < this.headers.count; i++) {
            var row = this.headers.getHeader(i);
            height += row.height;
        }
        for (var i = 0; i < this.rows.count; i++) {
            var row = this.rows.getRow(i);
            height += row.height;
        }
        return new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["SizeF"](width, height);
    };
    PdfGrid.prototype.onBeginCellDraw = function (args) {
        if (this.raiseBeginCellDraw) {
            this.beginCellDraw(this, args);
        }
    };
    PdfGrid.prototype.onEndCellDraw = function (args) {
        if (this.raiseEndCellDraw) {
            this.endCellDraw(this, args);
        }
    };
    /**
     * `Layouts` the specified graphics.
     * @private
     */
    PdfGrid.prototype.layout = function (param) {
        if (this.rows.count !== 0) {
            var currentRow = this.rows.getRow(0).cells.getCell(0).style;
            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||
                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {
                var x = currentRow.borders.left.width / 2;
                var y = currentRow.borders.top.width / 2;
                if (param.bounds.x === _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_6__["PdfBorders"].default.right.width / 2 && param.bounds.y === _styles_pdf_borders__WEBPACK_IMPORTED_MODULE_6__["PdfBorders"].default.right.width / 2) {
                    var newBound = new _drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_2__["RectangleF"](x, y, this.gridSize.width, this.gridSize.height);
                    param.bounds = newBound;
                }
            }
        }
        this.setSpan();
        this.checkSpan();
        this.layoutFormat = param.format;
        this.gridLocation = param.bounds;
        var layouter = new _structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_7__["PdfGridLayouter"](this);
        var result = (layouter.Layouter(param));
        return result;
    };
    PdfGrid.prototype.setSpan = function () {
        var colSpan = 1;
        var rowSpan = 1;
        var currentCellIndex = 0;
        var currentRowIndex = 0;
        var maxSpan = 0;
        var rowCount = this.headers.count;
        for (var i = 0; i < rowCount; i++) {
            var row = this.headers.getHeader(i);
            maxSpan = 0;
            var colCount = row.cells.count;
            for (var j = 0; j < colCount; j++) {
                var cell = row.cells.getCell(j);
                maxSpan = Math.max(maxSpan, cell.rowSpan);
                //Skip setting span map for already coverted rows/columns.
                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {
                    if (cell.columnSpan + j > row.cells.count) {
                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());
                    }
                    if (cell.rowSpan + i > this.headers.count) {
                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());
                    }
                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {
                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());
                    // }
                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {
                        colSpan = cell.columnSpan;
                        rowSpan = cell.rowSpan;
                        currentCellIndex = j;
                        currentRowIndex = i;
                        cell.isCellMergeStart = true;
                        cell.isRowMergeStart = true;
                        //Set Column merges for first row
                        while (colSpan > 1) {
                            currentCellIndex++;
                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;
                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;
                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;
                            colSpan--;
                        }
                        currentCellIndex = j;
                        colSpan = cell.columnSpan;
                        //Set Row Merges and column merges foreach subsequent rows.
                        while (rowSpan > 1) {
                            currentRowIndex++;
                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;
                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;
                            rowSpan--;
                            while (colSpan > 1) {
                                currentCellIndex++;
                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;
                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;
                                colSpan--;
                            }
                            colSpan = cell.columnSpan;
                            currentCellIndex = j;
                        }
                    }
                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {
                        colSpan = cell.columnSpan;
                        currentCellIndex = j;
                        cell.isCellMergeStart = true;
                        //Set Column merges.
                        while (colSpan > 1) {
                            currentCellIndex++;
                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;
                            colSpan--;
                        }
                    }
                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {
                        rowSpan = cell.rowSpan;
                        currentRowIndex = i;
                        //Set row Merges.
                        while (rowSpan > 1) {
                            currentRowIndex++;
                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;
                            rowSpan--;
                        }
                    }
                }
            }
            row.maximumRowSpan = maxSpan;
        }
    };
    PdfGrid.prototype.checkSpan = function () {
        var cellcolSpan;
        var cellrowSpan = 1;
        var cellmaxSpan = 0;
        var currentCellIndex;
        var currentRowIndex = 0;
        cellcolSpan = cellrowSpan = 1;
        currentCellIndex = currentRowIndex = 0;
        if (this.hasRowSpanSpan || this.hasColumnSpan) {
            var rowCount = this.rows.count;
            for (var i = 0; i < rowCount; i++) {
                var row = this.rows.getRow(i);
                cellmaxSpan = 0;
                var colCount = row.cells.count;
                for (var j = 0; j < colCount; j++) {
                    var cell = row.cells.getCell(j);
                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);
                    //Skip setting span map for already coverted rows/columns.
                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue
                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {
                        if (cell.columnSpan + j > row.cells.count) {
                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());
                        }
                        if (cell.rowSpan + i > this.rows.count) {
                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());
                        }
                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {
                            cellcolSpan = cell.columnSpan;
                            cellrowSpan = cell.rowSpan;
                            currentCellIndex = j;
                            currentRowIndex = i;
                            cell.isCellMergeStart = true;
                            cell.isRowMergeStart = true;
                            //Set Column merges for first row
                            while (cellcolSpan > 1) {
                                currentCellIndex++;
                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;
                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;
                                cellcolSpan--;
                            }
                            currentCellIndex = j;
                            cellcolSpan = cell.columnSpan;
                            //Set Row Merges and column merges foreach subsequent rows.
                            while (cellrowSpan > 1) {
                                currentRowIndex++;
                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;
                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;
                                cellrowSpan--;
                                while (cellcolSpan > 1) {
                                    currentCellIndex++;
                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;
                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;
                                    cellcolSpan--;
                                }
                                cellcolSpan = cell.columnSpan;
                                currentCellIndex = j;
                            }
                        }
                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {
                            cellcolSpan = cell.columnSpan;
                            currentCellIndex = j;
                            cell.isCellMergeStart = true;
                            //Set Column merges.
                            while (cellcolSpan > 1) {
                                currentCellIndex++;
                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;
                                cellcolSpan--;
                            }
                        }
                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {
                            cellrowSpan = cell.rowSpan;
                            currentRowIndex = i;
                            //Set row Merges.
                            while (cellrowSpan > 1) {
                                currentRowIndex++;
                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;
                                cellrowSpan--;
                            }
                        }
                    }
                }
                row.maximumRowSpan = cellmaxSpan;
            }
        }
    };
    PdfGrid.prototype.measureColumnsWidth = function (bounds) {
        if (typeof bounds !== 'undefined') {
            this.isPageWidth = false;
            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);
            //let tempWidth : number = this.columns.getColumn(0).width;
            for (var i = 0, count = this.columns.count; i < count; i++) {
                // if (this.columns.getColumn(i).width < 0)
                //     this.columns.getColumn(i).columnWidth = widths[i];
                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)
                this.columns.getColumn(i).columnWidth = widths[i];
                this.tempWidth = widths[i];
            }
            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {
                var padding = 0;
                var columnWidth = 0;
                var columnCount = this.columns.count;
                var childGridColumnWidth = 0;
                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {
                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {
                        padding += this.ParentCell.style.cellPadding.left;
                    }
                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {
                        padding += this.ParentCell.style.cellPadding.right;
                    }
                }
                for (var i = 0; i < this.ParentCell.columnSpan; i++) {
                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;
                }
                for (var j = 0; j < this.columns.count; j++) {
                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {
                        columnWidth -= this.gridColumns.getColumn(j).width;
                        columnCount--;
                    }
                }
                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {
                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {
                        padding += this.ParentCell.row.grid.style.cellPadding.top;
                    }
                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {
                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;
                    }
                }
                if (this.ParentCell.row.grid.style.cellSpacing != 0) {
                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;
                }
                if (columnWidth > padding) {
                    childGridColumnWidth = (columnWidth - padding) / columnCount;
                    this.tempWidth = childGridColumnWidth;
                    if (this.ParentCell != null) {
                        for (var j = 0; j < this.columns.count; j++) {
                            if (!this.columns.getColumn(j).isCustomWidth)
                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;
                        }
                    }
                }
            }
            // if (this.ParentCell != null && this.ParentCell.row.width > 0)
            // {
            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)
            //     {
            //         widths = this.columns.getDefaultWidths(bounds.width);
            //         for (let i : number = 0; i < this.columns.count; i++)
            //         {
            //             this.columns.getColumn(i).width = widths[i];
            //         }
            //     }
            // }
        }
        else {
            var widths = [this.columns.count];
            for (var n = 0; n < this.columns.count; n++) {
                widths[n] = 0;
            }
            var cellWidth = 0;
            var cellWidths = 0;
            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {
                this.initialWidth = this.gridLocation.width;
            }
            if (this.headers.count > 0) {
                var colCount_1 = this.headers.getHeader(0).cells.count;
                var rowCount = this.headers.count;
                for (var i = 0; i < colCount_1; i++) {
                    cellWidth = 0;
                    for (var j = 0; j < rowCount; j++) {
                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);
                        cellWidth = Math.max(cellWidth, rowWidth);
                    }
                    widths[i] = cellWidth;
                }
            }
            // else {
            //     let colCount : number = this.rows.getRow(0).cells.count;
            //     let rowCount : number = this.rows.count;
            //     for (let i : number = 0; i < colCount; i++) {
            //         cellWidth = 0;
            //         for (let j : number = 0; j < rowCount; j++) {
            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);
            //             cellWidth = Math.max(cellWidth, rowWidth);
            //         }
            //         widths[i] = cellWidth;
            //     }
            // }
            cellWidth = 0;
            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {
                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {
                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {
                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {
                            var value = this.rows.getRow(j).grid.style.cellPadding.right +
                                this.rows.getRow(j).grid.style.cellPadding.left
                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;
                            //  if (this.initialWidth != 0 )
                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;
                        }
                        var rowWidth = 0;
                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;
                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;
                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;
                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;
                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;
                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);
                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);
                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;
                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;
                        // if (isCorrectWidth || isCorrectHeight) {
                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');
                        // }
                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);
                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));
                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);
                    }
                }
                if (this.rows.count != 0)
                    widths[i] = cellWidth;
                cellWidth = 0;
            }
            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {
                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {
                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {
                        var total = widths[j];
                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {
                            total += widths[j + k];
                        }
                        // if (this.rows.getRow(i).cells.getCell(j).width > total)
                        // {
                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;
                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;
                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)
                        //         widths[k] += extendedWidth;
                        // }
                    }
                }
            }
            // if (this.isChildGrid && this.initialWidth != 0)
            // {
            //     widths = this.columns.getDefaultWidths(this.initialWidth);
            // }
            for (var i = 0, count = this.columns.count; i < count; i++) {
                if (this.columns.getColumn(i).width <= 0)
                    this.columns.getColumn(i).columnWidth = widths[i];
                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)
                    this.columns.getColumn(i).columnWidth = widths[i];
            }
            var padding = 0;
            var colWidth = 0;
            var colCount = this.columns.count;
            var childGridColWidth = 0;
            colWidth = this.tempWidth;
            for (var j = 0; j < this.columns.count; j++) {
                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {
                    colWidth -= this.gridColumns.getColumn(j).width;
                    colCount--;
                }
            }
            // if (this.style.cellSpacing != 0){
            //     colWidth -= this.style.cellSpacing * 2;
            // }
            if (colWidth > 0) {
                if (this.ParentCell.row.grid.style.cellSpacing != 0) {
                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;
                }
            }
            if (colWidth > padding) {
                childGridColWidth = (colWidth) / colCount;
                if (this.ParentCell != null) {
                    for (var j = 0; j < this.columns.count; j++) {
                        if (!this.columns.getColumn(j).isCustomWidth)
                            this.columns.getColumn(j).columnWidth = childGridColWidth;
                    }
                }
            }
        }
    };
    return PdfGrid;
}(_graphics_figures_layout_element__WEBPACK_IMPORTED_MODULE_3__["PdfLayoutElement"]));



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js":
/*!**********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js ***!
  \**********************************************************************************************************************************************************************/
/*! exports provided: PdfBorders, PdfPaddings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBorders", function() { return PdfBorders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfPaddings", function() { return PdfPaddings; });
/* harmony import */ var _graphics_pdf_pen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../graphics/pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony import */ var _graphics_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony import */ var _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../graphics/pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/**
 * PdfBorders.ts class for EJ2-PDF
 */



/**
 * `PdfBorders` class used represents the cell border of the PDF grid.
 */
var PdfBorders = /** @class */ (function () {
    // Constructor
    /**
     * Create a new instance for `PdfBorders` class.
     * @private
     */
    function PdfBorders() {
        var defaultBorderPenLeft = new _graphics_pdf_pen__WEBPACK_IMPORTED_MODULE_0__["PdfPen"](new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_2__["PdfColor"](0, 0, 0));
        defaultBorderPenLeft.dashStyle = _graphics_enum__WEBPACK_IMPORTED_MODULE_1__["PdfDashStyle"].Solid;
        var defaultBorderPenRight = new _graphics_pdf_pen__WEBPACK_IMPORTED_MODULE_0__["PdfPen"](new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_2__["PdfColor"](0, 0, 0));
        defaultBorderPenRight.dashStyle = _graphics_enum__WEBPACK_IMPORTED_MODULE_1__["PdfDashStyle"].Solid;
        var defaultBorderPenTop = new _graphics_pdf_pen__WEBPACK_IMPORTED_MODULE_0__["PdfPen"](new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_2__["PdfColor"](0, 0, 0));
        defaultBorderPenTop.dashStyle = _graphics_enum__WEBPACK_IMPORTED_MODULE_1__["PdfDashStyle"].Solid;
        var defaultBorderPenBottom = new _graphics_pdf_pen__WEBPACK_IMPORTED_MODULE_0__["PdfPen"](new _graphics_pdf_color__WEBPACK_IMPORTED_MODULE_2__["PdfColor"](0, 0, 0));
        defaultBorderPenBottom.dashStyle = _graphics_enum__WEBPACK_IMPORTED_MODULE_1__["PdfDashStyle"].Solid;
        this.leftPen = defaultBorderPenLeft;
        this.rightPen = defaultBorderPenRight;
        this.topPen = defaultBorderPenTop;
        this.bottomPen = defaultBorderPenBottom;
    }
    Object.defineProperty(PdfBorders.prototype, "left", {
        // Properties
        /**
         * Gets or sets the `Left`.
         * @private
         */
        get: function () {
            return this.leftPen;
        },
        set: function (value) {
            this.leftPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "right", {
        /**
         * Gets or sets the `Right`.
         * @private
         */
        get: function () {
            return this.rightPen;
        },
        set: function (value) {
            this.rightPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "top", {
        /**
         * Gets or sets the `Top`.
         * @private
         */
        get: function () {
            return this.topPen;
        },
        set: function (value) {
            this.topPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "bottom", {
        /**
         * Gets or sets the `Bottom`.
         * @private
         */
        get: function () {
            return this.bottomPen;
        },
        set: function (value) {
            this.bottomPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "all", {
        /**
         * sets the `All`.
         * @private
         */
        set: function (value) {
            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders.prototype, "isAll", {
        /**
         * Gets a value indicating whether this instance `is all`.
         * @private
         */
        get: function () {
            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfBorders, "default", {
        /**
         * Gets the `default`.
         * @private
         */
        get: function () {
            return new PdfBorders();
        },
        enumerable: true,
        configurable: true
    });
    return PdfBorders;
}());

var PdfPaddings = /** @class */ (function () {
    function PdfPaddings(left, right, top, bottom) {
        /**
         * The 'left' border padding set.
         * @private
         */
        this.hasLeftPad = false;
        /**
         * The 'right' border padding set.
         * @private
         */
        this.hasRightPad = false;
        /**
         * The 'top' border padding set.
         * @private
         */
        this.hasTopPad = false;
        /**
         * The 'bottom' border padding set.
         * @private
         */
        this.hasBottomPad = false;
        if (typeof left === 'undefined') {
            //5.76 and 0 are taken from ms-word default table margins.
            this.leftPad = this.rightPad = 5.76;
            //0.5 is set for top and bottom by default.
            this.bottomPad = this.topPad = 0.5;
        }
        else {
            this.leftPad = left;
            this.rightPad = right;
            this.topPad = top;
            this.bottomPad = bottom;
            this.hasLeftPad = true;
            this.hasRightPad = true;
            this.hasTopPad = true;
            this.hasBottomPad = true;
        }
    }
    Object.defineProperty(PdfPaddings.prototype, "left", {
        // Properties
        /**
         * Gets or sets the `left` value of the edge
         * @private
         */
        get: function () {
            return this.leftPad;
        },
        set: function (value) {
            this.leftPad = value;
            this.hasLeftPad = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "right", {
        /**
         * Gets or sets the `right` value of the edge.
         * @private
         */
        get: function () {
            return this.rightPad;
        },
        set: function (value) {
            this.rightPad = value;
            this.hasRightPad = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "top", {
        /**
         * Gets or sets the `top` value of the edge
         * @private
         */
        get: function () {
            return this.topPad;
        },
        set: function (value) {
            this.topPad = value;
            this.hasTopPad = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "bottom", {
        /**
         * Gets or sets the `bottom` value of the edge.
         * @private
         */
        get: function () {
            return this.bottomPad;
        },
        set: function (value) {
            this.bottomPad = value;
            this.hasBottomPad = true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfPaddings.prototype, "all", {
        /**
         * Sets value to all sides `left,right,top and bottom`.s
         * @private
         */
        set: function (value) {
            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;
            this.hasLeftPad = true;
            this.hasRightPad = true;
            this.hasTopPad = true;
            this.hasBottomPad = true;
        },
        enumerable: true,
        configurable: true
    });
    return PdfPaddings;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js ***!
  \****************************************************************************************************************************************************************/
/*! exports provided: PdfGridStyleBase, PdfGridStyle, PdfGridCellStyle, PdfGridRowStyle, PdfHorizontalOverflowType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyleBase", function() { return PdfGridStyleBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyle", function() { return PdfGridStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellStyle", function() { return PdfGridCellStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowStyle", function() { return PdfGridRowStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalOverflowType", function() { return PdfHorizontalOverflowType; });
/* harmony import */ var _pdf_borders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pdf-borders */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js");
/* harmony import */ var _tables_light_tables_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../tables/light-tables/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/tables/light-tables/enum.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Base class for the `grid style`,
 */
var PdfGridStyleBase = /** @class */ (function () {
    function PdfGridStyleBase() {
    }
    Object.defineProperty(PdfGridStyleBase.prototype, "backgroundBrush", {
        // Properties
        /**
         * Gets or sets the `background brush`.
         * @private
         */
        get: function () {
            return this.gridBackgroundBrush;
        },
        set: function (value) {
            this.gridBackgroundBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyleBase.prototype, "textBrush", {
        /**
         * Gets or sets the `text brush`.
         * @private
         */
        get: function () {
            return this.gridTextBrush;
        },
        set: function (value) {
            this.gridTextBrush = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyleBase.prototype, "textPen", {
        /**
         * Gets or sets the `text pen`.
         * @private
         */
        get: function () {
            return this.gridTextPen;
        },
        set: function (value) {
            this.gridTextPen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyleBase.prototype, "font", {
        /**
         * Gets or sets the `font`.
         * @private
         */
        get: function () {
            return this.gridFont;
        },
        set: function (value) {
            this.gridFont = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyleBase.prototype, "backgroundImage", {
        /**
         * Gets or sets the `background Image`.
         * @private
         */
        get: function () {
            return this.gridBackgroundImage;
        },
        set: function (value) {
            this.gridBackgroundImage = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridStyleBase;
}());

/**
 * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.
 */
var PdfGridStyle = /** @class */ (function (_super) {
    __extends(PdfGridStyle, _super);
    //constructor
    /**
     * Initialize a new instance for `PdfGridStyle` class.
     * @private
     */
    function PdfGridStyle() {
        var _this = _super.call(this) || this;
        _this.gridBorderOverlapStyle = _tables_light_tables_enum__WEBPACK_IMPORTED_MODULE_1__["PdfBorderOverlapStyle"].Overlap;
        _this.bAllowHorizontalOverflow = false;
        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;
        return _this;
    }
    Object.defineProperty(PdfGridStyle.prototype, "cellSpacing", {
        //Properties
        /**
         * Gets or sets the `cell spacing` of the 'PdfGrid'.
         * @private
         */
        get: function () {
            if (typeof this.gridCellSpacing === 'undefined') {
                this.gridCellSpacing = 0;
            }
            return this.gridCellSpacing;
        },
        set: function (value) {
            this.gridCellSpacing = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "horizontalOverflowType", {
        /**
         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.
         * @private
         */
        get: function () {
            return this.gridHorizontalOverflowType;
        },
        set: function (value) {
            this.gridHorizontalOverflowType = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "allowHorizontalOverflow", {
        /**
         * Gets or sets a value indicating whether to `allow horizontal overflow`.
         * @private
         */
        get: function () {
            return this.bAllowHorizontalOverflow;
        },
        set: function (value) {
            this.bAllowHorizontalOverflow = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "cellPadding", {
        /**
         * Gets or sets the `cell padding`.
         * @private
         */
        get: function () {
            if (typeof this.gridCellPadding === 'undefined') {
                this.gridCellPadding = new _pdf_borders__WEBPACK_IMPORTED_MODULE_0__["PdfPaddings"]();
            }
            return this.gridCellPadding;
        },
        set: function (value) {
            if (typeof this.gridCellPadding === 'undefined') {
                this.gridCellPadding = new _pdf_borders__WEBPACK_IMPORTED_MODULE_0__["PdfPaddings"]();
                this.gridCellPadding = value;
            }
            else {
                this.gridCellPadding = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridStyle.prototype, "borderOverlapStyle", {
        /**
         * Gets or sets the `border overlap style` of the 'PdfGrid'.
         * @private
         */
        get: function () {
            return this.gridBorderOverlapStyle;
        },
        set: function (value) {
            this.gridBorderOverlapStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridStyle;
}(PdfGridStyleBase));

/**
 * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.
 */
var PdfGridCellStyle = /** @class */ (function (_super) {
    __extends(PdfGridCellStyle, _super);
    /**
     * Initializes a new instance of the `PdfGridCellStyle` class.
     * @private
     */
    function PdfGridCellStyle() {
        var _this = _super.call(this) || this;
        /**
         * @hidden
         * @private
         */
        _this.gridCellBorders = _pdf_borders__WEBPACK_IMPORTED_MODULE_0__["PdfBorders"].default;
        return _this;
    }
    Object.defineProperty(PdfGridCellStyle.prototype, "stringFormat", {
        //Properties
        /**
         * Gets the `string format` of the 'PdfGridCell'.
         * @private
         */
        get: function () {
            return this.format;
        },
        set: function (value) {
            this.format = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCellStyle.prototype, "borders", {
        /**
         * Gets or sets the `border` of the 'PdfGridCell'.
         * @private
         */
        get: function () {
            return this.gridCellBorders;
        },
        set: function (value) {
            this.gridCellBorders = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PdfGridCellStyle.prototype, "cellPadding", {
        /**
         * Gets or sets the `cell padding`.
         * @private
         */
        get: function () {
            return this.gridCellPadding;
        },
        set: function (value) {
            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {
                this.gridCellPadding = new _pdf_borders__WEBPACK_IMPORTED_MODULE_0__["PdfPaddings"]();
            }
            this.gridCellPadding = value;
        },
        enumerable: true,
        configurable: true
    });
    return PdfGridCellStyle;
}(PdfGridStyleBase));

/**
 * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.
 */
var PdfGridRowStyle = /** @class */ (function () {
    // Constructor
    /**
     * Initializes a new instance of the `PdfGridRowStyle` class.
     * @private
     */
    function PdfGridRowStyle() {
        //
    }
    Object.defineProperty(PdfGridRowStyle.prototype, "backgroundBrush", {
        // Properties
        /**
         * Gets or sets the `background brush`.
         * @private
         */
        get: function () {
            return this.gridRowBackgroundBrush;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {
        this.gridRowBackgroundBrush = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.backgroundBrush = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "textBrush", {
        /**
         * Gets or sets the `text brush`.
         * @private
         */
        get: function () {
            return this.gridRowTextBrush;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setTextBrush = function (value) {
        this.gridRowTextBrush = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.textBrush = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "textPen", {
        /**
         * Gets or sets the `text pen`.
         * @private
         */
        get: function () {
            return this.gridRowTextPen;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setTextPen = function (value) {
        this.gridRowTextPen = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.textPen = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "font", {
        /**
         * Gets or sets the `font`.
         * @private
         */
        get: function () {
            return this.gridRowFont;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setFont = function (value) {
        this.gridRowFont = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.font = value;
            }
        }
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "border", {
        /**
         * Gets or sets the `border` of the current row.
         * @private
         */
        get: function () {
            if (typeof this.gridRowBorder === 'undefined') {
                this.setBorder(new _pdf_borders__WEBPACK_IMPORTED_MODULE_0__["PdfBorders"]());
            }
            return this.gridRowBorder;
        },
        enumerable: true,
        configurable: true
    });
    PdfGridRowStyle.prototype.setBorder = function (value) {
        this.gridRowBorder = value;
        if (typeof this.parent !== 'undefined') {
            for (var i = 0; i < this.parent.cells.count; i++) {
                this.parent.cells.getCell(i).style.borders = value;
            }
        }
    };
    /**
     * sets the `parent row` of the current object.
     * @private
     */
    PdfGridRowStyle.prototype.setParent = function (parent) {
        this.parent = parent;
    };
    Object.defineProperty(PdfGridRowStyle.prototype, "backgroundImage", {
        /**
         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.
         * @private
         */
        get: function () {
            return this.gridRowBackgroundImage;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * sets the `backgroundImage` of the 'PdfGridCell'.
     * @private
     */
    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {
        this.gridRowBackgroundImage = value;
    };
    return PdfGridRowStyle;
}());

/**
 * public Enum for `PdfHorizontalOverflowType`.
 * @private
 */
var PdfHorizontalOverflowType;
(function (PdfHorizontalOverflowType) {
    /**
     * Specifies the type of `NextPage`.
     * @private
     */
    PdfHorizontalOverflowType[PdfHorizontalOverflowType["NextPage"] = 0] = "NextPage";
    /**
     * Specifies the type of `LastPage`.
     * @private
     */
    PdfHorizontalOverflowType[PdfHorizontalOverflowType["LastPage"] = 1] = "LastPage";
})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/tables/light-tables/enum.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/tables/light-tables/enum.js ***!
  \***********************************************************************************************************************************************************************/
/*! exports provided: PdfBorderOverlapStyle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PdfBorderOverlapStyle", function() { return PdfBorderOverlapStyle; });
/**
 * public Enum for `PdfBorderOverlapStyle`.
 * @private
 */
var PdfBorderOverlapStyle;
(function (PdfBorderOverlapStyle) {
    /**
     * Specifies the type of `Overlap`.
     * @private
     */
    PdfBorderOverlapStyle[PdfBorderOverlapStyle["Overlap"] = 0] = "Overlap";
    /**
     * Specifies the type of `Inside`.
     * @private
     */
    PdfBorderOverlapStyle[PdfBorderOverlapStyle["Inside"] = 1] = "Inside";
})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/index.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/index.js ***!
  \*****************************************************************************************************************/
/*! exports provided: PdfAction, PdfUriAction, PdfActionLinkAnnotation, PdfAnnotation, PdfAnnotationCollection, PdfDocumentLinkAnnotation, PdfLinkAnnotation, PdfTextWebLink, PdfUriAnnotation, Dictionary, defaultToString, PdfCatalog, PdfDocument, PdfDocumentBase, PdfDocumentTemplate, PdfPageNumberField, PdfCompositeField, PdfPageCountField, PointF, SizeF, RectangleF, Rectangle, PdfCacheCollection, PdfCollection, PdfDestination, PdfFunction, PdfSampledFunction, PdfDestinationMode, ProcedureSets, PdfHorizontalAlignment, PdfVerticalAlignment, PdfTextAlignment, TextRenderingMode, PdfLineJoin, PdfLineCap, PdfDashStyle, PdfFillMode, PdfColorSpace, PdfBlendMode, PdfGraphicsUnit, PdfGridImagePosition, PdfTextDirection, PdfColor, PdfGraphics, GetResourceEventHandler, PdfGraphicsState, PdfMargins, PdfPen, PdfResources, Guid, PdfTransformationMatrix, Matrix, PdfBrush, PdfBrushes, PdfSolidBrush, PdfLinearGradientBrush, PdfRadialGradientBrush, PdfTilingBrush, PdfGradientBrush, PdfColorBlend, PdfBlend, PdfTemplate, PdfLayoutElement, PdfPath, PdfArc, PdfTextElement, ElementLayouter, PdfLayoutFormat, PdfLayoutParams, PdfLayoutResult, TextLayouter, TextPageLayoutResult, PdfTextLayoutResult, PdfLayoutType, PdfLayoutBreakType, PathPointType, PdfFontStyle, PdfFontFamily, PdfFontType, PdfWordWrapType, PdfSubSuperScript, FontEncoding, TtfCmapFormat, TtfCmapEncoding, TtfPlatformID, TtfMicrosoftEncodingID, TtfMacintoshEncodingID, FontDescriptorFlags, TtfCompositeGlyphFlags, PdfFont, PdfFontMetrics, WidthTable, StandardWidthTable, PdfStandardFont, PdfStandardFontMetricsFactory, PdfStringFormat, PdfStringLayouter, PdfStringLayoutResult, LineInfo, LineType, StringTokenizer, PdfTrueTypeFont, RtlRenderer, ArabicShapeRenderer, ArabicShape, Bidi, RtlCharacters, ByteArray, ImageFormat, ImageDecoder, PdfBitmap, PdfImage, PdfTransparency, ObjectStatus, ObjectType, PdfCrossTable, RegisteredObject, DictionaryProperties, PdfMainObjectCollection, ObjectInfo, Operators, PdfStreamWriter, PdfWriter, PdfPageOrientation, PdfPageRotateAngle, PdfNumberStyle, PdfDockStyle, PdfAlignmentStyle, TemplateType, PageAddedEventArgs, PdfDocumentPageCollection, PdfPage, PdfPageBase, PdfPageLayer, PdfPageLayerCollection, PdfPageSettings, PdfPageSize, PdfPageTemplateElement, PdfSection, PageSettingsState, PdfSectionCollection, PdfSectionPageCollection, PdfSectionTemplate, PdfArray, PdfDictionary, SaveSectionCollectionEventHandler, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler, SaveAnnotationEventHandler, SaveSectionEventHandler, SaveTemplateEventHandler, PdfName, PdfNumber, PdfReference, PdfReferenceHolder, PdfStream, SaveCmapEventHandler, SaveFontProgramEventHandler, InternalEnum, PdfString, PdfGridStyleBase, PdfGridStyle, PdfGridCellStyle, PdfGridRowStyle, PdfHorizontalOverflowType, PdfBorders, PdfPaddings, PdfBorderOverlapStyle, PdfGridLayouter, PdfGridLayoutResult, PdfGridLayoutFormat, GridCellEventArgs, PdfGridBeginCellDrawEventArgs, PdfGridEndCellDrawEventArgs, PdfCancelEventArgs, BeginPageLayoutEventArgs, EndPageLayoutEventArgs, PdfGridBeginPageLayoutEventArgs, PdfGridEndPageLayoutEventArgs, RowLayoutResult, PdfGrid, PdfGridColumn, PdfGridColumnCollection, PdfGridRow, PdfGridRowCollection, PdfGridHeaderCollection, PdfGridCell, PdfGridCellCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _implementation_actions_action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./implementation/actions/action */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/action.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAction", function() { return _implementation_actions_action__WEBPACK_IMPORTED_MODULE_0__["PdfAction"]; });

/* harmony import */ var _implementation_actions_uri_action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./implementation/actions/uri-action */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/uri-action.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfUriAction", function() { return _implementation_actions_uri_action__WEBPACK_IMPORTED_MODULE_1__["PdfUriAction"]; });

/* harmony import */ var _implementation_annotations_action_link_annotation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./implementation/annotations/action-link-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/action-link-annotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfActionLinkAnnotation", function() { return _implementation_annotations_action_link_annotation__WEBPACK_IMPORTED_MODULE_2__["PdfActionLinkAnnotation"]; });

/* harmony import */ var _implementation_annotations_annotation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./implementation/annotations/annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotation", function() { return _implementation_annotations_annotation__WEBPACK_IMPORTED_MODULE_3__["PdfAnnotation"]; });

/* harmony import */ var _implementation_annotations_annotation_collection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./implementation/annotations/annotation-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAnnotationCollection", function() { return _implementation_annotations_annotation_collection__WEBPACK_IMPORTED_MODULE_4__["PdfAnnotationCollection"]; });

/* harmony import */ var _implementation_annotations_document_link_annotation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./implementation/annotations/document-link-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/document-link-annotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentLinkAnnotation", function() { return _implementation_annotations_document_link_annotation__WEBPACK_IMPORTED_MODULE_5__["PdfDocumentLinkAnnotation"]; });

/* harmony import */ var _implementation_annotations_link_annotation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./implementation/annotations/link-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/link-annotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLinkAnnotation", function() { return _implementation_annotations_link_annotation__WEBPACK_IMPORTED_MODULE_6__["PdfLinkAnnotation"]; });

/* harmony import */ var _implementation_annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./implementation/annotations/pdf-text-web-link */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextWebLink", function() { return _implementation_annotations_pdf_text_web_link__WEBPACK_IMPORTED_MODULE_7__["PdfTextWebLink"]; });

/* harmony import */ var _implementation_annotations_uri_annotation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./implementation/annotations/uri-annotation */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/uri-annotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfUriAnnotation", function() { return _implementation_annotations_uri_annotation__WEBPACK_IMPORTED_MODULE_8__["PdfUriAnnotation"]; });

/* harmony import */ var _implementation_collections_dictionary__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./implementation/collections/dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Dictionary", function() { return _implementation_collections_dictionary__WEBPACK_IMPORTED_MODULE_9__["Dictionary"]; });

/* harmony import */ var _implementation_collections_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./implementation/collections/utils */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/utils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultToString", function() { return _implementation_collections_utils__WEBPACK_IMPORTED_MODULE_10__["defaultToString"]; });

/* harmony import */ var _implementation_document_pdf_catalog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./implementation/document/pdf-catalog */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-catalog.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCatalog", function() { return _implementation_document_pdf_catalog__WEBPACK_IMPORTED_MODULE_11__["PdfCatalog"]; });

/* harmony import */ var _implementation_document_pdf_document__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./implementation/document/pdf-document */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocument", function() { return _implementation_document_pdf_document__WEBPACK_IMPORTED_MODULE_12__["PdfDocument"]; });

/* harmony import */ var _implementation_document_pdf_document_base__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./implementation/document/pdf-document-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentBase", function() { return _implementation_document_pdf_document_base__WEBPACK_IMPORTED_MODULE_13__["PdfDocumentBase"]; });

/* harmony import */ var _implementation_document_pdf_document_template__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./implementation/document/pdf-document-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-template.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentTemplate", function() { return _implementation_document_pdf_document_template__WEBPACK_IMPORTED_MODULE_14__["PdfDocumentTemplate"]; });

/* harmony import */ var _implementation_document_automatic_fields_pdf_page_number_field__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./implementation/document/automatic-fields/pdf-page-number-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-page-number-field.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageNumberField", function() { return _implementation_document_automatic_fields_pdf_page_number_field__WEBPACK_IMPORTED_MODULE_15__["PdfPageNumberField"]; });

/* harmony import */ var _implementation_document_automatic_fields_composite_field__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./implementation/document/automatic-fields/composite-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/composite-field.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCompositeField", function() { return _implementation_document_automatic_fields_composite_field__WEBPACK_IMPORTED_MODULE_16__["PdfCompositeField"]; });

/* harmony import */ var _implementation_document_automatic_fields_page_count_field__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./implementation/document/automatic-fields/page-count-field */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/page-count-field.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageCountField", function() { return _implementation_document_automatic_fields_page_count_field__WEBPACK_IMPORTED_MODULE_17__["PdfPageCountField"]; });

/* harmony import */ var _implementation_drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./implementation/drawing/pdf-drawing */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PointF", function() { return _implementation_drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_18__["PointF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SizeF", function() { return _implementation_drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_18__["SizeF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RectangleF", function() { return _implementation_drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_18__["RectangleF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rectangle", function() { return _implementation_drawing_pdf_drawing__WEBPACK_IMPORTED_MODULE_18__["Rectangle"]; });

/* harmony import */ var _implementation_general_pdf_cache_collection__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./implementation/general/pdf-cache-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-cache-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCacheCollection", function() { return _implementation_general_pdf_cache_collection__WEBPACK_IMPORTED_MODULE_19__["PdfCacheCollection"]; });

/* harmony import */ var _implementation_general_pdf_collection__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./implementation/general/pdf-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCollection", function() { return _implementation_general_pdf_collection__WEBPACK_IMPORTED_MODULE_20__["PdfCollection"]; });

/* harmony import */ var _implementation_general_pdf_destination__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./implementation/general/pdf-destination */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-destination.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDestination", function() { return _implementation_general_pdf_destination__WEBPACK_IMPORTED_MODULE_21__["PdfDestination"]; });

/* harmony import */ var _implementation_general_functions_pdf_function__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./implementation/general/functions/pdf-function */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-function.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFunction", function() { return _implementation_general_functions_pdf_function__WEBPACK_IMPORTED_MODULE_22__["PdfFunction"]; });

/* harmony import */ var _implementation_general_functions_pdf_sampled_function__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./implementation/general/functions/pdf-sampled-function */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-sampled-function.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSampledFunction", function() { return _implementation_general_functions_pdf_sampled_function__WEBPACK_IMPORTED_MODULE_23__["PdfSampledFunction"]; });

/* harmony import */ var _implementation_general_enum__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./implementation/general/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/enum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDestinationMode", function() { return _implementation_general_enum__WEBPACK_IMPORTED_MODULE_24__["PdfDestinationMode"]; });

/* harmony import */ var _implementation_graphics_constants__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./implementation/graphics/constants */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/constants.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProcedureSets", function() { return _implementation_graphics_constants__WEBPACK_IMPORTED_MODULE_25__["ProcedureSets"]; });

/* harmony import */ var _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./implementation/graphics/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalAlignment", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfHorizontalAlignment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfVerticalAlignment", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfVerticalAlignment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextAlignment", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfTextAlignment"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextRenderingMode", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["TextRenderingMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLineJoin", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfLineJoin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLineCap", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfLineCap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDashStyle", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfDashStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFillMode", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfFillMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfColorSpace", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfColorSpace"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBlendMode", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfBlendMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsUnit", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfGraphicsUnit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridImagePosition", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfGridImagePosition"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextDirection", function() { return _implementation_graphics_enum__WEBPACK_IMPORTED_MODULE_26__["PdfTextDirection"]; });

/* harmony import */ var _implementation_graphics_pdf_color__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./implementation/graphics/pdf-color */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfColor", function() { return _implementation_graphics_pdf_color__WEBPACK_IMPORTED_MODULE_27__["PdfColor"]; });

/* harmony import */ var _implementation_graphics_pdf_graphics__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./implementation/graphics/pdf-graphics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-graphics.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGraphics", function() { return _implementation_graphics_pdf_graphics__WEBPACK_IMPORTED_MODULE_28__["PdfGraphics"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GetResourceEventHandler", function() { return _implementation_graphics_pdf_graphics__WEBPACK_IMPORTED_MODULE_28__["GetResourceEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGraphicsState", function() { return _implementation_graphics_pdf_graphics__WEBPACK_IMPORTED_MODULE_28__["PdfGraphicsState"]; });

/* harmony import */ var _implementation_graphics_pdf_margins__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./implementation/graphics/pdf-margins */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-margins.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfMargins", function() { return _implementation_graphics_pdf_margins__WEBPACK_IMPORTED_MODULE_29__["PdfMargins"]; });

/* harmony import */ var _implementation_graphics_pdf_pen__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./implementation/graphics/pdf-pen */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPen", function() { return _implementation_graphics_pdf_pen__WEBPACK_IMPORTED_MODULE_30__["PdfPen"]; });

/* harmony import */ var _implementation_graphics_pdf_resources__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./implementation/graphics/pdf-resources */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-resources.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfResources", function() { return _implementation_graphics_pdf_resources__WEBPACK_IMPORTED_MODULE_31__["PdfResources"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Guid", function() { return _implementation_graphics_pdf_resources__WEBPACK_IMPORTED_MODULE_31__["Guid"]; });

/* harmony import */ var _implementation_graphics_pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./implementation/graphics/pdf-transformation-matrix */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transformation-matrix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTransformationMatrix", function() { return _implementation_graphics_pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_32__["PdfTransformationMatrix"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Matrix", function() { return _implementation_graphics_pdf_transformation_matrix__WEBPACK_IMPORTED_MODULE_32__["Matrix"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBrush", function() { return _implementation_graphics_brushes_pdf_brush__WEBPACK_IMPORTED_MODULE_33__["PdfBrush"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_brushes__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-brushes */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brushes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBrushes", function() { return _implementation_graphics_brushes_pdf_brushes__WEBPACK_IMPORTED_MODULE_34__["PdfBrushes"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-solid-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSolidBrush", function() { return _implementation_graphics_brushes_pdf_solid_brush__WEBPACK_IMPORTED_MODULE_35__["PdfSolidBrush"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_linear_gradient_brush__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-linear-gradient-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-linear-gradient-brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLinearGradientBrush", function() { return _implementation_graphics_brushes_pdf_linear_gradient_brush__WEBPACK_IMPORTED_MODULE_36__["PdfLinearGradientBrush"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_radial_gradient_brush__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-radial-gradient-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-radial-gradient-brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfRadialGradientBrush", function() { return _implementation_graphics_brushes_pdf_radial_gradient_brush__WEBPACK_IMPORTED_MODULE_37__["PdfRadialGradientBrush"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-tiling-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTilingBrush", function() { return _implementation_graphics_brushes_pdf_tiling_brush__WEBPACK_IMPORTED_MODULE_38__["PdfTilingBrush"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-gradient-brush */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGradientBrush", function() { return _implementation_graphics_brushes_pdf_gradient_brush__WEBPACK_IMPORTED_MODULE_39__["PdfGradientBrush"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_color_blend__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-color-blend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-color-blend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfColorBlend", function() { return _implementation_graphics_brushes_pdf_color_blend__WEBPACK_IMPORTED_MODULE_40__["PdfColorBlend"]; });

/* harmony import */ var _implementation_graphics_brushes_pdf_blend__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./implementation/graphics/brushes/pdf-blend */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-blend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBlend", function() { return _implementation_graphics_brushes_pdf_blend__WEBPACK_IMPORTED_MODULE_41__["PdfBlend"]; });

/* harmony import */ var _implementation_graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./implementation/graphics/figures/pdf-template */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTemplate", function() { return _implementation_graphics_figures_pdf_template__WEBPACK_IMPORTED_MODULE_42__["PdfTemplate"]; });

/* harmony import */ var _implementation_graphics_figures_layout_element__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./implementation/graphics/figures/layout-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/layout-element.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutElement", function() { return _implementation_graphics_figures_layout_element__WEBPACK_IMPORTED_MODULE_43__["PdfLayoutElement"]; });

/* harmony import */ var _implementation_graphics_figures_path__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./implementation/graphics/figures/path */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/path.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPath", function() { return _implementation_graphics_figures_path__WEBPACK_IMPORTED_MODULE_44__["PdfPath"]; });

/* harmony import */ var _implementation_graphics_figures_arc__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./implementation/graphics/figures/arc */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/arc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfArc", function() { return _implementation_graphics_figures_arc__WEBPACK_IMPORTED_MODULE_45__["PdfArc"]; });

/* harmony import */ var _implementation_graphics_figures_text_element__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./implementation/graphics/figures/text-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/text-element.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextElement", function() { return _implementation_graphics_figures_text_element__WEBPACK_IMPORTED_MODULE_46__["PdfTextElement"]; });

/* harmony import */ var _implementation_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./implementation/graphics/figures/base/element-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ElementLayouter", function() { return _implementation_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_47__["ElementLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutFormat", function() { return _implementation_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_47__["PdfLayoutFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutParams", function() { return _implementation_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_47__["PdfLayoutParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutResult", function() { return _implementation_graphics_figures_base_element_layouter__WEBPACK_IMPORTED_MODULE_47__["PdfLayoutResult"]; });

/* harmony import */ var _implementation_graphics_figures_base_text_layouter__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./implementation/graphics/figures/base/text-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/text-layouter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextLayouter", function() { return _implementation_graphics_figures_base_text_layouter__WEBPACK_IMPORTED_MODULE_48__["TextLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextPageLayoutResult", function() { return _implementation_graphics_figures_base_text_layouter__WEBPACK_IMPORTED_MODULE_48__["TextPageLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTextLayoutResult", function() { return _implementation_graphics_figures_base_text_layouter__WEBPACK_IMPORTED_MODULE_48__["PdfTextLayoutResult"]; });

/* harmony import */ var _implementation_graphics_figures_enum__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./implementation/graphics/figures/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutType", function() { return _implementation_graphics_figures_enum__WEBPACK_IMPORTED_MODULE_49__["PdfLayoutType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfLayoutBreakType", function() { return _implementation_graphics_figures_enum__WEBPACK_IMPORTED_MODULE_49__["PdfLayoutBreakType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathPointType", function() { return _implementation_graphics_figures_enum__WEBPACK_IMPORTED_MODULE_49__["PathPointType"]; });

/* harmony import */ var _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./implementation/graphics/fonts/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontStyle", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["PdfFontStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontFamily", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["PdfFontFamily"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontType", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["PdfFontType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfWordWrapType", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["PdfWordWrapType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSubSuperScript", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["PdfSubSuperScript"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FontEncoding", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["FontEncoding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfCmapFormat", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["TtfCmapFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfCmapEncoding", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["TtfCmapEncoding"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfPlatformID", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["TtfPlatformID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfMicrosoftEncodingID", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["TtfMicrosoftEncodingID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfMacintoshEncodingID", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["TtfMacintoshEncodingID"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FontDescriptorFlags", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["FontDescriptorFlags"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TtfCompositeGlyphFlags", function() { return _implementation_graphics_fonts_enum__WEBPACK_IMPORTED_MODULE_50__["TtfCompositeGlyphFlags"]; });

/* harmony import */ var _implementation_graphics_fonts_pdf_font__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./implementation/graphics/fonts/pdf-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFont", function() { return _implementation_graphics_fonts_pdf_font__WEBPACK_IMPORTED_MODULE_51__["PdfFont"]; });

/* harmony import */ var _implementation_graphics_fonts_pdf_font_metrics__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./implementation/graphics/fonts/pdf-font-metrics */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font-metrics.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfFontMetrics", function() { return _implementation_graphics_fonts_pdf_font_metrics__WEBPACK_IMPORTED_MODULE_52__["PdfFontMetrics"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WidthTable", function() { return _implementation_graphics_fonts_pdf_font_metrics__WEBPACK_IMPORTED_MODULE_52__["WidthTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StandardWidthTable", function() { return _implementation_graphics_fonts_pdf_font_metrics__WEBPACK_IMPORTED_MODULE_52__["StandardWidthTable"]; });

/* harmony import */ var _implementation_graphics_fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./implementation/graphics/fonts/pdf-standard-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFont", function() { return _implementation_graphics_fonts_pdf_standard_font__WEBPACK_IMPORTED_MODULE_53__["PdfStandardFont"]; });

/* harmony import */ var _implementation_graphics_fonts_pdf_standard_font_metrics_factory__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./implementation/graphics/fonts/pdf-standard-font-metrics-factory */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStandardFontMetricsFactory", function() { return _implementation_graphics_fonts_pdf_standard_font_metrics_factory__WEBPACK_IMPORTED_MODULE_54__["PdfStandardFontMetricsFactory"]; });

/* harmony import */ var _implementation_graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./implementation/graphics/fonts/pdf-string-format */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStringFormat", function() { return _implementation_graphics_fonts_pdf_string_format__WEBPACK_IMPORTED_MODULE_55__["PdfStringFormat"]; });

/* harmony import */ var _implementation_graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./implementation/graphics/fonts/string-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayouter", function() { return _implementation_graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_56__["PdfStringLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStringLayoutResult", function() { return _implementation_graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_56__["PdfStringLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LineInfo", function() { return _implementation_graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_56__["LineInfo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LineType", function() { return _implementation_graphics_fonts_string_layouter__WEBPACK_IMPORTED_MODULE_56__["LineType"]; });

/* harmony import */ var _implementation_graphics_fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./implementation/graphics/fonts/string-tokenizer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StringTokenizer", function() { return _implementation_graphics_fonts_string_tokenizer__WEBPACK_IMPORTED_MODULE_57__["StringTokenizer"]; });

/* harmony import */ var _implementation_graphics_fonts_pdf_true_type_font__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./implementation/graphics/fonts/pdf-true-type-font */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-true-type-font.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTrueTypeFont", function() { return _implementation_graphics_fonts_pdf_true_type_font__WEBPACK_IMPORTED_MODULE_58__["PdfTrueTypeFont"]; });

/* harmony import */ var _implementation_graphics_fonts_rtl_renderer__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./implementation/graphics/fonts/rtl-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl-renderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RtlRenderer", function() { return _implementation_graphics_fonts_rtl_renderer__WEBPACK_IMPORTED_MODULE_59__["RtlRenderer"]; });

/* harmony import */ var _implementation_graphics_fonts_rtl_rtl_text_shape__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./implementation/graphics/fonts/rtl/rtl-text-shape */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-text-shape.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArabicShapeRenderer", function() { return _implementation_graphics_fonts_rtl_rtl_text_shape__WEBPACK_IMPORTED_MODULE_60__["ArabicShapeRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ArabicShape", function() { return _implementation_graphics_fonts_rtl_rtl_text_shape__WEBPACK_IMPORTED_MODULE_60__["ArabicShape"]; });

/* harmony import */ var _implementation_graphics_fonts_rtl_rtl_bidirectional__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./implementation/graphics/fonts/rtl/rtl-bidirectional */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-bidirectional.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bidi", function() { return _implementation_graphics_fonts_rtl_rtl_bidirectional__WEBPACK_IMPORTED_MODULE_61__["Bidi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RtlCharacters", function() { return _implementation_graphics_fonts_rtl_rtl_bidirectional__WEBPACK_IMPORTED_MODULE_61__["RtlCharacters"]; });

/* harmony import */ var _implementation_graphics_images_byte_array__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./implementation/graphics/images/byte-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/byte-array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ByteArray", function() { return _implementation_graphics_images_byte_array__WEBPACK_IMPORTED_MODULE_62__["ByteArray"]; });

/* harmony import */ var _implementation_graphics_images_image_decoder__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./implementation/graphics/images/image-decoder */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageFormat", function() { return _implementation_graphics_images_image_decoder__WEBPACK_IMPORTED_MODULE_63__["ImageFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageDecoder", function() { return _implementation_graphics_images_image_decoder__WEBPACK_IMPORTED_MODULE_63__["ImageDecoder"]; });

/* harmony import */ var _implementation_graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./implementation/graphics/images/pdf-bitmap */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBitmap", function() { return _implementation_graphics_images_pdf_bitmap__WEBPACK_IMPORTED_MODULE_64__["PdfBitmap"]; });

/* harmony import */ var _implementation_graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./implementation/graphics/images/pdf-image */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfImage", function() { return _implementation_graphics_images_pdf_image__WEBPACK_IMPORTED_MODULE_65__["PdfImage"]; });

/* harmony import */ var _implementation_graphics_pdf_transparency__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./implementation/graphics/pdf-transparency */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transparency.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfTransparency", function() { return _implementation_graphics_pdf_transparency__WEBPACK_IMPORTED_MODULE_66__["PdfTransparency"]; });

/* harmony import */ var _implementation_input_output_enum__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./implementation/input-output/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/enum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectStatus", function() { return _implementation_input_output_enum__WEBPACK_IMPORTED_MODULE_67__["ObjectStatus"]; });

/* harmony import */ var _implementation_input_output_cross_table__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./implementation/input-output/cross-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/cross-table.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectType", function() { return _implementation_input_output_cross_table__WEBPACK_IMPORTED_MODULE_68__["ObjectType"]; });

/* harmony import */ var _implementation_input_output_pdf_cross_table__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./implementation/input-output/pdf-cross-table */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-cross-table.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCrossTable", function() { return _implementation_input_output_pdf_cross_table__WEBPACK_IMPORTED_MODULE_69__["PdfCrossTable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RegisteredObject", function() { return _implementation_input_output_pdf_cross_table__WEBPACK_IMPORTED_MODULE_69__["RegisteredObject"]; });

/* harmony import */ var _implementation_input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./implementation/input-output/pdf-dictionary-properties */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DictionaryProperties", function() { return _implementation_input_output_pdf_dictionary_properties__WEBPACK_IMPORTED_MODULE_70__["DictionaryProperties"]; });

/* harmony import */ var _implementation_input_output_pdf_main_object_collection__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./implementation/input-output/pdf-main-object-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-main-object-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfMainObjectCollection", function() { return _implementation_input_output_pdf_main_object_collection__WEBPACK_IMPORTED_MODULE_71__["PdfMainObjectCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectInfo", function() { return _implementation_input_output_pdf_main_object_collection__WEBPACK_IMPORTED_MODULE_71__["ObjectInfo"]; });

/* harmony import */ var _implementation_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./implementation/input-output/pdf-operators */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Operators", function() { return _implementation_input_output_pdf_operators__WEBPACK_IMPORTED_MODULE_72__["Operators"]; });

/* harmony import */ var _implementation_input_output_pdf_stream_writer__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./implementation/input-output/pdf-stream-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStreamWriter", function() { return _implementation_input_output_pdf_stream_writer__WEBPACK_IMPORTED_MODULE_73__["PdfStreamWriter"]; });

/* harmony import */ var _implementation_input_output_pdf_writer__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./implementation/input-output/pdf-writer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfWriter", function() { return _implementation_input_output_pdf_writer__WEBPACK_IMPORTED_MODULE_74__["PdfWriter"]; });

/* harmony import */ var _implementation_pages_enum__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./implementation/pages/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageOrientation", function() { return _implementation_pages_enum__WEBPACK_IMPORTED_MODULE_75__["PdfPageOrientation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageRotateAngle", function() { return _implementation_pages_enum__WEBPACK_IMPORTED_MODULE_75__["PdfPageRotateAngle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfNumberStyle", function() { return _implementation_pages_enum__WEBPACK_IMPORTED_MODULE_75__["PdfNumberStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDockStyle", function() { return _implementation_pages_enum__WEBPACK_IMPORTED_MODULE_75__["PdfDockStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfAlignmentStyle", function() { return _implementation_pages_enum__WEBPACK_IMPORTED_MODULE_75__["PdfAlignmentStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TemplateType", function() { return _implementation_pages_enum__WEBPACK_IMPORTED_MODULE_75__["TemplateType"]; });

/* harmony import */ var _implementation_pages_page_added_event_arguments__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./implementation/pages/page-added-event-arguments */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/page-added-event-arguments.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageAddedEventArgs", function() { return _implementation_pages_page_added_event_arguments__WEBPACK_IMPORTED_MODULE_76__["PageAddedEventArgs"]; });

/* harmony import */ var _implementation_pages_pdf_document_page_collection__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./implementation/pages/pdf-document-page-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-document-page-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDocumentPageCollection", function() { return _implementation_pages_pdf_document_page_collection__WEBPACK_IMPORTED_MODULE_77__["PdfDocumentPageCollection"]; });

/* harmony import */ var _implementation_pages_pdf_page__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./implementation/pages/pdf-page */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPage", function() { return _implementation_pages_pdf_page__WEBPACK_IMPORTED_MODULE_78__["PdfPage"]; });

/* harmony import */ var _implementation_pages_pdf_page_base__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./implementation/pages/pdf-page-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-base.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageBase", function() { return _implementation_pages_pdf_page_base__WEBPACK_IMPORTED_MODULE_79__["PdfPageBase"]; });

/* harmony import */ var _implementation_pages_pdf_page_layer__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./implementation/pages/pdf-page-layer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayer", function() { return _implementation_pages_pdf_page_layer__WEBPACK_IMPORTED_MODULE_80__["PdfPageLayer"]; });

/* harmony import */ var _implementation_pages_pdf_page_layer_collection__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./implementation/pages/pdf-page-layer-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageLayerCollection", function() { return _implementation_pages_pdf_page_layer_collection__WEBPACK_IMPORTED_MODULE_81__["PdfPageLayerCollection"]; });

/* harmony import */ var _implementation_pages_pdf_page_settings__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./implementation/pages/pdf-page-settings */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-settings.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageSettings", function() { return _implementation_pages_pdf_page_settings__WEBPACK_IMPORTED_MODULE_82__["PdfPageSettings"]; });

/* harmony import */ var _implementation_pages_pdf_page_size__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./implementation/pages/pdf-page-size */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-size.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageSize", function() { return _implementation_pages_pdf_page_size__WEBPACK_IMPORTED_MODULE_83__["PdfPageSize"]; });

/* harmony import */ var _implementation_pages_pdf_page_template_element__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./implementation/pages/pdf-page-template-element */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-template-element.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPageTemplateElement", function() { return _implementation_pages_pdf_page_template_element__WEBPACK_IMPORTED_MODULE_84__["PdfPageTemplateElement"]; });

/* harmony import */ var _implementation_pages_pdf_section__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./implementation/pages/pdf-section */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSection", function() { return _implementation_pages_pdf_section__WEBPACK_IMPORTED_MODULE_85__["PdfSection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PageSettingsState", function() { return _implementation_pages_pdf_section__WEBPACK_IMPORTED_MODULE_85__["PageSettingsState"]; });

/* harmony import */ var _implementation_pages_pdf_section_collection__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./implementation/pages/pdf-section-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSectionCollection", function() { return _implementation_pages_pdf_section_collection__WEBPACK_IMPORTED_MODULE_86__["PdfSectionCollection"]; });

/* harmony import */ var _implementation_pages_pdf_section_page_collection__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./implementation/pages/pdf-section-page-collection */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-page-collection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSectionPageCollection", function() { return _implementation_pages_pdf_section_page_collection__WEBPACK_IMPORTED_MODULE_87__["PdfSectionPageCollection"]; });

/* harmony import */ var _implementation_pages_pdf_section_templates__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./implementation/pages/pdf-section-templates */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-templates.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfSectionTemplate", function() { return _implementation_pages_pdf_section_templates__WEBPACK_IMPORTED_MODULE_88__["PdfSectionTemplate"]; });

/* harmony import */ var _implementation_primitives_pdf_array__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./implementation/primitives/pdf-array */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfArray", function() { return _implementation_primitives_pdf_array__WEBPACK_IMPORTED_MODULE_89__["PdfArray"]; });

/* harmony import */ var _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./implementation/primitives/pdf-dictionary */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfDictionary", function() { return _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__["PdfDictionary"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveSectionCollectionEventHandler", function() { return _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__["SaveSectionCollectionEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveDescendantFontEventHandler", function() { return _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__["SaveDescendantFontEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveFontDictionaryEventHandler", function() { return _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__["SaveFontDictionaryEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveAnnotationEventHandler", function() { return _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__["SaveAnnotationEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveSectionEventHandler", function() { return _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__["SaveSectionEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveTemplateEventHandler", function() { return _implementation_primitives_pdf_dictionary__WEBPACK_IMPORTED_MODULE_90__["SaveTemplateEventHandler"]; });

/* harmony import */ var _implementation_primitives_pdf_name__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./implementation/primitives/pdf-name */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfName", function() { return _implementation_primitives_pdf_name__WEBPACK_IMPORTED_MODULE_91__["PdfName"]; });

/* harmony import */ var _implementation_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./implementation/primitives/pdf-number */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfNumber", function() { return _implementation_primitives_pdf_number__WEBPACK_IMPORTED_MODULE_92__["PdfNumber"]; });

/* harmony import */ var _implementation_primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./implementation/primitives/pdf-reference */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfReference", function() { return _implementation_primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_93__["PdfReference"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfReferenceHolder", function() { return _implementation_primitives_pdf_reference__WEBPACK_IMPORTED_MODULE_93__["PdfReferenceHolder"]; });

/* harmony import */ var _implementation_primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./implementation/primitives/pdf-stream */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfStream", function() { return _implementation_primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_94__["PdfStream"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveCmapEventHandler", function() { return _implementation_primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_94__["SaveCmapEventHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SaveFontProgramEventHandler", function() { return _implementation_primitives_pdf_stream__WEBPACK_IMPORTED_MODULE_94__["SaveFontProgramEventHandler"]; });

/* harmony import */ var _implementation_primitives_pdf_string__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./implementation/primitives/pdf-string */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InternalEnum", function() { return _implementation_primitives_pdf_string__WEBPACK_IMPORTED_MODULE_95__["InternalEnum"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfString", function() { return _implementation_primitives_pdf_string__WEBPACK_IMPORTED_MODULE_95__["PdfString"]; });

/* harmony import */ var _implementation_structured_elements_grid_styles_style__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./implementation/structured-elements/grid/styles/style */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyleBase", function() { return _implementation_structured_elements_grid_styles_style__WEBPACK_IMPORTED_MODULE_96__["PdfGridStyleBase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridStyle", function() { return _implementation_structured_elements_grid_styles_style__WEBPACK_IMPORTED_MODULE_96__["PdfGridStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellStyle", function() { return _implementation_structured_elements_grid_styles_style__WEBPACK_IMPORTED_MODULE_96__["PdfGridCellStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowStyle", function() { return _implementation_structured_elements_grid_styles_style__WEBPACK_IMPORTED_MODULE_96__["PdfGridRowStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfHorizontalOverflowType", function() { return _implementation_structured_elements_grid_styles_style__WEBPACK_IMPORTED_MODULE_96__["PdfHorizontalOverflowType"]; });

/* harmony import */ var _implementation_structured_elements_grid_styles_pdf_borders__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./implementation/structured-elements/grid/styles/pdf-borders */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBorders", function() { return _implementation_structured_elements_grid_styles_pdf_borders__WEBPACK_IMPORTED_MODULE_97__["PdfBorders"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfPaddings", function() { return _implementation_structured_elements_grid_styles_pdf_borders__WEBPACK_IMPORTED_MODULE_97__["PdfPaddings"]; });

/* harmony import */ var _implementation_structured_elements_tables_light_tables_enum__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./implementation/structured-elements/tables/light-tables/enum */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/tables/light-tables/enum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfBorderOverlapStyle", function() { return _implementation_structured_elements_tables_light_tables_enum__WEBPACK_IMPORTED_MODULE_98__["PdfBorderOverlapStyle"]; });

/* harmony import */ var _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./implementation/structured-elements/grid/layout/grid-layouter */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/layout/grid-layouter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayouter", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfGridLayouter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutResult", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfGridLayoutResult"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridLayoutFormat", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfGridLayoutFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GridCellEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["GridCellEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginCellDrawEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfGridBeginCellDrawEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndCellDrawEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfGridEndCellDrawEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfCancelEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfCancelEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BeginPageLayoutEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["BeginPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EndPageLayoutEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["EndPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridBeginPageLayoutEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfGridBeginPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridEndPageLayoutEventArgs", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["PdfGridEndPageLayoutEventArgs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RowLayoutResult", function() { return _implementation_structured_elements_grid_layout_grid_layouter__WEBPACK_IMPORTED_MODULE_99__["RowLayoutResult"]; });

/* harmony import */ var _implementation_structured_elements_grid_pdf_grid__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./implementation/structured-elements/grid/pdf-grid */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGrid", function() { return _implementation_structured_elements_grid_pdf_grid__WEBPACK_IMPORTED_MODULE_100__["PdfGrid"]; });

/* harmony import */ var _implementation_structured_elements_grid_pdf_grid_column__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./implementation/structured-elements/grid/pdf-grid-column */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-column.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumn", function() { return _implementation_structured_elements_grid_pdf_grid_column__WEBPACK_IMPORTED_MODULE_101__["PdfGridColumn"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridColumnCollection", function() { return _implementation_structured_elements_grid_pdf_grid_column__WEBPACK_IMPORTED_MODULE_101__["PdfGridColumnCollection"]; });

/* harmony import */ var _implementation_structured_elements_grid_pdf_grid_row__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./implementation/structured-elements/grid/pdf-grid-row */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-row.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridRow", function() { return _implementation_structured_elements_grid_pdf_grid_row__WEBPACK_IMPORTED_MODULE_102__["PdfGridRow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridRowCollection", function() { return _implementation_structured_elements_grid_pdf_grid_row__WEBPACK_IMPORTED_MODULE_102__["PdfGridRowCollection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridHeaderCollection", function() { return _implementation_structured_elements_grid_pdf_grid_row__WEBPACK_IMPORTED_MODULE_102__["PdfGridHeaderCollection"]; });

/* harmony import */ var _implementation_structured_elements_grid_pdf_grid_cell__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./implementation/structured-elements/grid/pdf-grid-cell */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-cell.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridCell", function() { return _implementation_structured_elements_grid_pdf_grid_cell__WEBPACK_IMPORTED_MODULE_103__["PdfGridCell"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PdfGridCellCollection", function() { return _implementation_structured_elements_grid_pdf_grid_cell__WEBPACK_IMPORTED_MODULE_103__["PdfGridCellCollection"]; });

/* empty/unused harmony star reexport *//**
 * Pdf all modules
 * @hidden
 */











































































































/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/index.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/index.js ***!
  \***********************************************************************************************************/
/*! exports provided: TextStyle, TooltipBorder, AreaBounds, ToolLocation, Tooltip, getTooltipThemeColor, measureText, findDirection, Size, Rect, Side, CustomizeOption, TextOption, getElement, removeElement, drawSymbol, calculateShapes, PathOption, textElement, TooltipLocation, SvgRenderer, CanvasRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextStyle", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TextStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipBorder", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TooltipBorder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AreaBounds", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["AreaBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToolLocation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["ToolLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Tooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTooltipThemeColor", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getTooltipThemeColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["measureText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findDirection", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["findDirection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Rect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Side", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["Side"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CustomizeOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TextOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["removeElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawSymbol", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["drawSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["PathOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["textElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipLocation", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["TooltipLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SvgRenderer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["SvgRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return _src_index__WEBPACK_IMPORTED_MODULE_0__["CanvasRenderer"]; });

/**
 * index
 */



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/index.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/index.js ***!
  \***************************************************************************************************************/
/*! exports provided: TextStyle, TooltipBorder, AreaBounds, ToolLocation, Tooltip, getTooltipThemeColor, measureText, findDirection, Size, Rect, Side, CustomizeOption, TextOption, getElement, removeElement, drawSymbol, calculateShapes, PathOption, textElement, TooltipLocation, SvgRenderer, CanvasRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tooltip_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextStyle", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["TextStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipBorder", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["TooltipBorder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AreaBounds", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["AreaBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToolLocation", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["ToolLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["Tooltip"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTooltipThemeColor", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["getTooltipThemeColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["measureText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findDirection", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["findDirection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["Rect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Side", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["Side"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["CustomizeOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["TextOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["removeElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawSymbol", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["drawSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["calculateShapes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["PathOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["textElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipLocation", function() { return _tooltip_index__WEBPACK_IMPORTED_MODULE_0__["TooltipLocation"]; });

/* harmony import */ var _svg_render_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./svg-render/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SvgRenderer", function() { return _svg_render_index__WEBPACK_IMPORTED_MODULE_1__["SvgRenderer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return _svg_render_index__WEBPACK_IMPORTED_MODULE_1__["CanvasRenderer"]; });

/**
 * Chart components exported.
 */




/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/canvas-renderer.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/canvas-renderer.js ***!
  \************************************************************************************************************************************/
/*! exports provided: CanvasRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return CanvasRenderer; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* eslint-disable no-case-declarations */
/* eslint-disable jsdoc/require-returns */
/* eslint-disable valid-jsdoc */
/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * To import utils.
 */

/**
 * @private
 */
var CanvasRenderer = /** @class */ (function () {
    /* End-Properties */
    function CanvasRenderer(rootID) {
        this.rootId = rootID;
    }
    // method to get the attributes value
    // tslint:disable-next-line:no-any
    CanvasRenderer.prototype.getOptionValue = function (options, key) {
        return options[key];
    };
    /* tslint:enable */
    /**
     * To create a Html5 canvas element
     *
     * @param {BaseAttibutes} options - Options to create canvas
     * @returns {HTMLCanvasElement} Creating a canvas
     */
    CanvasRenderer.prototype.createCanvas = function (options) {
        var canvasObj = document.createElement('canvas');
        canvasObj.setAttribute('id', this.rootId + '_canvas');
        this.ctx = canvasObj.getContext('2d');
        this.canvasObj = canvasObj;
        this.setCanvasSize(options.width, options.height);
        return this.canvasObj;
    };
    /**
     * To set the width and height for the Html5 canvas element
     *
     * @param {number} width - width of the canvas
     * @param {number} height - height of the canvas
     * @returns {void} Setting canvas size
     */
    CanvasRenderer.prototype.setCanvasSize = function (width, height) {
        var element = document.getElementById(this.rootId);
        var size = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element) ? element.getBoundingClientRect() : null;
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.width)) {
            this.canvasObj.setAttribute('width', width ? width.toString() : size.width.toString());
        }
        else {
            this.canvasObj.setAttribute('width', this.width.toString());
        }
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.height)) {
            this.canvasObj.setAttribute('height', height ? height.toString() : '450');
        }
        else {
            this.canvasObj.setAttribute('height', this.height.toString());
        }
    };
    // To set the values to the attributes
    CanvasRenderer.prototype.setAttributes = function (options) {
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        var dashArray = this.getOptionValue(options, 'stroke-dasharray');
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(dashArray)) {
            var dashArrayString = dashArray.split(',');
            this.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);
        }
        this.ctx.strokeStyle = this.getOptionValue(options, 'stroke');
    };
    /**
     * To draw a line
     *
     * @param {LineAttributes} options - required options to draw a line on the canvas
     * @returns {void} To draw a line
     */
    CanvasRenderer.prototype.drawLine = function (options) {
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.moveTo(options.x1, options.y1);
        this.ctx.lineTo(options.x2, options.y2);
        this.ctx.stroke();
        this.ctx.restore();
    };
    /**
     * To draw a rectangle
     *
     * @param {RectAttributes} options - required options to draw a rectangle on the canvas.
     * @param {Int32Array} canvasTranslate TO get a translate value of canvas.
     * @returns {void} To draw rectangle.
     */
    CanvasRenderer.prototype.drawRectangle = function (options, canvasTranslate) {
        var canvasCtx = this.ctx;
        var cornerRadius = options.rx;
        this.ctx.save();
        this.ctx.beginPath();
        if (canvasTranslate) {
            this.ctx.translate(canvasTranslate[0], canvasTranslate[1]);
        }
        this.ctx.globalAlpha = this.getOptionValue(options, 'opacity');
        this.setAttributes(options);
        this.ctx.rect(options.x, options.y, options.width, options.height);
        if (cornerRadius !== null && cornerRadius >= 0) {
            this.drawCornerRadius(options);
        }
        else {
            if (options.fill === 'none') {
                options.fill = 'transparent';
            }
            this.ctx.fillStyle = options.fill;
            this.ctx.fillRect(options.x, options.y, options.width, options.height);
            this.ctx.stroke();
        }
        this.ctx.restore();
        this.ctx = canvasCtx;
        return (this.canvasObj);
    };
    // To draw the corner of a rectangle
    CanvasRenderer.prototype.drawCornerRadius = function (options) {
        var cornerRadius = options.rx;
        var x = options.x;
        var y = options.y;
        var width = options.width;
        var height = options.height;
        if (options.fill === 'none') {
            options.fill = 'transparent';
        }
        this.ctx.fillStyle = options.fill;
        if (width < 2 * cornerRadius) {
            cornerRadius = width / 2;
        }
        if (height < 2 * cornerRadius) {
            cornerRadius = height / 2;
        }
        this.ctx.beginPath();
        this.ctx.moveTo(x + width - cornerRadius, y);
        this.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);
        this.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);
        this.ctx.arcTo(x, y + height, x, y, cornerRadius);
        this.ctx.arcTo(x, y, x + width, y, cornerRadius);
        this.ctx.closePath();
        this.ctx.fill();
        this.ctx.stroke();
    };
    /**
     * To draw a path on the canvas
     *
     * @param {PathAttributes} options - options needed to draw path.
     * @param {Int32Array} canvasTranslate - Array of numbers to translate the canvas.
     * @returns {Element} To draw a path.
     */
    CanvasRenderer.prototype.drawPath = function (options, canvasTranslate) {
        var path = options.d;
        var dataSplit = path.split(' ');
        var borderWidth = this.getOptionValue(options, 'stroke-width');
        var canvasCtx = this.ctx;
        var flag = true;
        this.ctx.save();
        this.ctx.beginPath();
        if (canvasTranslate) {
            this.ctx.translate(canvasTranslate[0], canvasTranslate[1]);
        }
        this.ctx.globalAlpha = options.opacity ? options.opacity : this.getOptionValue(options, 'fill-opacity');
        this.setAttributes(options);
        for (var i = 0; i < dataSplit.length; i = i + 3) {
            var x1 = parseFloat(dataSplit[i + 1]);
            var y1 = parseFloat(dataSplit[i + 2]);
            switch (dataSplit[i]) {
                case 'M':
                    if (!options.innerR && !options.cx) {
                        this.ctx.moveTo(x1, y1);
                    }
                    break;
                case 'L':
                    if (!options.innerR) {
                        this.ctx.lineTo(x1, y1);
                    }
                    break;
                case 'Q':
                    var q1 = parseFloat(dataSplit[i + 3]);
                    var q2 = parseFloat(dataSplit[i + 4]);
                    this.ctx.quadraticCurveTo(x1, y1, q1, q2);
                    i = i + 2;
                    break;
                case 'C':
                    var c1 = parseFloat(dataSplit[i + 3]);
                    var c2 = parseFloat(dataSplit[i + 4]);
                    var c3 = parseFloat(dataSplit[i + 5]);
                    var c4 = parseFloat(dataSplit[i + 6]);
                    this.ctx.bezierCurveTo(x1, y1, c1, c2, c3, c4);
                    i = i + 4;
                    break;
                case 'A':
                    if (!options.innerR) {
                        if (options.cx) {
                            this.ctx.arc(options.cx, options.cy, options.radius, 0, 2 * Math.PI, options.counterClockWise);
                        }
                        else {
                            this.ctx.moveTo(options.x, options.y);
                            this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);
                            this.ctx.lineTo(options.x, options.y);
                        }
                    }
                    else if (flag) {
                        this.ctx.arc(options.x, options.y, options.radius, options.start, options.end, options.counterClockWise);
                        this.ctx.arc(options.x, options.y, options.innerR, options.end, options.start, !options.counterClockWise);
                        flag = false;
                    }
                    i = i + 5;
                    break;
                case 'z':
                case 'Z':
                    this.ctx.closePath();
                    //since for loop is incremented by 3, to get next value after 'z' i is decremented for 2.
                    i = i - 2;
                    break;
            }
        }
        if (options.fill !== 'none' && options.fill !== undefined) {
            this.ctx.fillStyle = options.fill;
            this.ctx.fill();
        }
        if (borderWidth > 0) {
            this.ctx.stroke();
        }
        this.ctx.restore();
        this.ctx = canvasCtx;
        return this.canvasObj;
    };
    /**
     * To draw a text
     *
     * @param {TextAttributes} options - options required to draw text
     * @param {string} label - Specifies the text which has to be drawn on the canvas
     * @param {number} transX - Specifies the text of translate X
     * @param {number} transY - Specifies the text of translate Y
     * @param {number} dy - Specifies the text of translate dy
     * @param {boolean} isTSpan - Specifies the boolean value of span value
     * @returns {void}
     */
    CanvasRenderer.prototype.createText = function (options, label, transX, transY, dy, isTSpan) {
        var fontWeight = this.getOptionValue(options, 'font-weight');
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(fontWeight) && fontWeight.toLowerCase() === 'regular') {
            fontWeight = 'normal';
        }
        var fontSize = this.getOptionValue(options, 'font-size');
        var fontFamily = this.getOptionValue(options, 'font-family');
        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();
        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);
        var anchor = this.getOptionValue(options, 'text-anchor');
        var opacity = options.opacity !== undefined ? options.opacity : 1;
        if (anchor === 'middle') {
            anchor = 'center';
        }
        this.ctx.save();
        this.ctx.fillStyle = options.fill;
        this.ctx.font = font;
        this.ctx.textAlign = anchor;
        this.ctx.globalAlpha = opacity;
        if (options.baseline) {
            this.ctx.textBaseline = options.baseline;
        }
        if (!isTSpan) {
            var txtlngth = 0;
            this.ctx.translate(options.x + (txtlngth / 2) + (transX ? transX : 0), options.y + (transY ? transY : 0));
            this.ctx.rotate(options.labelRotation * Math.PI / 180);
        }
        this.ctx.fillText(label, isTSpan ? options.x : 0, isTSpan ? dy : 0);
        this.ctx.restore();
        return this.canvasObj;
    };
    /**
     * To draw circle on the canvas
     *
     * @param {CircleAttributes} options - required options to draw the circle
     * @param {Int32Array} canvasTranslate Translate value of canvas
     * @returns {void}
     */
    CanvasRenderer.prototype.drawCircle = function (options, canvasTranslate) {
        var canvasCtx = this.ctx;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);
        this.ctx.fillStyle = options.fill;
        this.ctx.globalAlpha = options.opacity;
        this.ctx.fill();
        if (canvasTranslate) {
            this.ctx.translate(canvasTranslate[0], canvasTranslate[1]);
        }
        this.setAttributes(options);
        this.ctx.stroke();
        this.ctx.restore();
        this.ctx = canvasCtx;
        return this.canvasObj;
    };
    /**
     * To draw polyline
     *
     * @param {PolylineAttributes} options - options needed to draw polyline
     * @returns {void}
     */
    CanvasRenderer.prototype.drawPolyline = function (options) {
        this.ctx.save();
        this.ctx.beginPath();
        var points = options.points.split(' ');
        for (var i = 0; i < points.length - 1; i++) {
            var point = points[i].split(',');
            var x = parseFloat(point[0]);
            var y = parseFloat(point[1]);
            if (i === 0) {
                this.ctx.moveTo(x, y);
            }
            else {
                this.ctx.lineTo(x, y);
            }
        }
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.stroke();
        this.ctx.restore();
    };
    /**
     * To draw an ellipse on the canvas
     *
     * @param {EllipseAttributes} options - options needed to draw ellipse
     * @param {Int32Array} canvasTranslate Translate value of canvas
     * @returns {void}
     */
    CanvasRenderer.prototype.drawEllipse = function (options, canvasTranslate) {
        var canvasCtx = this.ctx;
        var circumference = Math.max(options.rx, options.ry);
        var scaleX = options.rx / circumference;
        var scaleY = options.ry / circumference;
        this.ctx.save();
        this.ctx.beginPath();
        this.ctx.translate(options.cx, options.cy);
        if (canvasTranslate) {
            this.ctx.translate(canvasTranslate[0], canvasTranslate[1]);
        }
        this.ctx.save();
        this.ctx.scale(scaleX, scaleY);
        this.ctx.arc(0, 0, circumference, 0, 2 * Math.PI, false);
        this.ctx.fillStyle = options.fill;
        this.ctx.fill();
        this.ctx.restore();
        this.ctx.lineWidth = this.getOptionValue(options, 'stroke-width');
        this.ctx.strokeStyle = options.stroke;
        this.ctx.stroke();
        this.ctx.restore();
        this.ctx = canvasCtx;
    };
    /**
     * To draw an image
     *
     * @param {ImageAttributes} options - options required to draw an image on the canvas
     * @returns {void}
     */
    CanvasRenderer.prototype.drawImage = function (options) {
        this.ctx.save();
        var imageObj = new Image();
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(options.href)) {
            imageObj.src = options.href;
            this.ctx.drawImage(imageObj, options.x, options.y, options.width, options.height);
        }
        this.ctx.restore();
    };
    /**
     * To create a linear gradient
     *
     * @param {string[]} colors - Specifies the colors required to create linear gradient
     * @returns {string} It returns color
     */
    CanvasRenderer.prototype.createLinearGradient = function (colors) {
        var myGradient;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(colors[0].colorStop)) {
            myGradient = this.ctx.createLinearGradient(0, 0, 0, this.canvasObj.height);
        }
        var color = this.setGradientValues(colors, myGradient);
        return color;
    };
    /**
     * To create a radial gradient
     *
     * @param {string[]} colors - Specifies the colors required to create linear gradient
     * @returns {string} It returns gradient color
     */
    CanvasRenderer.prototype.createRadialGradient = function (colors) {
        var myGradient;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(colors[0].colorStop)) {
            myGradient = this.ctx.createRadialGradient(0, 0, 0, 0, 0, this.canvasObj.height);
        }
        var colorName = this.setGradientValues(colors, myGradient);
        return colorName;
    };
    // To set the gradient values
    CanvasRenderer.prototype.setGradientValues = function (colors, myGradient) {
        var colorName;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(colors[0].colorStop)) {
            for (var i = 0; i <= colors.length - 1; i++) {
                var color = colors[i].color;
                var newColorStop = (colors[i].colorStop).slice(0, -1);
                var stopColor = parseInt(newColorStop, 10) / 100;
                myGradient.addColorStop(stopColor, color);
            }
            colorName = myGradient.toString();
        }
        else {
            colorName = colors[0].color.toString();
        }
        return colorName;
    };
    /**
     * To set the attributes to the element
     *
     * @param {SVGCanvasAttributes} options - Attributes to set for the element
     * @param {HTMLElement} element - The element to which the attributes need to be set
     * @returns {HTMLElement} It returns null value
     */
    CanvasRenderer.prototype.setElementAttributes = function (options, element) {
        var keys = Object.keys(options);
        var values = Object.keys(options).map(function (key) { return options[key]; });
        for (var i = 0; i < keys.length; i++) {
            element.setAttribute(keys[i], values[i]);
        }
        return null;
    };
    /**
     * To update the values of the canvas element attributes
     *
     * @param {SVGCanvasAttributes} options - Specifies the colors required to create gradient
     * @returns {void}
     */
    CanvasRenderer.prototype.updateCanvasAttributes = function (options) {
        this.setElementAttributes(options, this.canvasObj);
        var ctx = this.ctx;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.dataUrl)) {
            var img_1 = new Image;
            img_1.onload = function () {
                ctx.drawImage(img_1, 0, 0);
            };
            img_1.src = this.dataUrl;
        }
    };
    /**
     * This method clears the given rectangle region
     *
     * @param {Rect} rect The rect parameter as passed
     */
    CanvasRenderer.prototype.clearRect = function (rect) {
        this.ctx.restore();
        this.ctx.clearRect(rect.x, rect.y, rect.width, rect.height);
    };
    /**
     * For canvas rendering in chart
     * Dummy method for using canvas/svg render in the same variable name in chart control
     */
    CanvasRenderer.prototype.createGroup = function () {
        return null;
    };
    /**
     * To render a clip path
     *
     * Dummy method for using canvas/svg render in the same variable name in chart control
     */
    CanvasRenderer.prototype.drawClipPath = function () {
        return null;
    };
    /**
     * Clip method to perform clip in canvas mode
     *
     * @param {BaseAttibutes} options The canvas clip of options
     */
    CanvasRenderer.prototype.canvasClip = function (options) {
        this.ctx.save();
        this.ctx.fillStyle = 'transparent';
        this.ctx.rect(options.x, options.y, options.width, options.height);
        this.ctx.fill();
        this.ctx.clip();
    };
    /**
     * Tp restore the canvas
     */
    CanvasRenderer.prototype.canvasRestore = function () {
        this.ctx.restore();
    };
    /**
     * To draw a polygon
     * Dummy method for using canvas/svg render in the same variable name in chart control
     */
    CanvasRenderer.prototype.drawPolygon = function () {
        return null;
    };
    /**
     * To create defs element in SVG
     * Dummy method for using canvas/svg render in the same variable name in chart control
     *
     * @returns {Element} It returns null
     */
    CanvasRenderer.prototype.createDefs = function () {
        return null;
    };
    /**
     * To create clip path in SVG
     * Dummy method for using canvas/svg render in the same variable name in chart control
     */
    CanvasRenderer.prototype.createClipPath = function () {
        return null;
    };
    /**
     * To create a Html5 SVG element
     * Dummy method for using canvas/svg render in the same variable name in chart control
     *
     * @returns {Element} It returns null
     */
    CanvasRenderer.prototype.createSvg = function () {
        return null;
    };
    return CanvasRenderer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/index.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/index.js ***!
  \**************************************************************************************************************************/
/*! exports provided: SvgRenderer, CanvasRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _svg_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./svg-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/svg-renderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SvgRenderer", function() { return _svg_renderer__WEBPACK_IMPORTED_MODULE_0__["SvgRenderer"]; });

/* harmony import */ var _canvas_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./canvas-renderer */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/canvas-renderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CanvasRenderer", function() { return _canvas_renderer__WEBPACK_IMPORTED_MODULE_1__["CanvasRenderer"]; });

/**
 * Base modules
 */




/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/svg-renderer.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/svg-renderer.js ***!
  \*********************************************************************************************************************************/
/*! exports provided: SvgRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SvgRenderer", function() { return SvgRenderer; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* eslint-disable jsdoc/require-returns */
/* eslint-disable valid-jsdoc */
/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * To import utils
 */

var SvgRenderer = /** @class */ (function () {
    /* End-Properties */
    function SvgRenderer(rootID) {
        //Internal Variables
        this.svgLink = 'http://www.w3.org/2000/svg';
        this.rootId = rootID;
    }
    // method to get the attributes value
    // tslint:disable-next-line:no-any
    SvgRenderer.prototype.getOptionValue = function (options, key) {
        return options[key];
    }; /* tslint:enable */
    /**
     * To create a Html5 SVG element
     *
     * @param {SVGAttributes} options - Options to create SVG
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createSvg = function (options) {
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(options.id)) {
            options.id = this.rootId + '_svg';
        }
        this.svgObj = document.getElementById(options.id);
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(document.getElementById(options.id))) {
            this.svgObj = document.createElementNS(this.svgLink, 'svg');
        }
        this.svgObj = this.setElementAttributes(options, this.svgObj);
        this.setSVGSize(options.width, options.height);
        return this.svgObj;
    };
    // method to set the height and width for the SVG element
    SvgRenderer.prototype.setSVGSize = function (width, height) {
        var element = document.getElementById(this.rootId);
        var size = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(element) ? element.getBoundingClientRect() : null;
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.width) || this.width <= 0) {
            this.svgObj.setAttribute('width', width ? width.toString() : size.width.toString());
        }
        else {
            this.svgObj.setAttribute('width', this.width.toString());
        }
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.height) || this.height <= 0) {
            this.svgObj.setAttribute('height', height ? height.toString() : '450');
        }
        else {
            this.svgObj.setAttribute('height', this.height.toString());
        }
    };
    /**
     * To draw a path
     *
     * @param {PathAttributes} options - Options to draw a path in SVG
     * @returns {Element} It returns a appropriate path
     */
    SvgRenderer.prototype.drawPath = function (options) {
        var path = document.getElementById(options.id);
        if (path === null) {
            path = document.createElementNS(this.svgLink, 'path');
        }
        path = this.setElementAttributes(options, path);
        return path;
    };
    /**
     * To draw a line
     *
     * @param {LineAttributes} options - Options to draw a line in SVG
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawLine = function (options) {
        var line = document.getElementById(options.id);
        if (line === null) {
            line = document.createElementNS(this.svgLink, 'line');
        }
        line = this.setElementAttributes(options, line);
        return line;
    };
    /**
     * To draw a rectangle
     *
     * @param {BaseAttibutes} options - Required options to draw a rectangle in SVG
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawRectangle = function (options) {
        var rectangle = document.getElementById(options.id);
        if (rectangle === null) {
            rectangle = document.createElementNS(this.svgLink, 'rect');
        }
        rectangle = this.setElementAttributes(options, rectangle);
        return rectangle;
    };
    /**
     * To draw a circle
     *
     * @param {CircleAttributes} options - Required options to draw a circle in SVG
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawCircle = function (options) {
        var circle = document.getElementById(options.id);
        if (circle === null) {
            circle = document.createElementNS(this.svgLink, 'circle');
        }
        circle = this.setElementAttributes(options, circle);
        return circle;
    };
    /**
     * To draw a polyline
     *
     * @param {PolylineAttributes} options - Options required to draw a polyline
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawPolyline = function (options) {
        var polyline = document.getElementById(options.id);
        if (polyline === null) {
            polyline = document.createElementNS(this.svgLink, 'polyline');
        }
        polyline = this.setElementAttributes(options, polyline);
        return polyline;
    };
    /**
     * To draw an ellipse
     *
     * @param {EllipseAttributes} options - Options required to draw an ellipse
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawEllipse = function (options) {
        var ellipse = document.getElementById(options.id);
        if (ellipse === null) {
            ellipse = document.createElementNS(this.svgLink, 'ellipse');
        }
        ellipse = this.setElementAttributes(options, ellipse);
        return ellipse;
    };
    /**
     * To draw a polygon
     *
     * @param {PolylineAttributes} options - Options needed to draw a polygon in SVG
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawPolygon = function (options) {
        var polygon = document.getElementById(options.id);
        if (polygon === null) {
            polygon = document.createElementNS(this.svgLink, 'polygon');
        }
        polygon = this.setElementAttributes(options, polygon);
        return polygon;
    };
    /**
     * To draw an image
     *
     * @param {ImageAttributes} options - Required options to draw an image in SVG
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawImage = function (options) {
        var img = document.createElementNS(this.svgLink, 'image');
        img.setAttributeNS(null, 'height', options.height.toString());
        img.setAttributeNS(null, 'width', options.width.toString());
        img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', options.href);
        img.setAttributeNS(null, 'x', options.x.toString());
        img.setAttributeNS(null, 'y', options.y.toString());
        img.setAttributeNS(null, 'id', options.id);
        img.setAttributeNS(null, 'visibility', options.visibility);
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.getOptionValue(options, 'clip-path'))) {
            img.setAttributeNS(null, 'clip-path', this.getOptionValue(options, 'clip-path'));
        }
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(options.preserveAspectRatio)) {
            img.setAttributeNS(null, 'preserveAspectRatio', options.preserveAspectRatio);
        }
        return img;
    };
    /**
     * To draw a text
     *
     * @param {TextAttributes} options - Options needed to draw a text in SVG
     * @param {string} label - Label of the text
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createText = function (options, label) {
        var text = document.createElementNS(this.svgLink, 'text');
        text = this.setElementAttributes(options, text);
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(label)) {
            text.textContent = label;
        }
        return text;
    };
    /**
     * To create a tSpan
     *
     * @param {TextAttributes} options - Options to create tSpan
     * @param {string} label - The text content which is to be rendered in the tSpan
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createTSpan = function (options, label) {
        var tSpan = document.createElementNS(this.svgLink, 'tspan');
        tSpan = this.setElementAttributes(options, tSpan);
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(label)) {
            tSpan.textContent = label;
        }
        return tSpan;
    };
    /**
     * To create a title
     *
     * @param {string} text - The text content which is to be rendered in the title
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createTitle = function (text) {
        var title = document.createElementNS(this.svgLink, 'title');
        title.textContent = text;
        return title;
    };
    /**
     * To create defs element in SVG
     *
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createDefs = function () {
        var defs = document.createElementNS(this.svgLink, 'defs');
        return defs;
    };
    /**
     * To create clip path in SVG
     *
     * @param {BaseAttibutes} options - Options needed to create clip path
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createClipPath = function (options) {
        var clipPath = document.createElementNS(this.svgLink, 'clipPath');
        clipPath = this.setElementAttributes(options, clipPath);
        return clipPath;
    };
    /**
     * To create foreign object in SVG
     *
     * @param {BaseAttibutes} options - Options needed to create foreign object
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createForeignObject = function (options) {
        var foreignObject = document.createElementNS(this.svgLink, 'foreignObject');
        foreignObject = this.setElementAttributes(options, foreignObject);
        return foreignObject;
    };
    /**
     * To create group element in SVG
     *
     * @param {BaseAttibutes} options - Options needed to create group
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createGroup = function (options) {
        var group = document.createElementNS(this.svgLink, 'g');
        group = this.setElementAttributes(options, group);
        return group;
    };
    /**
     * To create pattern in SVG
     *
     * @param {PatternAttributes} options - Required options to create pattern in SVG
     * @param {string} element - Specifies the name of the pattern
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.createPattern = function (options, element) {
        var pattern = document.createElementNS(this.svgLink, element);
        pattern = this.setElementAttributes(options, pattern);
        return pattern;
    };
    /**
     * To create radial gradient in SVG
     *
     * @param {string[]} colors - Specifies the colors required to create radial gradient
     * @param {string} name - Specifies the name of the gradient
     * @param {RadialGradient} options - value for radial gradient
     * @returns {string} It returns color name
     */
    SvgRenderer.prototype.createRadialGradient = function (colors, name, options) {
        var colorName;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(colors[0].colorStop)) {
            var newOptions = {
                'id': this.rootId + '_' + name + 'radialGradient',
                'cx': options.cx + '%',
                'cy': options.cy + '%',
                'r': options.r + '%',
                'fx': options.fx + '%',
                'fy': options.fy + '%'
            };
            this.drawGradient('radialGradient', newOptions, colors);
            colorName = 'url(#' + this.rootId + '_' + name + 'radialGradient)';
        }
        else {
            colorName = colors[0].color.toString();
        }
        return colorName;
    };
    /**
     * To create linear gradient in SVG
     *
     * @param {GradientColor[]} colors - Array of string specifies the values for color
     * @param {string} name - Specifies the name of the gradient
     * @param {LinearGradient} options - Specifies the options for gradient
     * @returns {string} It returns color name
     */
    SvgRenderer.prototype.createLinearGradient = function (colors, name, options) {
        var colorName;
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(colors[0].colorStop)) {
            var newOptions = {
                'id': this.rootId + '_' + name + 'linearGradient',
                'x1': options.x1 + '%',
                'y1': options.y1 + '%',
                'x2': options.x2 + '%',
                'y2': options.y2 + '%'
            };
            this.drawGradient('linearGradient', newOptions, colors);
            colorName = 'url(#' + this.rootId + '_' + name + 'linearGradient)';
        }
        else {
            colorName = colors[0].color.toString();
        }
        return colorName;
    };
    /**
     * To render the gradient element in SVG
     *
     * @param {string} gradientType - Specifies the type of the gradient
     * @param {RadialGradient | LinearGradient} options - Options required to render a gradient
     * @param {string[]} colors - Array of string specifies the values for color
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawGradient = function (gradientType, options, colors) {
        var defs = this.createDefs();
        var gradient = document.createElementNS(this.svgLink, gradientType);
        gradient = this.setElementAttributes(options, gradient);
        for (var i = 0; i < colors.length; i++) {
            var stop_1 = document.createElementNS(this.svgLink, 'stop');
            stop_1.setAttribute('offset', colors[i].colorStop);
            stop_1.setAttribute('stop-color', colors[i].color);
            stop_1.setAttribute('stop-opacity', colors[i].opacity ? (colors[i].opacity) : '1');
            if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(colors[i].style)) {
                stop_1.style.cssText = colors[i].style;
            }
            gradient.appendChild(stop_1);
        }
        defs.appendChild(gradient);
        return defs;
    };
    /**
     * To render a clip path
     *
     * @param {BaseAttibutes} options - Options required to render a clip path
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawClipPath = function (options) {
        var defs = this.createDefs();
        var clipPath = this.createClipPath({ 'id': options.id });
        options.id = options.id + '_Rect';
        var rect = this.drawRectangle(options);
        clipPath.appendChild(rect);
        defs.appendChild(clipPath);
        return defs;
    };
    /**
     * To create circular clip path in SVG
     *
     * @param {CircleAttributes} options - Options required to create circular clip path
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.drawCircularClipPath = function (options) {
        var defs = this.createDefs();
        var clipPath = this.createClipPath({ 'id': options.id });
        options.id = options.id + '_Circle';
        var circle = this.drawCircle(options);
        clipPath.appendChild(circle);
        defs.appendChild(clipPath);
        return defs;
    };
    /**
     * To set the attributes to the element
     *
     * @param {SVGCanvasAttributes} options - Attributes to set for the element
     * @param {Element} element - The element to which the attributes need to be set
     * @returns {Element} It returns a appropriate element
     */
    SvgRenderer.prototype.setElementAttributes = function (options, element) {
        var keys = Object.keys(options);
        for (var i = 0; i < keys.length; i++) {
            if (keys[i] === 'style') {
                element.style.cssText = options[keys[i]];
            }
            else {
                element.setAttribute(keys[i], options[keys[i]]);
            }
        }
        return element;
    };
    /**
     * To create a Html5 canvas element
     * Dummy method for using canvas/svg render in the same variable name in chart control
     */
    SvgRenderer.prototype.createCanvas = function () {
        return null;
    };
    return SvgRenderer;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/helper.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/helper.js ***!
  \************************************************************************************************************************/
/*! exports provided: measureText, findDirection, Size, Rect, Side, CustomizeOption, TextOption, getElement, removeElement, drawSymbol, calculateShapes, PathOption, textElement, TooltipLocation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return measureText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findDirection", function() { return findDirection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return Size; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return Rect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Side", function() { return Side; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return CustomizeOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return TextOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return getElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return removeElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drawSymbol", function() { return drawSymbol; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return calculateShapes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return PathOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return textElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipLocation", function() { return TooltipLocation; });
/* harmony import */ var _svg_render_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../svg-render/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/index.js");
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/**
 * Function to measure the height and width of the text.
 *
 * @private
 * @param {string} text To get a text
 * @param {FontModel} font To get a font of the text
 * @returns {Size} measureText
 */
function measureText(text, font) {
    var breakText = text || ''; // For avoid NuLL value
    var htmlObject = document.getElementById('chartmeasuretext');
    if (htmlObject === null) {
        htmlObject = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["createElement"])('text', { id: 'chartmeasuretext' });
        document.body.appendChild(htmlObject);
    }
    if (typeof (text) === 'string' && (text.indexOf('<') > -1 || text.indexOf('>') > -1)) {
        var textArray = text.split(' ');
        for (var i = 0; i < textArray.length; i++) {
            if (textArray[i].indexOf('<br/>') === -1) {
                textArray[i] = textArray[i].replace(/[<>]/g, '&');
            }
        }
        text = textArray.join(' ');
    }
    htmlObject.innerHTML = (breakText.indexOf('<br>') > -1 || breakText.indexOf('<br/>') > -1) ? breakText : text;
    htmlObject.style.position = 'fixed';
    htmlObject.style.fontSize = font.size;
    htmlObject.style.fontWeight = font.fontWeight;
    htmlObject.style.fontStyle = font.fontStyle;
    htmlObject.style.fontFamily = font.fontFamily;
    htmlObject.style.visibility = 'hidden';
    htmlObject.style.top = '-100';
    htmlObject.style.left = '0';
    htmlObject.style.whiteSpace = 'nowrap';
    // For bootstrap line height issue
    htmlObject.style.lineHeight = 'normal';
    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);
}
/** @private */
function findDirection(rX, rY, rect, arrowLocation, arrowPadding, top, bottom, left, tipX, tipY, tipRadius) {
    var direction = '';
    var startX = rect.x;
    var startY = rect.y;
    var width = rect.x + rect.width;
    var height = rect.y + rect.height;
    tipRadius = tipRadius ? tipRadius : 0;
    if (top) {
        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '
            + startY + ' ' + (startX + rX) + ' ' + startY + ' ' +
            ' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + width + ' '
            + startY + ' ' + (width) + ' ' + (startY + rY));
        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' '
            + (height) + ' ' + (width - rX) + ' ' + (height));
        if (arrowPadding !== 0) {
            direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (height));
            direction = direction.concat(' L' + ' ' + (tipX + tipRadius) + ' ' + (height + arrowPadding - tipRadius));
            direction += ' Q' + ' ' + (tipX) + ' ' + (height + arrowPadding) + ' ' + (tipX - tipRadius) +
                ' ' + (height + arrowPadding - tipRadius);
        }
        if ((arrowLocation.x - arrowPadding / 2) > startX) {
            direction = direction.concat(' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + height +
                ' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '
                + height + ' ' + (startX) + ' ' + (height - rY) + ' z');
        }
        else {
            if (arrowPadding === 0) {
                direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + height + ' Q ' + startX + ' '
                    + height + ' ' + (startX) + ' ' + (height - rY) + ' z');
            }
            else {
                direction = direction.concat(' L' + ' ' + (startX) + ' ' + (height + rY) + ' z');
            }
        }
    }
    else if (bottom) {
        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '
            + (startY) + ' ' + (startX + rX) + ' ' + (startY) + ' L' + ' ' + (arrowLocation.x - arrowPadding / 2) + ' ' + (startY));
        direction = direction.concat(' L' + ' ' + (tipX - tipRadius) + ' ' + (arrowLocation.y + tipRadius));
        direction += ' Q' + ' ' + (tipX) + ' ' + (arrowLocation.y) + ' ' + (tipX + tipRadius) + ' ' + (arrowLocation.y + tipRadius);
        direction = direction.concat(' L' + ' ' + (arrowLocation.x + arrowPadding / 2) + ' ' + (startY) + ' L' + ' '
            + (width - rX) + ' ' + (startY) + ' Q ' + (width) + ' ' + (startY) + ' ' + (width) + ' ' + (startY + rY));
        direction = direction.concat(' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + (width) + ' '
            + (height) + ' ' + (width - rX) + ' ' + (height) +
            ' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + (startX) + ' '
            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');
    }
    else if (left) {
        direction = direction.concat('M' + ' ' + (startX) + ' ' + (startY + rY) + ' Q ' + startX + ' '
            + (startY) + ' ' + (startX + rX) + ' ' + (startY));
        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (startY) + ' Q ' + (width) + ' '
            + (startY) + ' ' + (width) + ' ' + (startY + rY) + ' L' + ' ' + (width) + ' ' + (arrowLocation.y - arrowPadding / 2));
        direction = direction.concat(' L' + ' ' + (width + arrowPadding - tipRadius) + ' ' + (tipY - tipRadius));
        direction += ' Q ' + (width + arrowPadding) + ' ' + (tipY) + ' ' + (width + arrowPadding - tipRadius) + ' ' + (tipY + tipRadius);
        direction = direction.concat(' L' + ' ' + (width) + ' ' + (arrowLocation.y + arrowPadding / 2) +
            ' L' + ' ' + (width) + ' ' + (height - rY) + ' Q ' + width + ' ' + (height) + ' ' + (width - rX) + ' ' + (height));
        direction = direction.concat(' L' + ' ' + (startX + rX) + ' ' + (height) + ' Q ' + startX + ' '
            + (height) + ' ' + (startX) + ' ' + (height - rY) + ' z');
    }
    else {
        direction = direction.concat('M' + ' ' + (startX + rX) + ' ' + (startY) + ' Q ' + (startX) + ' '
            + (startY) + ' ' + (startX) + ' ' + (startY + rY) + ' L' + ' ' + (startX) + ' ' + (arrowLocation.y - arrowPadding / 2));
        direction = direction.concat(' L' + ' ' + (startX - arrowPadding + tipRadius) + ' ' + (tipY - tipRadius));
        direction += ' Q ' + (startX - arrowPadding) + ' ' + (tipY) + ' ' + (startX - arrowPadding + tipRadius) + ' ' + (tipY + tipRadius);
        direction = direction.concat(' L' + ' ' + (startX) + ' ' + (arrowLocation.y + arrowPadding / 2) +
            ' L' + ' ' + (startX) + ' ' + (height - rY) + ' Q ' + startX + ' '
            + (height) + ' ' + (startX + rX) + ' ' + (height));
        direction = direction.concat(' L' + ' ' + (width - rX) + ' ' + (height) + ' Q ' + width + ' '
            + (height) + ' ' + (width) + ' ' + (height - rY) +
            ' L' + ' ' + (width) + ' ' + (startY + rY) + ' Q ' + width + ' '
            + (startY) + ' ' + (width - rX) + ' ' + (startY) + ' z');
    }
    return direction;
}
/** @private */
var Size = /** @class */ (function () {
    function Size(width, height) {
        this.width = width;
        this.height = height;
    }
    return Size;
}());

/** @private */
var Rect = /** @class */ (function () {
    function Rect(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }
    return Rect;
}());

var Side = /** @class */ (function () {
    function Side(bottom, right) {
        this.isRight = right;
        this.isBottom = bottom;
    }
    return Side;
}());

/** @private */
var CustomizeOption = /** @class */ (function () {
    function CustomizeOption(id) {
        this.id = id;
    }
    return CustomizeOption;
}());

/** @private */
var TextOption = /** @class */ (function (_super) {
    __extends(TextOption, _super);
    function TextOption(id, x, y, anchor, text, transform, baseLine, labelRotation) {
        if (transform === void 0) { transform = ''; }
        var _this = _super.call(this, id) || this;
        _this.transform = '';
        _this.baseLine = 'auto';
        _this.labelRotation = 0;
        _this.x = x;
        _this.y = y;
        _this.anchor = anchor;
        _this.text = text;
        _this.transform = transform;
        _this.baseLine = baseLine;
        _this.labelRotation = labelRotation;
        return _this;
    }
    return TextOption;
}(CustomizeOption));

/** @private */
function getElement(id) {
    return document.getElementById(id);
}
/** @private */
function removeElement(id) {
    var element = getElement(id);
    if (element) {
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["remove"])(element);
    }
}
/** @private */
function drawSymbol(location, shape, size, url, options, label) {
    var renderer = new _svg_render_index__WEBPACK_IMPORTED_MODULE_0__["SvgRenderer"]('');
    var temp = calculateShapes(location, size, shape, options, url);
    var htmlObject = renderer['draw' + temp.functionName](temp.renderOption);
    htmlObject.setAttribute('aria-label', label);
    return htmlObject;
}
/** @private */
function calculateShapes(location, size, shape, options, url) {
    var path;
    var functionName = 'Path';
    var width = size.width;
    var height = size.height;
    var locX = location.x;
    var locY = location.y;
    var x = location.x + (-width / 2);
    var y = location.y + (-height / 2);
    switch (shape) {
        case 'Circle':
        case 'Bubble':
            functionName = 'Ellipse';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });
            break;
        case 'Cross':
            path = 'M' + ' ' + x + ' ' + locY + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +
                'M' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + locX + ' ' +
                (locY + (-height / 2));
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'HorizontalLine':
            path = 'M' + ' ' + x + ' ' + locY + ' ' + 'L' + ' ' + (locX + (width / 2)) + ' ' + locY;
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'VerticalLine':
            path = 'M' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' + locX + ' ' + (locY + (-height / 2));
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'Diamond':
            path = 'M' + ' ' + x + ' ' + locY + ' ' +
                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +
                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + x + ' ' + locY + ' z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'Rectangle':
            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'Triangle':
            path = 'M' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'InvertedTriangle':
            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +
                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +
                'L' + ' ' + (locX - (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +
                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' z';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'Pentagon':
            var eq = 72;
            var xValue = void 0;
            var yValue = void 0;
            for (var i = 0; i <= 5; i++) {
                xValue = (width / 2) * Math.cos((Math.PI / 180) * (i * eq));
                yValue = (height / 2) * Math.sin((Math.PI / 180) * (i * eq));
                if (i === 0) {
                    path = 'M' + ' ' + (locX + xValue) + ' ' + (locY + yValue) + ' ';
                }
                else {
                    path = path.concat('L' + ' ' + (locX + xValue) + ' ' + (locY + yValue) + ' ');
                }
            }
            path = path.concat('Z');
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'd': path });
            break;
        case 'Image':
            functionName = 'Image';
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_1__["merge"])(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });
            break;
    }
    return { renderOption: options, functionName: functionName };
}
/** @private */
var PathOption = /** @class */ (function (_super) {
    __extends(PathOption, _super);
    function PathOption(id, fill, width, color, opacity, dashArray, d) {
        var _this = _super.call(this, id) || this;
        _this.opacity = opacity;
        _this.fill = fill;
        _this.stroke = color;
        _this['stroke-width'] = width;
        _this['stroke-dasharray'] = dashArray;
        _this.d = d;
        return _this;
    }
    return PathOption;
}(CustomizeOption));

/** @private */
function textElement(options, font, color, parent) {
    var renderOptions = {};
    var renderer = new _svg_render_index__WEBPACK_IMPORTED_MODULE_0__["SvgRenderer"]('');
    renderOptions = {
        'id': options.id,
        'x': options.x,
        'y': options.y,
        'fill': color,
        'font-size': font.size,
        'font-style': font.fontStyle,
        'font-family': font.fontFamily,
        'font-weight': font.fontWeight,
        'text-anchor': options.anchor,
        'transform': options.transform,
        'opacity': font.opacity,
        'dominant-baseline': options.baseLine
    };
    var text = typeof options.text === 'string' ? options.text : options.text[0];
    var htmlObject = renderer.createText(renderOptions, text);
    htmlObject.style.fontFamily = font.fontFamily;
    htmlObject.style.fontStyle = font.fontStyle;
    htmlObject.style.fontSize = font.size;
    htmlObject.style.fontWeight = font.fontWeight;
    htmlObject.style.color = font.color;
    parent.appendChild(htmlObject);
    return htmlObject;
}
var TooltipLocation = /** @class */ (function () {
    function TooltipLocation(x, y) {
        this.x = x;
        this.y = y;
    }
    return TooltipLocation;
}());



/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/index.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/index.js ***!
  \***********************************************************************************************************************/
/*! exports provided: TextStyle, TooltipBorder, AreaBounds, ToolLocation, Tooltip, getTooltipThemeColor, measureText, findDirection, Size, Rect, Side, CustomizeOption, TextOption, getElement, removeElement, drawSymbol, calculateShapes, PathOption, textElement, TooltipLocation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tooltip */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/tooltip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextStyle", function() { return _tooltip__WEBPACK_IMPORTED_MODULE_0__["TextStyle"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipBorder", function() { return _tooltip__WEBPACK_IMPORTED_MODULE_0__["TooltipBorder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AreaBounds", function() { return _tooltip__WEBPACK_IMPORTED_MODULE_0__["AreaBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToolLocation", function() { return _tooltip__WEBPACK_IMPORTED_MODULE_0__["ToolLocation"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return _tooltip__WEBPACK_IMPORTED_MODULE_0__["Tooltip"]; });

/* harmony import */ var _interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interface */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/interface.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getTooltipThemeColor", function() { return _interface__WEBPACK_IMPORTED_MODULE_1__["getTooltipThemeColor"]; });

/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helper */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/helper.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measureText", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["measureText"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "findDirection", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["findDirection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Size", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["Size"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Rect", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["Rect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Side", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["Side"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CustomizeOption", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["CustomizeOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TextOption", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["TextOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getElement", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["getElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeElement", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["removeElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "drawSymbol", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["drawSymbol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "calculateShapes", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["calculateShapes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PathOption", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["PathOption"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "textElement", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["textElement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TooltipLocation", function() { return _helper__WEBPACK_IMPORTED_MODULE_2__["TooltipLocation"]; });

/**
 * Chart component exported items
 */





/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/interface.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/interface.js ***!
  \***************************************************************************************************************************/
/*! exports provided: getTooltipThemeColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTooltipThemeColor", function() { return getTooltipThemeColor; });
/** @private */
function getTooltipThemeColor(theme) {
    var style;
    switch (theme) {
        case 'Highcontrast':
        case 'HighContrast':
            style = {
                tooltipFill: '#ffffff',
                tooltipBoldLabel: '#000000',
                tooltipLightLabel: '#000000',
                tooltipHeaderLine: '#969696'
            };
            break;
        case 'MaterialDark':
        case 'FabricDark':
        case 'BootstrapDark':
            style = {
                tooltipFill: '#F4F4F4',
                tooltipBoldLabel: '#282727',
                tooltipLightLabel: '#333232',
                tooltipHeaderLine: '#9A9A9A'
            };
            break;
        case 'Bootstrap4':
            style = {
                tooltipFill: 'rgba(0, 0, 0, 0.9)',
                tooltipBoldLabel: 'rgba(255, 255, 255)',
                tooltipLightLabel: 'rgba(255, 255, 255, 0.9)',
                tooltipHeaderLine: 'rgba(255, 255, 255, 0.2)'
            };
            break;
        case 'Tailwind':
            style = {
                tooltipFill: '#111827',
                tooltipBoldLabel: '#D1D5DB',
                tooltipLightLabel: '#F9FAFB',
                tooltipHeaderLine: '#6B7280',
            };
            break;
        case 'TailwindDark':
            style = {
                tooltipFill: '#F9FAFB',
                tooltipBoldLabel: '#6B7280',
                tooltipLightLabel: '#1F2937',
                tooltipHeaderLine: '#9CA3AF',
            };
            break;
        case 'Bootstrap5':
            style = {
                tooltipFill: '#212529',
                tooltipBoldLabel: '#F9FAFB',
                tooltipLightLabel: '#F9FAFB',
                tooltipHeaderLine: '#9CA3AF',
            };
            break;
        case 'Bootstrap5Dark':
            style = {
                tooltipFill: '#E9ECEF',
                tooltipBoldLabel: '#212529',
                tooltipLightLabel: '#212529',
                tooltipHeaderLine: '#ADB5BD',
            };
            break;
        // case 'Fluent':
        //     style = {
        //         tooltipFill: '#FFFFFF',
        //         tooltipBoldLabel: '#323130',
        //         tooltipLightLabel: '#323130',
        //         tooltipHeaderLine: '#D2D0CE',
        //     };
        //     break;
        // case 'FluentDark':
        //     style = {
        //         tooltipFill: '#252423',
        //         tooltipBoldLabel: '#F3F2F1',
        //         tooltipLightLabel: '#F3F2F1',
        //         tooltipHeaderLine: '#3B3A39',
        //     };
        //     break;
        default:
            style = {
                tooltipFill: 'rgba(0, 8, 22, 0.75)',
                tooltipBoldLabel: '#ffffff',
                tooltipLightLabel: '#dbdbdb',
                tooltipHeaderLine: '#ffffff'
            };
            break;
    }
    return style;
}


/***/ }),

/***/ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/tooltip.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/tooltip.js ***!
  \*************************************************************************************************************************/
/*! exports provided: TextStyle, TooltipBorder, AreaBounds, ToolLocation, Tooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextStyle", function() { return TextStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipBorder", function() { return TooltipBorder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AreaBounds", function() { return AreaBounds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToolLocation", function() { return ToolLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tooltip", function() { return Tooltip; });
/* harmony import */ var _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @syncfusion/ej2-base */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-base/index.js");
/* harmony import */ var _svg_render_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg-render/index */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/svg-render/index.js");
/* harmony import */ var _interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/interface.js");
/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helper */ "./node_modules/@syncfusion/ej2-angular-circulargauge/node_modules/@syncfusion/ej2-svg-base/src/tooltip/helper.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/* eslint-disable @typescript-eslint/ban-types */
/* eslint-disable jsdoc/require-param */
/* eslint-disable jsdoc/require-returns */
/* eslint-disable valid-jsdoc */







/**
 * Configures the fonts in charts.
 *
 * @private
 */
var TextStyle = /** @class */ (function (_super) {
    __extends(TextStyle, _super);
    function TextStyle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], TextStyle.prototype, "size", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], TextStyle.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Segoe UI')
    ], TextStyle.prototype, "fontFamily", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Normal')
    ], TextStyle.prototype, "fontWeight", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Normal')
    ], TextStyle.prototype, "fontStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1)
    ], TextStyle.prototype, "opacity", void 0);
    return TextStyle;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Configures the borders in the chart.
 *
 * @private
 */
var TooltipBorder = /** @class */ (function (_super) {
    __extends(TooltipBorder, _super);
    function TooltipBorder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], TooltipBorder.prototype, "color", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(1)
    ], TooltipBorder.prototype, "width", void 0);
    return TooltipBorder;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Configures the borders in the chart.
 *
 * @private
 */
var AreaBounds = /** @class */ (function (_super) {
    __extends(AreaBounds, _super);
    function AreaBounds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], AreaBounds.prototype, "x", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], AreaBounds.prototype, "y", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], AreaBounds.prototype, "width", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], AreaBounds.prototype, "height", void 0);
    return AreaBounds;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Configures the borders in the chart.
 *
 * @private
 */
var ToolLocation = /** @class */ (function (_super) {
    __extends(ToolLocation, _super);
    function ToolLocation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], ToolLocation.prototype, "x", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], ToolLocation.prototype, "y", void 0);
    return ToolLocation;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["ChildProperty"]));

/**
 * Represents the Tooltip control.
 * ```html
 * <div id="tooltip"/>
 * <script>
 *   var tooltipObj = new Tooltip({ isResponsive : true });
 *   tooltipObj.appendTo("#tooltip");
 * </script>
 * ```
 *
 * @private
 */
var Tooltip = /** @class */ (function (_super) {
    __extends(Tooltip, _super);
    /**
     * Constructor for creating the widget
     *
     * @hidden
     */
    function Tooltip(options, element) {
        return _super.call(this, options, element) || this;
    }
    /**
     * Initialize the event handler.
     *
     * @private
     */
    Tooltip.prototype.preRender = function () {
        this.allowServerDataBinding = false;
        this.initPrivateVariable();
        if (!this.isCanvas) {
            this.removeSVG();
        }
        this.createTooltipElement();
    };
    Tooltip.prototype.initPrivateVariable = function () {
        this.renderer = new _svg_render_index__WEBPACK_IMPORTED_MODULE_1__["SvgRenderer"](this.element.id);
        this.themeStyle = Object(_interface__WEBPACK_IMPORTED_MODULE_2__["getTooltipThemeColor"])(this.theme);
        this.formattedText = [];
        this.padding = 5;
        this.isFirst = true;
        this.markerPoint = [];
    };
    Tooltip.prototype.removeSVG = function () {
        var svgObject = document.getElementById(this.element.id + '_svg');
        var templateObject = document.getElementById(this.element.id + 'parent_template');
        if (this.blazorTemplate) {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["resetBlazorTemplate"])(this.element.id + 'parent_template' + '_blazorTemplate');
        }
        if (svgObject && svgObject.parentNode) {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["remove"])(svgObject);
        }
        if (templateObject && templateObject.parentNode) {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["remove"])(templateObject);
        }
    };
    /**
     * To Initialize the control rendering.
     */
    Tooltip.prototype.render = function () {
        this.fadeOuted = false;
        if (!this.template) {
            this.renderText(this.isFirst);
            var argsData = {
                cancel: false, name: 'tooltipRender', tooltip: this
            };
            this.trigger('tooltipRender', argsData);
            var markerSide = this.renderTooltipElement(this.areaBounds, this.location);
            this.drawMarker(markerSide.isBottom, markerSide.isRight, this.markerSize);
        }
        else {
            this.updateTemplateFn();
            this.createTemplate(this.areaBounds, this.location);
        }
        this.trigger('loaded', { tooltip: this });
        var element = document.getElementById('chartmeasuretext');
        if (element) {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["remove"])(element);
        }
        this.allowServerDataBinding = true;
    };
    Tooltip.prototype.createTooltipElement = function () {
        this.textElements = [];
        if (!this.template || this.shared) {
            // SVG element for tooltip
            if (this.enableRTL) {
                this.element.setAttribute('dir', 'ltr');
            }
            var svgObject = this.renderer.createSvg({ id: this.element.id + '_svg' });
            this.element.appendChild(svgObject);
            // Group to hold text and path.
            var groupElement = document.getElementById(this.element.id + '_group');
            if (!groupElement) {
                groupElement = this.renderer.createGroup({ id: this.element.id + '_group' });
                groupElement.setAttribute('transform', 'translate(0,0)');
            }
            svgObject.appendChild(groupElement);
            var pathElement = this.renderer.drawPath({
                'id': this.element.id + '_path', 'stroke-width': this.border.width,
                'fill': this.fill || this.themeStyle.tooltipFill, 'opacity': ((this.theme === 'TailwindDark' || this.theme === 'Tailwind' || this.theme === 'Bootstrap5' || this.theme === 'Bootstrap5Dark') && this.opacity === 0.75) ?
                    1 : this.opacity,
                'stroke': this.border.color
            });
            groupElement.appendChild(pathElement);
        }
    };
    Tooltip.prototype.drawMarker = function (isBottom, isRight, size) {
        if (this.shapes.length <= 0) {
            return null;
        }
        var shapeOption;
        var count = 0;
        var markerGroup = this.renderer.createGroup({ id: this.element.id + '_trackball_group' });
        var groupElement = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id + '_group');
        var x = ((this.enableRTL) ? this.elementSize.width - (size / 2) :
            (this.marginX * 2) + (size / 2)) + (isRight ? this.arrowPadding : 0);
        for (var _i = 0, _a = this.shapes; _i < _a.length; _i++) {
            var shape = _a[_i];
            if (shape !== 'None') {
                shapeOption = new _helper__WEBPACK_IMPORTED_MODULE_3__["PathOption"](this.element.id + '_Trackball_' + count, this.palette[count], 1, '#cccccc', 1, null);
                if (this.markerPoint[count]) {
                    markerGroup.appendChild(Object(_helper__WEBPACK_IMPORTED_MODULE_3__["drawSymbol"])(new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](x, this.markerPoint[count] - this.padding + (isBottom ? this.arrowPadding : 0)), shape, new _helper__WEBPACK_IMPORTED_MODULE_3__["Size"](size, size), '', shapeOption, null));
                }
                count++;
            }
        }
        groupElement.appendChild(markerGroup);
    };
    Tooltip.prototype.renderTooltipElement = function (areaBounds, location) {
        var tooltipDiv = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id);
        var arrowLocation = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](0, 0);
        var tipLocation = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](0, 0);
        var svgObject = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id + '_svg');
        var groupElement = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id + '_group');
        var pathElement = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id + '_path');
        var rect;
        var isTop = false;
        var isLeft = false;
        var isBottom = false;
        var x = 0;
        var y = 0;
        this.tipRadius = 1;
        if (this.header !== '') {
            this.elementSize.height += this.marginY;
        }
        if (this.content.length > 1) {
            rect = this.sharedTooltipLocation(areaBounds, this.location.x, this.location.y);
            isTop = true;
        }
        else {
            rect = this.tooltipLocation(areaBounds, location, arrowLocation, tipLocation);
            if (!this.inverted) {
                isTop = (rect.y < (location.y + this.clipBounds.y));
                isBottom = !isTop;
                y = (isTop ? 0 : this.arrowPadding);
            }
            else {
                isLeft = (rect.x < (location.x + this.clipBounds.x));
                x = (isLeft ? 0 : this.arrowPadding);
            }
        }
        if (this.header !== '') {
            var wrapPadding = 2;
            var wrapHeader = this.isWrap ? this.wrappedText : this.header;
            if (this.isWrap && typeof (wrapHeader) === 'string' && (wrapHeader.indexOf('<') > -1 || wrapHeader.indexOf('>') > -1)) {
                var textArray = wrapHeader.split('<br>');
                wrapPadding = textArray.length;
            }
            var headerSize = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["measureText"])(this.isWrap ? this.wrappedText : this.header, this.textStyle).height +
                (this.marginY * wrapPadding) + (isBottom ? this.arrowPadding : 0) + (this.isWrap ? 5 : 0); //header padding;
            var xLength = (this.marginX * 3) + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0);
            var direction = 'M ' + xLength + ' ' + headerSize +
                'L ' + (rect.width + (!isLeft && !isTop && !isBottom ? this.arrowPadding : 0) - (this.marginX * 2)) +
                ' ' + headerSize;
            var pathElement_1 = this.renderer.drawPath({
                'id': this.element.id + '_header_path', 'stroke-width': 1,
                'fill': null, 'opacity': 0.8, 'stroke': this.themeStyle.tooltipHeaderLine, 'd': direction
            });
            groupElement.appendChild(pathElement_1);
        }
        var start = this.border.width / 2;
        var pointRect = new _helper__WEBPACK_IMPORTED_MODULE_3__["Rect"](start + x, start + y, rect.width - start, rect.height - start);
        groupElement.setAttribute('opacity', '1');
        if (this.enableAnimation && !this.shared && !this.isFirst) {
            this.animateTooltipDiv(tooltipDiv, rect);
        }
        else {
            this.updateDiv(tooltipDiv, rect.x, rect.y);
        }
        // eslint-disable-next-line no-extra-boolean-cast
        svgObject.setAttribute('height', (rect.height + this.border.width + (!((!this.inverted)) ? 0 : this.arrowPadding) + 5).toString());
        svgObject.setAttribute('width', (rect.width + this.border.width + (((!this.inverted)) ? 0 : this.arrowPadding) + 5).toString());
        svgObject.setAttribute('opacity', '1');
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.tooltipPlacement)) {
            isTop = this.tooltipPlacement.indexOf('Top') > -1;
            isBottom = this.tooltipPlacement.indexOf('Bottom') > -1;
            isLeft = this.tooltipPlacement.indexOf('Left') > -1;
        }
        pathElement.setAttribute('d', Object(_helper__WEBPACK_IMPORTED_MODULE_3__["findDirection"])(this.rx, this.ry, pointRect, arrowLocation, this.arrowPadding, isTop, isBottom, isLeft, tipLocation.x, tipLocation.y, this.tipRadius));
        if (this.enableShadow && this.theme !== 'Bootstrap4') {
            // To fix next chart initial tooltip opacity issue in tab control
            var shadowId = this.element.id + '_shadow';
            if (this.theme === 'Tailwind' || this.theme === 'TailwindDark'
                || this.theme === 'Bootstrap5' || this.theme === 'Bootstrap5Dark') {
                pathElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');
            }
            else {
                pathElement.setAttribute('filter', _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Browser"].isIE ? '' : 'url(#' + shadowId + ')');
            }
            var shadow = '<filter id="' + shadowId + '" height="130%"><feGaussianBlur in="SourceAlpha" stdDeviation="3"/>';
            shadow += '<feOffset dx="3" dy="3" result="offsetblur"/><feComponentTransfer><feFuncA type="linear" slope="0.5"/>';
            shadow += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in="SourceGraphic"/></feMerge></filter>';
            var defElement = this.renderer.createDefs();
            defElement.setAttribute('id', this.element.id + 'SVG_tooltip_definition');
            groupElement.appendChild(defElement);
            defElement.innerHTML = shadow;
        }
        pathElement.setAttribute('stroke', this.border.color);
        this.changeText(new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](x, y), isBottom, !isLeft && !isTop && !isBottom);
        return new _helper__WEBPACK_IMPORTED_MODULE_3__["Side"](isBottom, !isLeft && !isTop && !isBottom);
    };
    Tooltip.prototype.changeText = function (point, isBottom, isRight) {
        var element = document.getElementById(this.element.id + '_text');
        if (isBottom) {
            element.setAttribute('transform', 'translate(0,' + this.arrowPadding + ')');
        }
        if (isRight) {
            element.setAttribute('transform', 'translate(' + this.arrowPadding + ' 0)');
        }
    };
    Tooltip.prototype.findFormattedText = function () {
        this.formattedText = [];
        if (this.header.replace(/<b>/g, '').replace(/<\/b>/g, '').trim() !== '') {
            this.formattedText = this.formattedText.concat(this.header);
        }
        this.formattedText = this.formattedText.concat(this.content);
    };
    // tslint:disable-next-line:max-func-body-length
    Tooltip.prototype.renderText = function (isRender) {
        var height = 0;
        var width = 0; // Padding for text;
        var subWidth = 0;
        var lines;
        var key = 'properties';
        var font = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["extend"])({}, this.textStyle, null, true)[key];
        var groupElement = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id + '_group');
        var tspanElement;
        var textCollection;
        var tspanStyle = '';
        var line;
        var tspanOption;
        this.findFormattedText();
        this.isWrap = false;
        var isRtlEnabled = document.body.getAttribute('dir') === 'rtl';
        var anchor = isRtlEnabled && !this.enableRTL ? 'end' : 'start';
        this.leftSpace = this.areaBounds.x + this.location.x;
        this.rightSpace = (this.areaBounds.x + this.areaBounds.width) - this.leftSpace;
        var headerContent = this.header.replace(/<b>/g, '').replace(/<\/b>/g, '').trim();
        var isBoldTag = this.header.indexOf('<b>') > -1 && this.header.indexOf('</b>') > -1;
        var headerWidth = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["measureText"])(this.formattedText[0], font).width + (2 * this.marginX) + this.arrowPadding;
        var isLeftSpace = (this.location.x - headerWidth) < this.location.x;
        var isRightSpace = (this.areaBounds.x + this.areaBounds.width) < (this.location.x + headerWidth);
        var header;
        var headerSpace = (headerContent !== '') ? this.marginY : 0;
        var isRow = true;
        var isColumn = true;
        this.markerPoint = [];
        var markerSize = (this.shapes.length > 0) ? 10 : 0;
        var markerPadding = (this.shapes.length > 0) ? 5 : 0;
        var spaceWidth = 4;
        var subStringLength;
        var fontSize = '13px';
        var fontWeight = 'Normal';
        var labelColor = this.themeStyle.tooltipLightLabel;
        var dy = (22 / parseFloat(fontSize)) * (parseFloat(font.size));
        var contentWidth = [];
        if (!isRender || this.isCanvas) {
            Object(_helper__WEBPACK_IMPORTED_MODULE_3__["removeElement"])(this.element.id + '_text');
            Object(_helper__WEBPACK_IMPORTED_MODULE_3__["removeElement"])(this.element.id + '_header_path');
            Object(_helper__WEBPACK_IMPORTED_MODULE_3__["removeElement"])(this.element.id + '_trackball_group');
            Object(_helper__WEBPACK_IMPORTED_MODULE_3__["removeElement"])(this.element.id + 'SVG_tooltip_definition');
        }
        var options = new _helper__WEBPACK_IMPORTED_MODULE_3__["TextOption"](this.element.id + '_text', this.marginX * 2, (this.marginY * 2 + this.padding * 2 + (this.marginY === 2 ? 3 : 0)), anchor, '');
        var parentElement = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["textElement"])(options, font, null, groupElement);
        var withoutHeader = this.formattedText.length === 1 && this.formattedText[0].indexOf(' : <b>') > -1;
        var isHeader = this.header !== '';
        var size = isHeader && isBoldTag ? 16 : 13;
        for (var k = 0, pointsLength = this.formattedText.length; k < pointsLength; k++) {
            textCollection = this.formattedText[k].replace(/<(b|strong)>/g, '<b>')
                .replace(/<\/(b|strong)>/g, '</b>')
                .split(/<br.*?>/g);
            if (k === 0 && !withoutHeader && this.isTextWrap &&
                (this.leftSpace < headerWidth || isLeftSpace) &&
                (this.rightSpace < headerWidth || isRightSpace)) {
                subStringLength = Math.round(this.leftSpace > this.rightSpace ? (this.leftSpace / size) : (this.rightSpace / size));
                header = headerContent !== '' ? headerContent : this.formattedText[k];
                textCollection = header.match(new RegExp('.{1,' + subStringLength + '}', 'g'));
                this.wrappedText = isBoldTag ? '<b>' + textCollection.join('<br>') + '</b>' : textCollection.join('<br>');
                this.isWrap = textCollection.length > 1;
            }
            if (textCollection[0] === '') {
                continue;
            }
            if ((k !== 0) || (headerContent === '')) {
                this.markerPoint.push((headerContent !== '' ? (this.marginY) : 0) + options.y + height);
            }
            for (var i = 0, len = textCollection.length; i < len; i++) { // string value of unicode for LTR is \u200E
                lines = textCollection[i].replace(/<b>/g, '<br><b>').replace(/<\/b>/g, '</b><br>').replace(/:/g, (this.enableRTL) ? '<br>\u200E: <br>' : '<br>\u200E:<br>')
                    .split('<br>');
                if (this.enableRTL && lines.length > 0 && textCollection[i].match(/:/g)) {
                    lines[0] = lines[0].trim();
                    lines.reverse();
                }
                subWidth = 0;
                isColumn = true;
                height += dy;
                for (var j = 0, len_1 = lines.length; j < len_1; j++) {
                    line = lines[j];
                    if (this.enableRTL && line !== '' && this.isRTLText(line)) {
                        line = line.concat('\u200E');
                    }
                    if (!/\S/.test(line) && line !== '') {
                        line = ' '; //to trim multiple white spaces to single white space
                    }
                    if ((!isColumn && line === ' ') || (line.replace(/<b>/g, '').replace(/<\/b>/g, '').trim() !== '')) {
                        subWidth += line !== ' ' ? spaceWidth : 0;
                        if (isColumn && !isRow) {
                            tspanOption = {
                                x: (this.marginX * 2) + (markerSize + markerPadding),
                                dy: dy + ((isColumn) ? headerSpace : 0), fill: ''
                            };
                            headerSpace = null;
                        }
                        else {
                            if (isRow && isColumn) {
                                tspanOption = {
                                    x: (headerContent === '') ? ((this.marginX * 2) + (markerSize + markerPadding))
                                        : (this.marginX * 2) + (this.isWrap ? (markerSize + markerPadding) : 0)
                                };
                            }
                            else {
                                tspanOption = {};
                            }
                        }
                        isColumn = false;
                        tspanElement = this.renderer.createTSpan(tspanOption, '');
                        parentElement.appendChild(tspanElement);
                        if (line.indexOf('<b>') > -1 || ((isBoldTag && j === 0 && k === 0) && (isHeader || this.isWrap))) {
                            fontWeight = 'bold';
                            labelColor = this.themeStyle.tooltipBoldLabel;
                            tspanStyle = 'font-weight:' + fontWeight;
                            font.fontWeight = fontWeight;
                            (tspanElement).setAttribute('fill', this.textStyle.color || labelColor);
                        }
                        else {
                            tspanStyle = fontWeight === 'bold' ? 'font-weight:' + fontWeight : '';
                            font.fontWeight = fontWeight;
                            (tspanElement).setAttribute('fill', this.textStyle.color || labelColor);
                        }
                        if (line.indexOf('</b>') > -1 || ((isBoldTag && j === len_1 - 1 && k === 0) && (isHeader || this.isWrap))) {
                            fontWeight = 'Normal';
                            labelColor = this.themeStyle.tooltipLightLabel;
                        }
                        // eslint-disable-next-line no-useless-escape
                        (tspanElement).textContent = line = this.getTooltipTextContent(line);
                        subWidth += Object(_helper__WEBPACK_IMPORTED_MODULE_3__["measureText"])(line, font).width;
                        if (tspanStyle !== '') {
                            tspanElement.style.fontWeight = tspanStyle.split('font-weight:')[1];
                            tspanElement.style.color = tspanElement.getAttribute('fill');
                        }
                        // 'inherit' will apply css style from parent element.
                        tspanElement.style.fontFamily = 'inherit';
                        tspanElement.style.fontStyle = 'inherit';
                        tspanElement.style.fontSize = 'inherit';
                        isRow = false;
                    }
                }
                subWidth -= spaceWidth;
                width = Math.max(width, subWidth);
                contentWidth.push(subWidth);
            }
        }
        this.elementSize = new _helper__WEBPACK_IMPORTED_MODULE_3__["Size"](width + (width > 0 ? (2 * this.marginX) : 0), height);
        this.elementSize.width += (markerSize + markerPadding); // marker size + marker Spacing
        var element = (parentElement.childNodes[0]);
        if (headerContent !== '' && element && !this.isWrap) {
            font.fontWeight = 'bold';
            var width_1 = (this.elementSize.width + (2 * this.padding)) / 2 - Object(_helper__WEBPACK_IMPORTED_MODULE_3__["measureText"])(headerContent, font).width / 2;
            element.setAttribute('x', width_1.toString());
        }
        this.renderContentRTL(parentElement, isHeader, markerSize + markerPadding, contentWidth);
    };
    Tooltip.prototype.renderContentRTL = function (textElement, isHeader, markerSize, contentWidth) {
        if (this.enableRTL) {
            var tspanElement = void 0;
            var contentWidthIndex = isHeader ? 1 : 0;
            for (var i = 0; i < textElement.childNodes.length; i++) {
                tspanElement = (textElement.childNodes[i]);
                if ((!isHeader || i > 0) && !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(tspanElement.getAttribute('x'))) {
                    tspanElement.setAttribute('x', (this.elementSize.width - (markerSize + contentWidth[contentWidthIndex])).toString());
                    contentWidthIndex++;
                }
            }
        }
    };
    Tooltip.prototype.getTooltipTextContent = function (tooltipText) {
        var characterCollection = tooltipText.match(/<[a-zA-Z\/](.|\n)*?>/g);
        if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(characterCollection)) {
            return tooltipText;
        }
        var isRtlText = this.isRTLText(tooltipText);
        for (var i = 0; i < characterCollection.length; i++) {
            if (this.isValidHTMLElement(characterCollection[i].replace('<', '').replace('/', '').replace('>', '').trim())) {
                tooltipText = tooltipText.replace(characterCollection[i], isRtlText ? '\u200E' : '');
            }
        }
        return tooltipText;
    };
    Tooltip.prototype.isValidHTMLElement = function (element) {
        return document.createElement(element).toString() != "[object HTMLUnknownElement]";
    };
    Tooltip.prototype.isRTLText = function (tooltipContent) {
        return /[\u0590-\u07FF\u200F\u202B\u202E\uFB1D-\uFDFD\uFE70-\uFEFC]/.test(tooltipContent);
    };
    Tooltip.prototype.createTemplate = function (areaBounds, location) {
        var argsData = { cancel: false, name: 'tooltipRender', tooltip: this };
        this.trigger('tooltipRender', argsData);
        var parent = document.getElementById(this.element.id);
        if (this.isCanvas) {
            this.removeSVG();
        }
        var firstElement = parent.firstElementChild;
        if (firstElement) {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["remove"])(firstElement);
        }
        if (!argsData.cancel) {
            var elem = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["createElement"])('div', { id: this.element.id + 'parent_template' });
            var templateElement = this.templateFn(this.data, this.controlInstance, elem.id, elem.id + '_blazorTemplate', '');
            while (templateElement && templateElement.length > 0) {
                if (Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isBlazor"])() || templateElement.length === 1) {
                    elem.appendChild(templateElement[0]);
                    templateElement = null;
                }
                else {
                    elem.appendChild(templateElement[0]);
                }
            }
            parent.appendChild(elem);
            var element = this.isCanvas ? elem : this.element;
            var rect = element.getBoundingClientRect();
            this.padding = 0;
            this.elementSize = new _helper__WEBPACK_IMPORTED_MODULE_3__["Size"](rect.width, rect.height);
            var tooltipRect = this.shared ? this.sharedTooltipLocation(areaBounds, this.location.x, this.location.y)
                : this.tooltipLocation(areaBounds, location, new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](0, 0), new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](0, 0));
            if (this.enableAnimation && !this.shared && !this.isFirst) {
                this.animateTooltipDiv(this.element, tooltipRect);
            }
            else {
                this.updateDiv(element, tooltipRect.x, tooltipRect.y);
            }
            if (this.blazorTemplate) {
                //Customer issue - F149037  Call back function to handle the blazor tooltip alignment issues
                var tooltipRendered = function () {
                    var rect1 = Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(thisObject_1.element.id).getBoundingClientRect();
                    thisObject_1.elementSize = new _helper__WEBPACK_IMPORTED_MODULE_3__["Size"](rect1.width, rect1.height);
                    var tooltipRect1 = thisObject_1.tooltipLocation(areaBounds, location, new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](0, 0), new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](0, 0));
                    thisObject_1.updateDiv(Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(thisObject_1.element.id), tooltipRect1.x, tooltipRect1.y);
                };
                // eslint-disable-next-line @typescript-eslint/no-this-alias
                var thisObject_1 = this;
                tooltipRendered.bind(thisObject_1, areaBounds, location);
                Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["updateBlazorTemplate"])(this.element.id + 'parent_template' + '_blazorTemplate', this.blazorTemplate.name, this.blazorTemplate.parent, undefined, tooltipRendered);
            }
        }
        else {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["remove"])(Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id + '_tooltip'));
        }
    };
    Tooltip.prototype.sharedTooltipLocation = function (bounds, x, y) {
        var width = this.elementSize.width + (2 * this.marginX);
        var height = this.elementSize.height + (2 * this.marginY);
        var tooltipRect = new _helper__WEBPACK_IMPORTED_MODULE_3__["Rect"](x + 2 * this.padding, y - height - this.padding, width, height);
        if (tooltipRect.y < bounds.y) {
            tooltipRect.y += (tooltipRect.height + 2 * this.padding);
        }
        if (tooltipRect.x + tooltipRect.width > bounds.x + bounds.width) {
            tooltipRect.x -= (tooltipRect.width + 4 * this.padding);
        }
        return tooltipRect;
    };
    Tooltip.prototype.getCurrentPosition = function (bounds, symbolLocation, arrowLocation, tipLocation) {
        var position = this.tooltipPlacement;
        var clipX = this.clipBounds.x;
        var clipY = this.clipBounds.y;
        var markerHeight = this.offset;
        var width = this.elementSize.width + (2 * this.marginX);
        var height = this.elementSize.height + (2 * this.marginY);
        var location = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](symbolLocation.x, symbolLocation.y);
        if (position === 'Top' || position === 'Bottom') {
            location = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](location.x + clipX - this.elementSize.width / 2 - this.padding, location.y + clipY - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight);
            arrowLocation.x = tipLocation.x = width / 2;
            if (position === 'Bottom') {
                location.y = symbolLocation.y + clipY + markerHeight;
            }
            if (bounds.x + bounds.width < location.x + width) {
                location.x = (bounds.width > width) ? ((bounds.x + bounds.width) - width + 6) : bounds.x;
                arrowLocation.x = tipLocation.x = (bounds.width > width) ? (bounds.x + symbolLocation.x - location.x) : symbolLocation.x;
            }
            else if (bounds.x > location.x) {
                location.x = bounds.x;
                arrowLocation.x = tipLocation.x = symbolLocation.x;
            }
        }
        else {
            location = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](location.x + clipX + markerHeight, location.y + clipY - this.elementSize.height / 2 - (this.padding));
            arrowLocation.y = tipLocation.y = height / 2;
            if (position === 'Left') {
                location.x = symbolLocation.x + clipX - markerHeight - (width + this.arrowPadding);
            }
            if (bounds.y + bounds.height < location.y + height) {
                location.y = (bounds.height > height) ? ((bounds.y + bounds.height) - height + 6) : bounds.y;
                arrowLocation.y = tipLocation.y = (bounds.height > height) ? (bounds.y + symbolLocation.y - location.y) : symbolLocation.y;
            }
            else if (bounds.y > location.y) {
                location.y = bounds.y;
                arrowLocation.y = tipLocation.y = symbolLocation.y;
            }
        }
        return new _helper__WEBPACK_IMPORTED_MODULE_3__["Rect"](location.x, location.y, width, height);
    };
    // tslint:disable-next-line:max-func-body-length
    Tooltip.prototype.tooltipLocation = function (bounds, symbolLocation, arrowLocation, tipLocation) {
        if (!Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(this.tooltipPlacement)) {
            var tooltipRect = this.getCurrentPosition(bounds, symbolLocation, arrowLocation, tipLocation);
            return tooltipRect;
        }
        var location = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](symbolLocation.x, symbolLocation.y);
        var width = this.elementSize.width + (2 * this.marginX);
        var height = this.elementSize.height + (2 * this.marginY);
        var markerHeight = this.offset;
        var clipX = this.clipBounds.x;
        var clipY = this.clipBounds.y;
        var boundsX = bounds.x;
        var boundsY = bounds.y;
        if (!this.inverted) {
            location = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](location.x + clipX - this.elementSize.width / 2 - this.padding, location.y + clipY - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight);
            arrowLocation.x = tipLocation.x = width / 2;
            if (location.y < boundsY || (this.isNegative)) {
                location.y = (symbolLocation.y < 0 ? 0 : symbolLocation.y) + clipY + markerHeight;
            }
            if (location.y + height + this.arrowPadding > boundsY + bounds.height) {
                location.y = Math.min(symbolLocation.y, boundsY + bounds.height) + clipY
                    - this.elementSize.height - (2 * this.padding) - this.arrowPadding - markerHeight;
            }
            tipLocation.x = width / 2;
            if (location.x < boundsX) {
                arrowLocation.x -= (boundsX - location.x);
                tipLocation.x -= (boundsX - location.x);
                location.x = boundsX;
            }
            if (location.x + width > boundsX + bounds.width) {
                arrowLocation.x += ((location.x + width) - (boundsX + bounds.width));
                tipLocation.x += ((location.x + width) - (boundsX + bounds.width));
                location.x -= ((location.x + width) - (boundsX + bounds.width));
            }
            if (arrowLocation.x + this.arrowPadding / 2 > width - this.rx) {
                arrowLocation.x = width - this.rx - this.arrowPadding / 2;
                tipLocation.x = width;
                this.tipRadius = 0;
            }
            if (arrowLocation.x - this.arrowPadding / 2 < this.rx) {
                arrowLocation.x = this.rx + this.arrowPadding / 2;
                tipLocation.x = 0;
                this.tipRadius = 0;
            }
        }
        else {
            location = new _helper__WEBPACK_IMPORTED_MODULE_3__["TooltipLocation"](location.x + clipX + markerHeight, location.y + clipY - this.elementSize.height / 2 - (this.padding));
            arrowLocation.y = tipLocation.y = height / 2;
            if ((location.x + width + this.arrowPadding > boundsX + bounds.width) || (this.isNegative)) {
                location.x = (symbolLocation.x > bounds.width + bounds.x ? bounds.width : symbolLocation.x)
                    + clipX - markerHeight - (width + this.arrowPadding);
            }
            if (location.x < boundsX) {
                location.x = (symbolLocation.x < 0 ? 0 : symbolLocation.x) + clipX + markerHeight;
            }
            if (location.y <= boundsY) {
                arrowLocation.y -= (boundsY - location.y);
                tipLocation.y -= (boundsY - location.y);
                location.y = boundsY;
            }
            if (location.y + height >= boundsY + bounds.height) {
                arrowLocation.y += ((location.y + height) - (boundsY + bounds.height));
                tipLocation.y += ((location.y + height) - (boundsY + bounds.height));
                location.y -= ((location.y + height) - (boundsY + bounds.height));
            }
            if (arrowLocation.y + this.arrowPadding / 2 > height - this.ry) {
                arrowLocation.y = height - this.ry - this.arrowPadding / 2;
                tipLocation.y = height;
                this.tipRadius = 0;
            }
            if (arrowLocation.y - this.arrowPadding / 2 < this.ry) {
                arrowLocation.y = this.ry + this.arrowPadding / 2;
                tipLocation.y = 0;
                this.tipRadius = 0;
            }
        }
        return new _helper__WEBPACK_IMPORTED_MODULE_3__["Rect"](location.x, location.y, width, height);
    };
    Tooltip.prototype.animateTooltipDiv = function (tooltipDiv, rect) {
        var _this = this;
        var x = parseFloat(tooltipDiv.style.left);
        var y = parseFloat(tooltipDiv.style.top);
        var currenDiff;
        new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Animation"]({}).animate(tooltipDiv, {
            duration: this.duration,
            progress: function (args) {
                currenDiff = (args.timeStamp / args.duration);
                tooltipDiv.style.animation = null;
                tooltipDiv.style.left = (x + currenDiff * (rect.x - x)) + 'px';
                tooltipDiv.style.top = (y + currenDiff * (rect.y - y)) + 'px';
            },
            end: function (model) {
                _this.updateDiv(tooltipDiv, rect.x, rect.y);
                _this.trigger('animationComplete', { tooltip: _this });
            }
        });
    };
    Tooltip.prototype.updateDiv = function (tooltipDiv, x, y) {
        tooltipDiv.style.left = x + 'px';
        tooltipDiv.style.top = y + 'px';
    };
    Tooltip.prototype.updateTemplateFn = function () {
        if (this.template) {
            try {
                if (document.querySelectorAll(this.template).length) {
                    this.templateFn = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["compile"])(document.querySelector(this.template).innerHTML.trim());
                }
            }
            catch (e) {
                this.templateFn = Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["compile"])(this.template);
            }
        }
    };
    /** @private */
    Tooltip.prototype.fadeOut = function () {
        var _this = this;
        var tooltipElement = (this.isCanvas && !this.template) ? Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id + '_svg') :
            Object(_helper__WEBPACK_IMPORTED_MODULE_3__["getElement"])(this.element.id);
        if (tooltipElement) {
            var tooltipGroup_1 = tooltipElement.firstChild;
            if (tooltipGroup_1.nodeType != Node.ELEMENT_NODE) {
                tooltipGroup_1 = tooltipElement.firstElementChild;
            }
            if (this.isCanvas && !this.template) {
                tooltipGroup_1 = document.getElementById(this.element.id + '_group') ? document.getElementById(this.element.id + '_group') :
                    tooltipGroup_1;
            }
            if (!tooltipGroup_1) {
                return null;
            }
            var opacity_1 = parseFloat(tooltipGroup_1.getAttribute('opacity'));
            opacity_1 = !Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["isNullOrUndefined"])(opacity_1) ? opacity_1 : 1;
            new _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Animation"]({}).animate(tooltipGroup_1, {
                duration: 200,
                progress: function (args) {
                    //  tooltipGroup.removeAttribute('e-animate');
                    _this.progressAnimation(tooltipGroup_1, opacity_1, (args.timeStamp / args.duration));
                },
                end: function () {
                    _this.fadeOuted = true;
                    _this.endAnimation(tooltipGroup_1);
                }
            });
        }
    };
    Tooltip.prototype.progressAnimation = function (tooltipGroup, opacity, timeStamp) {
        tooltipGroup.style.animation = '';
        tooltipGroup.setAttribute('opacity', (opacity - timeStamp).toString());
    };
    /*
     * @hidden
     */
    Tooltip.prototype.endAnimation = function (tooltipGroup) {
        tooltipGroup.setAttribute('opacity', '0');
        if (this.template) {
            tooltipGroup.style.display = 'none';
        }
        this.trigger('animationComplete', { tooltip: this });
    };
    /**
     * Get the properties to be maintained in the persisted state.
     *
     * @private
     */
    Tooltip.prototype.getPersistData = function () {
        var keyEntity = [];
        return this.addOnPersist(keyEntity);
    };
    /**
     * Get component name
     *
     *  @private
     */
    Tooltip.prototype.getModuleName = function () {
        return 'tooltip';
    };
    /**
     * To destroy the accumulationcharts
     *
     * @private
     */
    Tooltip.prototype.destroy = function () {
        _super.prototype.destroy.call(this);
        this.element.classList.remove('e-tooltip');
    };
    /**
     * Called internally if any of the property value changed.
     *
     * @returns {void}
     * @private
     */
    Tooltip.prototype.onPropertyChanged = function (newProp, oldProp) {
        if (this.blazorTemplate) {
            Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["resetBlazorTemplate"])(this.element.id + 'parent_template' + '_blazorTemplate');
        }
        this.isFirst = false;
        this.render();
    };
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tooltip.prototype, "enable", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tooltip.prototype, "shared", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], Tooltip.prototype, "enableShadow", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tooltip.prototype, "fill", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('')
    ], Tooltip.prototype, "header", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0.75)
    ], Tooltip.prototype, "opacity", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ size: '13px', fontWeight: 'Normal', color: null, fontStyle: 'Normal', fontFamily: 'Segoe UI' }, TextStyle)
    ], Tooltip.prototype, "textStyle", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tooltip.prototype, "template", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(true)
    ], Tooltip.prototype, "enableAnimation", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(300)
    ], Tooltip.prototype, "duration", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tooltip.prototype, "inverted", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tooltip.prototype, "isNegative", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ color: '#cccccc', width: 0.5 }, TooltipBorder)
    ], Tooltip.prototype, "border", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])([])
    ], Tooltip.prototype, "content", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(10)
    ], Tooltip.prototype, "markerSize", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ x: 0, y: 0 }, ToolLocation)
    ], Tooltip.prototype, "clipBounds", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])([])
    ], Tooltip.prototype, "palette", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])([])
    ], Tooltip.prototype, "shapes", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ x: 0, y: 0 }, ToolLocation)
    ], Tooltip.prototype, "location", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(0)
    ], Tooltip.prototype, "offset", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(2)
    ], Tooltip.prototype, "rx", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(2)
    ], Tooltip.prototype, "ry", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(5)
    ], Tooltip.prototype, "marginX", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(5)
    ], Tooltip.prototype, "marginY", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(12)
    ], Tooltip.prototype, "arrowPadding", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tooltip.prototype, "data", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])('Material')
    ], Tooltip.prototype, "theme", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Complex"])({ x: 0, y: 0, width: 0, height: 0 }, AreaBounds)
    ], Tooltip.prototype, "areaBounds", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tooltip.prototype, "availableSize", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])()
    ], Tooltip.prototype, "blazorTemplate", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tooltip.prototype, "isCanvas", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tooltip.prototype, "isTextWrap", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tooltip.prototype, "tooltipPlacement", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(null)
    ], Tooltip.prototype, "controlInstance", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], Tooltip.prototype, "tooltipRender", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], Tooltip.prototype, "loaded", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Event"])()
    ], Tooltip.prototype, "animationComplete", void 0);
    __decorate([
        Object(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Property"])(false)
    ], Tooltip.prototype, "enableRTL", void 0);
    Tooltip = __decorate([
        _syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["NotifyPropertyChanges"]
    ], Tooltip);
    return Tooltip;
}(_syncfusion_ej2_base__WEBPACK_IMPORTED_MODULE_0__["Component"]));



/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs1.3/cs1.3.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs1.3/cs1.3.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs1_3Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs1_3Component", function() { return Cs1_3Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS1_3M01"];
var Cs1_3Component = /** @class */ (function () {
    function Cs1_3Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS1_3M01 = {
            CS1_3M01_VelocidadActualMotor: 0,
            CS1_3M01_CorrienteActualMotor: 0,
            CS1_3M01_PotenciaActualMotor: 0,
            CS1_3M01_TorqueActualMotor: 0,
            CS1_3M01_KWh: 0,
            CS1_3M01_voltaje: 0
        };
        this.velocidadCS1_3M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs1_3Component.prototype.ngOnInit = function () {
        this.changeCS1_3M01();
        // this.dataSF1()
    };
    Cs1_3Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS1_3M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs1_3Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS1_3M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs1_3Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS1_3M01')) {
                var value1 = _this.velocidadCS1_3M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs1_3Component.prototype.changeCS1_3M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_3M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS1_3M01');
                res.CS1_3M01_VelocidadActualMotor = 0;
                res.CS1_3M01_CorrienteActualMotor = 0;
                res.CS1_3M01_PotenciaActualMotor = 0;
                res.CS1_3M01_KWh = 0;
            }
            else {
                _this.TeamCS1_3M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_3M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_3M01) === null || _a === void 0 ? void 0 : _a.CS1_3M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS1_3M01);
            }
        });
    };
    Cs1_3Component.prototype.dataCS1_3M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS1_3M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1_3M01');
                res.CS1_3M01_VelocidadActualMotor = 0;
                res.CS1_3M01_CorrienteActualMotor = 0;
                res.CS1_3M01_PotenciaActualMotor = 0;
                res.CS1_3M01_KWh = 0;
            }
            else {
                _this.TeamCS1_3M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_3M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_3M01) === null || _a === void 0 ? void 0 : _a.CS1_3M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS1_3M01:', (_c = _this.TeamCS1_3M01) === null || _c === void 0 ? void 0 : _c.CS1_3M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs1_3Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs1_3Component.ɵfac = function Cs1_3Component_Factory(t) { return new (t || Cs1_3Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs1_3Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs1_3Component, selectors: [["ngx-cs1_3"]], viewQuery: function Cs1_3Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS1_3M01", 2, "display", "block", "height", "150px"], ["gaugeCS1_3M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs1_3Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS1_3M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS1_3M01 == null ? null : ctx.TeamCS1_3M01.CS1_3M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS1_3M01 == null ? null : ctx.TeamCS1_3M01.CS1_3M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS1_3M01 == null ? null : ctx.TeamCS1_3M01.CS1_3M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS1_3M01 == null ? null : ctx.TeamCS1_3M01.CS1_3M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MxLjMvY3MxLjMuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs1_3Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs1_3Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs1_3',
                templateUrl: './cs1.3.component.html',
                styleUrls: ['./cs1.3.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS1_3M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs1.4/cs1.4.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs1.4/cs1.4.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs1_4Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs1_4Component", function() { return Cs1_4Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS1_4M01"];
var Cs1_4Component = /** @class */ (function () {
    function Cs1_4Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS1_4M01 = {
            CS1_4M01_VelocidadActualMotor: 0,
            CS1_4M01_CorrienteActualMotor: 0,
            CS1_4M01_PotenciaActualMotor: 0,
            CS1_4M01_TorqueActualMotor: 0,
            CS1_4M01_KWh: 0,
            CS1_4M01_voltaje: 0
        };
        this.velocidadCS1_4M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs1_4Component.prototype.ngOnInit = function () {
        this.changeCS1_4M01();
        // this.dataSF1()
    };
    Cs1_4Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS1_4M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs1_4Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS1_4M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs1_4Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS1_4M01')) {
                var value1 = _this.velocidadCS1_4M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs1_4Component.prototype.changeCS1_4M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_4M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS1_4M01');
                res.CS1_4M01_VelocidadActualMotor = 0;
                res.CS1_4M01_CorrienteActualMotor = 0;
                res.CS1_4M01_PotenciaActualMotor = 0;
                res.CS1_4M01_KWh = 0;
            }
            else {
                _this.TeamCS1_4M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_4M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_4M01) === null || _a === void 0 ? void 0 : _a.CS1_4M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS1_4M01);
            }
        });
    };
    Cs1_4Component.prototype.dataCS1_4M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS1_4M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1_4M01');
                res.CS1_4M01_VelocidadActualMotor = 0;
                res.CS1_4M01_CorrienteActualMotor = 0;
                res.CS1_4M01_PotenciaActualMotor = 0;
                res.CS1_4M01_KWh = 0;
            }
            else {
                _this.TeamCS1_4M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_4M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_4M01) === null || _a === void 0 ? void 0 : _a.CS1_4M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS1_4M01:', (_c = _this.TeamCS1_4M01) === null || _c === void 0 ? void 0 : _c.CS1_4M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs1_4Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs1_4Component.ɵfac = function Cs1_4Component_Factory(t) { return new (t || Cs1_4Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs1_4Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs1_4Component, selectors: [["ngx-cs1_4"]], viewQuery: function Cs1_4Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS1_4M01", 2, "display", "block", "height", "150px"], ["gaugeCS1_4M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs1_4Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS1_4M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS1_4M01 == null ? null : ctx.TeamCS1_4M01.CS1_4M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS1_4M01 == null ? null : ctx.TeamCS1_4M01.CS1_4M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS1_4M01 == null ? null : ctx.TeamCS1_4M01.CS1_4M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS1_4M01 == null ? null : ctx.TeamCS1_4M01.CS1_4M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MxLjQvY3MxLjQuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs1_4Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs1_4Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs1_4',
                templateUrl: './cs1.4.component.html',
                styleUrls: ['./cs1.4.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS1_4M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs1.5/cs1.5.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs1.5/cs1.5.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs1_5Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs1_5Component", function() { return Cs1_5Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS1_5M01"];
var Cs1_5Component = /** @class */ (function () {
    function Cs1_5Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS1_5M01 = {
            CS1_5M01_VelocidadActualMotor: 0,
            CS1_5M01_CorrienteActualMotor: 0,
            CS1_5M01_PotenciaActualMotor: 0,
            CS1_5M01_TorqueActualMotor: 0,
            CS1_5M01_KWh: 0,
            CS1_5M01_voltaje: 0
        };
        this.velocidadCS1_5M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs1_5Component.prototype.ngOnInit = function () {
        this.changeCS1_5M01();
        // this.dataSF1()
    };
    Cs1_5Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS1_5M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs1_5Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS1_5M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs1_5Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS1_5M01')) {
                var value1 = _this.velocidadCS1_5M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs1_5Component.prototype.changeCS1_5M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_5M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS1_5M01');
                res.CS1_5M01_VelocidadActualMotor = 0;
                res.CS1_5M01_CorrienteActualMotor = 0;
                res.CS1_5M01_PotenciaActualMotor = 0;
                res.CS1_5M01_KWh = 0;
            }
            else {
                _this.TeamCS1_5M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_5M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_5M01) === null || _a === void 0 ? void 0 : _a.CS1_5M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS1_5M01);
            }
        });
    };
    Cs1_5Component.prototype.dataCS1_5M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS1_5M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1_5M01');
                res.CS1_5M01_VelocidadActualMotor = 0;
                res.CS1_5M01_CorrienteActualMotor = 0;
                res.CS1_5M01_PotenciaActualMotor = 0;
                res.CS1_5M01_KWh = 0;
            }
            else {
                _this.TeamCS1_5M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_5M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_5M01) === null || _a === void 0 ? void 0 : _a.CS1_5M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS1_5M01:', (_c = _this.TeamCS1_5M01) === null || _c === void 0 ? void 0 : _c.CS1_5M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs1_5Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs1_5Component.ɵfac = function Cs1_5Component_Factory(t) { return new (t || Cs1_5Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs1_5Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs1_5Component, selectors: [["ngx-cs1_5"]], viewQuery: function Cs1_5Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS1_5M01", 2, "display", "block", "height", "150px"], ["gaugeCS1_5M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs1_5Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS1_5M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS1_5M01 == null ? null : ctx.TeamCS1_5M01.CS1_5M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS1_5M01 == null ? null : ctx.TeamCS1_5M01.CS1_5M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS1_5M01 == null ? null : ctx.TeamCS1_5M01.CS1_5M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS1_5M01 == null ? null : ctx.TeamCS1_5M01.CS1_5M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MxLjUvY3MxLjUuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs1_5Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs1_5Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs1_5',
                templateUrl: './cs1.5.component.html',
                styleUrls: ['./cs1.5.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS1_5M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs1.6/cs1.6.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs1.6/cs1.6.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs1_6Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs1_6Component", function() { return Cs1_6Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS1_6M01"];
var Cs1_6Component = /** @class */ (function () {
    function Cs1_6Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS1_6M01 = {
            CS1_6M01_VelocidadActualMotor: 0,
            CS1_6M01_CorrienteActualMotor: 0,
            CS1_6M01_PotenciaActualMotor: 0,
            CS1_6M01_TorqueActualMotor: 0,
            CS1_6M01_KWh: 0,
            CS1_6M01_voltaje: 0
        };
        this.velocidadCS1_6M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs1_6Component.prototype.ngOnInit = function () {
        this.changeCS1_6M01();
        // this.dataSF1()
    };
    Cs1_6Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS1_6M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs1_6Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS1_6M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs1_6Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS1_6M01')) {
                var value1 = _this.velocidadCS1_6M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs1_6Component.prototype.changeCS1_6M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_6M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS1_6M01');
                res.CS1_6M01_VelocidadActualMotor = 0;
                res.CS1_6M01_CorrienteActualMotor = 0;
                res.CS1_6M01_PotenciaActualMotor = 0;
                res.CS1_6M01_KWh = 0;
            }
            else {
                _this.TeamCS1_6M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_6M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_6M01) === null || _a === void 0 ? void 0 : _a.CS1_6M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS1_6M01);
            }
        });
    };
    Cs1_6Component.prototype.dataCS1_6M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS1_6M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1_6M01');
                res.CS1_6M01_VelocidadActualMotor = 0;
                res.CS1_6M01_CorrienteActualMotor = 0;
                res.CS1_6M01_PotenciaActualMotor = 0;
                res.CS1_6M01_KWh = 0;
            }
            else {
                _this.TeamCS1_6M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_6M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_6M01) === null || _a === void 0 ? void 0 : _a.CS1_6M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS1_6M01:', (_c = _this.TeamCS1_6M01) === null || _c === void 0 ? void 0 : _c.CS1_6M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs1_6Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs1_6Component.ɵfac = function Cs1_6Component_Factory(t) { return new (t || Cs1_6Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs1_6Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs1_6Component, selectors: [["ngx-cs1_6"]], viewQuery: function Cs1_6Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS1_6M01", 2, "display", "block", "height", "150px"], ["gaugeCS1_6M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs1_6Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS1_6M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS1_6M01 == null ? null : ctx.TeamCS1_6M01.CS1_6M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS1_6M01 == null ? null : ctx.TeamCS1_6M01.CS1_6M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS1_6M01 == null ? null : ctx.TeamCS1_6M01.CS1_6M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS1_6M01 == null ? null : ctx.TeamCS1_6M01.CS1_6M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MxLjYvY3MxLjYuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs1_6Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs1_6Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs1_6',
                templateUrl: './cs1.6.component.html',
                styleUrls: ['./cs1.6.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS1_6M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs1.7/cs1.7.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs1.7/cs1.7.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs1_7Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs1_7Component", function() { return Cs1_7Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS1_7M01"];
var Cs1_7Component = /** @class */ (function () {
    function Cs1_7Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS1_7M01 = {
            CS1_7M01_VelocidadActualMotor: 0,
            CS1_7M01_CorrienteActualMotor: 0,
            CS1_7M01_PotenciaActualMotor: 0,
            CS1_7M01_TorqueActualMotor: 0,
            CS1_7M01_KWh: 0,
            CS1_7M01_voltaje: 0
        };
        this.velocidadCS1_7M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs1_7Component.prototype.ngOnInit = function () {
        this.changeCS1_7M01();
        // this.dataSF1()
    };
    Cs1_7Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS1_7M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs1_7Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS1_7M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs1_7Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS1_7M01')) {
                var value1 = _this.velocidadCS1_7M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs1_7Component.prototype.changeCS1_7M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_7M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS1_7M01');
                res.CS1_7M01_VelocidadActualMotor = 0;
                res.CS1_7M01_CorrienteActualMotor = 0;
                res.CS1_7M01_PotenciaActualMotor = 0;
                res.CS1_7M01_KWh = 0;
            }
            else {
                _this.TeamCS1_7M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_7M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_7M01) === null || _a === void 0 ? void 0 : _a.CS1_7M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS1_7M01);
            }
        });
    };
    Cs1_7Component.prototype.dataCS1_7M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS1_7M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1_7M01');
                res.CS1_7M01_VelocidadActualMotor = 0;
                res.CS1_7M01_CorrienteActualMotor = 0;
                res.CS1_7M01_PotenciaActualMotor = 0;
                res.CS1_7M01_KWh = 0;
            }
            else {
                _this.TeamCS1_7M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS1_7M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS1_7M01) === null || _a === void 0 ? void 0 : _a.CS1_7M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS1_7M01:', (_c = _this.TeamCS1_7M01) === null || _c === void 0 ? void 0 : _c.CS1_7M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs1_7Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs1_7Component.ɵfac = function Cs1_7Component_Factory(t) { return new (t || Cs1_7Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs1_7Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs1_7Component, selectors: [["ngx-cs1_7"]], viewQuery: function Cs1_7Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS1_7M01", 2, "display", "block", "height", "150px"], ["gaugeCS1_7M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs1_7Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS1_7M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS1_7M01 == null ? null : ctx.TeamCS1_7M01.CS1_7M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS1_7M01 == null ? null : ctx.TeamCS1_7M01.CS1_7M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS1_7M01 == null ? null : ctx.TeamCS1_7M01.CS1_7M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS1_7M01 == null ? null : ctx.TeamCS1_7M01.CS1_7M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MxLjcvY3MxLjcuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs1_7Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs1_7Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs1_7',
                templateUrl: './cs1.7.component.html',
                styleUrls: ['./cs1.7.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS1_7M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs1/cs1.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs1/cs1.component.ts ***!
  \****************************************************************/
/*! exports provided: Cs1Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs1Component", function() { return Cs1Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["Cs1_3"];
var _c1 = ["Cs1_4"];
var _c2 = ["Cs1_5"];
var _c3 = ["Cs1_6"];
var _c4 = ["Cs1_7"];
var Teamcs1_3;
var Teamcs1_4;
var Teamcs1_5;
var Teamcs1_6;
var Teamcs1_7;
var Cs1Component = /** @class */ (function () {
    function Cs1Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        // datacs1_3? = Teamcs1_3
        this.Teamcs1_3 = {
            CS1_3M01_VelocidadActualMotor: 30,
            CS1_3M01_CorrienteActualMotor: 0,
            CS1_3M01_PotenciaActualMotor: 0,
            CS1_3M01_TorqueActualMotor: 0,
            CS1_3M01_KWh: 0
        };
        // datacs1_4? = Teamcs1_4
        this.Teamcs1_4 = {
            CS1_4M01_VelocidadActualMotor: 30,
            CS1_4M01_CorrienteActualMotor: 0,
            CS1_4M01_PotenciaActualMotor: 0,
            CS1_4M01_TorqueActualMotor: 0,
            CS1_4M01_KWh: 0
        };
        // datacs1_5? = Teamcs1_5
        this.Teamcs1_5 = {
            CS1_5M01_VelocidadActualMotor: 30,
            CS1_5M01_CorrienteActualMotor: 0,
            CS1_5M01_PotenciaActualMotor: 0,
            CS1_5M01_TorqueActualMotor: 0,
            CS1_5M01_KWh: 0
        };
        // datacs1_6? = Teamcs1_6
        this.Teamcs1_6 = {
            CS1_6M01_VelocidadActualMotor: 30,
            CS1_6M01_CorrienteActualMotor: 0,
            CS1_6M01_PotenciaActualMotor: 0,
            CS1_6M01_TorqueActualMotor: 0,
            CS1_6M01_KWh: 0
        };
        // datacs1_7? = Teamcs1_7
        this.Teamcs1_7 = {
            CS1_7M01_VelocidadActualMotor: 30,
            CS1_7M01_CorrienteActualMotor: 0,
            CS1_7M01_PotenciaActualMotor: 0,
            CS1_7M01_TorqueActualMotor: 0,
            CS1_7M01_KWh: 0
        };
        this.velocidadCs1_3 = 0;
        this.velocidadCs1_4 = 0;
        this.velocidadCs1_5 = 0;
        this.velocidadCs1_6 = 0;
        this.velocidadCs1_7 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation1 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        this.annotation2 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        this.annotation3 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        this.annotation4 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointersCs1_3 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
        this.pointersCs1_4 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
        this.pointersCs1_5 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
        this.pointersCs1_6 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
        this.pointersCs1_7 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs1Component.prototype.ngOnInit = function () {
        this.changeCs1_3();
        this.changeCs1_4();
        this.changeCs1_5();
        this.changeCs1_6();
        this.changeCs1_7();
    };
    Cs1Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipIntervalCs1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var valueCS1_3 = _this.velocidadCs1_3;
                var valueCS1_4 = _this.velocidadCs1_4;
                var valueCS1_5 = _this.velocidadCs1_5;
                var valueCS1_6 = _this.velocidadCs1_6;
                var valueCS1_7 = _this.velocidadCs1_7;
                _this.cs1_3.axes[0].pointers[0].animation.enable = true;
                _this.cs1_4.axes[0].pointers[0].animation.enable = true;
                _this.cs1_5.axes[0].pointers[0].animation.enable = true;
                _this.cs1_6.axes[0].pointers[0].animation.enable = true;
                _this.cs1_7.axes[0].pointers[0].animation.enable = true;
                _this.cs1_3.setPointerValue(0, 0, valueCS1_3);
                _this.cs1_4.setPointerValue(0, 0, valueCS1_4);
                _this.cs1_5.setPointerValue(0, 0, valueCS1_5);
                _this.cs1_6.setPointerValue(0, 0, valueCS1_6);
                _this.cs1_7.setPointerValue(0, 0, valueCS1_7);
                _this.cs1_3.setAnnotationValue(0, 0, _this.cs1_3.axes[0].annotations[0].content);
                _this.cs1_4.setAnnotationValue(0, 0, _this.cs1_4.axes[0].annotations[0].content);
                _this.cs1_5.setAnnotationValue(0, 0, _this.cs1_5.axes[0].annotations[0].content);
                _this.cs1_6.setAnnotationValue(0, 0, _this.cs1_5.axes[0].annotations[0].content);
                _this.cs1_7.setAnnotationValue(0, 0, _this.cs1_5.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipIntervalCs1);
            }
        }, 2000);
    };
    Cs1Component.prototype.changeCs1_3 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_3M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1');
                res.CS1_3M01_PotenciaActualMotor = 0;
                res.CS1_3M01_KWh = 0;
                res.CS1_3M01_CorrienteActualMotor = 0;
            }
            else {
                _this.Teamcs1_3 = res;
                // this.datacs1_3 = Teamcs1_3
                _this.velocidadCs1_3 = (_b = _this.decimalPipe.transform((_a = _this.Teamcs1_3) === null || _a === void 0 ? void 0 : _a.CS1_3M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('cs1_3:', _this.velocidadCs1_3);
            }
        });
    };
    Cs1Component.prototype.changeCs1_4 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_4M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a;
            if (JSON.stringify(res) == '{}') {
                res.CS1_4M01_PotenciaActualMotor = 0;
                res.CS1_4M01_KWh = 0;
                res.CS1_4M01_CorrienteActualMotor = 0;
            }
            else {
                _this.Teamcs1_4 = res;
                // this.datacs1_4 = Teamcs1_4
                _this.velocidadCs1_4 = (_a = _this.decimalPipe.transform(_this.Teamcs1_4.CS1_4M01_VelocidadActualMotor), (_a !== null && _a !== void 0 ? _a : 0));
                console.log('cs1_4:', _this.velocidadCs1_4);
                // console.log('Data CS', Teamcs1_4?.cs1_4_VelocidadActualMotor);
            }
        });
    };
    Cs1Component.prototype.changeCs1_5 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_5M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1');
                res.CS1_5M01_PotenciaActualMotor = 0;
                res.CS1_5M01_KWh = 0;
                res.CS1_5M01_CorrienteActualMotor = 0;
            }
            else {
                _this.Teamcs1_5 = res;
                // this.datacs1_3 = Teamcs1_3
                _this.velocidadCs1_5 = (_b = _this.decimalPipe.transform((_a = _this.Teamcs1_5) === null || _a === void 0 ? void 0 : _a.CS1_5M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('cs1_5:', _this.velocidadCs1_5);
            }
        });
    };
    Cs1Component.prototype.changeCs1_6 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_6M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1');
                res.CS1_6M01_PotenciaActualMotor = 0;
                res.CS1_6M01_KWh = 0;
                res.CS1_6M01_CorrienteActualMotor = 0;
            }
            else {
                _this.Teamcs1_6 = res;
                // this.datacs1_3 = Teamcs1_3
                _this.velocidadCs1_6 = (_b = _this.decimalPipe.transform((_a = _this.Teamcs1_6) === null || _a === void 0 ? void 0 : _a.CS1_6M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('cs1_6:', _this.velocidadCs1_6);
            }
        });
    };
    Cs1Component.prototype.changeCs1_7 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS1_7M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS1');
                res.CS1_7M01_PotenciaActualMotor = 0;
                res.CS1_7M01_KWh = 0;
                res.CS1_7M01_CorrienteActualMotor = 0;
            }
            else {
                _this.Teamcs1_7 = res;
                // this.datacs1_3 = Teamcs1_3
                _this.velocidadCs1_7 = (_b = _this.decimalPipe.transform((_a = _this.Teamcs1_7) === null || _a === void 0 ? void 0 : _a.CS1_7M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('cs1_7:', _this.velocidadCs1_7);
            }
        });
    };
    Cs1Component.prototype.data_Cs1 = function () {
        var _this = this;
        if (this.intervalSubscriptionItemscs) {
            this.intervalSubscriptionItemscs.unsubscribe();
        }
        this.intervalSubscriptionItemscs = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["interval"])(5000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS1_3M01'); }))
            .subscribe(function (res) {
            if (res[0] == undefined) {
                console.log('no hay data CS1');
            }
            else {
                // Teamcs1_3 = res
                // this.datacs1_3 = Teamcs1_3
                // this.velocidadCs1_3 =  this.decimalPipe.transform( this.datacs1_3.cs1_3_VelocidadActualMotor) ?? 0;
                // console.log('cs1_3:', this.velocidadCs1_3);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs1Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs1Component.ɵfac = function Cs1Component_Factory(t) { return new (t || Cs1Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DecimalPipe"])); };
    Cs1Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs1Component, selectors: [["ngx-cs1"]], viewQuery: function Cs1Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, true);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2, true);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c3, true);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c4, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.cs1_3 = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.cs1_4 = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.cs1_5 = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.cs1_6 = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.cs1_7 = _t.first);
        } }, decls: 106, vars: 90, consts: [[1, "row"], [1, "col-sm-4"], ["id", "containerCs1_3", 2, "display", "block", "height", "150px"], ["Cs1_3", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [1, "h4", "value", 2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], ["id", "containerCs1_4", 2, "display", "block", "height", "150px"], ["Cs1_4", ""], ["id", "containerCs1_5", 2, "display", "block", "height", "150px"], ["Cs1_5", ""], ["id", "Cs1_6", 2, "display", "block", "height", "150px"], ["Cs1_6", ""], ["id", "Cs1_7", 2, "display", "block", "height", "150px"], ["Cs1_7", ""]], template: function Cs1Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, " CS1_3 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "ejs-circulargauge", 2, 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "e-axis", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "e-annotation", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](15, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](18, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](21, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, " CS1_4 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "ejs-circulargauge", 7, 8);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "e-axis", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](32, "e-annotation", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](35);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](36, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](38);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](39, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](40, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](41);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](42, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](43, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](45, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](46, " CS1_5 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](48, "ejs-circulargauge", 9, 10);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](50, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "e-axis", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](52, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](53, "e-annotation", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](54, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](55, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](56);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](57, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](58, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](59);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](60, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](61, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](62);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](63, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](64, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](65, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](66, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](67, " CS1_6 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](68, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](69, "ejs-circulargauge", 11, 12);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](71, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](72, "e-axis", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](73, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](74, "e-annotation", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](75, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](76, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](77);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](78, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](79, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](80);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](81, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](82, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](83);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](84, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](85, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](86, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](87, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](88, " CS1_7 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](89, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](90, "ejs-circulargauge", 13, 14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](92, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](93, "e-axis", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](94, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](95, "e-annotation", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](96, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](97, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](98);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](99, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](100, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](101);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](102, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](103, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](104);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](105, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointersCs1_3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](15, 45, ctx.Teamcs1_3 == null ? null : ctx.Teamcs1_3.CS1_3M01_CorrienteActualMotor, "4.1-5"), " Corriente ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](18, 48, ctx.Teamcs1_3 == null ? null : ctx.Teamcs1_3.CS1_3M01_PotenciaActualMotor, "4.1-5"), " Potencia ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](21, 51, ctx.Teamcs1_3 == null ? null : ctx.Teamcs1_3.CS1_3M01_KWh, "4.1-5"), " kWh ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointersCs1_4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](36, 54, ctx.Teamcs1_4 == null ? null : ctx.Teamcs1_4.CS1_4M01_CorrienteActualMotor, "4.1-5"), " Corriente ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](39, 57, ctx.Teamcs1_4 == null ? null : ctx.Teamcs1_4.CS1_4M01_PotenciaActualMotor, "4.1-5"), " Potencia ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](42, 60, ctx.Teamcs1_4 == null ? null : ctx.Teamcs1_4.CS1_4M01_KWh, "4.1-5"), " kWh ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointersCs1_5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](57, 63, ctx.Teamcs1_5 == null ? null : ctx.Teamcs1_5.CS1_5M01_CorrienteActualMotor, "4.1-5"), " Corriente ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](60, 66, ctx.Teamcs1_5 == null ? null : ctx.Teamcs1_5.CS1_5M01_PotenciaActualMotor, "4.1-5"), " Potencia ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](63, 69, ctx.Teamcs1_5 == null ? null : ctx.Teamcs1_5.CS1_5M01_KWh, "4.1-5"), " kWh ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointersCs1_4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](78, 72, ctx.Teamcs1_6 == null ? null : ctx.Teamcs1_6.CS1_6M01_CorrienteActualMotor, "4.1-5"), " Corriente ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](81, 75, ctx.Teamcs1_6 == null ? null : ctx.Teamcs1_6.CS1_6M01_PotenciaActualMotor, "4.1-5"), " Potencia ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](84, 78, ctx.Teamcs1_6 == null ? null : ctx.Teamcs1_6.CS1_6M01_KWh, "4.1-5"), " kWh ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointersCs1_3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](99, 81, ctx.Teamcs1_7 == null ? null : ctx.Teamcs1_7.CS1_7M01_CorrienteActualMotor, "4.1-5"), " Corriente ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](102, 84, ctx.Teamcs1_7 == null ? null : ctx.Teamcs1_7.CS1_7M01_PotenciaActualMotor, "4.1-5"), " Potencia ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](105, 87, ctx.Teamcs1_7 == null ? null : ctx.Teamcs1_7.CS1_7M01_KWh, "4.1-5"), " kWh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DecimalPipe"]], styles: [".fontDes {\n  float: right;\n  padding-left: 5px;\n  color: #424242;\n  font-size: 20px;\n}\n\n.fontDes1 {\n  color: #9E9E9E;\n  font-size: 16px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvem9uZS10ZWFtcy90ZWFtLXNmYy9jczEvQzpcXFVzZXJzXFxqbG9zYWRhXFxEb2N1bWVudHNcXE1hdEJhZy5Gcm9udGVuZFYxL3NyY1xcYXBwXFxwYWdlc1xcem9uZS10ZWFtc1xcdGVhbS1zZmNcXGNzMVxcY3MxLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy96b25lLXRlYW1zL3RlYW0tc2ZjL2NzMS9jczEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxlQUFlO0FDQ25COztBREVBO0VBQ0ksY0FBYztFQUNkLGVBQWU7QUNDbkIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy96b25lLXRlYW1zL3RlYW0tc2ZjL2NzMS9jczEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9udERlcyB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxuICAgIGNvbG9yOiAjNDI0MjQyO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uZm9udERlczEge1xyXG4gICAgY29sb3I6ICM5RTlFOUU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn0iLCIuZm9udERlcyB7XG4gIGZsb2F0OiByaWdodDtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gIGNvbG9yOiAjNDI0MjQyO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5mb250RGVzMSB7XG4gIGNvbG9yOiAjOUU5RTlFO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iXX0= */"], encapsulation: 2 });
    Cs1Component.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: Cs1Component, factory: Cs1Component.ɵfac, providedIn: 'root' });
    return Cs1Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs1Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs1',
                templateUrl: './cs1.component.html',
                styleUrls: ['./cs1.component.scss'],
                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
            }]
    }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DecimalPipe"] }]; }, { cs1_3: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['Cs1_3']
        }], cs1_4: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['Cs1_4']
        }], cs1_5: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['Cs1_5']
        }], cs1_6: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['Cs1_6']
        }], cs1_7: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['Cs1_7']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs3.3/cs3.3.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs3.3/cs3.3.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs3_3Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs3_3Component", function() { return Cs3_3Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS3_3M01"];
var Cs3_3Component = /** @class */ (function () {
    function Cs3_3Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS3_3M01 = {
            CS3_3M01_VelocidadActualMotor: 0,
            CS3_3M01_CorrienteActualMotor: 0,
            CS3_3M01_PotenciaActualMotor: 0,
            CS3_3M01_TorqueActualMotor: 0,
            CS3_3M01_KWh: 0,
            CS3_3M01_voltaje: 0
        };
        this.velocidadCS3_3M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs3_3Component.prototype.ngOnInit = function () {
        this.changeCS3_3M01();
        // this.dataSF1()
    };
    Cs3_3Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS3_3M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs3_3Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS3_3M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs3_3Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS3_3M01')) {
                var value1 = _this.velocidadCS3_3M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs3_3Component.prototype.changeCS3_3M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS3_3M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS3_3M01');
                res.CS3_3M01_VelocidadActualMotor = 0;
                res.CS3_3M01_CorrienteActualMotor = 0;
                res.CS3_3M01_PotenciaActualMotor = 0;
                res.CS3_3M01_KWh = 0;
            }
            else {
                _this.TeamCS3_3M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_3M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_3M01) === null || _a === void 0 ? void 0 : _a.CS3_3M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS3_3M01);
            }
        });
    };
    Cs3_3Component.prototype.dataCS3_3M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS3_3M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS3_3M01');
                res.CS3_3M01_VelocidadActualMotor = 0;
                res.CS3_3M01_CorrienteActualMotor = 0;
                res.CS3_3M01_PotenciaActualMotor = 0;
                res.CS3_3M01_KWh = 0;
            }
            else {
                _this.TeamCS3_3M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_3M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_3M01) === null || _a === void 0 ? void 0 : _a.CS3_3M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS3_3M01:', (_c = _this.TeamCS3_3M01) === null || _c === void 0 ? void 0 : _c.CS3_3M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs3_3Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs3_3Component.ɵfac = function Cs3_3Component_Factory(t) { return new (t || Cs3_3Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs3_3Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs3_3Component, selectors: [["ngx-cs3_3"]], viewQuery: function Cs3_3Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS3_3M01", 2, "display", "block", "height", "150px"], ["gaugeCS3_3M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs3_3Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS3_3M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS3_3M01 == null ? null : ctx.TeamCS3_3M01.CS3_3M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS3_3M01 == null ? null : ctx.TeamCS3_3M01.CS3_3M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS3_3M01 == null ? null : ctx.TeamCS3_3M01.CS3_3M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS3_3M01 == null ? null : ctx.TeamCS3_3M01.CS3_3M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MzLjMvY3MzLjMuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs3_3Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs3_3Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs3_3',
                templateUrl: './cs3.3.component.html',
                styleUrls: ['./cs3.3.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS3_3M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs3.4/cs3.4.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs3.4/cs3.4.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs3_4Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs3_4Component", function() { return Cs3_4Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS3_4M01"];
var Cs3_4Component = /** @class */ (function () {
    function Cs3_4Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS3_4M01 = {
            CS3_4M01_VelocidadActualMotor: 0,
            CS3_4M01_CorrienteActualMotor: 0,
            CS3_4M01_PotenciaActualMotor: 0,
            CS3_4M01_TorqueActualMotor: 0,
            CS3_4M01_KWh: 0,
            CS3_4M01_voltaje: 0
        };
        this.velocidadCS3_4M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs3_4Component.prototype.ngOnInit = function () {
        this.changeCS3_4M01();
        // this.dataSF1()
    };
    Cs3_4Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS3_4M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs3_4Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS3_4M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs3_4Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS3_4M01')) {
                var value1 = _this.velocidadCS3_4M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs3_4Component.prototype.changeCS3_4M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS3_4M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS3_4M01');
                res.CS3_4M01_VelocidadActualMotor = 0;
                res.CS3_4M01_CorrienteActualMotor = 0;
                res.CS3_4M01_PotenciaActualMotor = 0;
                res.CS3_4M01_KWh = 0;
            }
            else {
                _this.TeamCS3_4M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_4M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_4M01) === null || _a === void 0 ? void 0 : _a.CS3_4M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS3_4M01);
            }
        });
    };
    Cs3_4Component.prototype.dataCS3_4M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS3_4M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS3_4M01');
                res.CS3_4M01_VelocidadActualMotor = 0;
                res.CS3_4M01_CorrienteActualMotor = 0;
                res.CS3_4M01_PotenciaActualMotor = 0;
                res.CS3_4M01_KWh = 0;
            }
            else {
                _this.TeamCS3_4M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_4M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_4M01) === null || _a === void 0 ? void 0 : _a.CS3_4M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS3_4M01:', (_c = _this.TeamCS3_4M01) === null || _c === void 0 ? void 0 : _c.CS3_4M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs3_4Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs3_4Component.ɵfac = function Cs3_4Component_Factory(t) { return new (t || Cs3_4Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs3_4Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs3_4Component, selectors: [["ngx-cs3_4"]], viewQuery: function Cs3_4Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS3_4M01", 2, "display", "block", "height", "150px"], ["gaugeCS3_4M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs3_4Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS3_4M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS3_4M01 == null ? null : ctx.TeamCS3_4M01.CS3_4M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS3_4M01 == null ? null : ctx.TeamCS3_4M01.CS3_4M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS3_4M01 == null ? null : ctx.TeamCS3_4M01.CS3_4M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS3_4M01 == null ? null : ctx.TeamCS3_4M01.CS3_4M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MzLjQvY3MzLjQuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs3_4Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs3_4Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs3_4',
                templateUrl: './cs3.4.component.html',
                styleUrls: ['./cs3.4.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS3_4M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs3.5/cs3.5.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs3.5/cs3.5.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs3_5Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs3_5Component", function() { return Cs3_5Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS3_5M01"];
var Cs3_5Component = /** @class */ (function () {
    function Cs3_5Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS3_5M01 = {
            CS3_5M01_VelocidadActualMotor: 0,
            CS3_5M01_CorrienteActualMotor: 0,
            CS3_5M01_PotenciaActualMotor: 0,
            CS3_5M01_TorqueActualMotor: 0,
            CS3_5M01_KWh: 0,
            CS3_5M01_voltaje: 0
        };
        this.velocidadCS3_5M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs3_5Component.prototype.ngOnInit = function () {
        this.changeCS3_5M01();
        // this.dataSF1()
    };
    Cs3_5Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS3_5M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs3_5Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS3_5M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs3_5Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS3_5M01')) {
                var value1 = _this.velocidadCS3_5M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs3_5Component.prototype.changeCS3_5M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS3_5M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS3_5M01');
                res.CS3_5M01_VelocidadActualMotor = 0;
                res.CS3_5M01_CorrienteActualMotor = 0;
                res.CS3_5M01_PotenciaActualMotor = 0;
                res.CS3_5M01_KWh = 0;
            }
            else {
                _this.TeamCS3_5M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_5M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_5M01) === null || _a === void 0 ? void 0 : _a.CS3_5M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS3_5M01);
            }
        });
    };
    Cs3_5Component.prototype.dataCS3_5M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS3_5M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS3_5M01');
                res.CS3_5M01_VelocidadActualMotor = 0;
                res.CS3_5M01_CorrienteActualMotor = 0;
                res.CS3_5M01_PotenciaActualMotor = 0;
                res.CS3_5M01_KWh = 0;
            }
            else {
                _this.TeamCS3_5M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_5M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_5M01) === null || _a === void 0 ? void 0 : _a.CS3_5M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS3_5M01:', (_c = _this.TeamCS3_5M01) === null || _c === void 0 ? void 0 : _c.CS3_5M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs3_5Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs3_5Component.ɵfac = function Cs3_5Component_Factory(t) { return new (t || Cs3_5Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs3_5Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs3_5Component, selectors: [["ngx-cs3_5"]], viewQuery: function Cs3_5Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS3_5M01", 2, "display", "block", "height", "150px"], ["gaugeCS3_5M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs3_5Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS3_5M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS3_5M01 == null ? null : ctx.TeamCS3_5M01.CS3_5M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS3_5M01 == null ? null : ctx.TeamCS3_5M01.CS3_5M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS3_5M01 == null ? null : ctx.TeamCS3_5M01.CS3_5M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS3_5M01 == null ? null : ctx.TeamCS3_5M01.CS3_5M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MzLjUvY3MzLjUuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs3_5Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs3_5Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs3_5',
                templateUrl: './cs3.5.component.html',
                styleUrls: ['./cs3.5.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS3_5M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs3.6/cs3.6.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs3.6/cs3.6.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs3_6Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs3_6Component", function() { return Cs3_6Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS3_6M01"];
var Cs3_6Component = /** @class */ (function () {
    function Cs3_6Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS3_6M01 = {
            CS3_6M01_VelocidadActualMotor: 0,
            CS3_6M01_CorrienteActualMotor: 0,
            CS3_6M01_PotenciaActualMotor: 0,
            CS3_6M01_TorqueActualMotor: 0,
            CS3_6M01_KWh: 0,
            CS3_6M01_voltaje: 0
        };
        this.velocidadCS3_6M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs3_6Component.prototype.ngOnInit = function () {
        this.changeCS3_6M01();
        // this.dataSF1()
    };
    Cs3_6Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS3_6M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs3_6Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS3_6M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs3_6Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS3_6M01')) {
                var value1 = _this.velocidadCS3_6M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs3_6Component.prototype.changeCS3_6M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS3_6M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS3_6M01');
                res.CS3_6M01_VelocidadActualMotor = 0;
                res.CS3_6M01_CorrienteActualMotor = 0;
                res.CS3_6M01_PotenciaActualMotor = 0;
                res.CS3_6M01_KWh = 0;
            }
            else {
                _this.TeamCS3_6M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_6M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_6M01) === null || _a === void 0 ? void 0 : _a.CS3_6M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS3_6M01);
            }
        });
    };
    Cs3_6Component.prototype.dataCS3_6M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS3_6M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS3_6M01');
                res.CS3_6M01_VelocidadActualMotor = 0;
                res.CS3_6M01_CorrienteActualMotor = 0;
                res.CS3_6M01_PotenciaActualMotor = 0;
                res.CS3_6M01_KWh = 0;
            }
            else {
                _this.TeamCS3_6M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_6M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_6M01) === null || _a === void 0 ? void 0 : _a.CS3_6M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS3_6M01:', (_c = _this.TeamCS3_6M01) === null || _c === void 0 ? void 0 : _c.CS3_6M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs3_6Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs3_6Component.ɵfac = function Cs3_6Component_Factory(t) { return new (t || Cs3_6Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs3_6Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs3_6Component, selectors: [["ngx-cs3_6"]], viewQuery: function Cs3_6Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS3_6M01", 2, "display", "block", "height", "150px"], ["gaugeCS3_6M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs3_6Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS3_6M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS3_6M01 == null ? null : ctx.TeamCS3_6M01.CS3_6M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS3_6M01 == null ? null : ctx.TeamCS3_6M01.CS3_6M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS3_6M01 == null ? null : ctx.TeamCS3_6M01.CS3_6M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS3_6M01 == null ? null : ctx.TeamCS3_6M01.CS3_6M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MzLjYvY3MzLjYuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs3_6Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs3_6Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs3_6',
                templateUrl: './cs3.6.component.html',
                styleUrls: ['./cs3.6.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS3_6M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/cs3.7/cs3.7.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/cs3.7/cs3.7.component.ts ***!
  \********************************************************************/
/*! exports provided: Cs3_7Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cs3_7Component", function() { return Cs3_7Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeCS3_7M01"];
var Cs3_7Component = /** @class */ (function () {
    function Cs3_7Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamCS3_7M01 = {
            CS3_7M01_VelocidadActualMotor: 0,
            CS3_7M01_CorrienteActualMotor: 0,
            CS3_7M01_PotenciaActualMotor: 0,
            CS3_7M01_TorqueActualMotor: 0,
            CS3_7M01_KWh: 0,
            CS3_7M01_voltaje: 0
        };
        this.velocidadCS3_7M01 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Cs3_7Component.prototype.ngOnInit = function () {
        this.changeCS3_7M01();
        // this.dataSF1()
    };
    Cs3_7Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadCS3_7M01;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Cs3_7Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadCS3_7M01;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Cs3_7Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataCS3_7M01')) {
                var value1 = _this.velocidadCS3_7M01;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Cs3_7Component.prototype.changeCS3_7M01 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/CS3_7M01')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data CS3_7M01');
                res.CS3_7M01_VelocidadActualMotor = 0;
                res.CS3_7M01_CorrienteActualMotor = 0;
                res.CS3_7M01_PotenciaActualMotor = 0;
                res.CS3_7M01_KWh = 0;
            }
            else {
                _this.TeamCS3_7M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_7M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_7M01) === null || _a === void 0 ? void 0 : _a.CS3_7M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SF1_1:', _this.TeamCS3_7M01);
            }
        });
    };
    Cs3_7Component.prototype.dataCS3_7M01 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/CS3_7M01'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data CS3_7M01');
                res.CS3_7M01_VelocidadActualMotor = 0;
                res.CS3_7M01_CorrienteActualMotor = 0;
                res.CS3_7M01_PotenciaActualMotor = 0;
                res.CS3_7M01_KWh = 0;
            }
            else {
                _this.TeamCS3_7M01 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadCS3_7M01 = (_b = _this.decimalPipe.transform((_a = _this.TeamCS3_7M01) === null || _a === void 0 ? void 0 : _a.CS3_7M01_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('CS3_7M01:', (_c = _this.TeamCS3_7M01) === null || _c === void 0 ? void 0 : _c.CS3_7M01_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Cs3_7Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Cs3_7Component.ɵfac = function Cs3_7Component_Factory(t) { return new (t || Cs3_7Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Cs3_7Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Cs3_7Component, selectors: [["ngx-cs3_7"]], viewQuery: function Cs3_7Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataCS3_7M01", 2, "display", "block", "height", "150px"], ["gaugeCS3_7M01", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Cs3_7Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " CS3_7M01 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamCS3_7M01 == null ? null : ctx.TeamCS3_7M01.CS3_7M01_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamCS3_7M01 == null ? null : ctx.TeamCS3_7M01.CS3_7M01_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamCS3_7M01 == null ? null : ctx.TeamCS3_7M01.CS3_7M01_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamCS3_7M01 == null ? null : ctx.TeamCS3_7M01.CS3_7M01_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvY3MzLjcvY3MzLjcuY29tcG9uZW50LnNjc3MifQ== */"] });
    return Cs3_7Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Cs3_7Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-cs3_7',
                templateUrl: './cs3.7.component.html',
                styleUrls: ['./cs3.7.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeCS3_7M01']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/sf1.1/sf1.1.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/sf1.1/sf1.1.component.ts ***!
  \********************************************************************/
/*! exports provided: Sf1_1Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sf1_1Component", function() { return Sf1_1Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gauge1"];
// let TeamSF1_1: SF1_1;
var Sf1_1Component = /** @class */ (function () {
    function Sf1_1Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        // = {
        //   SF1_1_VelocidadActualMotor: 0,
        //   SF1_1_CorrienteActualMotor: 0,
        //   SF1_1_PotenciaActualMotor: 0,
        //   SF1_1_TorqueActualMotor: 0,
        //   SF1_1_KWh: 0
        // }
        this.velocidadSf1_1 = 0;
        // custom code start
        //   public load(args: ILoadedEventArgs): void {
        //     let selectedTheme: string = location.hash.split('/')[1];
        //     selectedTheme = selectedTheme ? selectedTheme : 'Material';
        //     args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +
        //     selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i,  'Contrast');
        // }
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value}rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers1 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Sf1_1Component.prototype.ngOnInit = function () {
        this.changeSF1_1();
        this.dataSF1();
    };
    Sf1_1Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSf1_1;
            this.sf1_1.axes[0].pointers[0].animation.enable = true;
            this.sf1_1.setPointerValue(0, 0, value1);
            this.sf1_1.setAnnotationValue(0, 0, this.sf1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Sf1_1Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSf1_1;
                _this.sf1_1.axes[0].pointers[0].animation.enable = true;
                _this.sf1_1.setPointerValue(0, 0, value1);
                _this.sf1_1.setAnnotationValue(0, 0, _this.sf1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Sf1_1Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSf1_1;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.sf1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.sf1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.sf1_1.setAnnotationValue(0, 0, _this.sf1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Sf1_1Component.prototype.changeSF1_1 = function () {
        var _this = this;
        var data = 'SF1_1_';
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/api/SF1_1')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SF1_1');
                // res.SF1_1_VelocidadActualMotor = 0;
                // res.SF1_1_PotenciaActualMotor = 0;
                // res.SF1_1_KWh = 0;
                // res.SF1_1_CorrienteActualMotor = 0;
            }
            else {
                _this.TeamSF1_1 = res[0];
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSf1_1 = this.decimalPipe.transform(this.TeamSF1_1?.SF1_1_VelocidadActualMotor) ?? 0;
                _this.velocidadSf1_1 = (_b = (_a = _this.TeamSF1_1) === null || _a === void 0 ? void 0 : _a.SF1_1_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                console.log('Api/SF1_1:', _this.TeamSF1_1);
            }
        });
    };
    Sf1_1Component.prototype.dataSF1 = function () {
        var _this = this;
        var data = 'SF1_1_';
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(10000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/api/SF1_1'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data SF1_1');
                // res.SF1_1_VelocidadActualMotor = 0;
                // res.SF1_1_PotenciaActualMotor = 0;
                // res.SF1_1_KWh = 0;
                // res.SF1_1_CorrienteActualMotor = 0;
            }
            else {
                _this.TeamSF1_1 = res[0];
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSf1_1 = this.decimalPipe.transform(this.TeamSF1_1?.SF1_1_VelocidadActualMotor) ?? 0;
                _this.velocidadSf1_1 = (_b = (_a = _this.TeamSF1_1) === null || _a === void 0 ? void 0 : _a.SF1_1_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_1:', this.TeamSF1_1);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Sf1_1Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Sf1_1Component.ɵfac = function Sf1_1Component_Factory(t) { return new (t || Sf1_1Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Sf1_1Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Sf1_1Component, selectors: [["ngx-sf1_1"]], viewQuery: function Sf1_1Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sf1_1 = _t.first);
        } }, decls: 28, vars: 12, consts: [["id", "container_1", 2, "display", "block", "height", "150px"], ["gauge1", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Sf1_1Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SF1-1 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSF1_1 == null ? null : ctx.TeamSF1_1.SF1_1_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSF1_1 == null ? null : ctx.TeamSF1_1.SF1_1_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSF1_1 == null ? null : ctx.TeamSF1_1.SF1_1_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 10, ctx.TeamSF1_1 == null ? null : ctx.TeamSF1_1.SF1_1_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvc2YxLjEvc2YxLjEuY29tcG9uZW50LnNjc3MifQ== */"], encapsulation: 2 });
    Sf1_1Component.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: Sf1_1Component, factory: Sf1_1Component.ɵfac, providedIn: 'root' });
    return Sf1_1Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Sf1_1Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-sf1_1',
                templateUrl: './sf1.1.component.html',
                styleUrls: ['./sf1.1.component.scss'],
                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
            }]
    }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { sf1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gauge1']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/sf1.2/sf1.2.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/sf1.2/sf1.2.component.ts ***!
  \********************************************************************/
/*! exports provided: Sf1_2Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sf1_2Component", function() { return Sf1_2Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSF1_2"];
var Sf1_2Component = /** @class */ (function () {
    function Sf1_2Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSF1_2 = {
            SF1_2_VelocidadActualMotor: 0,
            SF1_2_CorrienteActualMotor: 0,
            SF1_2_PotenciaActualMotor: 0,
            SF1_2_TorqueActualMotor: 0,
            SF1_2_voltaje: 0,
            SF1_2_KWh: 0
        };
        this.velocidadSF1_2 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Sf1_2Component.prototype.ngOnInit = function () {
        this.changeSF1_2();
        this.dataSF1_2();
    };
    Sf1_2Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSF1_2;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Sf1_2Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSF1_2;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Sf1_2Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataSF1_2')) {
                var value1 = _this.velocidadSF1_2;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Sf1_2Component.prototype.changeSF1_2 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SF1_2')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SF1_2');
                // res.SF1_2_VelocidadActualMotor = 0;
                // res.SF1_2_CorrienteActualMotor = 0;
                // res.SF1_2_PotenciaActualMotor = 0;
                // res.SF1_2_voltaje = 0;
                // res.SF1_2_KWh = 0;
            }
            else {
                _this.TeamSF1_2 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSF1_2 = this.decimalPipe.transform(this.TeamSF1_2?.SF1_2_VelocidadActualMotor, '1.0-0') ?? 0;
                _this.velocidadSF1_2 = (_b = (_a = _this.TeamSF1_2) === null || _a === void 0 ? void 0 : _a.SF1_2_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_2:', this.TeamSF1_2);
            }
        });
    };
    Sf1_2Component.prototype.dataSF1_2 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(10000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SF1_2'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data SF1_2');
                // res.SF1_2_VelocidadActualMotor = 0;
                // res.SF1_2_CorrienteActualMotor = 0;
                // res.SF1_2_PotenciaActualMotor = 0;
                // res.SF1_2_voltaje = 0;
                // res.SF1_2_KWh = 0;
            }
            else {
                _this.TeamSF1_2 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSF1_2 = this.decimalPipe.transform(this.TeamSF1_2?.SF1_2_VelocidadActualMotor) ?? 0;
                _this.velocidadSF1_2 = (_b = (_a = _this.TeamSF1_2) === null || _a === void 0 ? void 0 : _a.SF1_2_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_2:', this.TeamSF1_2?.SF1_2_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Sf1_2Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Sf1_2Component.ɵfac = function Sf1_2Component_Factory(t) { return new (t || Sf1_2Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Sf1_2Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Sf1_2Component, selectors: [["ngx-sf1_2"]], viewQuery: function Sf1_2Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-dataSF1_2", 2, "display", "block", "height", "150px"], ["gaugeSF1_2", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Sf1_2Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SF1_2 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSF1_2 == null ? null : ctx.TeamSF1_2.SF1_2_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSF1_2 == null ? null : ctx.TeamSF1_2.SF1_2_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSF1_2 == null ? null : ctx.TeamSF1_2.SF1_2_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamSF1_2 == null ? null : ctx.TeamSF1_2.SF1_2_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvc2YxLjIvc2YxLjIuY29tcG9uZW50LnNjc3MifQ== */"], encapsulation: 2 });
    Sf1_2Component.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: Sf1_2Component, factory: Sf1_2Component.ɵfac, providedIn: 'root' });
    return Sf1_2Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Sf1_2Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-sf1_2',
                templateUrl: './sf1.2.component.html',
                styleUrls: ['./sf1.2.component.scss'],
                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
            }]
    }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSF1_2']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/sf3.1/sf3.1.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/sf3.1/sf3.1.component.ts ***!
  \********************************************************************/
/*! exports provided: Sf3_1Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sf3_1Component", function() { return Sf3_1Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gauge3"];
var TeamSF3_1;
var Sf3_1Component = /** @class */ (function () {
    function Sf3_1Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        // dataSF3_1? = TeamSF3_1
        this.TeamSF3_1 = {
            SF3_1_VelocidadActualMotor: 0,
            SF3_1_CorrienteActualMotor: 0,
            SF3_1_PotenciaActualMotor: 0,
            SF3_1_TorqueActualMotor: 0,
            SF3_1_voltaje: 0,
            SF3_1_KWh: 0
        };
        this.velocidadSf3_1 = 0;
        // custom code start
        //   public load(args: ILoadedEventArgs): void {
        //     let selectedTheme: string = location.hash.split('/')[1];
        //     selectedTheme = selectedTheme ? selectedTheme : 'Material';
        //     args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +
        //     selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i,  'Contrast');
        // }
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation1 = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value}rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}rpm</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.sf3_1Annotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}rpm</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers3 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Sf3_1Component.prototype.ngOnInit = function () {
        this.changeSF3_1();
        // this.test3();
        this.dataSF3();
    };
    Sf3_1Component.prototype.test3 = function () {
        var _this = this;
        var data = 10;
        this.tooltipInterval3 = window.setInterval(function () {
            if (document.getElementById('sample-datas')) {
                var value3 = data;
                _this.sf3_1.axes[0].pointers[0].animation.enable = true;
                _this.sf3_1.setPointerValue(0, 0, value3);
                _this.sf3_1.setAnnotationValue(0, 0, _this.sf3_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval3);
            }
        }, 1000);
    };
    Sf3_1Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval3 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSf3_1;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.sf3_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.sf3_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.sf3_1.setAnnotationValue(0, 0, _this.sf3_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval3);
            }
        }, 2000);
    };
    Sf3_1Component.prototype.changeSF3_1 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SF3_1')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (data) {
            var _a;
            if (JSON.stringify(data) == '{}') {
                // data.SF3_1_VelocidadActualMotor = 0;
                // data.SF3_1_PotenciaActualMotor = 0;
                // data.SF3_1_voltaje = 0;
                // data.SF3_1_KWh = 0;
                // data.SF3_1_CorrienteActualMotor = 0;
            }
            else {
                _this.TeamSF3_1 = data;
                // this.dataSF3_1 = TeamSF3_1
                // this.velocidadSf3_1 =  this.decimalPipe.transform( this.TeamSF3_1.SF3_1_VelocidadActualMotor, '1.0-0') ?? 0;
                _this.velocidadSf3_1 = (_a = _this.TeamSF3_1.SF3_1_VelocidadActualMotor, (_a !== null && _a !== void 0 ? _a : 0));
                // console.log('SF3:', this.velocidadSf3_1);
            }
        });
    };
    Sf3_1Component.prototype.dataSF3 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems3) {
            this.intervalSubscriptionItems3.unsubscribe();
        }
        this.intervalSubscriptionItems3 = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["interval"])(10000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SF3_1'); }))
            .subscribe(function (data) {
            var _a;
            if (JSON.stringify(data) == '{}') {
                // data.SF3_1_VelocidadActualMotor = 0;
                // data.SF3_1_PotenciaActualMotor = 0;
                // data.SF3_1_voltaje = 0;
                // data.SF3_1_KWh = 0;
                // data.SF3_1_CorrienteActualMotor = 0;
            }
            else {
                _this.TeamSF3_1 = data[0];
                // this.dataSF3_1 = TeamSF3_1
                // this.velocidadSf3_1 =  this.decimalPipe.transform( this.TeamSF3_1.SF3_1_VelocidadActualMotor, '1.0-0') ?? 0;
                _this.velocidadSf3_1 = (_a = _this.TeamSF3_1.SF3_1_VelocidadActualMotor, (_a !== null && _a !== void 0 ? _a : 0));
                console.log('SF3_1:', _this.velocidadSf3_1);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error SF3_1..!'); });
    };
    Sf3_1Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Sf3_1Component.ɵfac = function Sf3_1Component_Factory(t) { return new (t || Sf3_1Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DecimalPipe"])); };
    Sf3_1Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Sf3_1Component, selectors: [["ngx-sf3_1"]], viewQuery: function Sf3_1Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sf3_1 = _t.first);
        } }, decls: 31, vars: 12, consts: [["id", "sample-data", 2, "display", "block", "height", "150px"], ["gauge3", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Sf3_1Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SF3-1 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](30, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSF3_1 == null ? null : ctx.TeamSF3_1.SF3_1_CorrienteActualMotor, "  \u00A0 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSF3_1 == null ? null : ctx.TeamSF3_1.SF3_1_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSF3_1 == null ? null : ctx.TeamSF3_1.SF3_1_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](30, 10, ctx.TeamSF3_1 == null ? null : ctx.TeamSF3_1.SF3_1_KWh), "   kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zZmMvc2YzLjEvc2YzLjEuY29tcG9uZW50LnNjc3MifQ== */"], encapsulation: 2 });
    Sf3_1Component.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: Sf3_1Component, factory: Sf3_1Component.ɵfac, providedIn: 'root' });
    return Sf3_1Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Sf3_1Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-sf3_1',
                templateUrl: './sf3.1.component.html',
                styleUrls: ['./sf3.1.component.scss'],
                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
            }]
    }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DecimalPipe"] }]; }, { sf3_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gauge3']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/sf3.2/sf3.2.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/sf3.2/sf3.2.component.ts ***!
  \********************************************************************/
/*! exports provided: Sf3_2Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sf3_2Component", function() { return Sf3_2Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSF3_2"];
var TeamSF3_2;
var Sf3_2Component = /** @class */ (function () {
    function Sf3_2Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSF3_2 = {
            SF3_2_VelocidadActualMotor: 0,
            SF3_2_CorrienteActualMotor: 0,
            SF3_2_PotenciaActualMotor: 0,
            SF3_2_TorqueActualMotor: 0,
            SF3_2_KWh: 0,
            SF3_2_voltaje: 0
        };
        this.velocidadSF3_2 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers2 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Sf3_2Component.prototype.ngOnInit = function () {
        this.changeSF3_2();
        // this.dataSF1()
    };
    Sf3_2Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSF3_2;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Sf3_2Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSF3_2;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Sf3_2Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataSF3_2')) {
                var value1 = _this.velocidadSF3_2;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Sf3_2Component.prototype.changeSF3_2 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SF3_2')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SF3_2');
                res.SF3_2_VelocidadActualMotor = 0;
                res.SF3_2_CorrienteActualMotor = 0;
                res.SF3_2_PotenciaActualMotor = 0;
                res.SF3_2_KWh = 0;
            }
            else {
                _this.TeamSF3_2 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSF3_2 = this.decimalPipe.transform(this.TeamSF3_2?.SF3_2_VelocidadActualMotor) ?? 0;
                // console.log('SF1_1:', this.TeamSF3_2);
                _this.velocidadSF3_2 = (_b = (_a = _this.TeamSF3_2) === null || _a === void 0 ? void 0 : _a.SF3_2_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
            }
        });
    };
    Sf3_2Component.prototype.dataSF3_2 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SF3_2'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('no hay data SF3_2');
                res.SF3_2_VelocidadActualMotor = 0;
                res.SF3_2_CorrienteActualMotor = 0;
                res.SF3_2_PotenciaActualMotor = 0;
                res.SF3_2_KWh = 0;
            }
            else {
                _this.TeamSF3_2 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSF3_2 = (_b = (_a = _this.TeamSF3_2) === null || _a === void 0 ? void 0 : _a.SF3_2_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Sf3_2Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Sf3_2Component.ɵfac = function Sf3_2Component_Factory(t) { return new (t || Sf3_2Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Sf3_2Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Sf3_2Component, selectors: [["ngx-sf3_2"]], viewQuery: function Sf3_2Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 28, vars: 12, consts: [["id", "sample-dataSF3_2", 2, "display", "block", "height", "150px"], ["gaugeSF3_2", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Sf3_2Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SF3_2 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSF3_2 == null ? null : ctx.TeamSF3_2.SF3_2_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSF3_2 == null ? null : ctx.TeamSF3_2.SF3_2_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSF3_2 == null ? null : ctx.TeamSF3_2.SF3_2_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 10, ctx.TeamSF3_2 == null ? null : ctx.TeamSF3_2.SF3_2_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: [".fontDes {\n  float: right;\n  padding-left: 5px;\n  color: #424242;\n  font-size: 20px;\n}\n\n.fontDes1 {\n  color: #9E9E9E;\n  font-size: 16px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvem9uZS10ZWFtcy90ZWFtLXNmYy9zZjMuMi9DOlxcVXNlcnNcXGpsb3NhZGFcXERvY3VtZW50c1xcTWF0QmFnLkZyb250ZW5kVjEvc3JjXFxhcHBcXHBhZ2VzXFx6b25lLXRlYW1zXFx0ZWFtLXNmY1xcc2YzLjJcXHNmMy4yLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy96b25lLXRlYW1zL3RlYW0tc2ZjL3NmMy4yL3NmMy4yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsZUFBZTtBQ0NuQjs7QURFQTtFQUNJLGNBQWM7RUFDZCxlQUFlO0FDQ25CIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvem9uZS10ZWFtcy90ZWFtLXNmYy9zZjMuMi9zZjMuMi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb250RGVzIHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gICAgY29sb3I6ICM0MjQyNDI7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbn1cclxuXHJcbi5mb250RGVzMSB7XHJcbiAgICBjb2xvcjogIzlFOUU5RTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufSIsIi5mb250RGVzIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgY29sb3I6ICM0MjQyNDI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuLmZvbnREZXMxIHtcbiAgY29sb3I6ICM5RTlFOUU7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbiJdfQ== */"], encapsulation: 2 });
    Sf3_2Component.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: Sf3_2Component, factory: Sf3_2Component.ɵfac, providedIn: 'root' });
    return Sf3_2Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Sf3_2Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-sf3_2',
                templateUrl: './sf3.2.component.html',
                styleUrls: ['./sf3.2.component.scss'],
                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
            }]
    }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSF3_2']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/team-sfc-routing.module.ts":
/*!**********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/team-sfc-routing.module.ts ***!
  \**********************************************************************/
/*! exports provided: TeamSFCRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TeamSFCRoutingModule", function() { return TeamSFCRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm5/router.js");
/* harmony import */ var _team_sfc_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./team-sfc.component */ "./src/app/pages/zone-teams/team-sfc/team-sfc.component.ts");





var routes = [
    {
        path: '',
        component: _team_sfc_component__WEBPACK_IMPORTED_MODULE_2__["TeamSfcComponent"],
        children: [
        // {
        //   path: 'sfc',
        //   component: SfcComponent,
        // },
        ]
    }
];
var TeamSFCRoutingModule = /** @class */ (function () {
    function TeamSFCRoutingModule() {
    }
    TeamSFCRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: TeamSFCRoutingModule });
    TeamSFCRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function TeamSFCRoutingModule_Factory(t) { return new (t || TeamSFCRoutingModule)(); }, imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
    return TeamSFCRoutingModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](TeamSFCRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TeamSFCRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
                exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/team-sfc.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/team-sfc.component.ts ***!
  \*****************************************************************/
/*! exports provided: TeamSfcComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TeamSfcComponent", function() { return TeamSfcComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm5/router.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");
/* harmony import */ var _sf1_1_sf1_1_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sf1.1/sf1.1.component */ "./src/app/pages/zone-teams/team-sfc/sf1.1/sf1.1.component.ts");
/* harmony import */ var _sf1_2_sf1_2_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sf1.2/sf1.2.component */ "./src/app/pages/zone-teams/team-sfc/sf1.2/sf1.2.component.ts");
/* harmony import */ var _sf3_1_sf3_1_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sf3.1/sf3.1.component */ "./src/app/pages/zone-teams/team-sfc/sf3.1/sf3.1.component.ts");
/* harmony import */ var _sf3_2_sf3_2_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sf3.2/sf3.2.component */ "./src/app/pages/zone-teams/team-sfc/sf3.2/sf3.2.component.ts");
/* harmony import */ var _cs1_3_cs1_3_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./cs1.3/cs1.3.component */ "./src/app/pages/zone-teams/team-sfc/cs1.3/cs1.3.component.ts");
/* harmony import */ var _cs1_4_cs1_4_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cs1.4/cs1.4.component */ "./src/app/pages/zone-teams/team-sfc/cs1.4/cs1.4.component.ts");
/* harmony import */ var _cs1_5_cs1_5_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cs1.5/cs1.5.component */ "./src/app/pages/zone-teams/team-sfc/cs1.5/cs1.5.component.ts");
/* harmony import */ var _cs1_6_cs1_6_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cs1.6/cs1.6.component */ "./src/app/pages/zone-teams/team-sfc/cs1.6/cs1.6.component.ts");
/* harmony import */ var _cs1_7_cs1_7_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cs1.7/cs1.7.component */ "./src/app/pages/zone-teams/team-sfc/cs1.7/cs1.7.component.ts");
/* harmony import */ var _cs3_3_cs3_3_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cs3.3/cs3.3.component */ "./src/app/pages/zone-teams/team-sfc/cs3.3/cs3.3.component.ts");
/* harmony import */ var _cs3_4_cs3_4_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./cs3.4/cs3.4.component */ "./src/app/pages/zone-teams/team-sfc/cs3.4/cs3.4.component.ts");
/* harmony import */ var _cs3_5_cs3_5_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./cs3.5/cs3.5.component */ "./src/app/pages/zone-teams/team-sfc/cs3.5/cs3.5.component.ts");
/* harmony import */ var _cs3_6_cs3_6_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./cs3.6/cs3.6.component */ "./src/app/pages/zone-teams/team-sfc/cs3.6/cs3.6.component.ts");
/* harmony import */ var _cs3_7_cs3_7_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./cs3.7/cs3.7.component */ "./src/app/pages/zone-teams/team-sfc/cs3.7/cs3.7.component.ts");























var TeamSfcComponent = /** @class */ (function () {
    function TeamSfcComponent(http, router, api) {
        this.http = http;
        this.router = router;
        this.api = api;
        this.alive = true;
    }
    TeamSfcComponent.prototype.ngOnInit = function () { };
    TeamSfcComponent.prototype.back = function () {
        this.router.navigate(['/pages/conveyor/energyZone']);
        return false;
    };
    TeamSfcComponent.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    TeamSfcComponent.ɵfac = function TeamSfcComponent_Factory(t) { return new (t || TeamSfcComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"])); };
    TeamSfcComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: TeamSfcComponent, selectors: [["ngx-teamSfc"]], decls: 39, vars: 0, consts: [[1, "navigation"], ["href", "#", "aria-label", "Back", 1, "link", "back-link", 3, "click"], ["icon", "arrow-back"], [1, "h"], [1, "col-sm-12"], [1, "row"], [1, "col-sm-3"]], template: function TeamSfcComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "router-outlet");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nav", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "a", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TeamSfcComponent_Template_a_click_4_listener() { return ctx.back(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "nb-icon", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "h5", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "SECURITY FEED CHECK-IN");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](12, "ngx-sf1_1");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "ngx-sf1_2");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](16, "ngx-sf3_1");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](18, "ngx-sf3_2");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](20, "ngx-cs1_3");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](22, "ngx-cs1_4");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](24, "ngx-cs1_5");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](26, "ngx-cs1_6");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](28, "ngx-cs1_7");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](30, "ngx-cs3_3");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](32, "ngx-cs3_4");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](34, "ngx-cs3_5");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](36, "ngx-cs3_6");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](38, "ngx-cs3_7");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } }, directives: [_angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterOutlet"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbIconComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbCardBodyComponent"], _sf1_1_sf1_1_component__WEBPACK_IMPORTED_MODULE_5__["Sf1_1Component"], _sf1_2_sf1_2_component__WEBPACK_IMPORTED_MODULE_6__["Sf1_2Component"], _sf3_1_sf3_1_component__WEBPACK_IMPORTED_MODULE_7__["Sf3_1Component"], _sf3_2_sf3_2_component__WEBPACK_IMPORTED_MODULE_8__["Sf3_2Component"], _cs1_3_cs1_3_component__WEBPACK_IMPORTED_MODULE_9__["Cs1_3Component"], _cs1_4_cs1_4_component__WEBPACK_IMPORTED_MODULE_10__["Cs1_4Component"], _cs1_5_cs1_5_component__WEBPACK_IMPORTED_MODULE_11__["Cs1_5Component"], _cs1_6_cs1_6_component__WEBPACK_IMPORTED_MODULE_12__["Cs1_6Component"], _cs1_7_cs1_7_component__WEBPACK_IMPORTED_MODULE_13__["Cs1_7Component"], _cs3_3_cs3_3_component__WEBPACK_IMPORTED_MODULE_14__["Cs3_3Component"], _cs3_4_cs3_4_component__WEBPACK_IMPORTED_MODULE_15__["Cs3_4Component"], _cs3_5_cs3_5_component__WEBPACK_IMPORTED_MODULE_16__["Cs3_5Component"], _cs3_6_cs3_6_component__WEBPACK_IMPORTED_MODULE_17__["Cs3_6Component"], _cs3_7_cs3_7_component__WEBPACK_IMPORTED_MODULE_18__["Cs3_7Component"]], styles: [".h[_ngcontent-%COMP%] {\n    margin: -1.8rem 0.19rem 0.0rem 2.7rem;\n}"] });
    return TeamSfcComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TeamSfcComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "ngx-teamSfc",
                template: "\n    <router-outlet>\n    <nb-card>\n      <nb-card-header>\n      <nav class=\"navigation\">\n            <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\">\n                <nb-icon icon=\"arrow-back\"></nb-icon>\n            </a>\n            <h5 class=\"h\">SECURITY FEED CHECK-IN</h5>\n        </nav>\n      </nb-card-header>\n        <!-- <div class=\"container\"> -->\n          <nb-card-body>\n      <div class=\"col-sm-12\">\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <ngx-sf1_1></ngx-sf1_1>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-sf1_2></ngx-sf1_2>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-sf3_1></ngx-sf3_1>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-sf3_2></ngx-sf3_2>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs1_3></ngx-cs1_3>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs1_4></ngx-cs1_4>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs1_5></ngx-cs1_5>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs1_6></ngx-cs1_6>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs1_7></ngx-cs1_7>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs3_3></ngx-cs3_3>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs3_4></ngx-cs3_4>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs3_5></ngx-cs3_5>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs3_6></ngx-cs3_6>\n          </div>\n          <div class=\"col-sm-3\">\n            <ngx-cs3_7></ngx-cs3_7>\n          </div>\n\n          <!-- <div class=\"control-section\">\n          <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <ngx-cs1></ngx-cs1>\n          </div>\n          </div>\n          </div> -->\n        </div>\n      </div>\n</nb-card-body>\n      <!-- </div> -->\n\n    </nb-card>\n\n    <style>\n      .h {\n    margin: -1.8rem 0.19rem 0.0rem 2.7rem;\n}\n    </style>\n\n    </router-outlet>\n  ",
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] }]; }, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-sfc/team-sfc.module.ts":
/*!**************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-sfc/team-sfc.module.ts ***!
  \**************************************************************/
/*! exports provided: TeamSFCModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TeamSFCModule", function() { return TeamSFCModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");
/* harmony import */ var _team_sfc_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./team-sfc-routing.module */ "./src/app/pages/zone-teams/team-sfc/team-sfc-routing.module.ts");
/* harmony import */ var _team_sfc_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./team-sfc.component */ "./src/app/pages/zone-teams/team-sfc/team-sfc.component.ts");
/* harmony import */ var _sf1_1_sf1_1_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sf1.1/sf1.1.component */ "./src/app/pages/zone-teams/team-sfc/sf1.1/sf1.1.component.ts");
/* harmony import */ var _sf1_2_sf1_2_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sf1.2/sf1.2.component */ "./src/app/pages/zone-teams/team-sfc/sf1.2/sf1.2.component.ts");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../app.component */ "./src/app/app.component.ts");
/* harmony import */ var _sf3_1_sf3_1_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sf3.1/sf3.1.component */ "./src/app/pages/zone-teams/team-sfc/sf3.1/sf3.1.component.ts");
/* harmony import */ var _sf3_2_sf3_2_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sf3.2/sf3.2.component */ "./src/app/pages/zone-teams/team-sfc/sf3.2/sf3.2.component.ts");
/* harmony import */ var _cs1_cs1_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cs1/cs1.component */ "./src/app/pages/zone-teams/team-sfc/cs1/cs1.component.ts");
/* harmony import */ var _cs1_3_cs1_3_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cs1.3/cs1.3.component */ "./src/app/pages/zone-teams/team-sfc/cs1.3/cs1.3.component.ts");
/* harmony import */ var _cs1_4_cs1_4_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cs1.4/cs1.4.component */ "./src/app/pages/zone-teams/team-sfc/cs1.4/cs1.4.component.ts");
/* harmony import */ var _cs1_5_cs1_5_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cs1.5/cs1.5.component */ "./src/app/pages/zone-teams/team-sfc/cs1.5/cs1.5.component.ts");
/* harmony import */ var _cs1_6_cs1_6_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./cs1.6/cs1.6.component */ "./src/app/pages/zone-teams/team-sfc/cs1.6/cs1.6.component.ts");
/* harmony import */ var _cs1_7_cs1_7_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./cs1.7/cs1.7.component */ "./src/app/pages/zone-teams/team-sfc/cs1.7/cs1.7.component.ts");
/* harmony import */ var _cs3_3_cs3_3_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./cs3.3/cs3.3.component */ "./src/app/pages/zone-teams/team-sfc/cs3.3/cs3.3.component.ts");
/* harmony import */ var _cs3_4_cs3_4_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./cs3.4/cs3.4.component */ "./src/app/pages/zone-teams/team-sfc/cs3.4/cs3.4.component.ts");
/* harmony import */ var _cs3_5_cs3_5_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./cs3.5/cs3.5.component */ "./src/app/pages/zone-teams/team-sfc/cs3.5/cs3.5.component.ts");
/* harmony import */ var _cs3_6_cs3_6_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./cs3.6/cs3.6.component */ "./src/app/pages/zone-teams/team-sfc/cs3.6/cs3.6.component.ts");
/* harmony import */ var _cs3_7_cs3_7_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./cs3.7/cs3.7.component */ "./src/app/pages/zone-teams/team-sfc/cs3.7/cs3.7.component.ts");























var TeamSFCModule = /** @class */ (function () {
    function TeamSFCModule() {
    }
    TeamSFCModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: TeamSFCModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_8__["AppComponent"]] });
    TeamSFCModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function TeamSFCModule_Factory(t) { return new (t || TeamSFCModule)(); }, providers: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]], imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _team_sfc_routing_module__WEBPACK_IMPORTED_MODULE_3__["TeamSFCRoutingModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
                _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__["CircularGaugeAllModule"],
            ]] });
    return TeamSFCModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](TeamSFCModule, { declarations: [_team_sfc_component__WEBPACK_IMPORTED_MODULE_4__["TeamSfcComponent"], _sf1_1_sf1_1_component__WEBPACK_IMPORTED_MODULE_5__["Sf1_1Component"], _sf1_2_sf1_2_component__WEBPACK_IMPORTED_MODULE_6__["Sf1_2Component"], _sf3_1_sf3_1_component__WEBPACK_IMPORTED_MODULE_9__["Sf3_1Component"], _sf3_2_sf3_2_component__WEBPACK_IMPORTED_MODULE_10__["Sf3_2Component"], _cs1_cs1_component__WEBPACK_IMPORTED_MODULE_11__["Cs1Component"],
        _cs1_3_cs1_3_component__WEBPACK_IMPORTED_MODULE_12__["Cs1_3Component"], _cs1_4_cs1_4_component__WEBPACK_IMPORTED_MODULE_13__["Cs1_4Component"], _cs1_5_cs1_5_component__WEBPACK_IMPORTED_MODULE_14__["Cs1_5Component"], _cs1_6_cs1_6_component__WEBPACK_IMPORTED_MODULE_15__["Cs1_6Component"], _cs1_7_cs1_7_component__WEBPACK_IMPORTED_MODULE_16__["Cs1_7Component"], _cs3_3_cs3_3_component__WEBPACK_IMPORTED_MODULE_17__["Cs3_3Component"],
        _cs3_4_cs3_4_component__WEBPACK_IMPORTED_MODULE_18__["Cs3_4Component"], _cs3_5_cs3_5_component__WEBPACK_IMPORTED_MODULE_19__["Cs3_5Component"], _cs3_6_cs3_6_component__WEBPACK_IMPORTED_MODULE_20__["Cs3_6Component"], _cs3_7_cs3_7_component__WEBPACK_IMPORTED_MODULE_21__["Cs3_7Component"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
        _team_sfc_routing_module__WEBPACK_IMPORTED_MODULE_3__["TeamSFCRoutingModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
        _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__["CircularGaugeAllModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TeamSFCModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                declarations: [_team_sfc_component__WEBPACK_IMPORTED_MODULE_4__["TeamSfcComponent"], _sf1_1_sf1_1_component__WEBPACK_IMPORTED_MODULE_5__["Sf1_1Component"], _sf1_2_sf1_2_component__WEBPACK_IMPORTED_MODULE_6__["Sf1_2Component"], _sf3_1_sf3_1_component__WEBPACK_IMPORTED_MODULE_9__["Sf3_1Component"], _sf3_2_sf3_2_component__WEBPACK_IMPORTED_MODULE_10__["Sf3_2Component"], _cs1_cs1_component__WEBPACK_IMPORTED_MODULE_11__["Cs1Component"],
                    _cs1_3_cs1_3_component__WEBPACK_IMPORTED_MODULE_12__["Cs1_3Component"], _cs1_4_cs1_4_component__WEBPACK_IMPORTED_MODULE_13__["Cs1_4Component"], _cs1_5_cs1_5_component__WEBPACK_IMPORTED_MODULE_14__["Cs1_5Component"], _cs1_6_cs1_6_component__WEBPACK_IMPORTED_MODULE_15__["Cs1_6Component"], _cs1_7_cs1_7_component__WEBPACK_IMPORTED_MODULE_16__["Cs1_7Component"], _cs3_3_cs3_3_component__WEBPACK_IMPORTED_MODULE_17__["Cs3_3Component"],
                    _cs3_4_cs3_4_component__WEBPACK_IMPORTED_MODULE_18__["Cs3_4Component"], _cs3_5_cs3_5_component__WEBPACK_IMPORTED_MODULE_19__["Cs3_5Component"], _cs3_6_cs3_6_component__WEBPACK_IMPORTED_MODULE_20__["Cs3_6Component"], _cs3_7_cs3_7_component__WEBPACK_IMPORTED_MODULE_21__["Cs3_7Component"],],
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                    _team_sfc_routing_module__WEBPACK_IMPORTED_MODULE_3__["TeamSFCRoutingModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
                    _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__["CircularGaugeAllModule"],
                ],
                providers: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]],
                bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_8__["AppComponent"]]
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/ss1.1/ss1.1.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/ss1.1/ss1.1.component.ts ***!
  \*******************************************************************/
/*! exports provided: Ss1_1Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ss1_1Component", function() { return Ss1_1Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSS1"];
var Ss1_1Component = /** @class */ (function () {
    function Ss1_1Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSS1_1 = {
            SS1_1_VelocidadActualMotor: 0,
            SS1_1_CorrienteActualMotor: 0,
            SS1_1_PotenciaActualMotor: 0,
            SS1_1_TorqueActualMotor: 0,
            SS1_1_KWh: 0,
            SS1_1_voltaje: 0
        };
        this.velocidadSS1_1 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers1 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Ss1_1Component.prototype.ngOnInit = function () {
        this.changeSS1_1();
        this.dataSS1_1();
    };
    Ss1_1Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSS1_1;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Ss1_1Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSS1_1;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Ss1_1Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSS1_1;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Ss1_1Component.prototype.changeSS1_1 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SS1_1')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_1');
                res.SS1_1_VelocidadActualMotor = 0;
                res.SS1_1_CorrienteActualMotor = 0;
                res.SS1_1_PotenciaActualMotor = 0;
                res.SS1_1_KWh = 0;
            }
            else {
                _this.TeamSS1_1 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSS1_1 = (_b = _this.decimalPipe.transform((_a = _this.TeamSS1_1) === null || _a === void 0 ? void 0 : _a.SS1_1_VelocidadActualMotor, '1.0-0'), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SS1_1:', _this.velocidadSS1_1);
            }
        });
    };
    Ss1_1Component.prototype.dataSS1_1 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SS1_1'); }))
            .subscribe(function (res) {
            var _a, _b, _c;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_1');
                res.SS1_1_VelocidadActualMotor = 0;
                res.SS1_1_CorrienteActualMotor = 0;
                res.SS1_1_PotenciaActualMotor = 0;
                res.OSR1_1_KWh = 0;
            }
            else {
                _this.TeamSS1_1 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSS1_1 = (_b = _this.decimalPipe.transform((_a = _this.TeamSS1_1) === null || _a === void 0 ? void 0 : _a.SS1_1_VelocidadActualMotor), (_b !== null && _b !== void 0 ? _b : 0));
                console.log('SS1_1:', (_c = _this.TeamSS1_1) === null || _c === void 0 ? void 0 : _c.SS1_1_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Ss1_1Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Ss1_1Component.ɵfac = function Ss1_1Component_Factory(t) { return new (t || Ss1_1Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Ss1_1Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Ss1_1Component, selectors: [["ngx-ss1_1"]], viewQuery: function Ss1_1Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 28, vars: 13, consts: [["id", "sample-data", 2, "display", "block", "height", "150px"], ["gaugeSS1", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Ss1_1Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SS1-1 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("minorTicks", ctx.minorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSS1_1 == null ? null : ctx.TeamSS1_1.SS1_1_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSS1_1 == null ? null : ctx.TeamSS1_1.SS1_1_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSS1_1 == null ? null : ctx.TeamSS1_1.SS1_1_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 11, ctx.TeamSS1_1 == null ? null : ctx.TeamSS1_1.SS1_1_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zcy9zczEuMS9zczEuMS5jb21wb25lbnQuc2NzcyJ9 */"] });
    return Ss1_1Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Ss1_1Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-ss1_1',
                templateUrl: './ss1.1.component.html',
                styleUrls: ['./ss1.1.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSS1']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/ss1.2/ss1.2.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/ss1.2/ss1.2.component.ts ***!
  \*******************************************************************/
/*! exports provided: Ss1_2Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ss1_2Component", function() { return Ss1_2Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSS2"];
var Ss1_2Component = /** @class */ (function () {
    function Ss1_2Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSS1_2 = {
            SS1_2_VelocidadActualMotor: 0,
            SS1_2_CorrienteActualMotor: 0,
            SS1_2_PotenciaActualMotor: 0,
            SS1_2_TorqueActualMotor: 0,
            SS1_2_KWh: 0,
            SS1_2_voltaje: 0
        };
        this.velocidadSS1_2 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers1 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Ss1_2Component.prototype.ngOnInit = function () {
        this.changeSS1_2();
        this.dataSS1_2();
    };
    Ss1_2Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSS1_2;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Ss1_2Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSS1_2;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Ss1_2Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataSS2')) {
                var value1 = _this.velocidadSS1_2;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Ss1_2Component.prototype.changeSS1_2 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SS1_2')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_2');
                res.SS1_2_VelocidadActualMotor = 0;
                res.SS1_2_CorrienteActualMotor = 0;
                res.SS1_2_PotenciaActualMotor = 0;
                res.SS1_2_KWh = 0;
            }
            else {
                _this.TeamSS1_2 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSS1_2 = this.decimalPipe.transform(this.TeamSS1_2?.SS1_2_VelocidadActualMotor) ?? 0;
                _this.velocidadSS1_2 = (_b = (_a = _this.TeamSS1_2) === null || _a === void 0 ? void 0 : _a.SS1_2_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_1:', this.TeamSF1_1);
            }
        });
    };
    Ss1_2Component.prototype.dataSS1_2 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SS1_2'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_2');
                res.SS1_2_VelocidadActualMotor = 0;
                res.SS1_2_CorrienteActualMotor = 0;
                res.SS1_2_PotenciaActualMotor = 0;
                res.OSR1_2_KWh = 0;
            }
            else {
                _this.TeamSS1_2 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSS1_2 = (_b = (_a = _this.TeamSS1_2) === null || _a === void 0 ? void 0 : _a.SS1_2_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SS1_2:', this.TeamSS1_2?.SS1_2_VelocidadActualMotor);
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Ss1_2Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Ss1_2Component.ɵfac = function Ss1_2Component_Factory(t) { return new (t || Ss1_2Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Ss1_2Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Ss1_2Component, selectors: [["ngx-ss1_2"]], viewQuery: function Ss1_2Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 28, vars: 13, consts: [["id", "sample-dataSS2", 2, "display", "block", "height", "150px"], ["gaugeSS2", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Ss1_2Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SS1-2 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("minorTicks", ctx.minorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSS1_2 == null ? null : ctx.TeamSS1_2.SS1_2_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSS1_2 == null ? null : ctx.TeamSS1_2.SS1_2_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSS1_2 == null ? null : ctx.TeamSS1_2.SS1_2_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 11, ctx.TeamSS1_2 == null ? null : ctx.TeamSS1_2.SS1_2_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zcy9zczEuMi9zczEuMi5jb21wb25lbnQuc2NzcyJ9 */"] });
    return Ss1_2Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Ss1_2Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-ss1_2',
                templateUrl: './ss1.2.component.html',
                styleUrls: ['./ss1.2.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSS2']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/ss1.3/ss1.3.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/ss1.3/ss1.3.component.ts ***!
  \*******************************************************************/
/*! exports provided: Ss1_3Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ss1_3Component", function() { return Ss1_3Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSS3"];
var Ss1_3Component = /** @class */ (function () {
    function Ss1_3Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSS1_3 = {
            SS1_3_VelocidadActualMotor: 0,
            SS1_3_CorrienteActualMotor: 0,
            SS1_3_PotenciaActualMotor: 0,
            SS1_3_TorqueActualMotor: 0,
            SS1_3_KWh: 0,
            SS1_3_voltaje: 0
        };
        this.velocidadSS1_3 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers1 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Ss1_3Component.prototype.ngOnInit = function () {
        this.changeSS1_3();
        this.dataSS1_3();
    };
    Ss1_3Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSS1_3;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Ss1_3Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSS1_3;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Ss1_3Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataSS3')) {
                var value1 = _this.velocidadSS1_3;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Ss1_3Component.prototype.changeSS1_3 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SS1_3')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_3');
                res.SS1_3_VelocidadActualMotor = 0;
                res.SS1_3_CorrienteActualMotor = 0;
                res.SS1_3_PotenciaActualMotor = 0;
                res.SS1_3_KWh = 0;
            }
            else {
                _this.TeamSS1_3 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSS1_3 = this.decimalPipe.transform(this.TeamSS1_3?.SS1_3_VelocidadActualMotor) ?? 0;
                _this.velocidadSS1_3 = (_b = (_a = _this.TeamSS1_3) === null || _a === void 0 ? void 0 : _a.SS1_3_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_1:', this.TeamSF1_1);
            }
        });
    };
    Ss1_3Component.prototype.dataSS1_3 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SS1_3'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_3');
                res.SS1_3_VelocidadActualMotor = 0;
                res.SS1_3_CorrienteActualMotor = 0;
                res.SS1_3_PotenciaActualMotor = 0;
                res.OSR1_3_KWh = 0;
            }
            else {
                _this.TeamSS1_3 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSS1_3 = (_b = (_a = _this.TeamSS1_3) === null || _a === void 0 ? void 0 : _a.SS1_3_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Ss1_3Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Ss1_3Component.ɵfac = function Ss1_3Component_Factory(t) { return new (t || Ss1_3Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Ss1_3Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Ss1_3Component, selectors: [["ngx-ss1_3"]], viewQuery: function Ss1_3Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 28, vars: 13, consts: [["id", "sample-dataSS3", 2, "display", "block", "height", "150px"], ["gaugeSS3", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Ss1_3Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SS1-3 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("minorTicks", ctx.minorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSS1_3 == null ? null : ctx.TeamSS1_3.SS1_3_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSS1_3 == null ? null : ctx.TeamSS1_3.SS1_3_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSS1_3 == null ? null : ctx.TeamSS1_3.SS1_3_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 11, ctx.TeamSS1_3 == null ? null : ctx.TeamSS1_3.SS1_3_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zcy9zczEuMy9zczEuMy5jb21wb25lbnQuc2NzcyJ9 */"] });
    return Ss1_3Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Ss1_3Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-ss1_3',
                templateUrl: './ss1.3.component.html',
                styleUrls: ['./ss1.3.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSS3']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/ss1.4/ss1.4.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/ss1.4/ss1.4.component.ts ***!
  \*******************************************************************/
/*! exports provided: Ss1_4Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ss1_4Component", function() { return Ss1_4Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSS4"];
var Ss1_4Component = /** @class */ (function () {
    function Ss1_4Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSS1_4 = {
            SS1_4_VelocidadActualMotor: 0,
            SS1_4_CorrienteActualMotor: 0,
            SS1_4_PotenciaActualMotor: 0,
            SS1_4_TorqueActualMotor: 0,
            SS1_4_KWh: 0,
            SS1_4_voltaje: 0
        };
        this.velocidadSS1_4 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers1 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Ss1_4Component.prototype.ngOnInit = function () {
        this.changeSS1_4();
        // this.dataSF1()
        this.dataSS1_4();
    };
    Ss1_4Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSS1_4;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Ss1_4Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSS1_4;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Ss1_4Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataSS3')) {
                var value1 = _this.velocidadSS1_4;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Ss1_4Component.prototype.changeSS1_4 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SS1_4')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_4');
                res.SS1_4_VelocidadActualMotor = 0;
                res.SS1_4_CorrienteActualMotor = 0;
                res.SS1_4_PotenciaActualMotor = 0;
                res.SS1_4_KWh = 0;
            }
            else {
                _this.TeamSS1_4 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSS1_4 = this.decimalPipe.transform(this.TeamSS1_4?.SS1_4_VelocidadActualMotor) ?? 0;
                _this.velocidadSS1_4 = (_b = (_a = _this.TeamSS1_4) === null || _a === void 0 ? void 0 : _a.SS1_4_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_1:', this.TeamSF1_1);
            }
        });
    };
    Ss1_4Component.prototype.dataSS1_4 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SS1_4'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_4');
                res.SS1_4_VelocidadActualMotor = 0;
                res.SS1_4_CorrienteActualMotor = 0;
                res.SS1_4_PotenciaActualMotor = 0;
                res.OSR1_4_KWh = 0;
            }
            else {
                _this.TeamSS1_4 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSS1_4 = (_b = (_a = _this.TeamSS1_4) === null || _a === void 0 ? void 0 : _a.SS1_4_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Ss1_4Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Ss1_4Component.ɵfac = function Ss1_4Component_Factory(t) { return new (t || Ss1_4Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Ss1_4Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Ss1_4Component, selectors: [["ngx-ss1_4"]], viewQuery: function Ss1_4Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 28, vars: 13, consts: [["id", "sample-dataSS4", 2, "display", "block", "height", "150px"], ["gaugeSS4", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Ss1_4Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SS1-4 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("minorTicks", ctx.minorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSS1_4 == null ? null : ctx.TeamSS1_4.SS1_4_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSS1_4 == null ? null : ctx.TeamSS1_4.SS1_4_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSS1_4 == null ? null : ctx.TeamSS1_4.SS1_4_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 11, ctx.TeamSS1_4 == null ? null : ctx.TeamSS1_4.SS1_4_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zcy9zczEuNC9zczEuNC5jb21wb25lbnQuc2NzcyJ9 */"] });
    return Ss1_4Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Ss1_4Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-ss1_4',
                templateUrl: './ss1.4.component.html',
                styleUrls: ['./ss1.4.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSS4']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/ss1.5/ss1.5.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/ss1.5/ss1.5.component.ts ***!
  \*******************************************************************/
/*! exports provided: Ss1_5Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ss1_5Component", function() { return Ss1_5Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSS5"];
var Ss1_5Component = /** @class */ (function () {
    function Ss1_5Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSS1_5 = {
            SS1_5_VelocidadActualMotor: 0,
            SS1_5_CorrienteActualMotor: 0,
            SS1_5_PotenciaActualMotor: 0,
            SS1_5_TorqueActualMotor: 0,
            SS1_5_KWh: 0,
            SS1_5_voltaje: 0
        };
        this.velocidadSS1_5 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers1 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Ss1_5Component.prototype.ngOnInit = function () {
        this.changeSS1_5();
        this.dataSS1_5();
        // this.dataSF1()
    };
    Ss1_5Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSS1_5;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Ss1_5Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSS1_5;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Ss1_5Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataSS3')) {
                var value1 = _this.velocidadSS1_5;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Ss1_5Component.prototype.changeSS1_5 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SS1_5')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_5');
                res.SS1_5_VelocidadActualMotor = 0;
                res.SS1_5_CorrienteActualMotor = 0;
                res.SS1_5_PotenciaActualMotor = 0;
                res.SS1_5_KWh = 0;
            }
            else {
                _this.TeamSS1_5 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSS1_5 = this.decimalPipe.transform(this.TeamSS1_5?.SS1_5_VelocidadActualMotor) ?? 0;
                _this.velocidadSS1_5 = (_b = (_a = _this.TeamSS1_5) === null || _a === void 0 ? void 0 : _a.SS1_5_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_1:', this.TeamSF1_1);
            }
        });
    };
    Ss1_5Component.prototype.dataSS1_5 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SS1_5'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_5');
                res.SS1_5_VelocidadActualMotor = 0;
                res.SS1_5_CorrienteActualMotor = 0;
                res.SS1_5_PotenciaActualMotor = 0;
                res.OSR1_5_KWh = 0;
            }
            else {
                _this.TeamSS1_5 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSS1_5 = (_b = (_a = _this.TeamSS1_5) === null || _a === void 0 ? void 0 : _a.SS1_5_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Ss1_5Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Ss1_5Component.ɵfac = function Ss1_5Component_Factory(t) { return new (t || Ss1_5Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Ss1_5Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Ss1_5Component, selectors: [["ngx-ss1_5"]], viewQuery: function Ss1_5Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 28, vars: 13, consts: [["id", "sample-dataSS5", 2, "display", "block", "height", "150px"], ["gaugeSS5", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Ss1_5Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SS1-5 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("minorTicks", ctx.minorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSS1_5 == null ? null : ctx.TeamSS1_5.SS1_5_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSS1_5 == null ? null : ctx.TeamSS1_5.SS1_5_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSS1_5 == null ? null : ctx.TeamSS1_5.SS1_5_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 11, ctx.TeamSS1_5 == null ? null : ctx.TeamSS1_5.SS1_5_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zcy9zczEuNS9zczEuNS5jb21wb25lbnQuc2NzcyJ9 */"] });
    return Ss1_5Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Ss1_5Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-ss1_5',
                templateUrl: './ss1.5.component.html',
                styleUrls: ['./ss1.5.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSS5']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/ss1.6/ss1.6.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/ss1.6/ss1.6.component.ts ***!
  \*******************************************************************/
/*! exports provided: Ss1_6Component */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ss1_6Component", function() { return Ss1_6Component; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../@core/backend/common/api/apiGet.services */ "./src/app/@core/backend/common/api/apiGet.services.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");















var _c0 = ["gaugeSS6"];
var Ss1_6Component = /** @class */ (function () {
    function Ss1_6Component(http, api, apiGetComp, decimalPipe) {
        this.http = http;
        this.api = api;
        this.apiGetComp = apiGetComp;
        this.decimalPipe = decimalPipe;
        this.alive = true;
        this.TeamSS1_6 = {
            SS1_6_VelocidadActualMotor: 0,
            SS1_6_CorrienteActualMotor: 0,
            SS1_6_PotenciaActualMotor: 0,
            SS1_6_TorqueActualMotor: 0,
            SS1_6_KWh: 0,
            SS1_6_voltaje: 0
        };
        this.velocidadSS1_6 = 0;
        // custom code end
        this.majorTicks = { width: 0 };
        this.lineStyle = { width: 0 };
        this.minorTicks = { width: 0 };
        //Initializing LabelStyle
        this.labelStyle = { font: { size: '0' } };
        //Initializing Annotation
        this.annotation = "<div id='templateWrap'>" +
            "<div class='fontDes' style='width: 16px;height: 16px;margin-top: 4px;'>${pointers[0].value} rpm</div></div></div>";
        this.annotation2 = "<div class='fontDes1'>Germany</div>";
        this.annotation3 = "<div class='fontDes1'>USA</div>";
        this.annotation4 = "<div class='fontDes1'>UK</div>";
        this.annotation5 = "<div id='templateWrap'>" +
            "<div class='fontDes'>${pointers[0].value}%</div></div></div>";
        // public annotation6: string = `<div id='templateWrap'><div class='fontDes3'>cantidad ${this.dataSF1_1?.SF1_1_VelocidadActualMotor}</div></div></div>`;
        this.germanyAnnotation = [{
                content: "<div id='templateWrap'>"
                    + "<img style='width: 16px;height: 16px;margin-top: 4px;' src='./assets/circular-gauge/images/positive.png' />"
                    + "<div style='float: right;color: #424242;font-size: 10px;'>${pointers[0].value}%</div></div></div>",
                angle: 180,
                radius: '130%'
            }, {
                content: '<div style="color:#9E9E9E;font-size:16px;font-family:Roboto">Germany</div>',
                angle: 180,
                radius: '65%'
            }];
        //Color gauge
        this.ranges = [{
                start: 0, end: 40,
                startWidth: 15, endWidth: 15,
                color: '#30B32D'
            },
            {
                start: 40, end: 70,
                startWidth: 15, endWidth: 15,
                color: '#FFDD00'
            },
            {
                start: 70, end: 100,
                startWidth: 15, endWidth: 15,
                color: '#F03E3E'
            }
        ];
        this.pointers1 = [{
                value: 0, radius: '60%',
                animation: { enable: false },
                pointerWidth: 5,
                cap: {
                    radius: 6,
                    border: { width: 0 }
                },
                needleTail: {
                    length: '25%'
                }
            }];
    }
    Ss1_6Component.prototype.ngOnInit = function () {
        this.changeSS1_5();
        // this.dataSF1()
        this.dataSS1_6();
    };
    Ss1_6Component.prototype.gauge = function () {
        if (document.getElementById('sample-data')) {
            var value1 = this.velocidadSS1_6;
            this.osr1_1.axes[0].pointers[0].animation.enable = true;
            this.osr1_1.setPointerValue(0, 0, value1);
            this.osr1_1.setAnnotationValue(0, 0, this.osr1_1.axes[0].annotations[0].content);
        }
        else {
            clearInterval(this.tooltipInterval1);
        }
    };
    Ss1_6Component.prototype.test = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-data')) {
                var value1 = _this.velocidadSS1_6;
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 1000);
    };
    Ss1_6Component.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tooltipInterval1 = window.setInterval(function () {
            if (document.getElementById('sample-dataSS3')) {
                var value1 = _this.velocidadSS1_6;
                // let value2: number = this.velocidadSf1_2;
                // let value3: number = this.velocidadSf3_1;
                // let gridData1: number = 4 * value1;
                // let gridData2: number = 6 * value2;
                // let gridData3: number = 7 * value3;
                // let orderData: Object[] = [
                //     {
                //         'Country': 'Germany',
                //         'Sales': 500,
                //         'Target': 400,
                //         'vsTarget': gridData1
                //     }, {
                //         'Country': 'USA',
                //         'Sales': 1000,
                //         'Target': 600,
                //         'vsTarget': gridData2
                //     }, {
                //         'Country': 'UK',
                //         'Sales': 600,
                //         'Target': 700,
                //         'vsTarget': -gridData3
                //     }
                // ];
                // this.grid.dataSource = orderData;
                // this.grid.refresh();
                _this.osr1_1.axes[0].pointers[0].animation.enable = true;
                // this.usa.axes[0].pointers[0].animation.enable = true;
                // this.uk.axes[0].pointers[0].animation.enable = true;
                _this.osr1_1.setPointerValue(0, 0, value1);
                // this.usa.setPointerValue(0, 0, value2);
                // this.uk.setPointerValue(0, 0, value3);
                _this.osr1_1.setAnnotationValue(0, 0, _this.osr1_1.axes[0].annotations[0].content);
                // this.usa.setAnnotationValue(0, 0, this.usa.axes[0].annotations[0].content);
                // this.uk.setAnnotationValue(0, 0, this.uk.axes[0].annotations[0].content);
            }
            else {
                clearInterval(_this.tooltipInterval1);
            }
        }, 2000);
    };
    Ss1_6Component.prototype.changeSS1_5 = function () {
        var _this = this;
        this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/SS1_6')
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_6');
                res.SS1_6_VelocidadActualMotor = 0;
                res.SS1_6_CorrienteActualMotor = 0;
                res.SS1_6_PotenciaActualMotor = 0;
                res.SS1_6_KWh = 0;
            }
            else {
                _this.TeamSS1_6 = res;
                // this.dataSF1_1 = TeamSF1_1
                // this.velocidadSS1_6 = this.decimalPipe.transform(this.TeamSS1_6?.SS1_6_VelocidadActualMotor) ?? 0;
                _this.velocidadSS1_6 = (_b = (_a = _this.TeamSS1_6) === null || _a === void 0 ? void 0 : _a.SS1_6_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
                // console.log('SF1_1:', this.TeamSF1_1);
            }
        });
    };
    Ss1_6Component.prototype.dataSS1_6 = function () {
        var _this = this;
        if (this.intervalSubscriptionItems) {
            this.intervalSubscriptionItems.unsubscribe();
        }
        this.intervalSubscriptionItems = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(3000)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeWhile"])(function () { return _this.alive; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function () { return _this.apiGetComp.GetJson(_this.api.apiUrlNode1 + '/SS1_6'); }))
            .subscribe(function (res) {
            var _a, _b;
            if (JSON.stringify(res) == '{}') {
                console.log('No hay data SS1_6');
                res.SS1_6_VelocidadActualMotor = 0;
                res.SS1_6_CorrienteActualMotor = 0;
                res.SS1_6_PotenciaActualMotor = 0;
                res.OSR1_6_KWh = 0;
            }
            else {
                _this.TeamSS1_6 = res;
                // this.dataSF1_1 = TeamSF1_1
                _this.velocidadSS1_6 = (_b = (_a = _this.TeamSS1_6) === null || _a === void 0 ? void 0 : _a.SS1_6_VelocidadActualMotor, (_b !== null && _b !== void 0 ? _b : 0));
            }
        }, function (error) { return (console.log(error)); }, function () { return console.log('Error..!'); });
    };
    Ss1_6Component.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    Ss1_6Component.ɵfac = function Ss1_6Component_Factory(t) { return new (t || Ss1_6Component)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"])); };
    Ss1_6Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: Ss1_6Component, selectors: [["ngx-ss1_6"]], viewQuery: function Ss1_6Component_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.osr1_1 = _t.first);
        } }, decls: 28, vars: 13, consts: [["id", "sample-dataSS6", 2, "display", "block", "height", "150px"], ["gaugeSS6", ""], ["startAngle", "260", "endAngle", "100", 3, "majorTicks", "minorTicks", "labelStyle", "lineStyle", "ranges", "pointers"], ["angle", "180", "radius", "30%", "zIndex", "1", 3, "content"], [2, "margin-left", "23%", "margin-top", "-0%", "padding-top", "-40px", "padding-block-start", "-98px"], [2, "padding", "0.5625em 0.625em", "margin-top", "-0.10rem"], [2, "padding", "0.5625em 0.625em", "margin-top", "-1.9rem"]], template: function Ss1_6Component_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " SS1-6 ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "ejs-circulargauge", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "e-axes");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "e-axis", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "e-annotations");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "e-annotation", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "pre", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Corriente:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Potencia:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Voltaje:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "pre", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "b");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Consumo:");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](27, "number");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("majorTicks", ctx.majorTicks)("minorTicks", ctx.minorTicks)("labelStyle", ctx.labelStyle)("lineStyle", ctx.lineStyle)("ranges", ctx.ranges)("pointers", ctx.pointers1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("content", ctx.annotation);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("  ", ctx.TeamSS1_6 == null ? null : ctx.TeamSS1_6.SS1_6_CorrienteActualMotor, "  \u00A0 A");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("   ", ctx.TeamSS1_6 == null ? null : ctx.TeamSS1_6.SS1_6_PotenciaActualMotor, " \u00A0 W");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", ctx.TeamSS1_6 == null ? null : ctx.TeamSS1_6.SS1_6_voltaje, "   VAC ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("    ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](27, 11, ctx.TeamSS1_6 == null ? null : ctx.TeamSS1_6.SS1_6_KWh), "  \u00A0 kwh ");
        } }, directives: [_nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_8__["NbCardBodyComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["CircularGaugeComponent"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxesDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AxisDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationsDirective"], _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_3__["AnnotationDirective"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3pvbmUtdGVhbXMvdGVhbS1zcy9zczEuNi9zczEuNi5jb21wb25lbnQuc2NzcyJ9 */"] });
    return Ss1_6Component;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Ss1_6Component, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-ss1_6',
                templateUrl: './ss1.6.component.html',
                styleUrls: ['./ss1.6.component.scss']
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_1__["HttpService"] }, { type: _core_backend_common_api_apiGet_services__WEBPACK_IMPORTED_MODULE_5__["ApiGetService"] }, { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["DecimalPipe"] }]; }, { osr1_1: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: ['gaugeSS6']
        }] }); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/team-ss-routing.module.ts":
/*!********************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/team-ss-routing.module.ts ***!
  \********************************************************************/
/*! exports provided: TeamSSRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TeamSSRoutingModule", function() { return TeamSSRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm5/router.js");
/* harmony import */ var _team_ss_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./team-ss.component */ "./src/app/pages/zone-teams/team-ss/team-ss.component.ts");





var routes = [
    {
        path: '',
        component: _team_ss_component__WEBPACK_IMPORTED_MODULE_2__["TeamSsComponent"],
        children: [
        // {
        //   path: 'sfc',
        //   component: SfcComponent,
        // },
        ]
    }
];
var TeamSSRoutingModule = /** @class */ (function () {
    function TeamSSRoutingModule() {
    }
    TeamSSRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: TeamSSRoutingModule });
    TeamSSRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function TeamSSRoutingModule_Factory(t) { return new (t || TeamSSRoutingModule)(); }, imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
    return TeamSSRoutingModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](TeamSSRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TeamSSRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
                exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/team-ss.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/team-ss.component.ts ***!
  \***************************************************************/
/*! exports provided: TeamSsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TeamSsComponent", function() { return TeamSsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm5/router.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");
/* harmony import */ var _ss1_1_ss1_1_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ss1.1/ss1.1.component */ "./src/app/pages/zone-teams/team-ss/ss1.1/ss1.1.component.ts");
/* harmony import */ var _ss1_2_ss1_2_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ss1.2/ss1.2.component */ "./src/app/pages/zone-teams/team-ss/ss1.2/ss1.2.component.ts");
/* harmony import */ var _ss1_3_ss1_3_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ss1.3/ss1.3.component */ "./src/app/pages/zone-teams/team-ss/ss1.3/ss1.3.component.ts");
/* harmony import */ var _ss1_4_ss1_4_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ss1.4/ss1.4.component */ "./src/app/pages/zone-teams/team-ss/ss1.4/ss1.4.component.ts");
/* harmony import */ var _ss1_5_ss1_5_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ss1.5/ss1.5.component */ "./src/app/pages/zone-teams/team-ss/ss1.5/ss1.5.component.ts");
/* harmony import */ var _ss1_6_ss1_6_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ss1.6/ss1.6.component */ "./src/app/pages/zone-teams/team-ss/ss1.6/ss1.6.component.ts");















var TeamSsComponent = /** @class */ (function () {
    function TeamSsComponent(http, router, api) {
        this.http = http;
        this.router = router;
        this.api = api;
        this.alive = true;
    }
    TeamSsComponent.prototype.ngOnInit = function () { };
    TeamSsComponent.prototype.back = function () {
        this.router.navigate(["/pages/conveyor/energyZone"]);
        return false;
    };
    TeamSsComponent.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    TeamSsComponent.ɵfac = function TeamSsComponent_Factory(t) { return new (t || TeamSsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"])); };
    TeamSsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: TeamSsComponent, selectors: [["ngx-teamSs"]], decls: 23, vars: 0, consts: [[1, "navigation"], ["href", "#", "aria-label", "Back", 1, "link", "back-link", 3, "click"], ["icon", "arrow-back"], [1, "h"], [1, "col-sm-12"], [1, "row"], [1, "col-sm-3"]], template: function TeamSsComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "router-outlet");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "nb-card");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "nb-card-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "nav", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "a", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TeamSsComponent_Template_a_click_4_listener() { return ctx.back(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "nb-icon", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "h5", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "SECURITY SHUNT");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "nb-card-body");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](12, "ngx-ss1_1");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "ngx-ss1_2");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](16, "ngx-ss1_3");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](18, "ngx-ss1_4");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](20, "ngx-ss1_5");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](22, "ngx-ss1_6");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } }, directives: [_angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterOutlet"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbCardComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbCardHeaderComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbIconComponent"], _nebular_theme__WEBPACK_IMPORTED_MODULE_4__["NbCardBodyComponent"], _ss1_1_ss1_1_component__WEBPACK_IMPORTED_MODULE_5__["Ss1_1Component"], _ss1_2_ss1_2_component__WEBPACK_IMPORTED_MODULE_6__["Ss1_2Component"], _ss1_3_ss1_3_component__WEBPACK_IMPORTED_MODULE_7__["Ss1_3Component"], _ss1_4_ss1_4_component__WEBPACK_IMPORTED_MODULE_8__["Ss1_4Component"], _ss1_5_ss1_5_component__WEBPACK_IMPORTED_MODULE_9__["Ss1_5Component"], _ss1_6_ss1_6_component__WEBPACK_IMPORTED_MODULE_10__["Ss1_6Component"]], styles: [".contenedor[_ngcontent-%COMP%] {\n            position: relative;\n            display: inline-block;\n            text-align: center;\n          }\n\n          .centrado[_ngcontent-%COMP%] {\n            position: absolute;\n            font-size: 10px;\n            font-family: cursive;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n          }\n          .h[_ngcontent-%COMP%] {\n            margin: -1.8rem 0.19rem 0rem 2.7rem;\n          }"] });
    return TeamSsComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TeamSsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: "ngx-teamSs",
                template: "\n   <router-outlet>\n      <nb-card>\n        <nb-card-header>\n        <nav class=\"navigation\">\n            <a\n              href=\"#\"\n              (click)=\"back()\"\n              class=\"link back-link\"\n              aria-label=\"Back\"\n            >\n              <nb-icon icon=\"arrow-back\"></nb-icon>\n            </a>\n            <h5 class=\"h\">SECURITY SHUNT</h5>\n          </nav>\n        </nb-card-header>\n        \n          <nb-card-body>\n            <div class=\"col-sm-12\">\n              <div class=\"row\">\n                <div class=\"col-sm-3\">\n                  <ngx-ss1_1></ngx-ss1_1>\n                </div>\n                <div class=\"col-sm-3\">\n                  <ngx-ss1_2></ngx-ss1_2>\n                </div>\n                <div class=\"col-sm-3\">\n                <ngx-ss1_3></ngx-ss1_3>\n                </div>\n                <div class=\"col-sm-3\">\n                <ngx-ss1_4></ngx-ss1_4>\n                </div>\n                <div class=\"col-sm-3\">\n                <ngx-ss1_5></ngx-ss1_5>\n                </div>\n                <div class=\"col-sm-3\">\n                <ngx-ss1_6></ngx-ss1_6>\n                </div>\n              </div>\n            </div>\n          </nb-card-body>\n        \n        <style>\n          .contenedor {\n            position: relative;\n            display: inline-block;\n            text-align: center;\n          }\n\n          .centrado {\n            position: absolute;\n            font-size: 10px;\n            font-family: cursive;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n          }\n          .h {\n            margin: -1.8rem 0.19rem 0rem 2.7rem;\n          }\n        </style>\n      </nb-card>\n    </router-outlet>\n  ",
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] }]; }, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/team-ss/team-ss.module.ts":
/*!************************************************************!*\
  !*** ./src/app/pages/zone-teams/team-ss/team-ss.module.ts ***!
  \************************************************************/
/*! exports provided: TeamSSModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TeamSSModule", function() { return TeamSSModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");
/* harmony import */ var _team_ss_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./team-ss-routing.module */ "./src/app/pages/zone-teams/team-ss/team-ss-routing.module.ts");
/* harmony import */ var _team_ss_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./team-ss.component */ "./src/app/pages/zone-teams/team-ss/team-ss.component.ts");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../app.component */ "./src/app/app.component.ts");
/* harmony import */ var _ss1_1_ss1_1_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ss1.1/ss1.1.component */ "./src/app/pages/zone-teams/team-ss/ss1.1/ss1.1.component.ts");
/* harmony import */ var _ss1_2_ss1_2_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ss1.2/ss1.2.component */ "./src/app/pages/zone-teams/team-ss/ss1.2/ss1.2.component.ts");
/* harmony import */ var _ss1_3_ss1_3_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ss1.3/ss1.3.component */ "./src/app/pages/zone-teams/team-ss/ss1.3/ss1.3.component.ts");
/* harmony import */ var _ss1_4_ss1_4_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ss1.4/ss1.4.component */ "./src/app/pages/zone-teams/team-ss/ss1.4/ss1.4.component.ts");
/* harmony import */ var _ss1_5_ss1_5_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ss1.5/ss1.5.component */ "./src/app/pages/zone-teams/team-ss/ss1.5/ss1.5.component.ts");
/* harmony import */ var _ss1_6_ss1_6_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ss1.6/ss1.6.component */ "./src/app/pages/zone-teams/team-ss/ss1.6/ss1.6.component.ts");














var TeamSSModule = /** @class */ (function () {
    function TeamSSModule() {
    }
    TeamSSModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: TeamSSModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_6__["AppComponent"]] });
    TeamSSModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function TeamSSModule_Factory(t) { return new (t || TeamSSModule)(); }, providers: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]], imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _team_ss_routing_module__WEBPACK_IMPORTED_MODULE_3__["TeamSSRoutingModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
                _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_5__["CircularGaugeAllModule"],
            ]] });
    return TeamSSModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](TeamSSModule, { declarations: [_team_ss_component__WEBPACK_IMPORTED_MODULE_4__["TeamSsComponent"], _ss1_1_ss1_1_component__WEBPACK_IMPORTED_MODULE_7__["Ss1_1Component"], _ss1_2_ss1_2_component__WEBPACK_IMPORTED_MODULE_8__["Ss1_2Component"], _ss1_3_ss1_3_component__WEBPACK_IMPORTED_MODULE_9__["Ss1_3Component"], _ss1_4_ss1_4_component__WEBPACK_IMPORTED_MODULE_10__["Ss1_4Component"], _ss1_5_ss1_5_component__WEBPACK_IMPORTED_MODULE_11__["Ss1_5Component"], _ss1_6_ss1_6_component__WEBPACK_IMPORTED_MODULE_12__["Ss1_6Component"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
        _team_ss_routing_module__WEBPACK_IMPORTED_MODULE_3__["TeamSSRoutingModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
        _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_5__["CircularGaugeAllModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TeamSSModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                declarations: [_team_ss_component__WEBPACK_IMPORTED_MODULE_4__["TeamSsComponent"], _ss1_1_ss1_1_component__WEBPACK_IMPORTED_MODULE_7__["Ss1_1Component"], _ss1_2_ss1_2_component__WEBPACK_IMPORTED_MODULE_8__["Ss1_2Component"], _ss1_3_ss1_3_component__WEBPACK_IMPORTED_MODULE_9__["Ss1_3Component"], _ss1_4_ss1_4_component__WEBPACK_IMPORTED_MODULE_10__["Ss1_4Component"], _ss1_5_ss1_5_component__WEBPACK_IMPORTED_MODULE_11__["Ss1_5Component"], _ss1_6_ss1_6_component__WEBPACK_IMPORTED_MODULE_12__["Ss1_6Component"]],
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                    _team_ss_routing_module__WEBPACK_IMPORTED_MODULE_3__["TeamSSRoutingModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
                    _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_5__["CircularGaugeAllModule"],
                ],
                providers: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]],
                bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_6__["AppComponent"]],
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/zone-teams-routing.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/pages/zone-teams/zone-teams-routing.module.ts ***!
  \***************************************************************/
/*! exports provided: ZoneTeamsRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoneTeamsRoutingModule", function() { return ZoneTeamsRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm5/router.js");
/* harmony import */ var _zone_teams_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./zone-teams.component */ "./src/app/pages/zone-teams/zone-teams.component.ts");





var routes = [
    {
        path: '',
        component: _zone_teams_component__WEBPACK_IMPORTED_MODULE_2__["ZoneTeamsComponent"],
        children: [
            {
                path: 'teamsfc',
                loadChildren: function () { return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./team-sfc/team-sfc.module */ "./src/app/pages/zone-teams/team-sfc/team-sfc.module.ts"))
                    .then(function (m) { return m.TeamSFCModule; }); },
            },
            {
                path: 'teamsf',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-sf-team-sf-module */ "team-sf-team-sf-module").then(__webpack_require__.bind(null, /*! ./team-sf/team-sf.module */ "./src/app/pages/zone-teams/team-sf/team-sf.module.ts"))
                    .then(function (m) { return m.TeamSFModule; }); },
            },
            {
                path: 'teamss',
                loadChildren: function () { return Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ./team-ss/team-ss.module */ "./src/app/pages/zone-teams/team-ss/team-ss.module.ts"))
                    .then(function (m) { return m.TeamSSModule; }); },
            },
            {
                path: 'teamox',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-ox-team-ox-module */ "team-ox-team-ox-module").then(__webpack_require__.bind(null, /*! ./team-ox/team-ox.module */ "./src/app/pages/zone-teams/team-ox/team-ox.module.ts"))
                    .then(function (m) { return m.TeamOXModule; }); },
            },
            {
                path: 'teamosr',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-osr-team-osr-module */ "team-osr-team-osr-module").then(__webpack_require__.bind(null, /*! ./team-osr/team-osr.module */ "./src/app/pages/zone-teams/team-osr/team-osr.module.ts"))
                    .then(function (m) { return m.TeamOSRModule; }); },
            },
            {
                path: 'teammu',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-mu-team-mu-module */ "team-mu-team-mu-module").then(__webpack_require__.bind(null, /*! ./team-mu/team-mu.module */ "./src/app/pages/zone-teams/team-mu/team-mu.module.ts"))
                    .then(function (m) { return m.TeamMUModule; }); },
            },
            {
                path: 'teamme',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-me-team-me-module */ "team-me-team-me-module").then(__webpack_require__.bind(null, /*! ./team-me/team-me.module */ "./src/app/pages/zone-teams/team-me/team-me.module.ts"))
                    .then(function (m) { return m.TeamMEModule; }); },
            },
            {
                path: 'teamtx',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-tx-team-tx-module */ "team-tx-team-tx-module").then(__webpack_require__.bind(null, /*! ./team-tx/team-tx.module */ "./src/app/pages/zone-teams/team-tx/team-tx.module.ts"))
                    .then(function (m) { return m.TeamTXModule; }); },
            },
            {
                path: 'teamcl',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-cl-team-cl-module */ "team-cl-team-cl-module").then(__webpack_require__.bind(null, /*! ./team-cl/team-cl.module */ "./src/app/pages/zone-teams/team-cl/team-cl.module.ts"))
                    .then(function (m) { return m.TeamCLModule; }); },
            },
            {
                path: 'teamal',
                loadChildren: function () { return __webpack_require__.e(/*! import() | team-al-team-al-module */ "team-al-team-al-module").then(__webpack_require__.bind(null, /*! ./team-al/team-al.module */ "./src/app/pages/zone-teams/team-al/team-al.module.ts"))
                    .then(function (m) { return m.TeamALModule; }); },
            },
        ]
    }
];
var ZoneTeamsRoutingModule = /** @class */ (function () {
    function ZoneTeamsRoutingModule() {
    }
    ZoneTeamsRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ZoneTeamsRoutingModule });
    ZoneTeamsRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function ZoneTeamsRoutingModule_Factory(t) { return new (t || ZoneTeamsRoutingModule)(); }, imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] });
    return ZoneTeamsRoutingModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ZoneTeamsRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ZoneTeamsRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
                exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/zone-teams.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/pages/zone-teams/zone-teams.component.ts ***!
  \**********************************************************/
/*! exports provided: ZoneTeamsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoneTeamsComponent", function() { return ZoneTeamsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/http.js");
/* harmony import */ var _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../@core/backend/common/api/http.service */ "./src/app/@core/backend/common/api/http.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm5/router.js");








var ZoneTeamsComponent = /** @class */ (function () {
    function ZoneTeamsComponent(http, router, api) {
        this.http = http;
        this.router = router;
        this.api = api;
        this.alive = true;
    }
    ZoneTeamsComponent.prototype.ngOnInit = function () {
    };
    ZoneTeamsComponent.prototype.ngOnDestroy = function () {
        this.alive = false;
    };
    ZoneTeamsComponent.ɵfac = function ZoneTeamsComponent_Factory(t) { return new (t || ZoneTeamsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"])); };
    ZoneTeamsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ZoneTeamsComponent, selectors: [["ngx-zoneTeams"]], decls: 1, vars: 0, template: function ZoneTeamsComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "router-outlet");
        } }, directives: [_angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterOutlet"]], encapsulation: 2 });
    return ZoneTeamsComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ZoneTeamsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'ngx-zoneTeams',
                template: "\n      <!-- <app-home></app-home> -->\n      \n      <router-outlet > </router-outlet>\n\n  ",
            }]
    }], function () { return [{ type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }, { type: _core_backend_common_api_http_service__WEBPACK_IMPORTED_MODULE_2__["HttpService"] }]; }, null); })();


/***/ }),

/***/ "./src/app/pages/zone-teams/zone-teams.module.ts":
/*!*******************************************************!*\
  !*** ./src/app/pages/zone-teams/zone-teams.module.ts ***!
  \*******************************************************/
/*! exports provided: ZoneTeamsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoneTeamsModule", function() { return ZoneTeamsModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm5/common.js");
/* harmony import */ var _nebular_theme__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nebular/theme */ "./node_modules/@nebular/theme/__ivy_ngcc__/fesm5/index.js");
/* harmony import */ var _zone_teams_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./zone-teams-routing.module */ "./src/app/pages/zone-teams/zone-teams-routing.module.ts");
/* harmony import */ var _zone_teams_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./zone-teams.component */ "./src/app/pages/zone-teams/zone-teams.component.ts");
/* harmony import */ var _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-angular-buttons */ "./node_modules/@syncfusion/ej2-angular-buttons/__ivy_ngcc__/@syncfusion/ej2-angular-buttons.es5.js");
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ "./node_modules/@syncfusion/ej2-angular-grids/__ivy_ngcc__/@syncfusion/ej2-angular-grids.es5.js");
/* harmony import */ var _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-angular-circulargauge */ "./node_modules/@syncfusion/ej2-angular-circulargauge/__ivy_ngcc__/@syncfusion/ej2-angular-circulargauge.es5.js");
/* harmony import */ var _team_sfc_team_sfc_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./team-sfc/team-sfc.module */ "./src/app/pages/zone-teams/team-sfc/team-sfc.module.ts");
/* harmony import */ var _team_ss_team_ss_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./team-ss/team-ss.module */ "./src/app/pages/zone-teams/team-ss/team-ss.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../app.component */ "./src/app/app.component.ts");












var ZoneTeamsModule = /** @class */ (function () {
    function ZoneTeamsModule() {
    }
    ZoneTeamsModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: ZoneTeamsModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_10__["AppComponent"]] });
    ZoneTeamsModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ factory: function ZoneTeamsModule_Factory(t) { return new (t || ZoneTeamsModule)(); }, providers: [], imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _zone_teams_routing_module__WEBPACK_IMPORTED_MODULE_3__["ZoneTeamsRoutingModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
                _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
                _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_6__["GridModule"],
                _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__["ButtonModule"],
                _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__["CircularGaugeAllModule"],
                _team_sfc_team_sfc_module__WEBPACK_IMPORTED_MODULE_8__["TeamSFCModule"],
                _team_ss_team_ss_module__WEBPACK_IMPORTED_MODULE_9__["TeamSSModule"],
            ]] });
    return ZoneTeamsModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ZoneTeamsModule, { declarations: [_zone_teams_component__WEBPACK_IMPORTED_MODULE_4__["ZoneTeamsComponent"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
        _zone_teams_routing_module__WEBPACK_IMPORTED_MODULE_3__["ZoneTeamsRoutingModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
        _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
        _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_6__["GridModule"],
        _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__["ButtonModule"],
        _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__["CircularGaugeAllModule"],
        _team_sfc_team_sfc_module__WEBPACK_IMPORTED_MODULE_8__["TeamSFCModule"],
        _team_ss_team_ss_module__WEBPACK_IMPORTED_MODULE_9__["TeamSSModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ZoneTeamsModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
                declarations: [_zone_teams_component__WEBPACK_IMPORTED_MODULE_4__["ZoneTeamsComponent"],],
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                    _zone_teams_routing_module__WEBPACK_IMPORTED_MODULE_3__["ZoneTeamsRoutingModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbActionsModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbButtonModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCardModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbInputModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbTabsetModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbUserModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbRadioModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSelectModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbListModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbIconModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbSpinnerModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbDatepickerModule"],
                    _nebular_theme__WEBPACK_IMPORTED_MODULE_2__["NbCheckboxModule"],
                    _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_6__["GridModule"],
                    _syncfusion_ej2_angular_buttons__WEBPACK_IMPORTED_MODULE_5__["ButtonModule"],
                    _syncfusion_ej2_angular_circulargauge__WEBPACK_IMPORTED_MODULE_7__["CircularGaugeAllModule"],
                    _team_sfc_team_sfc_module__WEBPACK_IMPORTED_MODULE_8__["TeamSFCModule"],
                    _team_ss_team_ss_module__WEBPACK_IMPORTED_MODULE_9__["TeamSSModule"],
                ],
                providers: [],
                bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_10__["AppComponent"]]
            }]
    }], null, null); })();


/***/ })

}]);
//# sourceMappingURL=zone-teams-zone-teams-module.js.map