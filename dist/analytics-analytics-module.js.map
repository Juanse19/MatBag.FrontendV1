{"version":3,"sources":["./src/app/pages/analytics/analytics-routing.module.ts","./src/app/pages/analytics/analytics.component.ts","./src/app/pages/analytics/analytics.module.ts","./src/app/pages/analytics/ocupacion/ocupacion.component.ts","./src/app/pages/analytics/ocupacion/ocupacion.component.html","./src/app/pages/analytics/ordenes-no-wips/ordenes-no-wips.component.ts","./src/app/pages/analytics/ordenes-no-wips/ordenes-no-wips.component.html","./src/app/pages/analytics/ordenes/ordenes.component.ts","./src/app/pages/analytics/ordenes/ordenes.component.html","./src/app/pages/analytics/predictivo/predictivo.component.ts","./src/app/pages/analytics/predictivo/predictivo.component.html","./src/app/pages/analytics/reports/reports.component.ts","./src/app/pages/analytics/reports/reports.component.html"],"names":[],"mappings":"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","file":"analytics-analytics-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AnalyticsComponent } from './analytics.component';\r\nimport { OcupacionComponent } from './ocupacion/ocupacion.component';\r\nimport { OrdenesComponent } from './ordenes/ordenes.component';\r\nimport { OrdenesNoWipsComponent } from './ordenes-no-wips/ordenes-no-wips.component';\r\nimport { PredictivoComponent } from './predictivo/predictivo.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: AnalyticsComponent,\r\n  children: [\r\n    {\r\n      path: 'ocupacion',\r\n      component: OcupacionComponent,\r\n    },\r\n    {\r\n      path: 'ordenes',\r\n      component: OrdenesComponent,\r\n    },\r\n    {\r\n      path: 'ordenesNotWips',\r\n      component: OrdenesNoWipsComponent,\r\n    },\r\n    {\r\n      path: 'predictivo',\r\n      component: PredictivoComponent,\r\n    },\r\n    {\r\n      path: 'reportes',\r\n      component: ReportsComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n}) \r\nexport class AnalyticsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-analytics',\r\n  template: `<router-outlet></router-outlet>`, \r\n})\r\nexport class AnalyticsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {  NbButtonModule,\r\n  NbCardModule,\r\n  NbProgressBarModule,\r\n  NbTabsetModule,\r\n  NbUserModule,\r\n  NbIconModule,\r\n  NbSelectModule,\r\n  NbListModule,\r\n  NbSpinnerModule,\r\n\r\n} from '@nebular/theme';\r\nimport { AnalyticsRoutingModule } from './analytics-routing.module';\r\nimport { PredictivoComponent } from './predictivo/predictivo.component';\r\nimport { OcupacionComponent } from './ocupacion/ocupacion.component';\r\nimport { OrdenesNoWipsComponent } from './ordenes-no-wips/ordenes-no-wips.component';\r\nimport { OrdenesComponent } from './ordenes/ordenes.component';\r\nimport { AnalyticsComponent } from './analytics.component';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ThemeModule } from '../../@theme/theme.module'; \r\nimport { ReportsComponent } from './reports/reports.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PredictivoComponent, OcupacionComponent, OrdenesNoWipsComponent, OrdenesComponent, AnalyticsComponent, ReportsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AnalyticsRoutingModule,\r\n    Ng2SmartTableModule,\r\n    ThemeModule, \r\n    NbCardModule,\r\n    NbUserModule,\r\n    NbButtonModule,\r\n    NbIconModule,\r\n    NbTabsetModule,\r\n  ]\r\n})\r\nexport class AnalyticsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\n\r\n\r\ninterface ReportOcupation {\r\n  id: number;\r\n  name: string;\r\n  totalOcupated: number;\r\n  CurrentOcupated: number;\r\n  Available: number;\r\n  PercOcupation: number;\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-ocupacion',\r\n  templateUrl: './ocupacion.component.html',\r\n  styleUrls: ['./ocupacion.component.scss']\r\n})\r\nexport class OcupacionComponent implements OnInit {\r\n\r\n  /** Table de ocupacion del sistema */\r\n  settings1 = {\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n        filter: false,\r\n        hide: true,\r\n\r\n      },\r\n      name: {\r\n        title: 'Nombre',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      totalOcupated: {\r\n        title: 'Capacidad Total (mt)',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      currentOcupated: {\r\n        title: 'Ocupados (mt)',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      available: {\r\n        title: 'Disponible (mt)',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      percOcupation: {\r\n        title: '%Ocupacion',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source1: LocalDataSource = new LocalDataSource();\r\n  public ReportOcupation: ReportOcupation[];\r\n\r\n  constructor(\r\n    public apiGetComp: ApiGetService,\r\n    private api: HttpService\r\n  ) {\r\n    this.ChargeReportOcupation();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ChargeReportOcupation() {\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GeReportOcupation').subscribe((res: any) => {\r\n      //REPORTOCUPATION=res;\r\n      // console.log(\"Report Ocupacion:\", res);\r\n      this.ReportOcupation = res;\r\n      this.source1.load(res);\r\n    });\r\n    const contador = interval(60000)\r\n    contador.subscribe((n) => {\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GeReportOcupation').subscribe((res: any) => {\r\n        //REPORTOCUPATION=res;\r\n        this.ReportOcupation = res;\r\n        this.source1.load(res);\r\n      });\r\n    });\r\n\r\n  }\r\n \r\n}\r\n","\r\n<nb-card>\r\n    <nb-card-header>\r\n      Ocupación del sistema\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings1\" [source]=\"source1\">\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n  </nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\n\r\ninterface Ordersnotwip {\r\n  orderId: number;\r\n  batch: number;\r\n  order: string;\r\n  cutsLength: number;\r\n  cutsWidth: number;\r\n  anchoWip: string;\r\n  target: string;\r\n  wIP: string;\r\n  sizeDifference: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-ordenes-no-wips',\r\n  templateUrl: './ordenes-no-wips.component.html',\r\n  styleUrls: ['./ordenes-no-wips.component.scss']\r\n})\r\nexport class OrdenesNoWipsComponent implements OnInit {\r\n\r\n  /** Table de ordenes que no encajan en los wips */\r\n  settings2 = {\r\n    actions: false,\r\n    columns: {\r\n      // id: {\r\n      //   title: 'ID',\r\n      //   type: 'number',\r\n      //   filter:false,\r\n      //   hide:true,\r\n\r\n      // },\r\n      orderId: {\r\n        title: 'OrderId',\r\n        type: 'number',\r\n        filter:false,\r\n        hide:true,\r\n      },\r\n      batch: {\r\n        title: 'Batch',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      order: {\r\n        title: 'Orden',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      cutsLength: {\r\n        title: 'Longitud cortes',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      cutsWidth: {\r\n        title: 'Ancho corte',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      anchoWip: {\r\n        title: 'Ancho Wip',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      target: {\r\n        title: 'Target',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      wip: {\r\n        title: 'Wip',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      sizeDifference: {\r\n        title: 'Diferencia tamaño',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source2: LocalDataSource = new LocalDataSource();\r\n  public ReportOrdersnotwip: Ordersnotwip[];\r\n\r\n\r\n  constructor(\r\n    public apiGetComp: ApiGetService,\r\n    private api: HttpService\r\n  ) {\r\n    this.ChargeOrdersnotwip();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ChargeOrdersnotwip() {\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetnotwipList').subscribe((res: any) => {\r\n      //REPORTOCUPATION=res;\r\n      // console.log(\"Report notwipList:\", res);\r\n      this.ReportOrdersnotwip = res;\r\n      this.source2.load(res);\r\n    });\r\n    const contador = interval(30000)\r\n    contador.subscribe((n) => {\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetnotwipList').subscribe((res: any) => {\r\n        //REPORTOCUPATION=res;\r\n        this.ReportOrdersnotwip = res;\r\n        this.source2.load(res);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","\r\n<nb-card>\r\n    <nb-card-header>\r\n      Ordenes que no se pueden trasportar en el wip\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings2\" [source]=\"source2\">\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n  </nb-card> ","import { Component, OnInit } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\n\r\ninterface UspReportOrders {\r\n  Id: number;\r\n  Batch: number;\r\n  Order: string;\r\n  CutsNumberTotal: number;\r\n  CurrenCouts: number;\r\n  OrdenesMachineCount: number;\r\n  Diference: number;\r\n }\r\n\r\n@Component({\r\n  selector: 'ngx-ordenes',\r\n  templateUrl: './ordenes.component.html',\r\n  styleUrls: ['./ordenes.component.scss']\r\n})\r\nexport class OrdenesComponent implements OnInit {\r\n\r\n  /** Table de Ordenes */\r\n  settings = {\r\n    actions: false,\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n        filter: false,\r\n        hide: true,\r\n\r\n      },\r\n      batch: {\r\n        title: 'Batch',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      order: {\r\n        title: 'Orden',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      cutsNumberTotal: {\r\n        title: 'N° cortes Total',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      currenCouts: {\r\n        title: 'Arrumes Salida Corrugador',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      ordenesMachineCount: {\r\n        title: 'Arrumes Entrada Maquina',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      diference: {\r\n        title: 'Pendientes por Atender',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n  public ReportOrdens: UspReportOrders[];\r\n\r\n\r\n  constructor(\r\n    public apiGetComp: ApiGetService,\r\n    private api: HttpService\r\n  ) { \r\n    this.ChargeReportOrdens();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n \r\n  ChargeReportOrdens() {\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetReportOrdersList').subscribe((res: any) => {\r\n      //REPORTOCUPATION=res;\r\n      console.log(\"Report Total Ordenes:\", res);\r\n      this.ReportOrdens = res;\r\n      this.source.load(res);\r\n    });\r\n    const contador = interval(60000)\r\n    contador.subscribe((n) => {\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetReportOrdersList').subscribe((res: any) => {\r\n        //REPORTOCUPATION=res;\r\n        this.ReportOrdens = res;\r\n        this.source.load(res);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<!-- <h2>Reporte de ordenes</h2> -->\r\n\r\n    <nb-card>\r\n        <nb-card-header>\r\n            Ordenes\r\n        </nb-card-header>\r\n\r\n        <nb-card-body>\r\n            <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"ReportOrdens\">\r\n            </ng2-smart-table>\r\n        </nb-card-body>\r\n    </nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\n\r\ninterface Predictive {\r\n  maquina: string;\r\n  metrosPor10MinCorrugador: number;\r\n  metrosPor10MinMaquina: number;\r\n  capacidadWip: number;\r\n  ocupacionActual: number;\r\n  anchoTotalAruumeOrden: number; \r\n  ocupacionPredictiva: number;\r\n  tiempoDetencionCorrugador: number;\r\n  duracionDetencion: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-predictivo',\r\n  templateUrl: './predictivo.component.html',\r\n  styleUrls: ['./predictivo.component.scss']\r\n})\r\nexport class PredictivoComponent implements OnInit {\r\n\r\n  settings3 = {\r\n    actions: false,\r\n    columns: {\r\n      // Maquina: {\r\n      //   title: 'Maquina',\r\n      //   type: 'string',\r\n      //   filter: false,\r\n      //   hide: true,\r\n\r\n      // },\r\n      maquina: {\r\n        title: 'Maquina',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      metrosPor10MinCorrugador: {\r\n        title: 'MetrosPor10MinCorrugador',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      metrosPor10MinMaquina: {\r\n        title: 'MetrosPor10MinMaquina',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      capacidadWip: {\r\n        title: 'CapacidadWip',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      ocupacionActual: {\r\n        title: 'OcupacionActual',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      anchoTotalAruumeOrden: {\r\n        title: 'AnchoTotalAruumeOrden',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      ocupacionPredictiva: {\r\n        title: 'OcupacionPredictiva',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      tiempoDetencionCorrugador: {\r\n        title: 'TiempoDetencionCorrugador',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n      duracionDetencion: {\r\n        title: 'DuracionDetencion',\r\n        type: 'number',\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source3: LocalDataSource = new LocalDataSource();\r\n  public GetPredictive: Predictive[];\r\n\r\n  constructor(\r\n    public apiGetComp: ApiGetService,\r\n    private api: HttpService\r\n  ) {\r\n    this.ChargePredictive();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n \r\n  ChargePredictive() {\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetPredictiveList').subscribe((res: any) => {\r\n      //REPORTOCUPATION=res;\r\n      // console.log(\"Report Predictive:\", res);\r\n      this.GetPredictive = res;\r\n      this.source3.load(res);\r\n    });\r\n    const contador = interval(30000)\r\n    contador.subscribe((n) => {\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Reports/GetPredictiveList').subscribe((res: any) => {\r\n        //REPORTOCUPATION=res;\r\n        this.GetPredictive = res;\r\n        this.source3.load(res);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","\r\n<nb-card>\r\n    <nb-card-header>\r\n      Predictivo\r\n    </nb-card-header>\r\n\r\n    <nb-card-body>\r\n      <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings3\" [source]=\"GetPredictive\">\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n  </nb-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>reports works!</p>\r\n"],"sourceRoot":"webpack:///"}