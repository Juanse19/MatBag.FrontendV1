{"version":3,"sources":["webpack:///node_modules/rxjs-compat/_esm2015/Subject.js","webpack:///src/app/pages/users/license/license.component.ts","webpack:///src/app/pages/users/license/license.component.html","webpack:///src/app/pages/users/user/user.component.ts","webpack:///src/app/pages/users/user/user.component.html","webpack:///src/app/pages/users/users-routing.module.ts","webpack:///src/app/pages/users/users-table/users-table.component.ts","webpack:///src/app/pages/users/users-table/users-table.component.html","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.module.ts"],"names":["MAKEData","LicenseComponent","fb","route","router","api","apiGetComp","accessChecker","toasterService","dateService","select","alive","licesData","GetJson","apiUrlNode1","subscribe","res","values","Value","console","log","isGranted","mostrar","licenForm","get","initUserForm","group","control","min","max","navigate","success","back","danger","formulario","value","undefined","handleWrongResponse","PostJson","handleSuccessResponse","selector","templateUrl","styleUrls","providedIn","UserFormMode","UserComponent","usersService","tokenService","userStore","httpService","resetPassword","listaRoles","listaLicens","listaUsers","unsubscribe$","userForm","viewMode","mode","loadUserData","id","role","minLength","maxLength","required","licens","pattern","state","firstName","lastName","login","age","email","address","street","city","zipCode","VIEW","snapshot","paramMap","isProfile","queryParamMap","setViewMode","EDIT_SELF","loadUser","currentUserId","getUser","toString","EDIT","ADD","getCurrentUser","pipe","user","licens_id","name","setValue","states","convertToUser","observable","currentUser","respons","message","users","updateCurrent","result","respon","sesion","userRole","IdUser","Role","apiUrlMatbox","set","Date","err","update","create","next","complete","routes","path","component","children","canActivate","UsersRoutingModule","forChild","imports","exports","UsersTableComponent","toastrService","settings","actions","add","edit","editButtonContent","deleteButtonContent","columns","title","type","loadData","source","gridDataSource","$event","data","confirm","refresh","navigateByUrl","conditionValue","displayValue","onEdit","onDelete","UsersComponent","template","NB_MODULES","UsersModule","declarations","entryComponents","providers"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["export { Subject } from 'rxjs';\n//# sourceMappingURL=Subject.js.map","import { Component, Injectable, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport {ApiGetService} from '../../../@auth/components/register/apiGet.services';\nimport { NbAccessChecker } from '@nebular/security';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NbDateService, NbToastrService } from '@nebular/theme';\n\n\ninterface licens {\n  // Id: string;\n  // Parameter: string;\n  Value?: string;\n}\n\nlet MAKEData: licens\n{\n\n};\n\n@Component({\n  selector: 'ngx-license',\n  templateUrl: './license.component.html',\n  styleUrls: ['./license.component.scss']\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class LicenseComponent implements OnInit {\n\n  licenForm: FormGroup;\n  public select = false;\n  private alive = true;\n  mostrar: Boolean;\n  public licesData: licens[]=[];\n\n  get Value() { return this.licenForm.get('Value'); }\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private api: HttpService,\n    private apiGetComp: ApiGetService,\n    public accessChecker: NbAccessChecker,\n    private toasterService: NbToastrService,\n    protected dateService: NbDateService<Date>\n  ) { \n\n    this.apiGetComp.GetJson(this.api.apiUrlNode1 +'/api/getlicenses').subscribe((res: any) => {\n      this.licesData.values=res[0].Value;\n      console.log('Numero de licencias: ', this.licesData.values);\n\n      \n\n    });\n\n    this.accessChecker.isGranted('edit', 'users').subscribe((res: any) => {\n      if(res){ \n        this.select = false;\n        this.mostrar = false;\n      }else {\n        this.select=true;\n        this.mostrar=true;\n      }\n      \n    });\n  }\n\n  ngOnInit(): void {\n    this.initUserForm();\n  }\n\n  initUserForm() {\n    this.licenForm = this.fb.group({\n     \n      Value: this.fb.control('', [ Validators.min(1),Validators.max(120)]),\n      \n    }); \n  }\n\n  // loadLices(){\n    \n  //   this.licenForm.setValue({\n  //     Value: this.licesData[0].Value ? this.licesData[0].Value : '',\n  //   });\n  // }\n\n  back() {\n    // this.mostrar= false;\n    this.router.navigate(['/pages/users/list']);\n  }\n\n  handleSuccessResponse() {\n    this.toasterService.success('', '¡Guardado con exito!' );\n    this.back();\n  }\n   \n  handleWrongResponse() {\n    this.toasterService.danger('', 'Error almacenando ');\n  }\n\n  saveData(){\n  debugger\n    let formulario = this.licenForm.value;\n  \n    if(formulario.Value){\n  \n    MAKEData = {\n      // Parameter: 'Matec',\n      Value: formulario.Value\n    }\n    debugger\n    if (MAKEData == undefined) {\n      this.handleWrongResponse();\n    }else{\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/api/postdatalicens', MAKEData).subscribe((res:any)=>{\n      this.handleSuccessResponse();\n    });\n  }\n    \n  } \n    // alert('se agregó: ' +  MAKEData.Value)\n    // console.log('Data: ', MAKEData);\n    // this.back()\n  }\n\n  ngOnDestroy(): void {\n    this.alive = false;\n  }\n\n}\n","<nb-card>\n    <nb-card-header>Agregar licencias</nb-card-header>\n    <nb-card-body>\n        <div class=\"container\">\n            <form [formGroup]=\"licenForm\">\n                <div class=\"form-group\">\n                    <label for=\"Value\">Asignacion de Licencia de acceso</label>\n                    <input nbInput id=\"Value\" formControlName=\"Value\" [(ngModel)]=\"licesData.values\" disabled=\"select\" [status]=\"(Value?.hasError('minlength') || Value?.hasError('maxlength')) ? 'danger' : 'primary'\" class=\"form-control\" placeholder=\"Licencia de acceso\">\n                    <ngx-validation-message label=\"Value\" [showMinLength]=\"Value?.hasError('minlength')\" [showMaxLength]=\"Value?.hasError('maxlength')\" minLength=3 maxLength=20></ngx-validation-message>\n                </div>\n            </form>\n        </div>\n\n    </nb-card-body>\n    <nb-card-footer>\n        <!-- <button nbButton status=\"primary\" *ngIf=\"!select\" (click)=\"saveData()\" hero>Guardar</button> -->\n        <button nbButton status=\"info\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"back()\" hero>Atras</button>\n    </nb-card-footer>\n</nb-card>","// import { states } from './../../conveyor/_interfaces/MatBag.model';\n/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component, Injectable, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\nimport { takeUntil, takeWhile} from 'rxjs/operators';\n\nimport { NbToastrService } from '@nebular/theme';\n\nimport {User, UserData} from '../../../@core/interfaces/common/users';\nimport {EMAIL_PATTERN, NgxResetPasswordComponent, NUMBERS_PATTERN} from '../../../@auth/components';\nimport {NbAuthOAuth2JWTToken, NbTokenService} from '@nebular/auth';\nimport {UserStore} from '../../../@core/stores/user.store';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport {ApiGetService} from '../../../@auth/components/register/apiGet.services';\nimport { NbAccessChecker } from '@nebular/security';\n\n\ninterface Roles {\n  id?: number;\n  name: string;\n}\n\ninterface licens {\n  Id?: string;\n  Parameter?: string;\n  Value?: string;\n}\n\ninterface states {\n  states: string;\n  Name: string;\n}\n\n\nexport enum UserFormMode {\n  VIEW = 'View',\n  EDIT = 'Editar',\n  ADD = 'Agregar',\n  EDIT_SELF = 'Editar propio',\n}\n\n@Component({\n  selector: 'ngx-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss'],\n})\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserComponent implements OnInit, OnDestroy {\n  userForm: FormGroup;\n  selectedRole;\n  selectedLis;\n  selectedState;\n  listaRoles:Roles[]=[];\n  listaLicens:states[]=[];\n  listaUsers:states[]=[];\n  public select = false;\n  private alive = true;\n  mostrar: Boolean;\n\n  protected readonly unsubscribe$ = new Subject<void>();\n\n  get firstName() { return this.userForm.get('firstName'); }\n\n  get lastName() { return this.userForm.get('lastName'); }\n\n  get login() { return this.userForm.get('login'); }\n  \n  get role() { return this.userForm.get('role'); }\n\n  get email() { return this.userForm.get('email'); }\n\n  get age() { return this.userForm.get('age'); }\n\n  get state() { return this.userForm.get('state'); }\n\n  get licens() { return this.userForm.get('licens'); }\n\n  get street() { return this.userForm.get('address').get('street'); }\n\n  get city() { return this.userForm.get('address').get('city'); }\n\n  get zipCode() { return this.userForm.get('address').get('zipCode'); }\n\n\n  mode: UserFormMode;\n  setViewMode(viewMode: UserFormMode) {\n    this.mode = viewMode;\n  }\n\n  constructor(\n              public accessChecker: NbAccessChecker,\n              private usersService: UserData,\n              private router: Router,\n              private route: ActivatedRoute,\n              private tokenService: NbTokenService,\n              private userStore: UserStore,\n              private toasterService: NbToastrService,\n              private fb: FormBuilder,\n              private httpService: HttpService,\n              private apiGetComp: ApiGetService,\n              private api: HttpService,\n              public resetPassword: NgxResetPasswordComponent) {\n                this.apiGetComp.GetJson(this.api.apiUrlNode1 +'/api/getroles').subscribe((res: any) => {\n                  this.listaRoles=res;\n                });\n\n                // this.apiGetComp.GetJson(this.api.apiUrlNode1 +'/api/getlicenses').subscribe((res: any) => {\n                //   this.listaLicens=res;\n                // });\n\n                this.apiGetComp.GetJson(this.api.apiUrlNode1 +'/api/getuserstate').subscribe((res: any) => {\n                  this.listaUsers=res;\n                  this.listaLicens=res;\n                  console.log('Status: ', this.listaUsers);\n                });\n\n\n                this.accessChecker.isGranted('edit', 'users').subscribe((res: any) => {\n                  if(res){ \n                    this.select = false;\n                    this.mostrar = false;\n                  }else {\n                    this.select=true;\n                    this.mostrar=true;\n                  }\n                  \n                });\n  }\n\n  ngOnInit(): void {\n    this.initUserForm();\n    this.loadUserData();\n  }\n\n  initUserForm() {\n    this.userForm = this.fb.group({\n      id: this.fb.control(''),\n      role: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20),Validators.required]),\n      licens: this.fb.control('', [ Validators.min(1),\n        Validators.max(120), Validators.pattern(NUMBERS_PATTERN)]),\n      state: this.fb.control(''),\n      firstName: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\n      lastName: this.fb.control('', [Validators.minLength(3), Validators.maxLength(20)]),\n      login: this.fb.control('', [Validators.required, Validators.minLength(6), Validators.maxLength(20)]),\n      age: this.fb.control('', [ Validators.min(1),\n        Validators.max(120), Validators.pattern(NUMBERS_PATTERN)]),\n      email: this.fb.control('', [\n        Validators.required,\n        Validators.pattern(EMAIL_PATTERN),\n      ]),\n      address: this.fb.group({\n        street: this.fb.control(''),\n        city: this.fb.control(''),\n        zipCode: this.fb.control(''),\n      }),\n    }); \n  }\n\n  get canEdit(): boolean {\n    return this.mode !== UserFormMode.VIEW;\n  }\n\n  \n\n  loadUserData() {\n    const id = this.route.snapshot.paramMap.get('id');\n    const isProfile = this.route.snapshot.queryParamMap.get('profile');\n    if (isProfile) {\n      this.setViewMode(UserFormMode.EDIT_SELF);\n      this.loadUser();\n    } else {\n      if (id) {\n        const currentUserId = this.userStore.getUser().id;\n        this.setViewMode(currentUserId.toString() === id ? UserFormMode.EDIT_SELF : UserFormMode.EDIT);\n        this.loadUser(id);\n      } else {\n        this.setViewMode(UserFormMode.ADD);\n      }\n    }\n  }\n\n  loadUser(id?) {\n    const loadUser = this.mode === UserFormMode.EDIT_SELF\n      ? this.usersService.getCurrentUser() : this.usersService.get(id);\n    loadUser\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((user) => { \n        // debugger\n        if(user.licens_id === null )\n          {\n            this.apiGetComp.GetJson(this.api.apiUrlNode1 +'/userrole/getrolebyuser?idUser='+user.id).subscribe((res: any) => {\n              if (res == undefined) {\n                return user.role = '';\n              }else {\n                user.role=res[0].name;\n              }\n              // console.log('data rol:', user.role);\n              console.log('data rol:', user.role, 'DataLicens:', user.licens_id);\n            this.userForm.setValue({\n              id: user.id ? user.id : '',\n              role: user.role ? user.role : '',\n              firstName: user.firstName ? user.firstName : '',\n              lastName: user.lastName ? user.lastName : '',\n              login: user.login ? user.login : '',\n              age: user.age ? user.age : '',\n              state: user.states ? user.states : '',\n              licens: user.licens_id ? user.licens_id : '',\n              email: user.email,\n              address: {\n                street: (user.address && user.address.street) ? user.address.street : '',\n                city: (user.address && user.address.city) ? user.address.city : '',\n                zipCode: (user.address && user.address.zipCode) ? user.address.zipCode : '',\n              },\n            });\n          },\n        );\n          } \n          else \n          {\n            // this.apiGetComp.GetJson(this.api.apiUrlNode1 +'/api/getlicenbyuser?LicenID='+user.licens_id).subscribe((res: any) => {\n            //   if (res == undefined) {\n            //     user.licens_id = null;\n            //   }else {\n            //    user.licens_id=res[0].Id;\n            //   }  \n            this.apiGetComp.GetJson(this.api.apiUrlNode1 +'/userrole/getrolebyuser?idUser='+user.id).subscribe((res: any) => {\n              if (res == undefined) {\n                return user.role = '';\n              }else {\n                user.role=res[0].name;\n              }\n                          \n              // console.log('data rol:', user.role);\n              console.log('data rol:', user.role, 'DataLicens:', user.licens_id);\n            this.userForm.setValue({\n              id: user.id ? user.id : '',\n              role: user.role ? user.role : '',\n              firstName: user.firstName ? user.firstName : '',\n              lastName: user.lastName ? user.lastName : '',\n              login: user.login ? user.login : '',\n              age: user.age ? user.age : '',\n              state: user.states ? user.states : '',\n              licens: user.licens_id ? user.licens_id : '',\n              email: user.email,\n              address: {\n                street: (user.address && user.address.street) ? user.address.street : '',\n                city: (user.address && user.address.city) ? user.address.city : '',\n                zipCode: (user.address && user.address.zipCode) ? user.address.zipCode : '',\n              },\n            });\n          },\n        );\n      // });\n     }\n  \n        // this is a place for value changes handling\n        // this.userForm.valueChanges.pipe(takeUntil(this.unsubscribe$)).subscribe((value) => {   });\n      });\n  }\n\n\n  convertToUser(value: any): User {\n    const user: User = value;\n    return user;\n  }\n\n  changepass(){\n    // this.resetPassword.userId=this.userForm.value.id;\n    this.router.navigate(['/auth/reset-password/'+this.userForm.value.id]);\n  }\n\n  save() {\n    const user: User = this.convertToUser(this.userForm.value);\n    debugger\n    let observable = new Observable<User>();\n    if (this.mode === UserFormMode.EDIT_SELF) {\n      const currentUserId = this.userStore.getUser().id;\n      const currentUser = this.userStore.getUser().firstName;\n  // console.log(\"este es el usuario: \",this.userStore.getUser().firstName);\n      var respons = \n        {\n            user: currentUser,\n            message:\"Edito usuario\", \n            users: currentUserId,\n    };\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/postSaveAlarmUser', respons)\n        .pipe(takeWhile(() => this.alive))\n        .subscribe((res: any) => {\n        //  console.log(\"Envió: \", res);\n          }); \n          \n      this.usersService.updateCurrent(user)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((result: any) => {   \n        // debugger;\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/update', user)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        console.log('data update', user, res);\n      });\n      debugger\n      var respon = \n      {\n          user: user.id,\n          sesion: 0, \n          \n    };\n    this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/updateSesion', respon)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n      //  console.log(\"Envió: \", res);\n        });\n\n        var userRole = {\n          IdUser:user.id,\n          Role:user.role\n        };\n        this.apiGetComp.PostJson(this.httpService.apiUrlMatbox + '/userrole/postupdateroleuser',userRole)\n        .pipe(takeWhile(() => this.alive))\n        .subscribe();\n          this.tokenService.set(new NbAuthOAuth2JWTToken(result, 'email', new Date()));\n          this.handleSuccessResponse();\n        },\n        err => {\n          this.handleWrongResponse();\n        });\n    } else {\n      observable = user.id\n        ? this.usersService.update(user)\n        : this.usersService.create(user);\n    }\n\n    observable\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(() => {\n        // debugger;\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/update', user)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        console.log('data update', user);\n      });\n\n      debugger\n      var respon = \n      {\n          user: user.id,\n          sesion: 0, \n          \n    };\n    this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/updateSesion', respon)\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n      //  console.log(\"Envió: \", res);\n        });\n\n        var userRole = {\n          IdUser:user.id,\n          Role:user.role\n        };\n        this.apiGetComp.PostJson(this.httpService.apiUrlMatbox + '/userrole/postupdateroleuser',userRole)\n        .pipe(takeWhile(() => this.alive))\n        .subscribe();\n\n        this.handleSuccessResponse();\n      },\n      err => {\n      this.handleWrongResponse();\n    });\n  }\n\n  handleSuccessResponse() {\n    this.toasterService.success('', `Usuario ${this.mode === UserFormMode.ADD ? 'Creado' : 'Actualizado'}!`);\n    this.back();\n  }\n\n  handleWrongResponse() {\n    this.toasterService.danger('', `¡Este correo electrónico ya se tomó!`);\n  }\n\n  back() {\n    // this.mostrar= false;\n    this.router.navigate(['/pages/users/list']);\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n    this.alive = false;\n  }\n}\n","<!--\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\n  ~ Licensed under the Single Application / Multi Application License.\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n  -->\n\n<nb-card>\n    <nb-card-header>{{mode}} usuario</nb-card-header>\n    <nb-card-body>\n        <div [formGroup]=\"userForm\" class=\"container\">\n            <div class=\"form-group\">\n                <label for=\"firstName\">Primer nombre</label>\n                <input nbInput id=\"firstName\" formControlName=\"firstName\" [status]=\"(firstName?.hasError('minlength') || firstName?.hasError('maxlength')) ? 'danger' : 'primary'\" class=\"form-control\" placeholder=\"Primer nombre\">\n                <ngx-validation-message label=\"First Name\" [showMinLength]=\"firstName?.hasError('minlength')\" [showMaxLength]=\"firstName?.hasError('maxlength')\" minLength=3 maxLength=20></ngx-validation-message>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"lastName\">Apellido</label>\n                <input nbInput id=\"lastName\" formControlName=\"lastName\" [status]=\"(lastName?.hasError('minlength') || lastName?.hasError('maxlength')) ? 'danger' : 'primary'\" class=\"form-control\" placeholder=\"Apellido\">\n                <ngx-validation-message label=\"Last Name\" [showMinLength]=\"lastName?.hasError('minlength')\" [showMaxLength]=\"lastName?.hasError('maxlength')\" minLength=3 maxLength=20></ngx-validation-message>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"inputLogin\">Usuario</label>\n                <input nbInput id=\"inputLogin\" [disabled]=\"select\" formControlName=\"login\" [status]=\"(login?.errors?.required || login?.hasError('minlength') || login?.hasError('maxlength')) && login.touched ? 'danger' : 'primary'\" class=\"form-control\" placeholder=\"Acceso\">\n                <ngx-validation-message label=\"Login\" [showMinLength]=\"login?.hasError('minlength')\" [showMaxLength]=\"login?.hasError('maxlength')\" [showRequired]=\"login?.errors?.required && login.touched\" minLength=6 maxLength=20></ngx-validation-message>\n            </div>\n\n            <!-- <div class=\"form-group\">\n                <label for=\"inputAge\">Edad</label>\n                <input nbInput id=\"inputAge\" formControlName=\"age\" [status]=\"(age?.errors?.required || age?.errors?.min || age?.errors?.max || age?.hasError('pattern')) && age.touched? 'danger' : 'primary'\" class=\"form-control\" placeholder=\"Edad\">\n                <ngx-validation-message label=\"Age\" [showMin]=\"age?.errors?.min && age.touched\" [showMax]=\"age?.errors?.max && age.touched\" [showRequired]=\"age?.errors?.required && age.touched\" [showPattern]=\"age?.hasError('pattern')\" min=1 max=120></ngx-validation-message>\n            </div> -->\n\n            <div class=\"form-group\">\n                <label for=\"inputEmail\">Email</label>\n                <input nbInput id=\"inputEmail\" formControlName=\"email\" [disabled]=\"select\" [status]=\"(email?.errors?.required || email?.hasError('pattern')) && email.touched ? 'danger' : 'primary'\" class=\"form-control\" placeholder=\"Email\">\n                <ngx-validation-message label=\"Email\" [showPattern]=\"email?.hasError('pattern') && email.touched\" [showRequired]=\"email?.errors?.required && email.touched\" min=1 max=120></ngx-validation-message>\n            </div>\n\n            <!-- <div class=\"form-group\">\n                <label for=\"licens\">Asignacion de Licencia de acceso</label>\n                <input nbInput id=\"licens\" [status]=\"(lastName?.hasError('minlength') || lastName?.hasError('maxlength')) ? 'danger' : 'primary'\" class=\"form-control\" placeholder=\"Licencia de acceso\">\n                <ngx-validation-message label=\"Last Name\" [showMinLength]=\"lastName?.hasError('minlength')\" [showMaxLength]=\"lastName?.hasError('maxlength')\" minLength=3 maxLength=20></ngx-validation-message>\n            </div> -->\n\n            <div class=\"form-group\" [formGroup]=\"userForm\">\n                <label for=\"licens\">Asignación de Licencia</label>\n                <br />\n                <nb-select id=\"licens\" placeholder=\"Licencia\" formControlName=\"licens\" [status]=\"(licens.hasError('minlength') || licens.hasError('maxlength')) ? 'danger' : 'primary'\" [(selected)]=\"selectedLis\">\n                    <nb-option *ngFor=\"let itemUser of listaLicens\" [value]=\"itemUser.states\">\n                        {{ itemUser.Name }}\n                    </nb-option>\n                </nb-select>\n            </div>\n\n            <!-- <div class=\"form-group\" formGroupName=\"address\">\n        <label for=\"inputStreet\">Calle</label>\n        <input nbInput class=\"form-control\" id=\"inputStreet\" placeholder=\"Calle\" formControlName=\"street\">\n      </div>\n\n      <div class=\"form-group\" formGroupName=\"address\">\n        <label for=\"inputCity\">Ciudad</label>\n        <input nbInput class=\"form-control\" id=\"inputCity\" placeholder=\"Ciudad\" formControlName=\"city\">\n      </div> -->\n            <!-- \n      <div class=\"form-group\" formGroupName=\"address\">\n        <label for=\"inputZipCode\">Zip Code</label>\n        <input nbInput class=\"form-control\" id=\"inputZipCode\" placeholder=\"Zip Code\" formControlName=\"zipCode\">\n      </div> -->\n\n            <div class=\"form-group\" [formGroup]=\"userForm\">\n                <label for=\"role\">Role: </label>\n                <br />\n                <nb-select id=\"role\" placeholder=\"Role\" formControlName=\"role\" [disabled]=\"select\" [status]=\"(role?.hasError('minlength') || role?.hasError('maxlength')) ? 'danger' : 'primary'\" [(selected)]=\"selectedRole\">\n                    <nb-option *ngFor=\"let itemRole of listaRoles\" [value]=\"itemRole.name\">\n                        {{ itemRole.name }}\n                    </nb-option>\n                </nb-select>\n\n                <!-- <input nbInput class=\"form-control\" id=\"role\" placeholder=\"role\" formControlName=\"role\"> -->\n                <!-- <nb-select id=\"role\" \n                                [formControl]=\"role\"\n                                [status]=\"(role?.hasError('minlength') || role?.hasError('maxlength')) ? 'danger' : 'primary'\"\n                                class=\"form-control\"\n                                placeholder= \"Role\"\n                                [(selected)]=\"selectedRole\">\n                                  <nb-option *ngFor=\"let itemRole of listaRoles\" [value]=\"itemRole.name\">\n                                    {{ itemRole.name }}\n                                  </nb-option>             \n                              </nb-select>\n                              <ngx-validation-message label=\"Role\"\n                              [showMinLength]=\"role?.hasError('minlength')\"\n                              [showMaxLength]=\"role?.hasError('maxlength')\" \n                              minLength=3\n                              maxLength=20\n                              [showRequired]=\"role?.errors?.required && role.touched\"\n                              ></ngx-validation-message> -->\n            </div>\n\n            <div class=\"form-group\" [formGroup]=\"userForm\">\n                <label for=\"state\">Activación Usuarios </label>\n                <br />\n                <nb-select id=\"state\" placeholder=\"state\" formControlName=\"state\" [disabled]=\"select\" [status]=\"(state?.hasError('minlength') || state?.hasError('maxlength')) ? 'danger' : 'primary'\" [(selected)]=\"selectedState\">\n                    <nb-option *ngFor=\"let itemUser of listaUsers\" [value]=\"itemUser.states\">\n                        {{ itemUser.Name }}\n                    </nb-option>\n                </nb-select>\n            </div>\n\n        </div>\n    </nb-card-body>\n    <nb-card-footer *ngIf=\"!mostrar\">\n        <button nbButton status=\"primary\" *ngIf=\"!select\" [disabled]=\"!userForm.valid\" (click)=\"save()\" hero>Guardar</button>\n        <button nbButton status=\"info\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"back()\" hero>Atras</button>\n        <button nbButton status=\"secondary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"changepass()\" hero>Cambiar contraseña</button>\n    </nb-card-footer>\n</nb-card>","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersComponent } from './users.component';\nimport { UserComponent } from './user/user.component';\nimport { UsersTableComponent } from './users-table/users-table.component';\nimport { AdminGuard } from '../../@auth/admin.guard';\nimport { LicenseComponent } from './license/license.component'\n\nconst routes: Routes = [{\n  path: '',\n  component: UsersComponent,\n  children: [\n    {\n      path: 'list',\n      canActivate: [AdminGuard],\n      component: UsersTableComponent,\n    },\n    {\n      path: 'edit/:id',\n      canActivate: [AdminGuard],\n      component: UserComponent,\n    },\n    { \n      path: 'current',\n      component: UserComponent,\n    },\n    {\n      path: 'add',\n      canActivate: [AdminGuard],\n      component: UserComponent,\n    },\n    {\n      path: 'licenses',\n      canActivate: [AdminGuard],\n      component: LicenseComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule {\n\n}\n","import { states } from './../../conveyor/_interfaces/MatBag.model';\nimport { State } from './../../dashboard/_interfaces/MatBox.model';\n/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component, OnDestroy } from '@angular/core';\n\nimport { takeWhile } from 'rxjs/operators';\nimport { UserData } from '../../../@core/interfaces/common/users';\nimport { NbToastrService } from '@nebular/theme';\nimport { Router } from '@angular/router';\nimport { DataSource } from 'ng2-smart-table/lib/lib/data-source/data-source';\nimport {\n  NgxFilterByNumberComponent,\n} from '../../../@components/custom-smart-table-components/filter-by-number/filter-by-number.component';\nimport { UserStore } from '../../../@core/stores/user.store';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\n\n@Component({\n  selector: 'ngx-users-table',\n  templateUrl: './users-table.component.html',\n  styleUrls: ['./users-table.component.scss'],\n\n})\nexport class UsersTableComponent implements OnDestroy {\n\n  private alive = true;\n\n  settings = {\n    mode: 'external',\n    actions: {\n      add: false,\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n    },\n    columns: {\n      firstName: {\n        title: 'Primer nombre',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Apellido',\n        type: 'string',\n      },\n      login: {\n        title: 'Usuario',\n        type: 'string',\n      },\n      email: {\n        title: 'Email',\n        type: 'string',\n      },\n      // states: {\n      //   title: 'Estado',\n      //   type: 'string',\n      // },\n      // licens_id: {\n      //   title: 'Estado',\n      //   type: 'string',\n      // },\n      // street: {\n      //   title: 'Street',\n      //   type: 'string',\n      //   valuePrepareFunction: (cell, element) =>\n      //     this.customDisplay(element.address, element.address.street),\n      // },\n      // city: {\n      //   title: 'City',\n      //   type: 'string',\n      //   valuePrepareFunction: (cell, element) =>\n      //     this.customDisplay(element.address, element.address.city),\n      // },\n      // zipcode: {\n      //   title: 'Zip Code',\n      //   type: 'number',\n      //   valuePrepareFunction: (cell, element) =>\n      //     this.customDisplay(element.address, element.address.zipCode),\n      // },\n    },\n  };\n\n  source: DataSource;\n\n  constructor(private usersService: UserData, private router: Router,\n    private toastrService: NbToastrService,\n    private userStore: UserStore,\n    private api: HttpService,\n    private apiGetComp: ApiGetService\n    ) {\n    this.loadData(); \n  }\n\n  loadData() {\n    this.source = this.usersService.gridDataSource;\n    console.log('Data: ', this.source);\n    \n  }\n\n  createUser() {\n    this.router.navigate(['/pages/users/add/']);\n  }\n\n  onEdit($event: any) {\n    this.router.navigate([`/pages/users/edit/${$event.data.id}`]);\n  }\n\n  onDelete($event: any) {\n    if (confirm('Are you sure wants to delete item?') && $event.data.id) {\n      this.usersService\n        .delete($event.data.id)\n        .pipe(takeWhile(() => this.alive))\n        .subscribe((res) => {\n          if (res) {\n          const currentUserId = this.userStore.getUser().id;\n          const currentUser = this.userStore.getUser().firstName;\n  // console.log(\"este es el usuario: \",this.userStore.getUser().firstName);\n  var respons = \n  {\n    user: currentUser,\n    message:\"Elimino un usuario\",\n    users: currentUserId,   \n};\n  this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/postSaveAlarmUser', respons)\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n        //  console.log(\"Envió: \", res);\n      });\n            this.toastrService.success('', 'Item deleted!');\n            this.source.refresh(); \n          } else {\n            this.toastrService.danger('', 'Algo salio mal.');\n          }\n        });\n    }\n  }\n\n  add(){\n    return this.router.navigateByUrl('/auth/register');\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  private customDisplay(conditionValue: any, displayValue: string) {\n    return conditionValue ? displayValue : '';\n  }\n}\n","<!--\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\n  ~ Licensed under the Single Application / Multi Application License.\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n  -->\n\n<nb-card>\n    <nb-card-header>\n        Lista de usuarios\n    </nb-card-header>\n\n    <nb-card-body>\n        <ng2-smart-table class=\"user-smart-table\" [settings]=\"settings\" [source]=\"source\" (edit)=\"onEdit($event)\" (delete)=\"onDelete($event)\">\n        </ng2-smart-table>\n    </nb-card-body>\n    <nb-card-footer>\n        <!-- <button nbButton type=\"submit\" (click)=\"createUser()\" class=\"btn btn-primary\">Agregar usuario</button> -->\n        <button nbButton status=\"primary\" type=\"submit\" (click)=\"add()\" class=\"btn btn-primary\">Agregar usuario </button>\n    </nb-card-footer>\n</nb-card>","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'ngx-users',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class UsersComponent {\n\n}\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { AuthModule } from '../../@auth/auth.module';\n\n// components\nimport { UsersComponent } from './users.component';\nimport { UserComponent } from './user/user.component';\nimport { UsersTableComponent } from './users-table/users-table.component';\nimport { ComponentsModule } from '../../@components/components.module';\n\nimport { NgxResetPasswordComponent} from '../../@auth/components';\n// components\n\nimport {\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbInputModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbRadioModule,\n  NbSelectModule,\n  NbListModule,\n  NbIconModule,\n  NbSpinnerModule,\n  NbDatepickerModule,\n  NbCheckboxModule,\n} from '@nebular/theme';\nimport { LicenseComponent } from './license/license.component';\n\nconst  NB_MODULES = [\n  NbActionsModule,\n  NbButtonModule,\n  NbCardModule,\n  NbInputModule,\n  NbTabsetModule,\n  NbUserModule,\n  NbRadioModule,\n  NbSelectModule,\n  NbListModule,\n  NbIconModule,\n  NbSpinnerModule,\n  NbDatepickerModule,\n  NbInputModule,\n  NbCheckboxModule,\n];\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    AuthModule,\n    Ng2SmartTableModule,\n    UsersRoutingModule,\n    ComponentsModule,\n    ReactiveFormsModule,\n    ...NB_MODULES,\n  ],\n  declarations: [\n    UsersComponent,\n    UsersTableComponent,\n    UserComponent,\n    LicenseComponent,\n  ],\n  entryComponents: [\n  ],\n  providers: [\n    NgxResetPasswordComponent\n  ],\n})\nexport class UsersModule { }\n"]}