{"version":3,"sources":["./src/app/pages/tables/OrderTable/apiGet.services.ts","./src/app/pages/tables/OrderTable/orderTable.component.ts","./src/app/pages/tables/OrderTable/orderTable.component.html","./src/app/pages/tables/SmartOrderTable/smartOrderTable.component.ts","./src/app/pages/tables/SmartOrderTable/smartOrderTable.component.html","./src/app/pages/tables/WindowCreateOrderPopup/apiWindowCreateOrderPopup.services.ts","./src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.ts","./src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.html","./src/app/pages/tables/WindowOrderPopup/apiWindowiOrderPopup.services.ts","./src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.ts","./src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.html","./src/app/pages/tables/alarms/alarms.component.ts","./src/app/pages/tables/alarms/alarms.component.html","./src/app/pages/tables/smart-table/smart-table.component.ts","./src/app/pages/tables/smart-table/smart-table.component.html","./src/app/pages/tables/tables-routing.module.ts","./src/app/pages/tables/tables.component.ts","./src/app/pages/tables/tables.module.ts","./src/app/pages/tables/tree-grid/tree-grid.component.ts","./src/app/pages/tables/tree-grid/tree-grid.component.html"],"names":[],"mappings":"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","file":"tables-tables-module-es2015.js","sourcesContent":["import { Injectable} from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n// import { Observable, Subject, of } from 'rxjs';\n\n\ninterface Ordenes {\n    order: string;\n    name: string;\n    description: string;\n    reference: string;\n    orderLength: number;\n  }\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ApiGetService {\n\n    constructor(private http: HttpClient) {}\n\n    GetJson(url: string) {\n        return this.http.get(url);\n    }\n\n\n}\n","import { Component, EventEmitter, HostBinding, OnDestroy, OnInit, Output, ViewChild , TemplateRef, PipeTransform} from '@angular/core';\nimport { Location, LocationStrategy } from '@angular/common';\nimport { NbThemeService } from '@nebular/theme';\nimport { map, takeUntil, startWith, debounceTime, tap, switchMap, delay, takeWhile } from 'rxjs/operators';\nimport { Observable, Subject, of, BehaviorSubject,Subscription } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { i18nMetaToDocStmt } from '@angular/compiler/src/render3/view/i18n/meta';\nimport {ApiGetService} from '../OrderTable/apiGet.services'\nimport { DecimalPipe } from '@angular/common';\nimport { FormControl } from '@angular/forms'; \nimport {WindowComponent} from '../WindowOrderPopup/windowsOrderPopup.component'\nimport {ApiWindowOrderPopup} from '../WindowOrderPopup/apiWindowiOrderPopup.services'\nimport {WindowCreateComponent} from '../WindowCreateOrderPopup/windowsCreateOrderPopup.component'\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\nimport { MessageService } from '../../dashboard/services/MessageService';\nimport { Identifiers } from '@angular/compiler';\nimport { NbAccessChecker } from '@nebular/security';\n\n\n  interface Ordenes {\n    id: number;\n    order: string;\n    batch?: number;\n    name: string;\n    description: string;\n    reference: string;\n    orderLength: number;\n    cutsNumber: number;\n    cutsWidth: number;\n    cutsLength: number;\n    origen:string;\n    priority: number;\n  }\n\n  interface State {\n    page: number;\n    pageSize: number;\n    searchTerm: string;\n  }\n\n\n  interface SearchResult2 {\n    ordenes: Ordenes[];\n    total: number;\n  }\n\n  let ORDENES: Ordenes[]= [\n  \n\n  ];\n\n  let ORDEN: Ordenes  \n{\n\n};\n\n\n\nfunction matches2(ordenes: Ordenes, term: string, pipe: PipeTransform) {\n  return ordenes.order.toLowerCase().includes(term)\n    || ordenes.name.toLowerCase().includes(term.toLowerCase())\n    || ordenes.description.toLowerCase().includes(term.toLowerCase())\n    || ordenes.reference.toLowerCase().includes(term)\n    || ordenes.origen.toLowerCase().includes(term.toLowerCase())\n    || pipe.transform(ordenes.orderLength).includes(term);\n}\n\n\n\n@Component({\n    providers:[\n    //   JacComponent\n    // , WindowComponent\n     ApiGetService\n     ,DecimalPipe\n     ,WindowComponent\n     ,WindowCreateComponent\n    // , WindowFormComponent\n    ],\n    selector: 'ngx-ordertable',\n    templateUrl: './orderTable.component.html',\n    styleUrls: ['./orderTable.component.scss'],\n  })\n\n  export class OrderTableComponent implements OnInit {\n\n    subscription: Subscription;\n    private _state: State = {\n      page: 1,\n      pageSize: 5,\n      searchTerm: ''\n\n    };\n\n    public select = false;\n    private alive = true;\n    mostrar: Boolean;\n\n    total: number ;\n\n    private _loading$ = new BehaviorSubject<boolean>(true);\n    private _search$ = new Subject<void>();\n    // private _countries$ = new BehaviorSubject<Country[]>([]);\n    private _Ordenes$ = new BehaviorSubject<Ordenes[]>([]);\n\n    private _total$ = new BehaviorSubject<number>(0);\n\n    filter = new FormControl('');\n\n    constructor(\n        public accessChecker: NbAccessChecker,\n        public apiGetComp: ApiGetService,\n        public pipe : DecimalPipe,\n        private orderPopup: WindowComponent, \n        private orderCrearPopup: WindowCreateComponent,\n        private api: HttpService,\n        private messageService: MessageService\n      ) {\n        \n        this.subscription = this.messageService.onMessage()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(message => {\n          if (message.text==\"orderTable\") {\n            //this.messages.push(message);\n            this.CargarTabla();\n          }\n        });\n        this._search$.pipe(\n          takeWhile(() => this.alive),\n          tap(() => this._loading$.next(true)),\n          debounceTime(200),\n          switchMap(() => this._search()),\n          delay(200),\n          tap(() => this._loading$.next(false))\n        )\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(result => {\n          this._Ordenes$.next(result.ordenes);\n          this._total$.next(result.total);\n        });\n    \n        this._search$.next();\n        this.CargarTabla();\n        this.alive;\n        this.accessChecker.isGranted('edit', 'ordertable').subscribe((res: any) => {\n          if(res){ \n            this.select = false;\n            this.mostrar = false;\n          }else {\n            this.select=true;\n            this.mostrar=true;\n          }\n        });\n\n      }\n\n      // get countries$() { return this._countries$.asObservable(); }\n      get ordenesMaquina$() { return this._Ordenes$.asObservable(); }\n      get total$() { return this._total$.asObservable(); }\n      get loading$() { return this._loading$.asObservable(); }\n      get page() { return this._state.page; }\n      get pageSize() { return this._state.pageSize; }\n      get searchTerm() { return this._state.searchTerm; }\n\n      // get searchTerm() { return this._state.searchTerm; }\n      set page(page: number) { this._set({page}); }\n      set pageSize(pageSize: number) { this._set({pageSize}); }\n      set searchTerm(searchTerm: string) { this._set({searchTerm}); }\n\n      private _set(patch: Partial<State>) {\n        Object.assign(this._state, patch);\n        this._search$.next();\n      }\n      \n    ngOnInit(): void {\n        // throw new Error('Method not implemented.');\n        // console.log(\"entrooo\")\n        this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\n        .pipe(takeWhile(() => this.alive))\n        .subscribe((res:any)=>{\n        // console.log(res)\n        ORDENES = res;     \n        });\n        this._search$.next();\n\n        // this.refreshCountries();\n    }  \n\n    CargarTabla(){\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res:any)=>{\n        ORDENES = res;     \n        });\n        this._search$.next();\n    }  \n\n    _search(): Observable<SearchResult2> {\n    \n      const {pageSize, page, searchTerm} = this._state;\n\n\n      let ordenes = ORDENES;\n  \n      // 2. filter\n      ordenes = ordenes.filter(ordenes => matches2(ordenes, searchTerm, this.pipe));\n      const total = ordenes.length;\n  \n      // 3. paginate\n      ordenes = ordenes.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\n      // return of({countries, total});\n      return of({ordenes, total});\n    }\n\n    Edit(orden:string, nombre:string, descripcion:string, referencia:string, tamañoOrden:number, origenValor:string, corteNumero: number, corteAncho:number, corteLargo:number, parPrority:number, idForm: number){\n      ORDEN = {\n        order: orden,\n        id: idForm,\n        name: nombre,\n        description: descripcion,\n        reference: referencia,\n        orderLength: tamañoOrden,\n        cutsNumber: corteNumero,\n        cutsWidth: corteAncho,\n        cutsLength: corteLargo,\n        origen: origenValor,\n        priority: parPrority,\n      }\n      // console.log(ORDEN);\n      \n      this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        if(res){ \n          this.orderPopup.openWindowForm(\"Propiedades de la Orden \" + ORDEN.order , \"\", ORDEN);\n          this.select = false;\n          this.mostrar = false;\n        }else {\n          this.select=true;\n          this.mostrar=true;\n        }\n      });\n      \n    }\n\n    Refresh(){\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res:any)=>{\n        // console.log(res)\n        ORDENES = res;     \n        });\n        this._search$.next();\n    }\n    \n\n    \n\n    CrearOrden(){\n      this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => { \n        if(res){ \n          this.orderCrearPopup.openWindowForm(\"CREAR ORDEN\",\"\");\n          this.select = false;\n        }else {\n          this.select=true;\n        }\n      });\n    }\n  \n    ngOnDestroy() {\n      this.alive = false;\n    }\n\n}","<div class=\"row\">\n  <!-- <div class=\"col-xxxl-9 col-xl-12\"> -->\n  <div class=\"col-md-12 col-lg-12 col-xxxl-12\">\n\n    <nb-card style=\"padding: 20px;\">\n\n      <form> \n        <div class=\"form-group form-inline\">\n          Buscar: <input class=\"form-control ml-2\" type=\"text\"  name=\"searchTerm\" placeholder=\"Buscar ordenes\" [(ngModel)]=\"searchTerm\"/>\n          <span class=\"ml-3\" *ngIf=\"loading$ | async\">Loading...</span>\n          <td><button nbButton shape=\"semi-round\" class=\"boton1\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"CrearOrden()\" >Crear Orden</button></td>\n      </div>\n      <nb-card-body>\n      <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Orden</th>\n          <th scope=\"col\">Batch</th>\n          <!-- <th scope=\"col\">Nombre</th> -->\n          <th scope=\"col\">Referencia</th>\n          <th scope=\"col\">Destino</th>\n          <th scope=\"col\">Origen</th>\n          <th scope=\"col\">Longitud</th>\n          <th scope=\"col\"># Cortes</th>\n          <th scope=\"col\">Ancho Cortes</th>\n          <th scope=\"col\">Largo Cortes</th>\n          <th scope=\"col\">Prioridad</th>\n          <th scope=\"col\" *ngIf=\"!mostrar\">Editar</th>\n        </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let ordenes of ordenesMaquina$ | async\">\n        <!-- <th scope=\"row\">{{ ordenes.id }}</th> -->\n        <td><ngb-highlight [result]=\"ordenes.id\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.order\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.batch\" [term]=\"filter.value\"></ngb-highlight></td>\n        <!-- <td><ngb-highlight [result]=\"ordenes.name\" [term]=\"filter.value\"></ngb-highlight></td> -->\n        <td><ngb-highlight [result]=\"ordenes.reference\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.description\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.origen\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.orderLength\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.cutsNumber\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.cutsWidth\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.cutsLength\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.priority\" [term]=\"filter.value\"></ngb-highlight></td>\n        <!-- <td><button (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength)\" nbButton>EDIT</button></td> -->\n        <td><button nbButton shape=\"semi-round\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength, ordenes.origen, ordenes.cutsNumber, ordenes.cutsWidth, ordenes.cutsLength, ordenes.priority, ordenes.id)\">EDITAR</button></td>\n    \n      </tr>\n      </tbody>\n      </table>\n    </nb-card-body>\n        <div class=\"d-flex justify-content-between p-2\">\n      \n         <ngb-pagination\n         [collectionSize]=\"(total$ | async)!\" [(page)]=\"page\" [pageSize]=\"pageSize\">\n        </ngb-pagination>\n        <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\" [(ngModel)]=\"pageSize\">\n          <!-- <option [ngValue]=\"2\">2 items per page</option> -->\n          <option [ngValue]=\"5\">5 items per page</option>\n          <option [ngValue]=\"10\">10 items per page</option>\n          <option [ngValue]=\"15\">15 items per page</option>\n    \n        </select>\n      </div>\n      <td><button nbButton shape=\"semi-round\" class=\"boton2\" status=\"primary\" (click)=\"Refresh()\">Refrescar</button></td>\n    \n      </form>\t  \n    \n    \n    </nb-card>\n    \n    \n    \n    <!-- <ngx-temperature></ngx-temperature> -->\n\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\n\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\nimport {ApiGetService} from '../OrderTable/apiGet.services'\nimport { Router } from '@angular/router';\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\n\n\ninterface Ordenes {\n  // id?: number;\n  order: string;\n  name: string;\n  description: string;\n  reference: string;\n  orderLength: number;\n}\n\nlet ORDENES: Ordenes[]= [\n  \n\n];\n\n@Component({\n  selector: 'ngx-smartOrderTable',\n  templateUrl: './smartOrderTable.component.html',\n  styleUrls: ['./smartOrderTable.component.scss'],\n})\nexport class SmartOrderTableComponent {\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n  \n    columns: {\n      order: {\n        title: 'Order',\n        type: 'string',\n      },\n      name: {\n        title: 'Name',\n        type: 'string',\n      },\n      description: {\n        title: 'Description',\n        type: 'string',\n      },\n      reference: {\n        title: 'Reference',\n        type: 'string',\n      },\n      orderLength: {\n        title: 'OrderLength',\n        type: 'number',\n      },  \n    },\n  };\n\n \n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData,\n    public apiGetComp: ApiGetService, private router: Router\n    ,private api: HttpService\n    ) {\n    // const data = this.service.getData();\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders').subscribe((res:any)=>{\n      // console.log(res)\n      ORDENES = res;     \n      this.source.load(ORDENES);\n\n      });\n    \n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  createUser() {\n    this.router.navigate(['/pages/users/add/']);\n    // this.router.navigate(['.../WindowOrderPopup/windowsOrderPopup.component']);\n\n  }\n\n  // onEdit($event: any) {\n  //   this.router.navigate([`/pages/users/edit/${$event.data.id}`]);\n  // }\n\n\n  \n}\n","\n<nb-card>\n    <nb-card-header>\n      Smart Order Table\n    </nb-card-header>\n  \n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\"\n                       [settings]=\"settings\"\n                       [source]=\"source\"\n                       (deleteConfirm)=\"onDeleteConfirm($event)\">\n                       <!-- (edit)=\"onEdit($event)\" -->\n      </ng2-smart-table>\n    </nb-card-body>\n    <nb-card-footer>\n      <button type=\"submit\" (click)=\"createUser()\" class=\"btn btn-primary\">Add User</button>\n    </nb-card-footer>\n  </nb-card>","import { Injectable} from '@angular/core'\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\nimport { Interface } from 'readline';\n\ninterface OrdenActualizar {\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n}\n\ninterface OrdenCrear {\n  orden: string;\n  referencia: string;\n  batch: number;\n  longitudOrden: number;\n  cortesNumero: number;\n  cortesAncho: number;\n  cortesLargo: number;\n  sheetsNumbers: number;\n  stackHeight: number;\n  sheetThickness: number;\n  origen: string;\n  destino: string;\n  productMissing: number;\n  signalStart: boolean;\n  sheetScrap: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ApiWindowCreateOrderPopup{\n\n\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        //   responseType: 'text'\n        }),\n        'responseType': 'blob' as 'json'\n      };\n\n    constructor(private http: HttpClient){}\n\n    GetJson(url:string){\n        return this.http.get(url);\n    }\n\n    PostJson(url:string, ordenActualizar: OrdenActualizar){\n        return this.http.post(url, ordenActualizar, this.httpOptions);\n    }\n\n    PostJsonCrear(url:string, ordenCrear: OrdenCrear){\n      return this.http.post(url, ordenCrear, this.httpOptions);\n  }\n    // GetJson(url:string){\n    //     return this.http.get<Observable<Ordenes[]>>(url);\n    // }\n\n    Suma(){\n        console.log(5+5);\n    }\n\n}\n","import { Component, ElementRef, Input, PipeTransform, TemplateRef, ViewChild } from '@angular/core';\nimport { NbComponentStatus, NbSelectComponent, NbWindowConfig, NbWindowRef, NbWindowService,NbToastrService, NbWindowModule } from '@nebular/theme';\nimport { title } from 'process';\nimport { threadId } from 'worker_threads';\nimport {ApiWindowCreateOrderPopup} from './apiWindowCreateOrderPopup.services'\nimport { DecimalPipe } from '@angular/common';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { debounceTime, delay, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { HttpHandler } from '@angular/common/http';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {ApiGetService} from '../../../@auth/components/register/apiGet.services';\n\n// import { ApiGetService } from '../OrderTable/apiGet.services';\n// import {HttpClient} from '@angular/common/http'\n// import { WindowFormComponent } from '../..window-form/window-form.component';\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\n\ninterface Ordenes {\n  id?: number;\n  order: string;\n  name: string;\n  description: string;\n  reference: string;\n  orderLength: number;\n  cutsNumber: number;\n  cutsWidth: number;\n  cutsLength: number;\n  origen:string;\n}\n\ninterface OrdenActualizar {\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n}\n\ninterface OrdenCrear {\n  orden: string;\n  referencia: string;\n  batch: number;\n  longitudOrden: number;\n  cortesNumero: number;\n  cortesAncho: number;\n  cortesLargo: number;\n  sheetsNumbers: number;\n  stackHeight: number;\n  sheetThickness: number;\n  origen: string;\n  destino: string;\n  productMissing: number;\n  signalStart: boolean;\n  sheetScrap: string;\n}\n\n\ninterface MaquinasDestino {\n  id?: number;\n  value: string;\n  label: string;\n}\n\ninterface MaquinasOrigen {\n  id?: number;\n  value: string;\n  label: string;\n}\n\n\nlet DESTINOS: MaquinasDestino[]= [\n \n\n]; \n\nlet ORIGENES: MaquinasOrigen[]= [\n \n\n]; \n\nlet ORDENESACTUALIZAR: OrdenActualizar\n{\n\n};\n\nlet ORDENCREAR: OrdenCrear \n{\n\n};\n\nlet DESTINO: MaquinasDestino \n{\n\n};\n\nlet ORIGEN: MaquinasOrigen \n{\n\n};\n\nlet ORDEN: Ordenes \n{\n\n};\n\nlet win:NbWindowRef\n\n@Component({\n  providers:[ApiWindowCreateOrderPopup],\n  selector: 'ngx-windowCreateOrderPopup',\n  templateUrl: './windowsCreateOrderPopup.component.html',\n  styleUrls: ['windowsCreateOrderPopup.component.scss'],\n})\nexport class WindowCreateComponent {\n\n\n  origenSelect\n  dataPost: OrdenActualizar;\n  statuses: NbComponentStatus[] = ['basic'];\n\n  options = [\n    { value: 'STAKER#1', label: 'STAKER#1' },\n    { value: 'STAKER#2', label: 'STAKER#2' },\n    // { value: 'This is value 3', label: 'Option 3' },\n    // { value: 'This is value 4', label: 'Option 4' },\n  ];\n  option;\n\n  options2 = [\n    { value: 'Martin 1228', label: 'Martin 1228' },\n    { value: 'JS', label: 'JS' },\n    { value: '924', label: '924' },\n    { value: 'S&S', label: 'S&S' },\n  ];\n  option2;\n\n  destino = DESTINOS;\n  maquinaDestino = DESTINO;\n  origen = ORIGENES;\n  maquinaOrigen = ORIGEN;\n\npublic selectedDestino ;\npublic selectedOrigen ;\n\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('ordenValor') ordenValor:ElementRef;\n  @ViewChild('referenciaValor') referenciaValor:ElementRef;\n  @ViewChild('batchValor') batchValor:ElementRef;\n  @ViewChild('longitudValor') longitudValor:ElementRef;\n  @ViewChild('cortesValor') cortesValor:ElementRef;\n  @ViewChild('anchoValor') anchoValor:ElementRef;\n  @ViewChild('largoValor') largoValor:ElementRef;\n  @ViewChild('sheetsNumberValor') sheetsNumberValor:ElementRef;\n  @ViewChild('stackHeightValor') stackHeightValor:ElementRef;\n  @ViewChild('sheetsThicknessValor') sheetsThicknessValor:ElementRef;\n  @ViewChild('productsMissingValor') productsMissingValor:ElementRef;\n  @ViewChild('sheetScrapValor') sheetScrapValor:ElementRef;\n\n\n\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\n\n\n  constructor(\n    private router: Router,\n    private windowService: NbWindowService,\n    private apiGetComp: ApiGetService,\n    private api: HttpService,\n    private toasterService: NbToastrService,\n    ){   \n      this.MaquinasDestinoLista();\n      this.MaquinasOrigenLista();\n    }\n\n    data = ORDEN;\n    dataOption2\n    toggleNgModel = true;\n\n\nopenWindowForm(nombreWindow:string, texto:string) {   \n    DESTINO =\n    {\n      value : 'ID-11 Salida Corrugador',\n      label : 'ID-11 Salida Corrugador'\n    }\n\n    ORIGEN = \n    {\n      value : 'Martin 1228',\n      label : 'Martin 1228'\n    }\n    win=this.windowService.open(WindowCreateComponent, { title: nombreWindow});  \n  \n  }\n\n  MaquinasDestinoLista(){\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res:any)=>{\n      DESTINOS = res; \n      });\n  }\n\n  MaquinasOrigenLista(){\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res:any)=>{\n      ORIGENES = res; \n      // console.log(ORIGENES);\n      });\n  }\n\n\nopenWindow(contentTemplate, titleValue:string, textValue:string, numberValue: number, nameValue: string, value:number) {\n\n    this.windowService.open(\n      contentTemplate,\n      {\n        title: titleValue,\n        context: {\n          text: textValue,\n          number: numberValue,\n          name: nameValue,\n          x: value,\n        },\n      },\n    );\n  }\n\n  openWindow2(contentTemplate2, titleValue:string, orderValue:string, nameValue: string, descripcionValue: string, referenciaValue:string, orderLengthValue:number) {\n    this.windowService.open(\n      contentTemplate2,\n      {\n        title: titleValue,\n        context: {\n          orden: orderValue,\n          nombre: nameValue,\n          descripcion: descripcionValue,\n          referencia: referenciaValue,\n          orderLength: orderLengthValue,\n          \n        },\n      },\n    );\n  }\n  \n\n  Refresh(orden:string, nombre:string){\n    // console.log(this._Ordenes$);\n    // console.log(this.ordenesMaquina$)\n    // console.log(this.ordenesFiltro);\n    console.log(orden + \", \" + nombre);\n  }\n\n  handleSuccessResponse() {\n    this.toasterService.success('Orden ' + this.ordenValor.nativeElement.value + ' creada con exito' );\n    this.back();\n  }\n  handleWrongResponse() {\n    this.toasterService.danger('', 'Error almacenando ordenes');\n  }\n\n  back() {\n    win.close();\n    this.router.navigate(['/pages/tables/OrderTable']);\n  }\n\n  Crear(){\n    // console.log(this.ordenValor.nativeElement.value);\n    // console.log(this.referenciaValor.nativeElement.value);\n    // console.log(this.batchValor.nativeElement.value);\n    // console.log(this.longitudValor.nativeElement.value);\n    // console.log(this.cortesValor.nativeElement.value);\n    // console.log(this.anchoValor.nativeElement.value);\n    // console.log(this.largoValor.nativeElement.value);\n    // console.log(this.sheetsNumberValor.nativeElement.value);\n    // console.log(this.maquinaOrigen.value);\n    // console.log(this.maquinaDestino.value);\n    // console.log(this.stackHeightValor.nativeElement.value);\n    // console.log(this.sheetsThicknessValor.nativeElement.value);\n    // console.log(this.productsMissingValor.nativeElement.value);\n    // console.log(this.toggleNgModel);\n    // console.log(this.sheetScrapValor.nativeElement.value);\n    \n    ORDENCREAR =\n    {\n      orden : this.ordenValor.nativeElement.value,\n      referencia: this.referenciaValor.nativeElement.value,\n      batch:  Number(this.batchValor.nativeElement.value),\n      longitudOrden:  Number(this.longitudValor.nativeElement.value),\n      cortesNumero:  Number(this.cortesValor.nativeElement.value),\n      cortesAncho:  Number(this.anchoValor.nativeElement.value),\n      cortesLargo:  Number(this.largoValor.nativeElement.value),\n      sheetsNumbers:  Number(this.sheetsNumberValor.nativeElement.value),\n      stackHeight:  Number(this.stackHeightValor.nativeElement.value),\n      sheetThickness:  Number(this.sheetsThicknessValor.nativeElement.value),\n      origen: this.maquinaOrigen.value,\n      destino: this.maquinaDestino.value,\n      productMissing:  Number(this.productsMissingValor.nativeElement.value),\n      signalStart: this.toggleNgModel,\n      sheetScrap: this.sheetScrapValor.nativeElement.value\n    }\n    if (ORDENCREAR.orden ==\"\" && ORDENCREAR.referencia == \"\" && ORDENCREAR.origen && ORDENCREAR.destino){\n      this.handleWrongResponse();\n    }else{\n      this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/CrearOrden', ORDENCREAR).subscribe((res:any)=>{\n        this.handleSuccessResponse();\n      });\n    }\n    \n\n  }\n \n}"," <!-- <p>Orden: </p>\n    <p>Nombre: </p>\n    <p>Descripcion: </p>\n    <p>Referencia: </p> -->\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n         <!-- <nb-card> -->\n            <p>Orden: <input type=\"text\" id=\"ordenValor\" status=\"info\" name=\"ordenValor\" nbInput #ordenValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Referencia: <input type=\"text\" id=\"referenciaValue\" status=\"info\" name=\"referenciaValue\" nbInput #referenciaValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Batch: <input type=\"number\" id=\"batchValor\" status=\"info\" name=\"batchValor\" nbInput #batchValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Longitud: <input type=\"number\" id=\"longitudValue\" status=\"info\" name=\"longitudValue\" nbInput #longitudValor   required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Cortes: <input type=\"number\" id=\"cortesValue\" status=\"info\" name=\"cortesValue\" nbInput #cortesValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Cortes Ancho: <input type=\"number\" id=\"anchoValue\" status=\"info\" name=\"anchoValue\" nbInput #anchoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Cortes Largo: <input type=\"number\" id=\"largoValue\" status=\"info\" name=\"largoValue\" height=\"20\" nbInput #largoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Sheets Number: <input type=\"number\" id=\"sheetsNumberValor\" status=\"info\" name=\"sheetsNumberValor\" height=\"20\" nbInput #sheetsNumberValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n\n\n            <!-- </nb-card> -->\n      </div>\n\n      <div class=\"col-md-6\">\n            \n          <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\n            <p><nb-select [(ngModel)]=\"maquinaOrigen.value\" >\n            <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\n             {{ option.label }}\n             </nb-option>             \n           </nb-select></p>\n    \n           <p><nb-card-header>Dispositivos Destino</nb-card-header></p>  \n           <p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \n            <nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\n            {{ option2.label }}\n            </nb-option>             \n            </nb-select></p>\n            <p>Stack Height: <input type=\"number\" id=\"stackHeightValor\" status=\"info\" name=\"stackHeightValor\" height=\"20\" nbInput #stackHeightValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>SheetThickness: <input type=\"number\" id=\"sheetsThicknessValor\" status=\"info\" name=\"sheetsThicknessValor\" height=\"20\" nbInput #sheetsThicknessValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>ProductsMissing: <input type=\"number\" id=\"productsMissingValor\" status=\"info\" name=\"productsMissingValor\" height=\"20\" nbInput #productsMissingValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <nb-toggle [(ngModel)]=\"toggleNgModel\" status=\"success\">SignalStart</nb-toggle>\n            <p>SheetScrap: <input type=\"text\" id=\"sheetScrapValor\" status=\"info\" name=\"sheetScrapValor\" nbInput #sheetScrapValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n\n           \n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n     \n      <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Crear()\">Crear Orden</button></p>\n     </div>\n     \n     \n     </div>","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { Observable, Subject, of } from 'rxjs';\n\n\n// export class OrdenActualizar {\n//     orden: string;\n//     referencia: string;\n//     origen: string;\n//     destino: string;\n//     longitud: number;\n//     cortes: number;\n//     cortesAncho: number;\n//     cortesLargo: number;\n//   }\n\ninterface OrdenActualizar {\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n}\n\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ApiWindowOrderPopup {\n\n\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        //   responseType: 'text'\n        }),\n        'responseType': 'blob' as 'json',\n      };\n\n    constructor(private http: HttpClient) {}\n\n    GetJson(url: string) {\n        return this.http.get(url);\n    }\n\n    PostJson(url: string, ordenActualizar: OrdenActualizar) {\n        return this.http.post(url, ordenActualizar, this.httpOptions);\n    }\n    // GetJson(url:string){\n    //     return this.http.get<Observable<Ordenes[]>>(url);\n    // }\n\n    Suma() {\n        console.log(5 + 5);\n    }\n\n}\n","import { Component, ElementRef, TemplateRef, ViewChild } from '@angular/core';\nimport { NbComponentStatus, NbWindowService,NbWindowRef,NbToastrService } from '@nebular/theme';\nimport {ApiWindowOrderPopup} from './apiWindowiOrderPopup.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport { MessageService } from '../../dashboard/services/MessageService';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n// import { ApiGetService } from '../OrderTable/apiGet.services';\n// import {HttpClient} from '@angular/common/http'\n// import { WindowFormComponent } from '../..window-form/window-form.component';\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\n\n\ninterface Ordenes {\n  id?: number;\n  order: string;\n  name: string;\n  description: string;\n  reference: string;\n  orderLength: number;\n  cutsNumber: number;\n  cutsWidth: number;\n  cutsLength: number;\n  origen: string;\n  priority: number;\n}\n\ninterface OrdenActualizar {\n  id:number;\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n  priority:number;\n  PreviousPriority:number;\n}\n\ninterface MaquinasDestino {\n  id?: number;\n  value: string;\n  label: string;\n}\n\ninterface MaquinasOrigen {\n  id?: number;\n  value: string;\n  label: string;\n}\n\n\nlet DESTINOS: MaquinasDestino[] = [\n\n\n];\n\nlet ORIGENES: MaquinasOrigen[] = [\n\n\n];\n\nlet ORDENESACTUALIZAR: OrdenActualizar;\n{\n\n}\n\nlet DESTINO: MaquinasDestino;\n{\n\n}\n\nlet ORIGEN: MaquinasOrigen;\n{\n\n}\n\nlet ORDEN: Ordenes;\n{\n\n}\n\nlet win:NbWindowRef;\n@Component({\n  providers: [ApiWindowOrderPopup],\n  selector: 'ngx-windowOrderPopup',\n  templateUrl: './windowsOrderPopup.component.html',\n  styleUrls: ['windowsOrderPopup.component.scss'],\n})\nexport class WindowComponent {\n\n\n  dataPost: OrdenActualizar;\n  statuses: NbComponentStatus[] = ['basic'];\n\n  options = [\n    { value: 'STAKER#1', label: 'STAKER#1' },\n    { value: 'STAKER#2', label: 'STAKER#2' },\n    // { value: 'This is value 3', label: 'Option 3' },\n    // { value: 'This is value 4', label: 'Option 4' },\n  ];\n  option;\n\n  options2 = [\n    { value: 'Martin 1228', label: 'Martin 1228' },\n    { value: 'JS', label: 'JS' },\n    { value: '924', label: '924' },\n    { value: 'S&S', label: 'S&S' },\n  ];\n  option2;\n\n  destino = DESTINOS;\n  maquinaDestino = DESTINO;\n  origen = ORIGENES;\n  maquinaOrigen = ORIGEN;\n\npublic selectedDestino ;\npublic selectedOrigen ;\n\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('ordenValor') ordenValor: ElementRef;\n  @ViewChild('longitudValor') longitudValor: ElementRef;\n  @ViewChild('cortesValor') cortesValor: ElementRef;\n  @ViewChild('anchoValor') anchoValor: ElementRef;\n  @ViewChild('largoValor') largoValor: ElementRef;\n  @ViewChild('priorityValue') priorityValue: ElementRef;\n  @ViewChild('referenciaValor') referenciaValor: ElementRef;\n\n\n\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\n\n\n  constructor(\n    private router: Router,\n    private windowService: NbWindowService,\n    private apiGetComp: ApiWindowOrderPopup,\n    private api: HttpService,\n    private messageService: MessageService,\n    private toasterService: NbToastrService,\n    ) {\n      this.MaquinasDestinoLista();\n      this.MaquinasOrigenLista();\n    }\n\n    data = ORDEN;\n    dataOption2;\n\n\n  openWindowForm(nombreWindow: string, texto: string, orden: Ordenes) {\n    // this.MaquinasDestinoLista();\n    ORDEN = orden;\n    this.data = orden;\n    DESTINO = {\n      value : orden.description,\n      label : orden.description,\n    };\n\n    ORIGEN = {\n      value : orden.origen,\n      label : orden.origen,\n    };\n    win=this.windowService.open(WindowComponent, { title: nombreWindow});\n\n  }\n\n  MaquinasDestinoLista() {\n\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res: any) => {\n      DESTINOS = res;\n      });\n  }\n\n  MaquinasOrigenLista() {\n\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res: any) => {\n      ORIGENES = res;\n      // console.log(ORIGENES);\n      });\n  }\n\n\nopenWindow(contentTemplate, titleValue: string, textValue: string, numberValue: number, nameValue: string, value: number) {\n\n    this.windowService.open(\n      contentTemplate,\n      {\n        title: titleValue,\n        context: {\n          text: textValue,\n          number: numberValue,\n          name: nameValue,\n          x: value,\n        },\n      },\n    );\n  }\n\n  openWindow2(contentTemplate2, titleValue: string, orderValue: string, nameValue: string, descripcionValue: string, referenciaValue: string, orderLengthValue: number) {\n    this.windowService.open(\n      contentTemplate2,\n      {\n        title: titleValue,\n        context: {\n          orden: orderValue,\n          nombre: nameValue,\n          descripcion: descripcionValue,\n          referencia: referenciaValue,\n          orderLength: orderLengthValue,\n\n        },\n      },\n    );\n  }\n\n\n  Refresh(orden: string, nombre: string) {\n    // console.log(this._Ordenes$);\n    // console.log(this.ordenesMaquina$)\n    // console.log(this.ordenesFiltro);\n    console.log(orden + ', ' + nombre);\n  }\n\n  Edit() {\n\n    ORDENESACTUALIZAR = {\n      id:this.data.id,\n      orden: this.data.order,\n      referencia: this.referenciaValor.nativeElement.value,\n      origen: this.maquinaOrigen.value,\n      destino: this.maquinaDestino.value,\n      longitud: Number(this.longitudValor.nativeElement.value),\n      cortes: Number(this.cortesValor.nativeElement.value),\n      cortesAncho: Number(this.anchoValor.nativeElement.value),\n      cortesLargo: Number(this.largoValor.nativeElement.value),\n      priority: Number(this.priorityValue.nativeElement.value),\n      PreviousPriority: this.data.priority,\n    };\n\n    this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/ActualizarOrden', ORDENESACTUALIZAR).subscribe((res: any) => {\n      this.messageService.sendMessage('orderTable');\n      this.handleSuccessResponse();\n    });\n  }\n\n  handleSuccessResponse() {\n    this.toasterService.success('Orden ' + ORDEN.order + ' actualizada con exito' );\n    this.back();\n  }\n\n  back() {\n    win.close();\n    this.router.navigate(['/pages/tables/OrderTable']);\n  }\n\n\n  ChangeLocation($event) {\n    const selectedValue = this.options2.find(location => location.value === $event.value );\n    console.log(selectedValue);\n}\n\n}\n","<div class=\"row\">\n\n  <div class=\"col-md-6\">\n    <!-- <nb-card> -->\n\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\"></p>  -->\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" nbInput #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\" disabled=\"true\"></p> -->\n    <!-- <p>Orden: {{ data.order }}</p> -->\n    <!-- <p>Nombre: {{ data.name }}</p> -->\n    <!-- <p>Descripcion: {{ data.description }}</p> -->\n    <!-- <p>Referencia: </p>\n    <p>{{ data.reference }}</p> -->\n    <p>Referencia: <input type=\"text\" id=\"referenciaValue\" name=\"referenciaValue\" nbInput #referenciaValor  value=\"{{ data.reference }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Longitud:   <input type=\"number\" id=\"longitudValue\" name=\"longitudValue\" nbInput #longitudValor  value=\"{{ data.orderLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Cortes:     <input type=\"number\" id=\"cortesValue\" name=\"cortesValue\" nbInput #cortesValor  value=\"{{ data.cutsNumber }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Ancho:      <input type=\"number\" id=\"anchoValue\" name=\"anchoValue\" nbInput #anchoValor  value=\"{{ data.cutsWidth }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Largo:      <input type=\"number\" id=\"largoValue\" name=\"largoValue\" nbInput #largoValor  value=\"{{ data.cutsLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Prioridad:  <input type=\"number\" id=\"priorityValue\" name=\"priorityValue\" nbInput #priorityValue  value=\"{{ data.priority }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n  <!-- </nb-card> -->\n  </div>\n\n  <div class=\"col-md-6\">\n\n\n    <!-- <nb-card> -->\n      <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\n\n  <!-- <nb-card-body> -->\n    <p><nb-select [(ngModel)]=\"maquinaOrigen.value\"> \n  <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\n    {{ option.label }}\n  </nb-option>             \n</nb-select></p>\n\n\n<!-- </nb-card-body> -->\n\n<p><nb-card-header>Dispositivos Destino</nb-card-header></p>\n\n<!-- <nb-card-body> -->\n<p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \n<nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\n{{ option2.label }}\n</nb-option>             \n</nb-select></p>\n<!-- </nb-card> -->\n\n    <!-- <nb-card>\n      <nb-card-header>Select</nb-card-header>\n      <nb-card-body>\n        <nb-select selected=\"1\">\n          <nb-option value=\"1\">Option 1</nb-option>\n          <nb-option value=\"2\">Option 2</nb-option>\n        </nb-select>\n      </nb-card-body>\n    </nb-card> -->\n    \n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-sm-12\">\n\n  <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Edit()\">EDIT</button></p>\n</div>\n\n\n</div>\n  \n\n","import { Component, OnDestroy } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { takeWhile } from 'rxjs/operators';\nimport { NbAccessChecker } from '@nebular/security';\nimport { HttpClient } from '@angular/common/http';\nimport { GridComponent, PageSettingsModel, FilterSettingsModel, CommandClickEventArgs, EditService, CommandColumnService, CommandModel, ToolbarService, PageService, QueryCellInfoEventArgs, DialogEditEventArgs, ToolbarItems } from '@syncfusion/ej2-angular-grids';\nimport { UserStore } from '../../../@core/stores/user.store';\nimport { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { ClickEventArgs } from '@syncfusion/ej2-navigations';\nimport Swal from 'sweetalert2';\n\ninterface Alarmas {\n  Id: number;\n  Message: string;\n  Level: string;\n  Exception: string;\n  UserId: string;\n  TimeStamp: string;\n  ETD: string;\n  UserIdAcknow: string;\n  IdDevice: string;\n}\n\nlet ALARMAS: Alarmas[] = [\n\n\n];\n\n@Component({\n  selector: 'ngx-alarms',\n  templateUrl: './alarms.component.html',\n  providers: [ToolbarService, EditService, PageService],\n  styleUrls: ['./alarms.component.scss',]\n})\nexport class AlarmsComponent implements OnDestroy {\n\n  public select = false;\n  private alive = true;\n  mostrar: Boolean;\n  public pageSettings: PageSettingsModel;\n  \n\n  public editSettings: Object;\n    // public toolbar: string[];\n    public toolbar: ToolbarItems[] | object;\n\n  public historyAlarmData: Alarmas[];\n  public editparams: Object;\n  public commands: CommandModel[];\n  public filterOptions: FilterSettingsModel;\n\n  alarmas = ALARMAS;\n\n  settings = {\n    // actions: false,\n    actions: {\n      add: false,\n      edit: false,\n      \n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-checkmark-circle\"></i>',\n      confirmDelete: true,\n    },\n    \n    columns: {\n      Id: {\n        title: 'ID',\n        type: 'number',\n        filter: false,\n        hide: true,\n\n      },\n      Message: {\n        title: 'Mensaje',\n        type: 'string',\n        filter: true,\n      },\n      Level: {\n        title: 'Nivel',\n        type: 'string',\n        filter: false,\n      },\n      // exception: {\n      //   title: 'excepción',\n      //   type: 'string',\n      //   filter: false,\n      // },\n      UserId: {\n        title: 'Usuario',\n        type: 'string',\n        filter: false,\n      },\n      TimeStamp: {\n        title: 'Fecha',\n        type: 'string',\n        filter: false,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n  public Alarm: Alarmas[];\n\n  constructor(\n    public accessChecker: NbAccessChecker,\n    private toastrService: NbToastrService,\n    public apiGetComp: ApiGetService,\n    private api: HttpService,\n    private http: HttpClient,\n    private userStore: UserStore,\n  ) {\n    \n    this.alive;\n    this.accessChecker.isGranted('edit', 'ordertable')\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n      if(res){ \n        this.select = false;\n        this.mostrar = false;\n      }else {\n        this.select=true;\n        this.mostrar=true;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.Chargealarms();\n    this.ChargeHistoryData();\n    this.pageSettings = { pageSize: 10 };\n    this.filterOptions = {\n      type: 'Menu',\n   };\n   this.editSettings = { allowEditing: true, allowAdding: false, allowDeleting: true , newRowPosition: 'Top' };\n   this.toolbar = [{text: 'Delete', prefixIcon: 'fas fa-check'},\n   { text: 'Reconocer alarmas', tooltipText: 'Click', prefixIcon: 'fas fa-check-double', id: 'Click' }];\n//    this.editSettings = { allowEditing: false, allowDeleting: true };\n//    this.commands = [\n//   //  { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n//    { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n//   //  { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n//   //  { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n// ];\n  }\n\n  // onedit($event: any) {\n  //     this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Alarms/postalarm?IdAlarm' + $event.data.id).subscribe((res: any) => {\n  //       //REPORTOCUPATION=res;\n  //       console.log(\"alarmId\", res);\n  //       // this.Alarm = res;\n  //       // this.source.load(res);\n  //     });\n    \n  // }\n\n  commandClick(args: CommandClickEventArgs): void {\n    debugger\n    alert(JSON.stringify(args.rowData));\n    \n}\n\nclickHandler(args: ClickEventArgs): void {\n  if (args.item.id === 'Click') {\n    console.log('click: ', args);\n    debugger\n    this.reconocer();\n    console.log('Se reconocieron todas las alarmas');\n    \n      // alert('Custom Toolbar Click...');\n  }\n}\n\ntooltip(args: QueryCellInfoEventArgs) {\n  const tooltip: Tooltip = new Tooltip({\n      content: args.data[args.column.field].toString()\n      \n  }, args.cell as HTMLTableCellElement);\n  // console.log('tool:', tooltip);\n}\n\n// actionComplete(args: DialogEditEventArgs): void {\n//   if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {\n//       if (Browser.isDevice) {\n//           args.dialog.height = window.innerHeight - 90 + 'px';\n//           (<Dialog>args.dialog).dataBind();\n//       }\n//       // Set initail Focus\n//       if (args.requestType === 'beginEdit') {\n//           (args.form.elements.namedItem('CustomerName') as HTMLInputElement).focus();\n//       } else if (args.requestType === 'add') {\n//           (args.form.elements.namedItem('OrderID') as HTMLInputElement).focus();\n//       }\n//   }\n// }\n\nactionComplete(args) {\n  if (( args.requestType === 'delete')) {\n      // const dialog = args.dialog;\n      debugger\n      const Id = 'Id';\n      // change the header of the dialog\n      console.log('Type: ', args.data[0].Id);\n      // console.log('id: ', args.rowData.Id);\n      // debugger\n    \n    this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        if(res){ \n          const currentUserId = this.userStore.getUser().id;\n          var respons = \n            {\n            IdAlarm: args.data[0].Id,\n            UserIdAcknow: currentUserId\n            };\n          // let alarm = {IdAlarm: event.data.Id};\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\n      \n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        //  console.log(\"alarmId\", res);\n         if (res) {\n          this.toastrService.success('', '¡Alarma solucionada!'); \n          this.source.refresh();\n        } else {\n          this.toastrService.danger('', 'Algo salio mal.');\n        }\n      });\n      // args.rowData.Id.resolve();\n      //     this.select = false;\n      //     this.mostrar = false;\n        }else {\n          this.select=true;\n          this.mostrar=true;\n        }\n      });\n      // dialog.header = args.requestType === 'beginEdit' ? 'Record of ' + args.rowData[CustomerID] : 'New Customer';\n  }\n}\n\nDelete(event): void {\n    debugger\n    \n    this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        if(res){ \n          const currentUserId = this.userStore.getUser().id;\n          var respons = \n            {\n            IdAlarm: event.data.Id,\n            UserIdAcknow: currentUserId\n            };\n          let alarm = {IdAlarm: event.data.Id};\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\n      \n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        //  console.log(\"alarmId\", res);\n         if (res) {\n          this.toastrService.success('', '¡Alarma solucionada!'); \n          this.source.refresh();\n        } else {\n          this.toastrService.danger('', 'Algo salio mal.');\n        }\n      });\n      event.confirm.resolve();\n          this.select = false;\n          this.mostrar = false;\n        }else {\n          this.select=true;\n          this.mostrar=true;\n        }\n      });\n    //  console.log(\"Evento: \", event);\n      \n    \n  }\n\n  reconocer() {\n    this.accessChecker.isGranted('edit', 'ordertable')\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n      if(res){ \n      Swal.fire({\n      title: 'Desea reconocer alarmas?',\n      text: `¡Reconocerá todas las alarmas!`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: '¡Sí, Reconocer!'\n    }).then(result => {\n      debugger\n      if (result.value) {\n      const currentUserId = this.userStore.getUser().id;\n          var respons = \n            {\n              UserIdAcknow: currentUserId\n            };\n            \n       this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmAll', respons)\n       .pipe(takeWhile(() => this.alive))\n       .subscribe((res: any) => {\n        this.source.refresh();\n        this.Chargealarms();\n       });\n    \n          Swal.fire('¡Se Eliminó Exitosamente', 'success');\n          this.source.refresh();\n      }\n    });\n          this.source.refresh();   \n          this.select = false;\n          this.mostrar = false;\n        }else {\n          this.select=true;\n          this.mostrar=true;\n        }\n      });\n  }\n\n  // reconocer() {\n  //   debugger\n  //   this.accessChecker.isGranted('edit', 'ordertable')\n  //     .pipe(takeWhile(() => this.alive))\n  //     .subscribe((res: any) => {\n  //       if(res){ \n  //     const currentUserId = this.userStore.getUser().id;\n  //         var respons = \n  //           {\n  //             UserIdAcknow: currentUserId\n  //           };\n            \n  //      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmAll', respons)\n  //      .pipe(takeWhile(() => this.alive))\n  //      .subscribe((res: any) => {\n  //         if (res) {\n  //          this.toastrService.success('', '¡Alarmas solucionadas!');\n  //          this.source.refresh();\n  //          this.Chargealarms();\n  //          this.select=true;\n  //        } else {\n  //          this.toastrService.danger('', 'Algo salio mal.');\n  //        }\n  //        this.source.refresh();\n  //      });\n  //     }else {\n  //       this.select=true;\n  //       this.mostrar=true;\n  //     }\n  //   });\n       \n  // }\n\n  Chargealarms() {\n    this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n      this.Alarm = res;\n      console.log('test alarm: ', this.Alarm)\n      // this.source.load(res);\n      // this.source.refresh();\n    });\n    const contador = interval(30000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        this.Alarm = res;\n        // this.source.load(res);\n        // this.source.refresh();\n      });\n    });\n\n  }\n\n  ChargeHistoryData() {\n    this.http.get(this.api.apiUrlNode1 + '/historyalarm')\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n      // tslint:disable-next-line: no-console\n      // console.log('HistoryAlarmData: ', res);\n      this.historyAlarmData = res;\n    });\n    const contador = interval(40000)\n    contador.subscribe((n) => {\n      this.http.get(this.api.apiUrlNode1 + '/historyalarm')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        this.historyAlarmData = res;\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  \n\n}\n","<!-- <h2>Alarmas</h2> -->\n<nb-card>\n    <nb-tabset>\n        <nb-tab tabTitle=\"Alarmas\">\n            <nb-card>\n                <nb-card-header>\n                    Alarmas\n                </nb-card-header>\n\n                <!-- <nb-card-body> -->\n                <!-- <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\n                    </ng2-smart-table> -->\n\n                <ejs-grid [dataSource]='Alarm' allowPaging='true' (toolbarClick)='clickHandler($event)' (actionComplete)=\"actionComplete($event)\" allowTextWrap='true' [pageSettings]='pageSettings' [editSettings]='editSettings' [toolbar]='toolbar' [filterSettings]='filterOptions'\n                    [allowFiltering]=\"true\" height='400'>\n                    <e-columns>\n                        <e-column field='Message' headerText='Mensaje' width=180 isPrimaryKey='true'></e-column>\n                        <e-column field='Level' headerText='Nivel' width=85></e-column>\n                        <e-column field='UserId' headerText='Usuario' width=100></e-column>\n                        <e-column field='TimeStamp' headerText='Fecha' width=90></e-column>\n                        <!-- <e-column headerText='Acciones' width='60' [commands]='commands' (click)=\"Delete($event)\"></e-column> -->\n                    </e-columns>\n                </ejs-grid>\n\n                <!-- </nb-card-body> -->\n                <!-- <nb-card-footer>\n                    <button type=\"submit\" nbButton status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"reconocer()\" class=\"btn btn-primary\">Reconocer alarmas</button>\n                    \n                </nb-card-footer> -->\n            </nb-card>\n        </nb-tab>\n        <nb-tab tabTitle=\"Historico Alarmas\">\n            <nb-card>\n                <nb-card-header>\n                    Historico Alarmas\n                </nb-card-header>\n                <!-- <nb-card-body> -->\n                <ejs-grid [dataSource]='historyAlarmData' [allowPaging]=\"true\" allowTextWrap='true' (queryCellInfo)='tooltip($event)' [pageSettings]='pageSettings' [filterSettings]='filterOptions' [allowFiltering]=\"true\" height='400'>\n                    <e-columns>\n                        <e-column field='Message' headerText='Mensaje' width=180></e-column>\n                        <e-column field='Level' headerText='Nivel' width=75></e-column>\n                        <e-column field='UserId' headerText='Usuario' width=75></e-column>\n                        <e-column field='TimeStamp' headerText='Fecha' width=85></e-column>\n                        <e-column field='EDT' headerText='Fecha fin' width=100></e-column>\n                        <e-column field='UserIdAcknow' headerText='Usuario reco' width=85></e-column>\n                    </e-columns>\n                </ejs-grid>\n                <!-- </nb-card-body> -->\n            </nb-card>\n        </nb-tab>\n    </nb-tabset>\n</nb-card>","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\n\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\n\n@Component({\n  selector: 'ngx-smart-table',\n  templateUrl: './smart-table.component.html',\n  styleUrls: ['./smart-table.component.scss'],\n})\nexport class SmartTableComponent {\n\n  settings = {\n    actions: {\n      add: true,\n      edit: true,\n      delete: true,\n    },\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmCreate: true\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n      confirmSave: true\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n        editable: false,\n        addable: false\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n        filter: false,\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n        filter: false,\n        editable: false,\n        addable: false\n      },\n      login: {\n        title: 'Login',\n        type: 'string',\n        filter: false,\n        editable: false,\n        addable: false\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n        filter: false,\n        editable: false,\n        addable: false\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n        filter: false,\n        editable: false,\n        addable: false\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData) {\n    const data = this.service.getData();\n    this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  onCreateConfirm(event) {\n    // debugger\n    console.log('Create Event In Console');\n    console.log('insert', event);\n    console.log('id', event.newData.id, '&', 'alias', event.newData.firstName);\n    event.confirm.resolve();\n  }\n\n  onSaveConfirm(event) {\n    // debugger\n    console.log('Edit Event In Console');\n    console.log('update', event);\n    console.log('id', event.newData.id, '&', 'alias', event.newData.firstName);\n    event.confirm.resolve();\n  }\n\n}\n","<!--\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\n  ~ Licensed under the Single Application / Multi Application License.\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n  -->\n\n<nb-card>\n  <nb-card-header>\n    Smart Table\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table class=\"example-smart-table\"\n                     [settings]=\"settings\"\n                     [source]=\"source\"\n                     (deleteConfirm)=\"onDeleteConfirm($event)\" \n                     (editConfirm)=\"onSaveConfirm($event)\"\n\t\t\t\t\t\t(createConfirm)=\"onCreateConfirm($event)\">\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TablesComponent } from './tables.component';\nimport { SmartTableComponent } from './smart-table/smart-table.component';\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\nimport { OrderTableComponent } from './OrderTable/orderTable.component';\nimport { AlarmsComponent } from './alarms/alarms.component';\nimport { SmartOrderTableComponent } from './SmartOrderTable/smartOrderTable.component';\nimport { AdminGuard } from '../../@auth/admin.guard';\nimport { UserGuard } from '../../@auth/user.guard';\n\nconst routes: Routes = [{\n  path: '',\n  component: TablesComponent,\n  children: [\n    {\n      path: 'smart-table',\n      component: SmartTableComponent,\n    },\n    {\n      path: 'tree-grid',\n      component: TreeGridComponent,\n    },\n    {\n      path: 'OrderTable',\n      component: OrderTableComponent,\n    },\n    {\n      path: 'alarms',\n      component: AlarmsComponent,\n    },\n    {\n      path: 'SmartOrderTable',\n      component: SmartOrderTableComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TablesRoutingModule { }\n\nexport const routedComponents = [\n  TablesComponent,\n  SmartTableComponent,\n  TreeGridComponent,\n  OrderTableComponent,\n  SmartOrderTableComponent,\n];\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tables',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class TablesComponent {\n}\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { NgModule } from '@angular/core';\nimport { NbCardModule, NbTabsetModule, NbIconModule, NbInputModule, NbSelectModule, NbTreeGridModule, NbRadioModule, NbCheckboxModule, \n  NbActionsModule, NbUserModule, NbDatepickerModule, NbButtonModule, NbToggleModule} from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\nimport { FsIconComponent } from './tree-grid/tree-grid.component';\nimport {MeasureConverterPipe} from '../../@theme/pipes';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http'\nimport {ApiGetService} from './OrderTable/apiGet.services'\nimport {ApiWindowOrderPopup} from './WindowOrderPopup/apiWindowiOrderPopup.services'\nimport {WindowComponent} from './WindowOrderPopup/windowsOrderPopup.component'\nimport {ApiWindowCreateOrderPopup} from './WindowCreateOrderPopup/apiWindowCreateOrderPopup.services'\nimport {WindowCreateComponent} from './WindowCreateOrderPopup/windowsCreateOrderPopup.component';\nimport { AlarmsComponent } from './alarms/alarms.component'\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\nimport { PageService, SortService, FilterService, GroupService } from '@syncfusion/ej2-angular-grids';\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\n@NgModule({\n  imports: [\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    TablesRoutingModule,\n    Ng2SmartTableModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    NbSelectModule,\n    NbInputModule,\n    NbCardModule,\n    NbActionsModule,\n    NbUserModule,\n    NbCheckboxModule,\n    NbRadioModule,\n    NbDatepickerModule,\n    NbSelectModule,\n    NbIconModule,\n    NbButtonModule,\n    NbToggleModule,\n    NbTabsetModule,\n    GridModule,\n    DropDownListAllModule,\n  ],\n  declarations: [\n    ...routedComponents,\n    FsIconComponent,\n    WindowComponent,\n    WindowCreateComponent,\n    AlarmsComponent,\n  ],\n  providers: [\n    MeasureConverterPipe,\n    ApiGetService,\n    ApiWindowOrderPopup,\n    ApiWindowCreateOrderPopup,\n    PageService,\n    SortService,\n    FilterService,\n    GroupService,\n  ],\n})\nexport class TablesModule { }\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\nimport {MeasureConverterPipe} from '../../../@theme/pipes';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: number;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  selector: 'ngx-tree-grid',\n  templateUrl: './tree-grid.component.html',\n  styleUrls: ['./tree-grid.component.scss'],\n})\nexport class TreeGridComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<FSEntry>;\n\n  sortColumn: string;\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>,\n              public measureConverterPipe: MeasureConverterPipe) {\n    this.dataSource = this.dataSourceBuilder.create(this.data);\n  }\n\n  updateSort(sortRequest: NbSortRequest): void {\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  getSortDirection(column: string): NbSortDirection {\n    if (this.sortColumn === column) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: 1800000, items: 4, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: 240000 } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: 290000 } },\n        { data: { name: 'project-3', kind: 'txt', size: 466000 } },\n        { data: { name: 'project-4.docx', kind: 'docx', size: 900000 } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: 400000, items: 2 },\n      children: [\n        { data: { name: 'Report 1', kind: 'doc', size: 100000 } },\n        { data: { name: 'Report 2', kind: 'doc', size: 300000 } },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: 109000000, items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: 107000000 } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: 2000000 } },\n      ],\n    },\n  ];\n\n  getCellValue(columnValue: string | number, columnName: string): string | number {\n    if (columnName === 'size') {\n      return this.measureConverterPipe.transform(columnValue);\n    }\n    return columnValue || '-';\n  }\n\n  getShowOn(index: number) {\n    const minWithForMultipleColumns = 400;\n    const nextColumnStep = 100;\n    return minWithForMultipleColumns + (nextColumnStep * index);\n  }\n}\n\n@Component({\n  selector: 'ngx-fs-icon',\n  template: `\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\n    </nb-tree-grid-row-toggle>\n    <ng-template #fileIcon>\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\n    </ng-template>\n  `,\n})\nexport class FsIconComponent {\n  @Input() kind: string;\n  @Input() expanded: boolean;\n\n  isDir(): boolean {\n    return this.kind === 'dir';\n  }\n}\n","<!--\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\n  ~ Licensed under the Single Application / Multi Application License.\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n  -->\n\n<nb-card>\n  <nb-card-body>\n\n    <label class=\"search-label\" for=\"search\">Search:</label>\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\n\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\n\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\n          {{customColumn}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\n          {{row.data[customColumn]}}\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\n                    [nbTreeGridColumnDef]=\"column\"\n                    [showOn]=\"getShowOn(index)\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\n          {{column}}\n        </th>\n\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{getCellValue(row.data[column], column)}}</td>\n      </ng-container>\n\n    </table>\n\n  </nb-card-body>\n</nb-card>\n"],"sourceRoot":"webpack:///"}