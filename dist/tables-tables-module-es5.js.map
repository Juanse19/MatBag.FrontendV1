{"version":3,"sources":["webpack:///src/app/pages/tables/OrderTable/apiGet.services.ts","webpack:///src/app/pages/tables/OrderTable/orderTable.component.ts","webpack:///src/app/pages/tables/OrderTable/orderTable.component.html","webpack:///src/app/pages/tables/SmartOrderTable/smartOrderTable.component.ts","webpack:///src/app/pages/tables/SmartOrderTable/smartOrderTable.component.html","webpack:///src/app/pages/tables/WindowCreateOrderPopup/apiWindowCreateOrderPopup.services.ts","webpack:///src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.ts","webpack:///src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.html","webpack:///src/app/pages/tables/WindowOrderPopup/apiWindowiOrderPopup.services.ts","webpack:///src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.ts","webpack:///src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.html","webpack:///src/app/pages/tables/alarms/alarms.component.ts","webpack:///src/app/pages/tables/alarms/alarms.component.html","webpack:///src/app/pages/tables/smart-table/smart-table.component.ts","webpack:///src/app/pages/tables/smart-table/smart-table.component.html","webpack:///src/app/pages/tables/tables-routing.module.ts","webpack:///src/app/pages/tables/tables.component.ts","webpack:///src/app/pages/tables/tables.module.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.html"],"names":["ApiGetService","http","url","get","providedIn","ORDENES","ORDEN","matches2","ordenes","term","pipe","order","toLowerCase","includes","name","description","reference","origen","transform","orderLength","OrderTableComponent","accessChecker","apiGetComp","orderPopup","orderCrearPopup","api","messageService","_state","page","pageSize","searchTerm","select","alive","_loading$","_search$","_Ordenes$","_total$","filter","subscription","onMessage","subscribe","message","text","CargarTabla","next","_search","result","total","isGranted","res","mostrar","asObservable","_set","patch","Object","assign","GetJson","apiUrlMatbox","length","slice","orden","nombre","descripcion","referencia","tama√±oOrden","origenValor","corteNumero","corteAncho","corteLargo","parPrority","idForm","id","cutsNumber","cutsWidth","cutsLength","priority","openWindowForm","Refresh","providers","selector","templateUrl","styleUrls","SmartOrderTableComponent","service","router","settings","add","addButtonContent","createButtonContent","cancelButtonContent","edit","editButtonContent","saveButtonContent","deleteButtonContent","confirmDelete","columns","title","type","source","load","event","window","confirm","resolve","reject","navigate","onDeleteConfirm","createUser","ApiWindowCreateOrderPopup","httpOptions","headers","ordenActualizar","post","ordenCrear","console","log","DESTINOS","ORIGENES","ORDENESACTUALIZAR","ORDENCREAR","DESTINO","ORIGEN","win","WindowCreateComponent","windowService","toasterService","statuses","options","value","label","options2","destino","maquinaDestino","maquinaOrigen","data","toggleNgModel","MaquinasDestinoLista","MaquinasOrigenLista","nombreWindow","texto","open","contentTemplate","titleValue","textValue","numberValue","nameValue","context","number","x","contentTemplate2","orderValue","descripcionValue","referenciaValue","orderLengthValue","success","ordenValor","nativeElement","back","danger","close","referenciaValor","batch","Number","batchValor","longitudOrden","longitudValor","cortesNumero","cortesValor","cortesAncho","anchoValor","cortesLargo","largoValor","sheetsNumbers","sheetsNumberValor","stackHeight","stackHeightValor","sheetThickness","sheetsThicknessValor","productMissing","productsMissingValor","signalStart","sheetScrap","sheetScrapValor","handleWrongResponse","PostJson","handleSuccessResponse","Crear","read","ApiWindowOrderPopup","WindowComponent","longitud","cortes","priorityValue","PreviousPriority","sendMessage","$event","selectedValue","find","location","Edit","ALARMAS","AlarmsComponent","toastrService","userStore","alarmas","actions","Id","hide","Message","Level","UserId","TimeStamp","Chargealarms","ChargeHistoryData","pageSettings","filterOptions","editSettings","allowEditing","allowAdding","allowDeleting","newRowPosition","toolbar","prefixIcon","tooltipText","args","alert","JSON","stringify","rowData","item","reconocer","tooltip","content","column","field","toString","cell","requestType","currentUserId","getUser","respons","IdAlarm","UserIdAcknow","apiUrlNode1","refresh","alarm","Alarm","contador","n","historyAlarmData","clickHandler","actionComplete","SmartTableComponent","firstName","lastName","login","email","age","getData","routes","path","component","children","TablesRoutingModule","forChild","imports","exports","routedComponents","TablesComponent","template","TablesModule","declarations","TreeGridComponent","dataSourceBuilder","measureConverterPipe","customColumn","defaultColumns","allColumns","sortDirection","NONE","size","items","kind","dataSource","create","sortRequest","sortColumn","direction","columnValue","columnName","index","minWithForMultipleColumns","nextColumnStep","updateSort","FsIconComponent"],"mappings":"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","file":"tables-tables-module-es5.js","sourcesContent":["import { Injectable} from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n// import { Observable, Subject, of } from 'rxjs';\n\n\ninterface Ordenes {\n    order: string;\n    name: string;\n    description: string;\n    reference: string;\n    orderLength: number;\n  }\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ApiGetService {\n\n    constructor(private http: HttpClient) {}\n\n    GetJson(url: string) {\n        return this.http.get(url);\n    }\n\n\n}\n","import { Component, EventEmitter, HostBinding, OnDestroy, OnInit, Output, ViewChild , TemplateRef, PipeTransform} from '@angular/core';\nimport { Location, LocationStrategy } from '@angular/common';\nimport { NbThemeService } from '@nebular/theme';\nimport { map, takeUntil, startWith, debounceTime, tap, switchMap, delay, takeWhile } from 'rxjs/operators';\nimport { Observable, Subject, of, BehaviorSubject,Subscription } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { i18nMetaToDocStmt } from '@angular/compiler/src/render3/view/i18n/meta';\nimport {ApiGetService} from '../OrderTable/apiGet.services'\nimport { DecimalPipe } from '@angular/common';\nimport { FormControl } from '@angular/forms'; \nimport {WindowComponent} from '../WindowOrderPopup/windowsOrderPopup.component'\nimport {ApiWindowOrderPopup} from '../WindowOrderPopup/apiWindowiOrderPopup.services'\nimport {WindowCreateComponent} from '../WindowCreateOrderPopup/windowsCreateOrderPopup.component'\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\nimport { MessageService } from '../../dashboard/services/MessageService';\nimport { Identifiers } from '@angular/compiler';\nimport { NbAccessChecker } from '@nebular/security';\n\n\n  interface Ordenes {\n    id: number;\n    order: string;\n    batch?: number;\n    name: string;\n    description: string;\n    reference: string;\n    orderLength: number;\n    cutsNumber: number;\n    cutsWidth: number;\n    cutsLength: number;\n    origen:string;\n    priority: number;\n  }\n\n  interface State {\n    page: number;\n    pageSize: number;\n    searchTerm: string;\n  }\n\n\n  interface SearchResult2 {\n    ordenes: Ordenes[];\n    total: number;\n  }\n\n  let ORDENES: Ordenes[]= [\n  \n\n  ];\n\n  let ORDEN: Ordenes  \n{\n\n};\n\n\n\nfunction matches2(ordenes: Ordenes, term: string, pipe: PipeTransform) {\n  return ordenes.order.toLowerCase().includes(term)\n    || ordenes.name.toLowerCase().includes(term.toLowerCase())\n    || ordenes.description.toLowerCase().includes(term.toLowerCase())\n    || ordenes.reference.toLowerCase().includes(term)\n    || ordenes.origen.toLowerCase().includes(term.toLowerCase())\n    || pipe.transform(ordenes.orderLength).includes(term);\n}\n\n\n\n@Component({\n    providers:[\n    //   JacComponent\n    // , WindowComponent\n     ApiGetService\n     ,DecimalPipe\n     ,WindowComponent\n     ,WindowCreateComponent\n    // , WindowFormComponent\n    ],\n    selector: 'ngx-ordertable',\n    templateUrl: './orderTable.component.html',\n    styleUrls: ['./orderTable.component.scss'],\n  })\n\n  export class OrderTableComponent implements OnInit {\n\n    subscription: Subscription;\n    private _state: State = {\n      page: 1,\n      pageSize: 5,\n      searchTerm: ''\n\n    };\n\n    public select = false;\n    private alive = true;\n    mostrar: Boolean;\n\n    total: number ;\n\n    private _loading$ = new BehaviorSubject<boolean>(true);\n    private _search$ = new Subject<void>();\n    // private _countries$ = new BehaviorSubject<Country[]>([]);\n    private _Ordenes$ = new BehaviorSubject<Ordenes[]>([]);\n\n    private _total$ = new BehaviorSubject<number>(0);\n\n    filter = new FormControl('');\n\n    constructor(\n        public accessChecker: NbAccessChecker,\n        public apiGetComp: ApiGetService,\n        public pipe : DecimalPipe,\n        private orderPopup: WindowComponent, \n        private orderCrearPopup: WindowCreateComponent,\n        private api: HttpService,\n        private messageService: MessageService\n      ) {\n        \n        this.subscription = this.messageService.onMessage()\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(message => {\n          if (message.text==\"orderTable\") {\n            //this.messages.push(message);\n            this.CargarTabla();\n          }\n        });\n        this._search$.pipe(\n          takeWhile(() => this.alive),\n          tap(() => this._loading$.next(true)),\n          debounceTime(200),\n          switchMap(() => this._search()),\n          delay(200),\n          tap(() => this._loading$.next(false))\n        )\n        .pipe(takeWhile(() => this.alive))\n        .subscribe(result => {\n          this._Ordenes$.next(result.ordenes);\n          this._total$.next(result.total);\n        });\n    \n        this._search$.next();\n        this.CargarTabla();\n        this.alive;\n        this.accessChecker.isGranted('edit', 'ordertable').subscribe((res: any) => {\n          if(res){ \n            this.select = false;\n            this.mostrar = false;\n          }else {\n            this.select=true;\n            this.mostrar=true;\n          }\n        });\n\n      }\n\n      // get countries$() { return this._countries$.asObservable(); }\n      get ordenesMaquina$() { return this._Ordenes$.asObservable(); }\n      get total$() { return this._total$.asObservable(); }\n      get loading$() { return this._loading$.asObservable(); }\n      get page() { return this._state.page; }\n      get pageSize() { return this._state.pageSize; }\n      get searchTerm() { return this._state.searchTerm; }\n\n      // get searchTerm() { return this._state.searchTerm; }\n      set page(page: number) { this._set({page}); }\n      set pageSize(pageSize: number) { this._set({pageSize}); }\n      set searchTerm(searchTerm: string) { this._set({searchTerm}); }\n\n      private _set(patch: Partial<State>) {\n        Object.assign(this._state, patch);\n        this._search$.next();\n      }\n      \n    ngOnInit(): void {\n        // throw new Error('Method not implemented.');\n        // console.log(\"entrooo\")\n        this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\n        .pipe(takeWhile(() => this.alive))\n        .subscribe((res:any)=>{\n        // console.log(res)\n        ORDENES = res;     \n        });\n        this._search$.next();\n\n        // this.refreshCountries();\n    }  \n\n    CargarTabla(){\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res:any)=>{\n        ORDENES = res;     \n        });\n        this._search$.next();\n    }  \n\n    _search(): Observable<SearchResult2> {\n    \n      const {pageSize, page, searchTerm} = this._state;\n\n\n      let ordenes = ORDENES;\n  \n      // 2. filter\n      ordenes = ordenes.filter(ordenes => matches2(ordenes, searchTerm, this.pipe));\n      const total = ordenes.length;\n  \n      // 3. paginate\n      ordenes = ordenes.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\n      // return of({countries, total});\n      return of({ordenes, total});\n    }\n\n    Edit(orden:string, nombre:string, descripcion:string, referencia:string, tama√±oOrden:number, origenValor:string, corteNumero: number, corteAncho:number, corteLargo:number, parPrority:number, idForm: number){\n      ORDEN = {\n        order: orden,\n        id: idForm,\n        name: nombre,\n        description: descripcion,\n        reference: referencia,\n        orderLength: tama√±oOrden,\n        cutsNumber: corteNumero,\n        cutsWidth: corteAncho,\n        cutsLength: corteLargo,\n        origen: origenValor,\n        priority: parPrority,\n      }\n      // console.log(ORDEN);\n      \n      this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        if(res){ \n          this.orderPopup.openWindowForm(\"Propiedades de la Orden \" + ORDEN.order , \"\", ORDEN);\n          this.select = false;\n          this.mostrar = false;\n        }else {\n          this.select=true;\n          this.mostrar=true;\n        }\n      });\n      \n    }\n\n    Refresh(){\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res:any)=>{\n        // console.log(res)\n        ORDENES = res;     \n        });\n        this._search$.next();\n    }\n    \n\n    \n\n    CrearOrden(){\n      this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => { \n        if(res){ \n          this.orderCrearPopup.openWindowForm(\"CREAR ORDEN\",\"\");\n          this.select = false;\n        }else {\n          this.select=true;\n        }\n      });\n    }\n  \n    ngOnDestroy() {\n      this.alive = false;\n    }\n\n}","<div class=\"row\">\n  <!-- <div class=\"col-xxxl-9 col-xl-12\"> -->\n  <div class=\"col-md-12 col-lg-12 col-xxxl-12\">\n\n    <nb-card style=\"padding: 20px;\">\n\n      <form> \n        <div class=\"form-group form-inline\">\n          Buscar: <input class=\"form-control ml-2\" type=\"text\"  name=\"searchTerm\" placeholder=\"Buscar ordenes\" [(ngModel)]=\"searchTerm\"/>\n          <span class=\"ml-3\" *ngIf=\"loading$ | async\">Loading...</span>\n          <td><button nbButton shape=\"semi-round\" class=\"boton1\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"CrearOrden()\" >Crear Orden</button></td>\n      </div>\n      <nb-card-body>\n      <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Id</th>\n          <th scope=\"col\">Orden</th>\n          <th scope=\"col\">Batch</th>\n          <!-- <th scope=\"col\">Nombre</th> -->\n          <th scope=\"col\">Referencia</th>\n          <th scope=\"col\">Destino</th>\n          <th scope=\"col\">Origen</th>\n          <th scope=\"col\">Longitud</th>\n          <th scope=\"col\"># Cortes</th>\n          <th scope=\"col\">Ancho Cortes</th>\n          <th scope=\"col\">Largo Cortes</th>\n          <th scope=\"col\">Prioridad</th>\n          <th scope=\"col\" *ngIf=\"!mostrar\">Editar</th>\n        </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let ordenes of ordenesMaquina$ | async\">\n        <!-- <th scope=\"row\">{{ ordenes.id }}</th> -->\n        <td><ngb-highlight [result]=\"ordenes.id\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.order\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.batch\" [term]=\"filter.value\"></ngb-highlight></td>\n        <!-- <td><ngb-highlight [result]=\"ordenes.name\" [term]=\"filter.value\"></ngb-highlight></td> -->\n        <td><ngb-highlight [result]=\"ordenes.reference\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.description\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.origen\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.orderLength\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.cutsNumber\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.cutsWidth\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.cutsLength\" [term]=\"filter.value\"></ngb-highlight></td>\n        <td><ngb-highlight [result]=\"ordenes.priority\" [term]=\"filter.value\"></ngb-highlight></td>\n        <!-- <td><button (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength)\" nbButton>EDIT</button></td> -->\n        <td><button nbButton shape=\"semi-round\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength, ordenes.origen, ordenes.cutsNumber, ordenes.cutsWidth, ordenes.cutsLength, ordenes.priority, ordenes.id)\">EDITAR</button></td>\n    \n      </tr>\n      </tbody>\n      </table>\n    </nb-card-body>\n        <div class=\"d-flex justify-content-between p-2\">\n      \n         <ngb-pagination\n         [collectionSize]=\"(total$ | async)!\" [(page)]=\"page\" [pageSize]=\"pageSize\">\n        </ngb-pagination>\n        <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\" [(ngModel)]=\"pageSize\">\n          <!-- <option [ngValue]=\"2\">2 items per page</option> -->\n          <option [ngValue]=\"5\">5 items per page</option>\n          <option [ngValue]=\"10\">10 items per page</option>\n          <option [ngValue]=\"15\">15 items per page</option>\n    \n        </select>\n      </div>\n      <td><button nbButton shape=\"semi-round\" class=\"boton2\" status=\"primary\" (click)=\"Refresh()\">Refrescar</button></td>\n    \n      </form>\t  \n    \n    \n    </nb-card>\n    \n    \n    \n    <!-- <ngx-temperature></ngx-temperature> -->\n\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\n\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\nimport {ApiGetService} from '../OrderTable/apiGet.services'\nimport { Router } from '@angular/router';\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\n\n\ninterface Ordenes {\n  // id?: number;\n  order: string;\n  name: string;\n  description: string;\n  reference: string;\n  orderLength: number;\n}\n\nlet ORDENES: Ordenes[]= [\n  \n\n];\n\n@Component({\n  selector: 'ngx-smartOrderTable',\n  templateUrl: './smartOrderTable.component.html',\n  styleUrls: ['./smartOrderTable.component.scss'],\n})\nexport class SmartOrderTableComponent {\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n  \n    columns: {\n      order: {\n        title: 'Order',\n        type: 'string',\n      },\n      name: {\n        title: 'Name',\n        type: 'string',\n      },\n      description: {\n        title: 'Description',\n        type: 'string',\n      },\n      reference: {\n        title: 'Reference',\n        type: 'string',\n      },\n      orderLength: {\n        title: 'OrderLength',\n        type: 'number',\n      },  \n    },\n  };\n\n \n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData,\n    public apiGetComp: ApiGetService, private router: Router\n    ,private api: HttpService\n    ) {\n    // const data = this.service.getData();\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders').subscribe((res:any)=>{\n      // console.log(res)\n      ORDENES = res;     \n      this.source.load(ORDENES);\n\n      });\n    \n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n\n  createUser() {\n    this.router.navigate(['/pages/users/add/']);\n    // this.router.navigate(['.../WindowOrderPopup/windowsOrderPopup.component']);\n\n  }\n\n  // onEdit($event: any) {\n  //   this.router.navigate([`/pages/users/edit/${$event.data.id}`]);\n  // }\n\n\n  \n}\n","\n<nb-card>\n    <nb-card-header>\n      Smart Order Table\n    </nb-card-header>\n  \n    <nb-card-body>\n      <ng2-smart-table class=\"example-smart-table\"\n                       [settings]=\"settings\"\n                       [source]=\"source\"\n                       (deleteConfirm)=\"onDeleteConfirm($event)\">\n                       <!-- (edit)=\"onEdit($event)\" -->\n      </ng2-smart-table>\n    </nb-card-body>\n    <nb-card-footer>\n      <button type=\"submit\" (click)=\"createUser()\" class=\"btn btn-primary\">Add User</button>\n    </nb-card-footer>\n  </nb-card>","import { Injectable} from '@angular/core'\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\nimport { Interface } from 'readline';\n\ninterface OrdenActualizar {\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n}\n\ninterface OrdenCrear {\n  orden: string;\n  referencia: string;\n  batch: number;\n  longitudOrden: number;\n  cortesNumero: number;\n  cortesAncho: number;\n  cortesLargo: number;\n  sheetsNumbers: number;\n  stackHeight: number;\n  sheetThickness: number;\n  origen: string;\n  destino: string;\n  productMissing: number;\n  signalStart: boolean;\n  sheetScrap: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ApiWindowCreateOrderPopup{\n\n\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        //   responseType: 'text'\n        }),\n        'responseType': 'blob' as 'json'\n      };\n\n    constructor(private http: HttpClient){}\n\n    GetJson(url:string){\n        return this.http.get(url);\n    }\n\n    PostJson(url:string, ordenActualizar: OrdenActualizar){\n        return this.http.post(url, ordenActualizar, this.httpOptions);\n    }\n\n    PostJsonCrear(url:string, ordenCrear: OrdenCrear){\n      return this.http.post(url, ordenCrear, this.httpOptions);\n  }\n    // GetJson(url:string){\n    //     return this.http.get<Observable<Ordenes[]>>(url);\n    // }\n\n    Suma(){\n        console.log(5+5);\n    }\n\n}\n","import { Component, ElementRef, Input, PipeTransform, TemplateRef, ViewChild } from '@angular/core';\nimport { NbComponentStatus, NbSelectComponent, NbWindowConfig, NbWindowRef, NbWindowService,NbToastrService, NbWindowModule } from '@nebular/theme';\nimport { title } from 'process';\nimport { threadId } from 'worker_threads';\nimport {ApiWindowCreateOrderPopup} from './apiWindowCreateOrderPopup.services'\nimport { DecimalPipe } from '@angular/common';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { debounceTime, delay, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { HttpHandler } from '@angular/common/http';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {ApiGetService} from '../../../@auth/components/register/apiGet.services';\n\n// import { ApiGetService } from '../OrderTable/apiGet.services';\n// import {HttpClient} from '@angular/common/http'\n// import { WindowFormComponent } from '../..window-form/window-form.component';\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\n\ninterface Ordenes {\n  id?: number;\n  order: string;\n  name: string;\n  description: string;\n  reference: string;\n  orderLength: number;\n  cutsNumber: number;\n  cutsWidth: number;\n  cutsLength: number;\n  origen:string;\n}\n\ninterface OrdenActualizar {\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n}\n\ninterface OrdenCrear {\n  orden: string;\n  referencia: string;\n  batch: number;\n  longitudOrden: number;\n  cortesNumero: number;\n  cortesAncho: number;\n  cortesLargo: number;\n  sheetsNumbers: number;\n  stackHeight: number;\n  sheetThickness: number;\n  origen: string;\n  destino: string;\n  productMissing: number;\n  signalStart: boolean;\n  sheetScrap: string;\n}\n\n\ninterface MaquinasDestino {\n  id?: number;\n  value: string;\n  label: string;\n}\n\ninterface MaquinasOrigen {\n  id?: number;\n  value: string;\n  label: string;\n}\n\n\nlet DESTINOS: MaquinasDestino[]= [\n \n\n]; \n\nlet ORIGENES: MaquinasOrigen[]= [\n \n\n]; \n\nlet ORDENESACTUALIZAR: OrdenActualizar\n{\n\n};\n\nlet ORDENCREAR: OrdenCrear \n{\n\n};\n\nlet DESTINO: MaquinasDestino \n{\n\n};\n\nlet ORIGEN: MaquinasOrigen \n{\n\n};\n\nlet ORDEN: Ordenes \n{\n\n};\n\nlet win:NbWindowRef\n\n@Component({\n  providers:[ApiWindowCreateOrderPopup],\n  selector: 'ngx-windowCreateOrderPopup',\n  templateUrl: './windowsCreateOrderPopup.component.html',\n  styleUrls: ['windowsCreateOrderPopup.component.scss'],\n})\nexport class WindowCreateComponent {\n\n\n  origenSelect\n  dataPost: OrdenActualizar;\n  statuses: NbComponentStatus[] = ['basic'];\n\n  options = [\n    { value: 'STAKER#1', label: 'STAKER#1' },\n    { value: 'STAKER#2', label: 'STAKER#2' },\n    // { value: 'This is value 3', label: 'Option 3' },\n    // { value: 'This is value 4', label: 'Option 4' },\n  ];\n  option;\n\n  options2 = [\n    { value: 'Martin 1228', label: 'Martin 1228' },\n    { value: 'JS', label: 'JS' },\n    { value: '924', label: '924' },\n    { value: 'S&S', label: 'S&S' },\n  ];\n  option2;\n\n  destino = DESTINOS;\n  maquinaDestino = DESTINO;\n  origen = ORIGENES;\n  maquinaOrigen = ORIGEN;\n\npublic selectedDestino ;\npublic selectedOrigen ;\n\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('ordenValor') ordenValor:ElementRef;\n  @ViewChild('referenciaValor') referenciaValor:ElementRef;\n  @ViewChild('batchValor') batchValor:ElementRef;\n  @ViewChild('longitudValor') longitudValor:ElementRef;\n  @ViewChild('cortesValor') cortesValor:ElementRef;\n  @ViewChild('anchoValor') anchoValor:ElementRef;\n  @ViewChild('largoValor') largoValor:ElementRef;\n  @ViewChild('sheetsNumberValor') sheetsNumberValor:ElementRef;\n  @ViewChild('stackHeightValor') stackHeightValor:ElementRef;\n  @ViewChild('sheetsThicknessValor') sheetsThicknessValor:ElementRef;\n  @ViewChild('productsMissingValor') productsMissingValor:ElementRef;\n  @ViewChild('sheetScrapValor') sheetScrapValor:ElementRef;\n\n\n\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\n\n\n  constructor(\n    private router: Router,\n    private windowService: NbWindowService,\n    private apiGetComp: ApiGetService,\n    private api: HttpService,\n    private toasterService: NbToastrService,\n    ){   \n      this.MaquinasDestinoLista();\n      this.MaquinasOrigenLista();\n    }\n\n    data = ORDEN;\n    dataOption2\n    toggleNgModel = true;\n\n\nopenWindowForm(nombreWindow:string, texto:string) {   \n    DESTINO =\n    {\n      value : 'ID-11 Salida Corrugador',\n      label : 'ID-11 Salida Corrugador'\n    }\n\n    ORIGEN = \n    {\n      value : 'Martin 1228',\n      label : 'Martin 1228'\n    }\n    win=this.windowService.open(WindowCreateComponent, { title: nombreWindow});  \n  \n  }\n\n  MaquinasDestinoLista(){\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res:any)=>{\n      DESTINOS = res; \n      });\n  }\n\n  MaquinasOrigenLista(){\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res:any)=>{\n      ORIGENES = res; \n      // console.log(ORIGENES);\n      });\n  }\n\n\nopenWindow(contentTemplate, titleValue:string, textValue:string, numberValue: number, nameValue: string, value:number) {\n\n    this.windowService.open(\n      contentTemplate,\n      {\n        title: titleValue,\n        context: {\n          text: textValue,\n          number: numberValue,\n          name: nameValue,\n          x: value,\n        },\n      },\n    );\n  }\n\n  openWindow2(contentTemplate2, titleValue:string, orderValue:string, nameValue: string, descripcionValue: string, referenciaValue:string, orderLengthValue:number) {\n    this.windowService.open(\n      contentTemplate2,\n      {\n        title: titleValue,\n        context: {\n          orden: orderValue,\n          nombre: nameValue,\n          descripcion: descripcionValue,\n          referencia: referenciaValue,\n          orderLength: orderLengthValue,\n          \n        },\n      },\n    );\n  }\n  \n\n  Refresh(orden:string, nombre:string){\n    // console.log(this._Ordenes$);\n    // console.log(this.ordenesMaquina$)\n    // console.log(this.ordenesFiltro);\n    console.log(orden + \", \" + nombre);\n  }\n\n  handleSuccessResponse() {\n    this.toasterService.success('Orden ' + this.ordenValor.nativeElement.value + ' creada con exito' );\n    this.back();\n  }\n  handleWrongResponse() {\n    this.toasterService.danger('', 'Error almacenando ordenes');\n  }\n\n  back() {\n    win.close();\n    this.router.navigate(['/pages/tables/OrderTable']);\n  }\n\n  Crear(){\n    // console.log(this.ordenValor.nativeElement.value);\n    // console.log(this.referenciaValor.nativeElement.value);\n    // console.log(this.batchValor.nativeElement.value);\n    // console.log(this.longitudValor.nativeElement.value);\n    // console.log(this.cortesValor.nativeElement.value);\n    // console.log(this.anchoValor.nativeElement.value);\n    // console.log(this.largoValor.nativeElement.value);\n    // console.log(this.sheetsNumberValor.nativeElement.value);\n    // console.log(this.maquinaOrigen.value);\n    // console.log(this.maquinaDestino.value);\n    // console.log(this.stackHeightValor.nativeElement.value);\n    // console.log(this.sheetsThicknessValor.nativeElement.value);\n    // console.log(this.productsMissingValor.nativeElement.value);\n    // console.log(this.toggleNgModel);\n    // console.log(this.sheetScrapValor.nativeElement.value);\n    \n    ORDENCREAR =\n    {\n      orden : this.ordenValor.nativeElement.value,\n      referencia: this.referenciaValor.nativeElement.value,\n      batch:  Number(this.batchValor.nativeElement.value),\n      longitudOrden:  Number(this.longitudValor.nativeElement.value),\n      cortesNumero:  Number(this.cortesValor.nativeElement.value),\n      cortesAncho:  Number(this.anchoValor.nativeElement.value),\n      cortesLargo:  Number(this.largoValor.nativeElement.value),\n      sheetsNumbers:  Number(this.sheetsNumberValor.nativeElement.value),\n      stackHeight:  Number(this.stackHeightValor.nativeElement.value),\n      sheetThickness:  Number(this.sheetsThicknessValor.nativeElement.value),\n      origen: this.maquinaOrigen.value,\n      destino: this.maquinaDestino.value,\n      productMissing:  Number(this.productsMissingValor.nativeElement.value),\n      signalStart: this.toggleNgModel,\n      sheetScrap: this.sheetScrapValor.nativeElement.value\n    }\n    if (ORDENCREAR.orden ==\"\" && ORDENCREAR.referencia == \"\" && ORDENCREAR.origen && ORDENCREAR.destino){\n      this.handleWrongResponse();\n    }else{\n      this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/CrearOrden', ORDENCREAR).subscribe((res:any)=>{\n        this.handleSuccessResponse();\n      });\n    }\n    \n\n  }\n \n}"," <!-- <p>Orden: </p>\n    <p>Nombre: </p>\n    <p>Descripcion: </p>\n    <p>Referencia: </p> -->\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n         <!-- <nb-card> -->\n            <p>Orden: <input type=\"text\" id=\"ordenValor\" status=\"info\" name=\"ordenValor\" nbInput #ordenValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Referencia: <input type=\"text\" id=\"referenciaValue\" status=\"info\" name=\"referenciaValue\" nbInput #referenciaValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Batch: <input type=\"number\" id=\"batchValor\" status=\"info\" name=\"batchValor\" nbInput #batchValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Longitud: <input type=\"number\" id=\"longitudValue\" status=\"info\" name=\"longitudValue\" nbInput #longitudValor   required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Cortes: <input type=\"number\" id=\"cortesValue\" status=\"info\" name=\"cortesValue\" nbInput #cortesValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Cortes Ancho: <input type=\"number\" id=\"anchoValue\" status=\"info\" name=\"anchoValue\" nbInput #anchoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Cortes Largo: <input type=\"number\" id=\"largoValue\" status=\"info\" name=\"largoValue\" height=\"20\" nbInput #largoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>Sheets Number: <input type=\"number\" id=\"sheetsNumberValor\" status=\"info\" name=\"sheetsNumberValor\" height=\"20\" nbInput #sheetsNumberValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n\n\n            <!-- </nb-card> -->\n      </div>\n\n      <div class=\"col-md-6\">\n            \n          <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\n            <p><nb-select [(ngModel)]=\"maquinaOrigen.value\" >\n            <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\n             {{ option.label }}\n             </nb-option>             \n           </nb-select></p>\n    \n           <p><nb-card-header>Dispositivos Destino</nb-card-header></p>  \n           <p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \n            <nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\n            {{ option2.label }}\n            </nb-option>             \n            </nb-select></p>\n            <p>Stack Height: <input type=\"number\" id=\"stackHeightValor\" status=\"info\" name=\"stackHeightValor\" height=\"20\" nbInput #stackHeightValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>SheetThickness: <input type=\"number\" id=\"sheetsThicknessValor\" status=\"info\" name=\"sheetsThicknessValor\" height=\"20\" nbInput #sheetsThicknessValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <p>ProductsMissing: <input type=\"number\" id=\"productsMissingValor\" status=\"info\" name=\"productsMissingValor\" height=\"20\" nbInput #productsMissingValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n            <nb-toggle [(ngModel)]=\"toggleNgModel\" status=\"success\">SignalStart</nb-toggle>\n            <p>SheetScrap: <input type=\"text\" id=\"sheetScrapValor\" status=\"info\" name=\"sheetScrapValor\" nbInput #sheetScrapValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n\n           \n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-12\">\n     \n      <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Crear()\">Crear Orden</button></p>\n     </div>\n     \n     \n     </div>","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { Observable, Subject, of } from 'rxjs';\n\n\n// export class OrdenActualizar {\n//     orden: string;\n//     referencia: string;\n//     origen: string;\n//     destino: string;\n//     longitud: number;\n//     cortes: number;\n//     cortesAncho: number;\n//     cortesLargo: number;\n//   }\n\ninterface OrdenActualizar {\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n}\n\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ApiWindowOrderPopup {\n\n\n    httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n        //   responseType: 'text'\n        }),\n        'responseType': 'blob' as 'json',\n      };\n\n    constructor(private http: HttpClient) {}\n\n    GetJson(url: string) {\n        return this.http.get(url);\n    }\n\n    PostJson(url: string, ordenActualizar: OrdenActualizar) {\n        return this.http.post(url, ordenActualizar, this.httpOptions);\n    }\n    // GetJson(url:string){\n    //     return this.http.get<Observable<Ordenes[]>>(url);\n    // }\n\n    Suma() {\n        console.log(5 + 5);\n    }\n\n}\n","import { Component, ElementRef, TemplateRef, ViewChild } from '@angular/core';\nimport { NbComponentStatus, NbWindowService,NbWindowRef,NbToastrService } from '@nebular/theme';\nimport {ApiWindowOrderPopup} from './apiWindowiOrderPopup.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport { MessageService } from '../../dashboard/services/MessageService';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n// import { ApiGetService } from '../OrderTable/apiGet.services';\n// import {HttpClient} from '@angular/common/http'\n// import { WindowFormComponent } from '../..window-form/window-form.component';\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\n\n\ninterface Ordenes {\n  id?: number;\n  order: string;\n  name: string;\n  description: string;\n  reference: string;\n  orderLength: number;\n  cutsNumber: number;\n  cutsWidth: number;\n  cutsLength: number;\n  origen: string;\n  priority: number;\n}\n\ninterface OrdenActualizar {\n  id:number;\n  orden: string;\n  referencia: string;\n  origen: string;\n  destino: string;\n  longitud: number;\n  cortes: number;\n  cortesAncho: number;\n  cortesLargo: number;\n  priority:number;\n  PreviousPriority:number;\n}\n\ninterface MaquinasDestino {\n  id?: number;\n  value: string;\n  label: string;\n}\n\ninterface MaquinasOrigen {\n  id?: number;\n  value: string;\n  label: string;\n}\n\n\nlet DESTINOS: MaquinasDestino[] = [\n\n\n];\n\nlet ORIGENES: MaquinasOrigen[] = [\n\n\n];\n\nlet ORDENESACTUALIZAR: OrdenActualizar;\n{\n\n}\n\nlet DESTINO: MaquinasDestino;\n{\n\n}\n\nlet ORIGEN: MaquinasOrigen;\n{\n\n}\n\nlet ORDEN: Ordenes;\n{\n\n}\n\nlet win:NbWindowRef;\n@Component({\n  providers: [ApiWindowOrderPopup],\n  selector: 'ngx-windowOrderPopup',\n  templateUrl: './windowsOrderPopup.component.html',\n  styleUrls: ['windowsOrderPopup.component.scss'],\n})\nexport class WindowComponent {\n\n\n  dataPost: OrdenActualizar;\n  statuses: NbComponentStatus[] = ['basic'];\n\n  options = [\n    { value: 'STAKER#1', label: 'STAKER#1' },\n    { value: 'STAKER#2', label: 'STAKER#2' },\n    // { value: 'This is value 3', label: 'Option 3' },\n    // { value: 'This is value 4', label: 'Option 4' },\n  ];\n  option;\n\n  options2 = [\n    { value: 'Martin 1228', label: 'Martin 1228' },\n    { value: 'JS', label: 'JS' },\n    { value: '924', label: '924' },\n    { value: 'S&S', label: 'S&S' },\n  ];\n  option2;\n\n  destino = DESTINOS;\n  maquinaDestino = DESTINO;\n  origen = ORIGENES;\n  maquinaOrigen = ORIGEN;\n\npublic selectedDestino ;\npublic selectedOrigen ;\n\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('ordenValor') ordenValor: ElementRef;\n  @ViewChild('longitudValor') longitudValor: ElementRef;\n  @ViewChild('cortesValor') cortesValor: ElementRef;\n  @ViewChild('anchoValor') anchoValor: ElementRef;\n  @ViewChild('largoValor') largoValor: ElementRef;\n  @ViewChild('priorityValue') priorityValue: ElementRef;\n  @ViewChild('referenciaValor') referenciaValor: ElementRef;\n\n\n\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\n\n\n  constructor(\n    private router: Router,\n    private windowService: NbWindowService,\n    private apiGetComp: ApiWindowOrderPopup,\n    private api: HttpService,\n    private messageService: MessageService,\n    private toasterService: NbToastrService,\n    ) {\n      this.MaquinasDestinoLista();\n      this.MaquinasOrigenLista();\n    }\n\n    data = ORDEN;\n    dataOption2;\n\n\n  openWindowForm(nombreWindow: string, texto: string, orden: Ordenes) {\n    // this.MaquinasDestinoLista();\n    ORDEN = orden;\n    this.data = orden;\n    DESTINO = {\n      value : orden.description,\n      label : orden.description,\n    };\n\n    ORIGEN = {\n      value : orden.origen,\n      label : orden.origen,\n    };\n    win=this.windowService.open(WindowComponent, { title: nombreWindow});\n\n  }\n\n  MaquinasDestinoLista() {\n\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res: any) => {\n      DESTINOS = res;\n      });\n  }\n\n  MaquinasOrigenLista() {\n\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res: any) => {\n      ORIGENES = res;\n      // console.log(ORIGENES);\n      });\n  }\n\n\nopenWindow(contentTemplate, titleValue: string, textValue: string, numberValue: number, nameValue: string, value: number) {\n\n    this.windowService.open(\n      contentTemplate,\n      {\n        title: titleValue,\n        context: {\n          text: textValue,\n          number: numberValue,\n          name: nameValue,\n          x: value,\n        },\n      },\n    );\n  }\n\n  openWindow2(contentTemplate2, titleValue: string, orderValue: string, nameValue: string, descripcionValue: string, referenciaValue: string, orderLengthValue: number) {\n    this.windowService.open(\n      contentTemplate2,\n      {\n        title: titleValue,\n        context: {\n          orden: orderValue,\n          nombre: nameValue,\n          descripcion: descripcionValue,\n          referencia: referenciaValue,\n          orderLength: orderLengthValue,\n\n        },\n      },\n    );\n  }\n\n\n  Refresh(orden: string, nombre: string) {\n    // console.log(this._Ordenes$);\n    // console.log(this.ordenesMaquina$)\n    // console.log(this.ordenesFiltro);\n    console.log(orden + ', ' + nombre);\n  }\n\n  Edit() {\n\n    ORDENESACTUALIZAR = {\n      id:this.data.id,\n      orden: this.data.order,\n      referencia: this.referenciaValor.nativeElement.value,\n      origen: this.maquinaOrigen.value,\n      destino: this.maquinaDestino.value,\n      longitud: Number(this.longitudValor.nativeElement.value),\n      cortes: Number(this.cortesValor.nativeElement.value),\n      cortesAncho: Number(this.anchoValor.nativeElement.value),\n      cortesLargo: Number(this.largoValor.nativeElement.value),\n      priority: Number(this.priorityValue.nativeElement.value),\n      PreviousPriority: this.data.priority,\n    };\n\n    this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/ActualizarOrden', ORDENESACTUALIZAR).subscribe((res: any) => {\n      this.messageService.sendMessage('orderTable');\n      this.handleSuccessResponse();\n    });\n  }\n\n  handleSuccessResponse() {\n    this.toasterService.success('Orden ' + ORDEN.order + ' actualizada con exito' );\n    this.back();\n  }\n\n  back() {\n    win.close();\n    this.router.navigate(['/pages/tables/OrderTable']);\n  }\n\n\n  ChangeLocation($event) {\n    const selectedValue = this.options2.find(location => location.value === $event.value );\n    console.log(selectedValue);\n}\n\n}\n","<div class=\"row\">\n\n  <div class=\"col-md-6\">\n    <!-- <nb-card> -->\n\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\"></p>  -->\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" nbInput #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\" disabled=\"true\"></p> -->\n    <!-- <p>Orden: {{ data.order }}</p> -->\n    <!-- <p>Nombre: {{ data.name }}</p> -->\n    <!-- <p>Descripcion: {{ data.description }}</p> -->\n    <!-- <p>Referencia: </p>\n    <p>{{ data.reference }}</p> -->\n    <p>Referencia: <input type=\"text\" id=\"referenciaValue\" name=\"referenciaValue\" nbInput #referenciaValor  value=\"{{ data.reference }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Longitud:   <input type=\"number\" id=\"longitudValue\" name=\"longitudValue\" nbInput #longitudValor  value=\"{{ data.orderLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Cortes:     <input type=\"number\" id=\"cortesValue\" name=\"cortesValue\" nbInput #cortesValor  value=\"{{ data.cutsNumber }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Ancho:      <input type=\"number\" id=\"anchoValue\" name=\"anchoValue\" nbInput #anchoValor  value=\"{{ data.cutsWidth }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Largo:      <input type=\"number\" id=\"largoValue\" name=\"largoValue\" nbInput #largoValor  value=\"{{ data.cutsLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n    <p>Prioridad:  <input type=\"number\" id=\"priorityValue\" name=\"priorityValue\" nbInput #priorityValue  value=\"{{ data.priority }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\n  <!-- </nb-card> -->\n  </div>\n\n  <div class=\"col-md-6\">\n\n\n    <!-- <nb-card> -->\n      <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\n\n  <!-- <nb-card-body> -->\n    <p><nb-select [(ngModel)]=\"maquinaOrigen.value\"> \n  <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\n    {{ option.label }}\n  </nb-option>             \n</nb-select></p>\n\n\n<!-- </nb-card-body> -->\n\n<p><nb-card-header>Dispositivos Destino</nb-card-header></p>\n\n<!-- <nb-card-body> -->\n<p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \n<nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\n{{ option2.label }}\n</nb-option>             \n</nb-select></p>\n<!-- </nb-card> -->\n\n    <!-- <nb-card>\n      <nb-card-header>Select</nb-card-header>\n      <nb-card-body>\n        <nb-select selected=\"1\">\n          <nb-option value=\"1\">Option 1</nb-option>\n          <nb-option value=\"2\">Option 2</nb-option>\n        </nb-select>\n      </nb-card-body>\n    </nb-card> -->\n    \n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-sm-12\">\n\n  <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Edit()\">EDIT</button></p>\n</div>\n\n\n</div>\n  \n\n","import { Component, OnDestroy } from '@angular/core';\nimport { interval } from 'rxjs';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { takeWhile } from 'rxjs/operators';\nimport { NbAccessChecker } from '@nebular/security';\nimport { HttpClient } from '@angular/common/http';\nimport { GridComponent, PageSettingsModel, FilterSettingsModel, CommandClickEventArgs, EditService, CommandColumnService, CommandModel, ToolbarService, PageService, QueryCellInfoEventArgs, DialogEditEventArgs, ToolbarItems } from '@syncfusion/ej2-angular-grids';\nimport { UserStore } from '../../../@core/stores/user.store';\nimport { Dialog, Tooltip } from '@syncfusion/ej2-popups';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { ClickEventArgs } from '@syncfusion/ej2-navigations';\n\ninterface Alarmas {\n  Id: number;\n  Message: string;\n  Level: string;\n  Exception: string;\n  UserId: string;\n  TimeStamp: string;\n  ETD: string;\n  UserIdAcknow: string;\n  IdDevice: string;\n}\n\nlet ALARMAS: Alarmas[] = [\n\n\n];\n\n@Component({\n  selector: 'ngx-alarms',\n  templateUrl: './alarms.component.html',\n  providers: [ToolbarService, EditService, PageService],\n  styleUrls: ['./alarms.component.scss',]\n})\nexport class AlarmsComponent implements OnDestroy {\n\n  public select = false;\n  private alive = true;\n  mostrar: Boolean;\n  public pageSettings: PageSettingsModel;\n  \n\n  public editSettings: Object;\n    // public toolbar: string[];\n    public toolbar: ToolbarItems[] | object;\n\n  public historyAlarmData: Alarmas[];\n  public editparams: Object;\n  public commands: CommandModel[];\n  public filterOptions: FilterSettingsModel;\n\n  alarmas = ALARMAS;\n\n  settings = {\n    // actions: false,\n    actions: {\n      add: false,\n      edit: false,\n      \n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-checkmark-circle\"></i>',\n      confirmDelete: true,\n    },\n    \n    columns: {\n      Id: {\n        title: 'ID',\n        type: 'number',\n        filter: false,\n        hide: true,\n\n      },\n      Message: {\n        title: 'Mensaje',\n        type: 'string',\n        filter: true,\n      },\n      Level: {\n        title: 'Nivel',\n        type: 'string',\n        filter: false,\n      },\n      // exception: {\n      //   title: 'excepci√≥n',\n      //   type: 'string',\n      //   filter: false,\n      // },\n      UserId: {\n        title: 'Usuario',\n        type: 'string',\n        filter: false,\n      },\n      TimeStamp: {\n        title: 'Fecha',\n        type: 'string',\n        filter: false,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n  public Alarm: Alarmas[];\n\n  constructor(\n    public accessChecker: NbAccessChecker,\n    private toastrService: NbToastrService,\n    public apiGetComp: ApiGetService,\n    private api: HttpService,\n    private http: HttpClient,\n    private userStore: UserStore,\n  ) {\n    \n    this.alive;\n    this.accessChecker.isGranted('edit', 'ordertable')\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n      if(res){ \n        this.select = false;\n        this.mostrar = false;\n      }else {\n        this.select=true;\n        this.mostrar=true;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.Chargealarms();\n    this.ChargeHistoryData();\n    this.pageSettings = { pageSize: 10 };\n    this.filterOptions = {\n      type: 'Menu',\n   };\n   this.editSettings = { allowEditing: true, allowAdding: false, allowDeleting: true , newRowPosition: 'Top' };\n   this.toolbar = [{text: 'Delete', prefixIcon: 'fas fa-check'},\n   { text: 'Reconocer alarmas', tooltipText: 'Click', prefixIcon: 'fas fa-check-double', id: 'Click' }];\n//    this.editSettings = { allowEditing: false, allowDeleting: true };\n//    this.commands = [\n//   //  { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\n//    { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\n//   //  { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\n//   //  { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\n// ];\n  }\n\n  // onedit($event: any) {\n  //     this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Alarms/postalarm?IdAlarm' + $event.data.id).subscribe((res: any) => {\n  //       //REPORTOCUPATION=res;\n  //       console.log(\"alarmId\", res);\n  //       // this.Alarm = res;\n  //       // this.source.load(res);\n  //     });\n    \n  // }\n\n  commandClick(args: CommandClickEventArgs): void {\n    debugger\n    alert(JSON.stringify(args.rowData));\n    \n}\n\nclickHandler(args: ClickEventArgs): void {\n  if (args.item.id === 'Click') {\n    console.log('click: ', args);\n    debugger\n    this.reconocer();\n    console.log('Se reconocieron todas las alarmas');\n    \n      // alert('Custom Toolbar Click...');\n  }\n}\n\ntooltip(args: QueryCellInfoEventArgs) {\n  const tooltip: Tooltip = new Tooltip({\n      content: args.data[args.column.field].toString()\n      \n  }, args.cell as HTMLTableCellElement);\n  // console.log('tool:', tooltip);\n}\n\n// actionComplete(args: DialogEditEventArgs): void {\n//   if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {\n//       if (Browser.isDevice) {\n//           args.dialog.height = window.innerHeight - 90 + 'px';\n//           (<Dialog>args.dialog).dataBind();\n//       }\n//       // Set initail Focus\n//       if (args.requestType === 'beginEdit') {\n//           (args.form.elements.namedItem('CustomerName') as HTMLInputElement).focus();\n//       } else if (args.requestType === 'add') {\n//           (args.form.elements.namedItem('OrderID') as HTMLInputElement).focus();\n//       }\n//   }\n// }\n\nactionComplete(args) {\n  if (( args.requestType === 'delete')) {\n      // const dialog = args.dialog;\n      debugger\n      const Id = 'Id';\n      // change the header of the dialog\n      console.log('Type: ', args.data[0].Id);\n      // console.log('id: ', args.rowData.Id);\n      // debugger\n    \n    this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        if(res){ \n          const currentUserId = this.userStore.getUser().id;\n          var respons = \n            {\n            IdAlarm: args.data[0].Id,\n            UserIdAcknow: currentUserId\n            };\n          // let alarm = {IdAlarm: event.data.Id};\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\n      \n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        //  console.log(\"alarmId\", res);\n         if (res) {\n          this.toastrService.success('', '¬°Alarma solucionada!'); \n          this.source.refresh();\n        } else {\n          this.toastrService.danger('', 'Algo salio mal.');\n        }\n      });\n      // args.rowData.Id.resolve();\n      //     this.select = false;\n      //     this.mostrar = false;\n        }else {\n          this.select=true;\n          this.mostrar=true;\n        }\n      });\n      // dialog.header = args.requestType === 'beginEdit' ? 'Record of ' + args.rowData[CustomerID] : 'New Customer';\n  }\n}\n\nDelete(event): void {\n    debugger\n    \n    this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        if(res){ \n          const currentUserId = this.userStore.getUser().id;\n          var respons = \n            {\n            IdAlarm: event.data.Id,\n            UserIdAcknow: currentUserId\n            };\n          let alarm = {IdAlarm: event.data.Id};\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\n      \n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        //  console.log(\"alarmId\", res);\n         if (res) {\n          this.toastrService.success('', '¬°Alarma solucionada!'); \n          this.source.refresh();\n        } else {\n          this.toastrService.danger('', 'Algo salio mal.');\n        }\n      });\n      event.confirm.resolve();\n          this.select = false;\n          this.mostrar = false;\n        }else {\n          this.select=true;\n          this.mostrar=true;\n        }\n      });\n    //  console.log(\"Evento: \", event);\n      \n    \n  }\n\n  reconocer() {\n    debugger\n    this.accessChecker.isGranted('edit', 'ordertable')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        if(res){ \n      const currentUserId = this.userStore.getUser().id;\n          var respons = \n            {\n              UserIdAcknow: currentUserId\n            };\n            \n       this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmAll', respons)\n       .pipe(takeWhile(() => this.alive))\n       .subscribe((res: any) => {\n          if (res) {\n           this.toastrService.success('', '¬°Alarmas solucionadas!');\n           this.source.refresh();\n           this.Chargealarms();\n           this.select=true;\n         } else {\n           this.toastrService.danger('', 'Algo salio mal.');\n         }\n         this.source.refresh();\n       });\n      }else {\n        this.select=true;\n        this.mostrar=true;\n      }\n    });\n       \n  }\n\n  Chargealarms() {\n    this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n      this.Alarm = res;\n      console.log('test alarm: ', this.Alarm)\n      // this.source.load(res);\n      // this.source.refresh();\n    });\n    const contador = interval(30000)\n    contador.subscribe((n) => {\n      this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        this.Alarm = res;\n        // this.source.load(res);\n        // this.source.refresh();\n      });\n    });\n\n  }\n\n  ChargeHistoryData() {\n    this.http.get(this.api.apiUrlNode1 + '/historyalarm')\n    .pipe(takeWhile(() => this.alive))\n    .subscribe((res: any) => {\n      // tslint:disable-next-line: no-console\n      // console.log('HistoryAlarmData: ', res);\n      this.historyAlarmData = res;\n    });\n    const contador = interval(40000)\n    contador.subscribe((n) => {\n      this.http.get(this.api.apiUrlNode1 + '/historyalarm')\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((res: any) => {\n        this.historyAlarmData = res;\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  \n\n}\n","<!-- <h2>Alarmas</h2> -->\n<nb-card>\n    <nb-tabset>\n        <nb-tab tabTitle=\"Alarmas\">\n            <nb-card>\n                <nb-card-header>\n                    Alarmas\n                </nb-card-header>\n\n                <!-- <nb-card-body> -->\n                <!-- <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\n                    </ng2-smart-table> -->\n\n                <ejs-grid [dataSource]='Alarm' allowPaging='true' (toolbarClick)='clickHandler($event)' (actionComplete)=\"actionComplete($event)\" allowTextWrap='true' [pageSettings]='pageSettings' [editSettings]='editSettings' [toolbar]='toolbar' [filterSettings]='filterOptions'\n                    [allowFiltering]=\"true\" height='400'>\n                    <e-columns>\n                        <e-column field='Message' headerText='Mensaje' width=200 isPrimaryKey='true'></e-column>\n                        <e-column field='Level' headerText='Nivel' width=85></e-column>\n                        <e-column field='UserId' headerText='Usuario' width=100></e-column>\n                        <e-column field='TimeStamp' headerText='Fecha' width=90></e-column>\n                        <!-- <e-column headerText='Acciones' width='60' [commands]='commands' (click)=\"Delete($event)\"></e-column> -->\n                    </e-columns>\n                </ejs-grid>\n\n                <!-- </nb-card-body> -->\n                <!-- <nb-card-footer>\n                    <button type=\"submit\" nbButton status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"reconocer()\" class=\"btn btn-primary\">Reconocer alarmas</button>\n                    \n                </nb-card-footer> -->\n            </nb-card>\n        </nb-tab>\n        <nb-tab tabTitle=\"Historico Alarmas\">\n            <nb-card>\n                <nb-card-header>\n                    Historico Alarmas\n                </nb-card-header>\n                <!-- <nb-card-body> -->\n                <ejs-grid [dataSource]='historyAlarmData' [allowPaging]=\"true\" allowTextWrap='true' (queryCellInfo)='tooltip($event)' [pageSettings]='pageSettings' [filterSettings]='filterOptions' [allowFiltering]=\"true\" height='400'>\n                    <e-columns>\n                        <e-column field='Message' headerText='Mensaje' width=180></e-column>\n                        <e-column field='Level' headerText='Nivel' width=75></e-column>\n                        <e-column field='UserId' headerText='Usuario' width=75></e-column>\n                        <e-column field='TimeStamp' headerText='Fecha' width=85></e-column>\n                        <e-column field='EDT' headerText='Fecha fin' width=100></e-column>\n                        <e-column field='UserIdAcknow' headerText='Usuario reco' width=85></e-column>\n                    </e-columns>\n                </ejs-grid>\n                <!-- </nb-card-body> -->\n            </nb-card>\n        </nb-tab>\n    </nb-tabset>\n</nb-card>","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\n\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\n\n@Component({\n  selector: 'ngx-smart-table',\n  templateUrl: './smart-table.component.html',\n  styleUrls: ['./smart-table.component.scss'],\n})\nexport class SmartTableComponent {\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      login: {\n        title: 'Login',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData) {\n    const data = this.service.getData();\n    this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n}\n","<!--\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\n  ~ Licensed under the Single Application / Multi Application License.\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n  -->\n\n<nb-card>\n  <nb-card-header>\n    Smart Table\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table class=\"example-smart-table\"\n                     [settings]=\"settings\"\n                     [source]=\"source\"\n                     (deleteConfirm)=\"onDeleteConfirm($event)\">\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TablesComponent } from './tables.component';\nimport { SmartTableComponent } from './smart-table/smart-table.component';\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\nimport { OrderTableComponent } from './OrderTable/orderTable.component';\nimport { AlarmsComponent } from './alarms/alarms.component';\nimport { SmartOrderTableComponent } from './SmartOrderTable/smartOrderTable.component';\nimport { AdminGuard } from '../../@auth/admin.guard';\nimport { UserGuard } from '../../@auth/user.guard';\n\nconst routes: Routes = [{\n  path: '',\n  component: TablesComponent,\n  children: [\n    {\n      path: 'smart-table',\n      component: SmartTableComponent,\n    },\n    {\n      path: 'tree-grid',\n      component: TreeGridComponent,\n    },\n    {\n      path: 'OrderTable',\n      component: OrderTableComponent,\n    },\n    {\n      path: 'alarms',\n      component: AlarmsComponent,\n    },\n    {\n      path: 'SmartOrderTable',\n      component: SmartOrderTableComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TablesRoutingModule { }\n\nexport const routedComponents = [\n  TablesComponent,\n  SmartTableComponent,\n  TreeGridComponent,\n  OrderTableComponent,\n  SmartOrderTableComponent,\n];\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-tables',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class TablesComponent {\n}\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { NgModule } from '@angular/core';\nimport { NbCardModule, NbTabsetModule, NbIconModule, NbInputModule, NbSelectModule, NbTreeGridModule, NbRadioModule, NbCheckboxModule, \n  NbActionsModule, NbUserModule, NbDatepickerModule, NbButtonModule, NbToggleModule} from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\nimport { FsIconComponent } from './tree-grid/tree-grid.component';\nimport {MeasureConverterPipe} from '../../@theme/pipes';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http'\nimport {ApiGetService} from './OrderTable/apiGet.services'\nimport {ApiWindowOrderPopup} from './WindowOrderPopup/apiWindowiOrderPopup.services'\nimport {WindowComponent} from './WindowOrderPopup/windowsOrderPopup.component'\nimport {ApiWindowCreateOrderPopup} from './WindowCreateOrderPopup/apiWindowCreateOrderPopup.services'\nimport {WindowCreateComponent} from './WindowCreateOrderPopup/windowsCreateOrderPopup.component';\nimport { AlarmsComponent } from './alarms/alarms.component'\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\nimport { PageService, SortService, FilterService, GroupService } from '@syncfusion/ej2-angular-grids';\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\n\n@NgModule({\n  imports: [\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    TablesRoutingModule,\n    Ng2SmartTableModule,\n    NgbModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    NbSelectModule,\n    NbInputModule,\n    NbCardModule,\n    NbActionsModule,\n    NbUserModule,\n    NbCheckboxModule,\n    NbRadioModule,\n    NbDatepickerModule,\n    NbSelectModule,\n    NbIconModule,\n    NbButtonModule,\n    NbToggleModule,\n    NbTabsetModule,\n    GridModule,\n    DropDownListAllModule,\n  ],\n  declarations: [\n    ...routedComponents,\n    FsIconComponent,\n    WindowComponent,\n    WindowCreateComponent,\n    AlarmsComponent,\n  ],\n  providers: [\n    MeasureConverterPipe,\n    ApiGetService,\n    ApiWindowOrderPopup,\n    ApiWindowCreateOrderPopup,\n    PageService,\n    SortService,\n    FilterService,\n    GroupService,\n  ],\n})\nexport class TablesModule { }\n","/*\n * Copyright (c) Akveo 2019. All Rights Reserved.\n * Licensed under the Single Application / Multi Application License.\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\nimport {MeasureConverterPipe} from '../../../@theme/pipes';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: number;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  selector: 'ngx-tree-grid',\n  templateUrl: './tree-grid.component.html',\n  styleUrls: ['./tree-grid.component.scss'],\n})\nexport class TreeGridComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<FSEntry>;\n\n  sortColumn: string;\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>,\n              public measureConverterPipe: MeasureConverterPipe) {\n    this.dataSource = this.dataSourceBuilder.create(this.data);\n  }\n\n  updateSort(sortRequest: NbSortRequest): void {\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  getSortDirection(column: string): NbSortDirection {\n    if (this.sortColumn === column) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: 1800000, items: 4, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: 240000 } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: 290000 } },\n        { data: { name: 'project-3', kind: 'txt', size: 466000 } },\n        { data: { name: 'project-4.docx', kind: 'docx', size: 900000 } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: 400000, items: 2 },\n      children: [\n        { data: { name: 'Report 1', kind: 'doc', size: 100000 } },\n        { data: { name: 'Report 2', kind: 'doc', size: 300000 } },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: 109000000, items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: 107000000 } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: 2000000 } },\n      ],\n    },\n  ];\n\n  getCellValue(columnValue: string | number, columnName: string): string | number {\n    if (columnName === 'size') {\n      return this.measureConverterPipe.transform(columnValue);\n    }\n    return columnValue || '-';\n  }\n\n  getShowOn(index: number) {\n    const minWithForMultipleColumns = 400;\n    const nextColumnStep = 100;\n    return minWithForMultipleColumns + (nextColumnStep * index);\n  }\n}\n\n@Component({\n  selector: 'ngx-fs-icon',\n  template: `\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\n    </nb-tree-grid-row-toggle>\n    <ng-template #fileIcon>\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\n    </ng-template>\n  `,\n})\nexport class FsIconComponent {\n  @Input() kind: string;\n  @Input() expanded: boolean;\n\n  isDir(): boolean {\n    return this.kind === 'dir';\n  }\n}\n","<!--\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\n  ~ Licensed under the Single Application / Multi Application License.\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\n  -->\n\n<nb-card>\n  <nb-card-body>\n\n    <label class=\"search-label\" for=\"search\">Search:</label>\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\n\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\n\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\n          {{customColumn}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\n          {{row.data[customColumn]}}\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\n                    [nbTreeGridColumnDef]=\"column\"\n                    [showOn]=\"getShowOn(index)\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\n          {{column}}\n        </th>\n\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{getCellValue(row.data[column], column)}}</td>\n      </ng-container>\n\n    </table>\n\n  </nb-card-body>\n</nb-card>\n"]}