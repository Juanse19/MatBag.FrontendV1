{"version":3,"sources":["webpack:///src/app/pages/tables/OrderTable/apiGet.services.ts","webpack:///src/app/pages/tables/OrderTable/orderTable.component.ts","webpack:///src/app/pages/tables/OrderTable/orderTable.component.html","webpack:///src/app/pages/tables/SmartOrderTable/smartOrderTable.component.ts","webpack:///src/app/pages/tables/SmartOrderTable/smartOrderTable.component.html","webpack:///src/app/pages/tables/WindowCreateOrderPopup/apiWindowCreateOrderPopup.services.ts","webpack:///src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.ts","webpack:///src/app/pages/tables/WindowCreateOrderPopup/windowsCreateOrderPopup.component.html","webpack:///src/app/pages/tables/WindowOrderPopup/apiWindowiOrderPopup.services.ts","webpack:///src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.ts","webpack:///src/app/pages/tables/WindowOrderPopup/windowsOrderPopup.component.html","webpack:///src/app/pages/tables/alarms/alarms.component.ts","webpack:///src/app/pages/tables/alarms/alarms.component.html","webpack:///src/app/pages/tables/smart-table/smart-table.component.ts","webpack:///src/app/pages/tables/smart-table/smart-table.component.html","webpack:///src/app/pages/tables/tables-routing.module.ts","webpack:///src/app/pages/tables/tables.component.ts","webpack:///src/app/pages/tables/tables.module.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.html"],"names":["ApiGetService","http","url","get","providedIn","ORDENES","ORDEN","matches2","ordenes","term","pipe","order","toLowerCase","includes","name","description","reference","origen","transform","orderLength","OrderTableComponent","accessChecker","apiGetComp","orderPopup","orderCrearPopup","api","messageService","_state","page","pageSize","searchTerm","select","alive","_loading$","_search$","_Ordenes$","_total$","filter","subscription","onMessage","subscribe","message","text","CargarTabla","next","_search","result","total","isGranted","res","mostrar","asObservable","_set","patch","Object","assign","GetJson","apiUrlMatbox","length","slice","orden","nombre","descripcion","referencia","tama√±oOrden","origenValor","corteNumero","corteAncho","corteLargo","parPrority","idForm","id","cutsNumber","cutsWidth","cutsLength","priority","openWindowForm","Refresh","providers","selector","templateUrl","styleUrls","SmartOrderTableComponent","service","router","settings","add","addButtonContent","createButtonContent","cancelButtonContent","edit","editButtonContent","saveButtonContent","deleteButtonContent","confirmDelete","columns","title","type","source","load","event","window","confirm","resolve","reject","navigate","onDeleteConfirm","createUser","ApiWindowCreateOrderPopup","httpOptions","headers","ordenActualizar","post","ordenCrear","console","log","DESTINOS","ORIGENES","ORDENESACTUALIZAR","ORDENCREAR","DESTINO","ORIGEN","win","WindowCreateComponent","windowService","toasterService","statuses","options","value","label","options2","destino","maquinaDestino","maquinaOrigen","data","toggleNgModel","MaquinasDestinoLista","MaquinasOrigenLista","nombreWindow","texto","open","contentTemplate","titleValue","textValue","numberValue","nameValue","context","number","x","contentTemplate2","orderValue","descripcionValue","referenciaValue","orderLengthValue","success","ordenValor","nativeElement","back","danger","close","referenciaValor","batch","Number","batchValor","longitudOrden","longitudValor","cortesNumero","cortesValor","cortesAncho","anchoValor","cortesLargo","largoValor","sheetsNumbers","sheetsNumberValor","stackHeight","stackHeightValor","sheetThickness","sheetsThicknessValor","productMissing","productsMissingValor","signalStart","sheetScrap","sheetScrapValor","handleWrongResponse","PostJson","handleSuccessResponse","Crear","read","ApiWindowOrderPopup","WindowComponent","longitud","cortes","priorityValue","PreviousPriority","sendMessage","$event","selectedValue","find","location","Edit","ALARMAS","AlarmsComponent","toastrService","userStore","alarmas","actions","Id","hide","Message","Level","UserId","TimeStamp","Chargealarms","ChargeHistoryData","pageSettings","filterOptions","editSettings","allowEditing","allowAdding","allowDeleting","newRowPosition","toolbar","prefixIcon","tooltipText","args","alert","JSON","stringify","rowData","item","reconocer","tooltip","content","column","field","toString","cell","requestType","currentUserId","getUser","respons","IdAlarm","UserIdAcknow","apiUrlNode1","refresh","alarm","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","Alarm","contador","n","historyAlarmData","clickHandler","actionComplete","SmartTableComponent","confirmCreate","confirmSave","editable","addable","firstName","lastName","login","email","age","getData","newData","onSaveConfirm","onCreateConfirm","routes","path","component","children","TablesRoutingModule","forChild","imports","exports","routedComponents","TablesComponent","template","TablesModule","declarations","TreeGridComponent","dataSourceBuilder","measureConverterPipe","customColumn","defaultColumns","allColumns","sortDirection","NONE","size","items","kind","dataSource","create","sortRequest","sortColumn","direction","columnValue","columnName","index","minWithForMultipleColumns","nextColumnStep","updateSort","FsIconComponent"],"mappings":"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","file":"tables-tables-module-es5.js","sourcesContent":["import { Injectable} from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\n// import { Observable, Subject, of } from 'rxjs';\r\n\r\n\r\ninterface Ordenes {\r\n    order: string;\r\n    name: string;\r\n    description: string;\r\n    reference: string;\r\n    orderLength: number;\r\n  }\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ApiGetService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    GetJson(url: string) {\r\n        return this.http.get(url);\r\n    }\r\n\r\n\r\n}\r\n","import { Component, EventEmitter, HostBinding, OnDestroy, OnInit, Output, ViewChild , TemplateRef, PipeTransform} from '@angular/core';\r\nimport { Location, LocationStrategy } from '@angular/common';\r\nimport { NbThemeService } from '@nebular/theme';\r\nimport { map, takeUntil, startWith, debounceTime, tap, switchMap, delay, takeWhile } from 'rxjs/operators';\r\nimport { Observable, Subject, of, BehaviorSubject,Subscription } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { i18nMetaToDocStmt } from '@angular/compiler/src/render3/view/i18n/meta';\r\nimport {ApiGetService} from '../OrderTable/apiGet.services'\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms'; \r\nimport {WindowComponent} from '../WindowOrderPopup/windowsOrderPopup.component'\r\nimport {ApiWindowOrderPopup} from '../WindowOrderPopup/apiWindowiOrderPopup.services'\r\nimport {WindowCreateComponent} from '../WindowCreateOrderPopup/windowsCreateOrderPopup.component'\r\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\r\nimport { MessageService } from '../../dashboard/services/MessageService';\r\nimport { Identifiers } from '@angular/compiler';\r\nimport { NbAccessChecker } from '@nebular/security';\r\n\r\n\r\n  interface Ordenes {\r\n    id: number;\r\n    order: string;\r\n    batch?: number;\r\n    name: string;\r\n    description: string;\r\n    reference: string;\r\n    orderLength: number;\r\n    cutsNumber: number;\r\n    cutsWidth: number;\r\n    cutsLength: number;\r\n    origen:string;\r\n    priority: number;\r\n  }\r\n\r\n  interface State {\r\n    page: number;\r\n    pageSize: number;\r\n    searchTerm: string;\r\n  }\r\n\r\n\r\n  interface SearchResult2 {\r\n    ordenes: Ordenes[];\r\n    total: number;\r\n  }\r\n\r\n  let ORDENES: Ordenes[]= [\r\n  \r\n\r\n  ];\r\n\r\n  let ORDEN: Ordenes  \r\n{\r\n\r\n};\r\n\r\n\r\n\r\nfunction matches2(ordenes: Ordenes, term: string, pipe: PipeTransform) {\r\n  return ordenes.order.toLowerCase().includes(term)\r\n    || ordenes.name.toLowerCase().includes(term.toLowerCase())\r\n    || ordenes.description.toLowerCase().includes(term.toLowerCase())\r\n    || ordenes.reference.toLowerCase().includes(term)\r\n    || ordenes.origen.toLowerCase().includes(term.toLowerCase())\r\n    || pipe.transform(ordenes.orderLength).includes(term);\r\n}\r\n\r\n\r\n\r\n@Component({\r\n    providers:[\r\n    //   JacComponent\r\n    // , WindowComponent\r\n     ApiGetService\r\n     ,DecimalPipe\r\n     ,WindowComponent\r\n     ,WindowCreateComponent\r\n    // , WindowFormComponent\r\n    ],\r\n    selector: 'ngx-ordertable',\r\n    templateUrl: './orderTable.component.html',\r\n    styleUrls: ['./orderTable.component.scss'],\r\n  })\r\n\r\n  export class OrderTableComponent implements OnInit {\r\n\r\n    subscription: Subscription;\r\n    private _state: State = {\r\n      page: 1,\r\n      pageSize: 5,\r\n      searchTerm: ''\r\n\r\n    };\r\n\r\n    public select = false;\r\n    private alive = true;\r\n    mostrar: Boolean;\r\n\r\n    total: number ;\r\n\r\n    private _loading$ = new BehaviorSubject<boolean>(true);\r\n    private _search$ = new Subject<void>();\r\n    // private _countries$ = new BehaviorSubject<Country[]>([]);\r\n    private _Ordenes$ = new BehaviorSubject<Ordenes[]>([]);\r\n\r\n    private _total$ = new BehaviorSubject<number>(0);\r\n\r\n    filter = new FormControl('');\r\n\r\n    constructor(\r\n        public accessChecker: NbAccessChecker,\r\n        public apiGetComp: ApiGetService,\r\n        public pipe : DecimalPipe,\r\n        private orderPopup: WindowComponent, \r\n        private orderCrearPopup: WindowCreateComponent,\r\n        private api: HttpService,\r\n        private messageService: MessageService\r\n      ) {\r\n        \r\n        this.subscription = this.messageService.onMessage()\r\n        .pipe(takeWhile(() => this.alive))\r\n        .subscribe(message => {\r\n          if (message.text==\"orderTable\") {\r\n            //this.messages.push(message);\r\n            this.CargarTabla();\r\n          }\r\n        });\r\n        this._search$.pipe(\r\n          takeWhile(() => this.alive),\r\n          tap(() => this._loading$.next(true)),\r\n          debounceTime(200),\r\n          switchMap(() => this._search()),\r\n          delay(200),\r\n          tap(() => this._loading$.next(false))\r\n        )\r\n        .pipe(takeWhile(() => this.alive))\r\n        .subscribe(result => {\r\n          this._Ordenes$.next(result.ordenes);\r\n          this._total$.next(result.total);\r\n        });\r\n    \r\n        this._search$.next();\r\n        this.CargarTabla();\r\n        this.alive;\r\n        this.accessChecker.isGranted('edit', 'ordertable').subscribe((res: any) => {\r\n          if(res){ \r\n            this.select = false;\r\n            this.mostrar = false;\r\n          }else {\r\n            this.select=true;\r\n            this.mostrar=true;\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n      // get countries$() { return this._countries$.asObservable(); }\r\n      get ordenesMaquina$() { return this._Ordenes$.asObservable(); }\r\n      get total$() { return this._total$.asObservable(); }\r\n      get loading$() { return this._loading$.asObservable(); }\r\n      get page() { return this._state.page; }\r\n      get pageSize() { return this._state.pageSize; }\r\n      get searchTerm() { return this._state.searchTerm; }\r\n\r\n      // get searchTerm() { return this._state.searchTerm; }\r\n      set page(page: number) { this._set({page}); }\r\n      set pageSize(pageSize: number) { this._set({pageSize}); }\r\n      set searchTerm(searchTerm: string) { this._set({searchTerm}); }\r\n\r\n      private _set(patch: Partial<State>) {\r\n        Object.assign(this._state, patch);\r\n        this._search$.next();\r\n      }\r\n      \r\n    ngOnInit(): void {\r\n        // throw new Error('Method not implemented.');\r\n        // console.log(\"entrooo\")\r\n        this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\r\n        .pipe(takeWhile(() => this.alive))\r\n        .subscribe((res:any)=>{\r\n        // console.log(res)\r\n        ORDENES = res;     \r\n        });\r\n        this._search$.next();\r\n\r\n        // this.refreshCountries();\r\n    }  \r\n\r\n    CargarTabla(){\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res:any)=>{\r\n        ORDENES = res;     \r\n        });\r\n        this._search$.next();\r\n    }  \r\n\r\n    _search(): Observable<SearchResult2> {\r\n    \r\n      const {pageSize, page, searchTerm} = this._state;\r\n\r\n\r\n      let ordenes = ORDENES;\r\n  \r\n      // 2. filter\r\n      ordenes = ordenes.filter(ordenes => matches2(ordenes, searchTerm, this.pipe));\r\n      const total = ordenes.length;\r\n  \r\n      // 3. paginate\r\n      ordenes = ordenes.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\r\n      // return of({countries, total});\r\n      return of({ordenes, total});\r\n    }\r\n\r\n    Edit(orden:string, nombre:string, descripcion:string, referencia:string, tama√±oOrden:number, origenValor:string, corteNumero: number, corteAncho:number, corteLargo:number, parPrority:number, idForm: number){\r\n      ORDEN = {\r\n        order: orden,\r\n        id: idForm,\r\n        name: nombre,\r\n        description: descripcion,\r\n        reference: referencia,\r\n        orderLength: tama√±oOrden,\r\n        cutsNumber: corteNumero,\r\n        cutsWidth: corteAncho,\r\n        cutsLength: corteLargo,\r\n        origen: origenValor,\r\n        priority: parPrority,\r\n      }\r\n      // console.log(ORDEN);\r\n      \r\n      this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        if(res){ \r\n          this.orderPopup.openWindowForm(\"Propiedades de la Orden \" + ORDEN.order , \"\", ORDEN);\r\n          this.select = false;\r\n          this.mostrar = false;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n        }\r\n      });\r\n      \r\n    }\r\n\r\n    Refresh(){\r\n      this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res:any)=>{\r\n        // console.log(res)\r\n        ORDENES = res;     \r\n        });\r\n        this._search$.next();\r\n    }\r\n    \r\n\r\n    \r\n\r\n    CrearOrden(){\r\n      this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => { \r\n        if(res){ \r\n          this.orderCrearPopup.openWindowForm(\"CREAR ORDEN\",\"\");\r\n          this.select = false;\r\n        }else {\r\n          this.select=true;\r\n        }\r\n      });\r\n    }\r\n  \r\n    ngOnDestroy() {\r\n      this.alive = false;\r\n    }\r\n\r\n}","<div class=\"row\">\r\n  <!-- <div class=\"col-xxxl-9 col-xl-12\"> -->\r\n  <div class=\"col-md-12 col-lg-12 col-xxxl-12\">\r\n\r\n    <nb-card style=\"padding: 20px;\">\r\n\r\n      <form> \r\n        <div class=\"form-group form-inline\">\r\n          Buscar: <input class=\"form-control ml-2\" type=\"text\"  name=\"searchTerm\" placeholder=\"Buscar ordenes\" [(ngModel)]=\"searchTerm\"/>\r\n          <span class=\"ml-3\" *ngIf=\"loading$ | async\">Loading...</span>\r\n          <td><button nbButton shape=\"semi-round\" class=\"boton1\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"CrearOrden()\" >Crear Orden</button></td>\r\n      </div>\r\n      <nb-card-body>\r\n      <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">Orden</th>\r\n          <th scope=\"col\">Batch</th>\r\n          <!-- <th scope=\"col\">Nombre</th> -->\r\n          <th scope=\"col\">Referencia</th>\r\n          <th scope=\"col\">Destino</th>\r\n          <th scope=\"col\">Origen</th>\r\n          <th scope=\"col\">Longitud</th>\r\n          <th scope=\"col\"># Cortes</th>\r\n          <th scope=\"col\">Ancho Cortes</th>\r\n          <th scope=\"col\">Largo Cortes</th>\r\n          <th scope=\"col\">Prioridad</th>\r\n          <th scope=\"col\" *ngIf=\"!mostrar\">Editar</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let ordenes of ordenesMaquina$ | async\">\r\n        <!-- <th scope=\"row\">{{ ordenes.id }}</th> -->\r\n        <td><ngb-highlight [result]=\"ordenes.id\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.order\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.batch\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <!-- <td><ngb-highlight [result]=\"ordenes.name\" [term]=\"filter.value\"></ngb-highlight></td> -->\r\n        <td><ngb-highlight [result]=\"ordenes.reference\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.description\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.origen\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.orderLength\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.cutsNumber\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.cutsWidth\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.cutsLength\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <td><ngb-highlight [result]=\"ordenes.priority\" [term]=\"filter.value\"></ngb-highlight></td>\r\n        <!-- <td><button (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength)\" nbButton>EDIT</button></td> -->\r\n        <td><button nbButton shape=\"semi-round\" status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"Edit(ordenes.order, ordenes.name, ordenes.description, ordenes.reference, ordenes.orderLength, ordenes.origen, ordenes.cutsNumber, ordenes.cutsWidth, ordenes.cutsLength, ordenes.priority, ordenes.id)\">EDITAR</button></td>\r\n    \r\n      </tr>\r\n      </tbody>\r\n      </table>\r\n    </nb-card-body>\r\n        <div class=\"d-flex justify-content-between p-2\">\r\n      \r\n         <ngb-pagination\r\n         [collectionSize]=\"(total$ | async)!\" [(page)]=\"page\" [pageSize]=\"pageSize\">\r\n        </ngb-pagination>\r\n        <select class=\"custom-select\" style=\"width: auto\" name=\"pageSize\" [(ngModel)]=\"pageSize\">\r\n          <!-- <option [ngValue]=\"2\">2 items per page</option> -->\r\n          <option [ngValue]=\"5\">5 items per page</option>\r\n          <option [ngValue]=\"10\">10 items per page</option>\r\n          <option [ngValue]=\"15\">15 items per page</option>\r\n    \r\n        </select>\r\n      </div>\r\n      <td><button nbButton shape=\"semi-round\" class=\"boton2\" status=\"primary\" (click)=\"Refresh()\">Refrescar</button></td>\r\n    \r\n      </form>\t  \r\n    \r\n    \r\n    </nb-card>\r\n    \r\n    \r\n    \r\n    <!-- <ngx-temperature></ngx-temperature> -->\r\n\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\r\nimport {ApiGetService} from '../OrderTable/apiGet.services'\r\nimport { Router } from '@angular/router';\r\nimport {HttpService} from '../../../@core/backend/common/api/http.service'\r\n\r\n\r\ninterface Ordenes {\r\n  // id?: number;\r\n  order: string;\r\n  name: string;\r\n  description: string;\r\n  reference: string;\r\n  orderLength: number;\r\n}\r\n\r\nlet ORDENES: Ordenes[]= [\r\n  \r\n\r\n];\r\n\r\n@Component({\r\n  selector: 'ngx-smartOrderTable',\r\n  templateUrl: './smartOrderTable.component.html',\r\n  styleUrls: ['./smartOrderTable.component.scss'],\r\n})\r\nexport class SmartOrderTableComponent {\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n  \r\n    columns: {\r\n      order: {\r\n        title: 'Order',\r\n        type: 'string',\r\n      },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'string',\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n        type: 'string',\r\n      },\r\n      reference: {\r\n        title: 'Reference',\r\n        type: 'string',\r\n      },\r\n      orderLength: {\r\n        title: 'OrderLength',\r\n        type: 'number',\r\n      },  \r\n    },\r\n  };\r\n\r\n \r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData,\r\n    public apiGetComp: ApiGetService, private router: Router\r\n    ,private api: HttpService\r\n    ) {\r\n    // const data = this.service.getData();\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox +'/Orders/ObtenerOrders').subscribe((res:any)=>{\r\n      // console.log(res)\r\n      ORDENES = res;     \r\n      this.source.load(ORDENES);\r\n\r\n      });\r\n    \r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  createUser() {\r\n    this.router.navigate(['/pages/users/add/']);\r\n    // this.router.navigate(['.../WindowOrderPopup/windowsOrderPopup.component']);\r\n\r\n  }\r\n\r\n  // onEdit($event: any) {\r\n  //   this.router.navigate([`/pages/users/edit/${$event.data.id}`]);\r\n  // }\r\n\r\n\r\n  \r\n}\r\n","\r\n<nb-card>\r\n    <nb-card-header>\r\n      Smart Order Table\r\n    </nb-card-header>\r\n  \r\n    <nb-card-body>\r\n      <ng2-smart-table class=\"example-smart-table\"\r\n                       [settings]=\"settings\"\r\n                       [source]=\"source\"\r\n                       (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n                       <!-- (edit)=\"onEdit($event)\" -->\r\n      </ng2-smart-table>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n      <button type=\"submit\" (click)=\"createUser()\" class=\"btn btn-primary\">Add User</button>\r\n    </nb-card-footer>\r\n  </nb-card>","import { Injectable} from '@angular/core'\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\r\nimport { Interface } from 'readline';\r\n\r\ninterface OrdenActualizar {\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n}\r\n\r\ninterface OrdenCrear {\r\n  orden: string;\r\n  referencia: string;\r\n  batch: number;\r\n  longitudOrden: number;\r\n  cortesNumero: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n  sheetsNumbers: number;\r\n  stackHeight: number;\r\n  sheetThickness: number;\r\n  origen: string;\r\n  destino: string;\r\n  productMissing: number;\r\n  signalStart: boolean;\r\n  sheetScrap: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ApiWindowCreateOrderPopup{\r\n\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n        //   responseType: 'text'\r\n        }),\r\n        'responseType': 'blob' as 'json'\r\n      };\r\n\r\n    constructor(private http: HttpClient){}\r\n\r\n    GetJson(url:string){\r\n        return this.http.get(url);\r\n    }\r\n\r\n    PostJson(url:string, ordenActualizar: OrdenActualizar){\r\n        return this.http.post(url, ordenActualizar, this.httpOptions);\r\n    }\r\n\r\n    PostJsonCrear(url:string, ordenCrear: OrdenCrear){\r\n      return this.http.post(url, ordenCrear, this.httpOptions);\r\n  }\r\n    // GetJson(url:string){\r\n    //     return this.http.get<Observable<Ordenes[]>>(url);\r\n    // }\r\n\r\n    Suma(){\r\n        console.log(5+5);\r\n    }\r\n\r\n}\r\n","import { Component, ElementRef, Input, PipeTransform, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NbComponentStatus, NbSelectComponent, NbWindowConfig, NbWindowRef, NbWindowService,NbToastrService, NbWindowModule } from '@nebular/theme';\r\nimport { title } from 'process';\r\nimport { threadId } from 'worker_threads';\r\nimport {ApiWindowCreateOrderPopup} from './apiWindowCreateOrderPopup.services'\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { FormControl } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\r\nimport { debounceTime, delay, map, startWith, switchMap, tap } from 'rxjs/operators';\r\nimport { HttpHandler } from '@angular/common/http';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {ApiGetService} from '../../../@auth/components/register/apiGet.services';\r\n\r\n// import { ApiGetService } from '../OrderTable/apiGet.services';\r\n// import {HttpClient} from '@angular/common/http'\r\n// import { WindowFormComponent } from '../..window-form/window-form.component';\r\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\r\n\r\ninterface Ordenes {\r\n  id?: number;\r\n  order: string;\r\n  name: string;\r\n  description: string;\r\n  reference: string;\r\n  orderLength: number;\r\n  cutsNumber: number;\r\n  cutsWidth: number;\r\n  cutsLength: number;\r\n  origen:string;\r\n}\r\n\r\ninterface OrdenActualizar {\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n}\r\n\r\ninterface OrdenCrear {\r\n  orden: string;\r\n  referencia: string;\r\n  batch: number;\r\n  longitudOrden: number;\r\n  cortesNumero: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n  sheetsNumbers: number;\r\n  stackHeight: number;\r\n  sheetThickness: number;\r\n  origen: string;\r\n  destino: string;\r\n  productMissing: number;\r\n  signalStart: boolean;\r\n  sheetScrap: string;\r\n}\r\n\r\n\r\ninterface MaquinasDestino {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface MaquinasOrigen {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\n\r\nlet DESTINOS: MaquinasDestino[]= [\r\n \r\n\r\n]; \r\n\r\nlet ORIGENES: MaquinasOrigen[]= [\r\n \r\n\r\n]; \r\n\r\nlet ORDENESACTUALIZAR: OrdenActualizar\r\n{\r\n\r\n};\r\n\r\nlet ORDENCREAR: OrdenCrear \r\n{\r\n\r\n};\r\n\r\nlet DESTINO: MaquinasDestino \r\n{\r\n\r\n};\r\n\r\nlet ORIGEN: MaquinasOrigen \r\n{\r\n\r\n};\r\n\r\nlet ORDEN: Ordenes \r\n{\r\n\r\n};\r\n\r\nlet win:NbWindowRef\r\n\r\n@Component({\r\n  providers:[ApiWindowCreateOrderPopup],\r\n  selector: 'ngx-windowCreateOrderPopup',\r\n  templateUrl: './windowsCreateOrderPopup.component.html',\r\n  styleUrls: ['windowsCreateOrderPopup.component.scss'],\r\n})\r\nexport class WindowCreateComponent {\r\n\r\n\r\n  origenSelect\r\n  dataPost: OrdenActualizar;\r\n  statuses: NbComponentStatus[] = ['basic'];\r\n\r\n  options = [\r\n    { value: 'STAKER#1', label: 'STAKER#1' },\r\n    { value: 'STAKER#2', label: 'STAKER#2' },\r\n    // { value: 'This is value 3', label: 'Option 3' },\r\n    // { value: 'This is value 4', label: 'Option 4' },\r\n  ];\r\n  option;\r\n\r\n  options2 = [\r\n    { value: 'Martin 1228', label: 'Martin 1228' },\r\n    { value: 'JS', label: 'JS' },\r\n    { value: '924', label: '924' },\r\n    { value: 'S&S', label: 'S&S' },\r\n  ];\r\n  option2;\r\n\r\n  destino = DESTINOS;\r\n  maquinaDestino = DESTINO;\r\n  origen = ORIGENES;\r\n  maquinaOrigen = ORIGEN;\r\n\r\npublic selectedDestino ;\r\npublic selectedOrigen ;\r\n\r\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\r\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\r\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\r\n  @ViewChild('ordenValor') ordenValor:ElementRef;\r\n  @ViewChild('referenciaValor') referenciaValor:ElementRef;\r\n  @ViewChild('batchValor') batchValor:ElementRef;\r\n  @ViewChild('longitudValor') longitudValor:ElementRef;\r\n  @ViewChild('cortesValor') cortesValor:ElementRef;\r\n  @ViewChild('anchoValor') anchoValor:ElementRef;\r\n  @ViewChild('largoValor') largoValor:ElementRef;\r\n  @ViewChild('sheetsNumberValor') sheetsNumberValor:ElementRef;\r\n  @ViewChild('stackHeightValor') stackHeightValor:ElementRef;\r\n  @ViewChild('sheetsThicknessValor') sheetsThicknessValor:ElementRef;\r\n  @ViewChild('productsMissingValor') productsMissingValor:ElementRef;\r\n  @ViewChild('sheetScrapValor') sheetScrapValor:ElementRef;\r\n\r\n\r\n\r\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private windowService: NbWindowService,\r\n    private apiGetComp: ApiGetService,\r\n    private api: HttpService,\r\n    private toasterService: NbToastrService,\r\n    ){   \r\n      this.MaquinasDestinoLista();\r\n      this.MaquinasOrigenLista();\r\n    }\r\n\r\n    data = ORDEN;\r\n    dataOption2\r\n    toggleNgModel = true;\r\n\r\n\r\nopenWindowForm(nombreWindow:string, texto:string) {   \r\n    DESTINO =\r\n    {\r\n      value : 'ID-11 Salida Corrugador',\r\n      label : 'ID-11 Salida Corrugador'\r\n    }\r\n\r\n    ORIGEN = \r\n    {\r\n      value : 'Martin 1228',\r\n      label : 'Martin 1228'\r\n    }\r\n    win=this.windowService.open(WindowCreateComponent, { title: nombreWindow});  \r\n  \r\n  }\r\n\r\n  MaquinasDestinoLista(){\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res:any)=>{\r\n      DESTINOS = res; \r\n      });\r\n  }\r\n\r\n  MaquinasOrigenLista(){\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res:any)=>{\r\n      ORIGENES = res; \r\n      // console.log(ORIGENES);\r\n      });\r\n  }\r\n\r\n\r\nopenWindow(contentTemplate, titleValue:string, textValue:string, numberValue: number, nameValue: string, value:number) {\r\n\r\n    this.windowService.open(\r\n      contentTemplate,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          text: textValue,\r\n          number: numberValue,\r\n          name: nameValue,\r\n          x: value,\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  openWindow2(contentTemplate2, titleValue:string, orderValue:string, nameValue: string, descripcionValue: string, referenciaValue:string, orderLengthValue:number) {\r\n    this.windowService.open(\r\n      contentTemplate2,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          orden: orderValue,\r\n          nombre: nameValue,\r\n          descripcion: descripcionValue,\r\n          referencia: referenciaValue,\r\n          orderLength: orderLengthValue,\r\n          \r\n        },\r\n      },\r\n    );\r\n  }\r\n  \r\n\r\n  Refresh(orden:string, nombre:string){\r\n    // console.log(this._Ordenes$);\r\n    // console.log(this.ordenesMaquina$)\r\n    // console.log(this.ordenesFiltro);\r\n    console.log(orden + \", \" + nombre);\r\n  }\r\n\r\n  handleSuccessResponse() {\r\n    this.toasterService.success('Orden ' + this.ordenValor.nativeElement.value + ' creada con exito' );\r\n    this.back();\r\n  }\r\n  handleWrongResponse() {\r\n    this.toasterService.danger('', 'Error almacenando ordenes');\r\n  }\r\n\r\n  back() {\r\n    win.close();\r\n    this.router.navigate(['/pages/tables/OrderTable']);\r\n  }\r\n\r\n  Crear(){\r\n    // console.log(this.ordenValor.nativeElement.value);\r\n    // console.log(this.referenciaValor.nativeElement.value);\r\n    // console.log(this.batchValor.nativeElement.value);\r\n    // console.log(this.longitudValor.nativeElement.value);\r\n    // console.log(this.cortesValor.nativeElement.value);\r\n    // console.log(this.anchoValor.nativeElement.value);\r\n    // console.log(this.largoValor.nativeElement.value);\r\n    // console.log(this.sheetsNumberValor.nativeElement.value);\r\n    // console.log(this.maquinaOrigen.value);\r\n    // console.log(this.maquinaDestino.value);\r\n    // console.log(this.stackHeightValor.nativeElement.value);\r\n    // console.log(this.sheetsThicknessValor.nativeElement.value);\r\n    // console.log(this.productsMissingValor.nativeElement.value);\r\n    // console.log(this.toggleNgModel);\r\n    // console.log(this.sheetScrapValor.nativeElement.value);\r\n    \r\n    ORDENCREAR =\r\n    {\r\n      orden : this.ordenValor.nativeElement.value,\r\n      referencia: this.referenciaValor.nativeElement.value,\r\n      batch:  Number(this.batchValor.nativeElement.value),\r\n      longitudOrden:  Number(this.longitudValor.nativeElement.value),\r\n      cortesNumero:  Number(this.cortesValor.nativeElement.value),\r\n      cortesAncho:  Number(this.anchoValor.nativeElement.value),\r\n      cortesLargo:  Number(this.largoValor.nativeElement.value),\r\n      sheetsNumbers:  Number(this.sheetsNumberValor.nativeElement.value),\r\n      stackHeight:  Number(this.stackHeightValor.nativeElement.value),\r\n      sheetThickness:  Number(this.sheetsThicknessValor.nativeElement.value),\r\n      origen: this.maquinaOrigen.value,\r\n      destino: this.maquinaDestino.value,\r\n      productMissing:  Number(this.productsMissingValor.nativeElement.value),\r\n      signalStart: this.toggleNgModel,\r\n      sheetScrap: this.sheetScrapValor.nativeElement.value\r\n    }\r\n    if (ORDENCREAR.orden ==\"\" && ORDENCREAR.referencia == \"\" && ORDENCREAR.origen && ORDENCREAR.destino){\r\n      this.handleWrongResponse();\r\n    }else{\r\n      this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/CrearOrden', ORDENCREAR).subscribe((res:any)=>{\r\n        this.handleSuccessResponse();\r\n      });\r\n    }\r\n    \r\n\r\n  }\r\n \r\n}"," <!-- <p>Orden: </p>\r\n    <p>Nombre: </p>\r\n    <p>Descripcion: </p>\r\n    <p>Referencia: </p> -->\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n         <!-- <nb-card> -->\r\n            <p>Orden: <input type=\"text\" id=\"ordenValor\" status=\"info\" name=\"ordenValor\" nbInput #ordenValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Referencia: <input type=\"text\" id=\"referenciaValue\" status=\"info\" name=\"referenciaValue\" nbInput #referenciaValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Batch: <input type=\"number\" id=\"batchValor\" status=\"info\" name=\"batchValor\" nbInput #batchValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Longitud: <input type=\"number\" id=\"longitudValue\" status=\"info\" name=\"longitudValue\" nbInput #longitudValor   required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Cortes: <input type=\"number\" id=\"cortesValue\" status=\"info\" name=\"cortesValue\" nbInput #cortesValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Cortes Ancho: <input type=\"number\" id=\"anchoValue\" status=\"info\" name=\"anchoValue\" nbInput #anchoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Cortes Largo: <input type=\"number\" id=\"largoValue\" status=\"info\" name=\"largoValue\" height=\"20\" nbInput #largoValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>Sheets Number: <input type=\"number\" id=\"sheetsNumberValor\" status=\"info\" name=\"sheetsNumberValor\" height=\"20\" nbInput #sheetsNumberValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n\r\n\r\n            <!-- </nb-card> -->\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n            \r\n          <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\r\n            <p><nb-select [(ngModel)]=\"maquinaOrigen.value\" >\r\n            <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\r\n             {{ option.label }}\r\n             </nb-option>             \r\n           </nb-select></p>\r\n    \r\n           <p><nb-card-header>Dispositivos Destino</nb-card-header></p>  \r\n           <p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \r\n            <nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\r\n            {{ option2.label }}\r\n            </nb-option>             \r\n            </nb-select></p>\r\n            <p>Stack Height: <input type=\"number\" id=\"stackHeightValor\" status=\"info\" name=\"stackHeightValor\" height=\"20\" nbInput #stackHeightValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>SheetThickness: <input type=\"number\" id=\"sheetsThicknessValor\" status=\"info\" name=\"sheetsThicknessValor\" height=\"20\" nbInput #sheetsThicknessValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <p>ProductsMissing: <input type=\"number\" id=\"productsMissingValor\" status=\"info\" name=\"productsMissingValor\" height=\"20\" nbInput #productsMissingValor  required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n            <nb-toggle [(ngModel)]=\"toggleNgModel\" status=\"success\">SignalStart</nb-toggle>\r\n            <p>SheetScrap: <input type=\"text\" id=\"sheetScrapValor\" status=\"info\" name=\"sheetScrapValor\" nbInput #sheetScrapValor required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n\r\n           \r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n     \r\n      <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Crear()\">Crear Orden</button></p>\r\n     </div>\r\n     \r\n     \r\n     </div>","import { Injectable} from '@angular/core';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\n// import { Observable, Subject, of } from 'rxjs';\r\n\r\n\r\n// export class OrdenActualizar {\r\n//     orden: string;\r\n//     referencia: string;\r\n//     origen: string;\r\n//     destino: string;\r\n//     longitud: number;\r\n//     cortes: number;\r\n//     cortesAncho: number;\r\n//     cortesLargo: number;\r\n//   }\r\n\r\ninterface OrdenActualizar {\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n}\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport class ApiWindowOrderPopup {\r\n\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type': 'application/json',\r\n        //   responseType: 'text'\r\n        }),\r\n        'responseType': 'blob' as 'json',\r\n      };\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    GetJson(url: string) {\r\n        return this.http.get(url);\r\n    }\r\n\r\n    PostJson(url: string, ordenActualizar: OrdenActualizar) {\r\n        return this.http.post(url, ordenActualizar, this.httpOptions);\r\n    }\r\n    // GetJson(url:string){\r\n    //     return this.http.get<Observable<Ordenes[]>>(url);\r\n    // }\r\n\r\n    Suma() {\r\n        console.log(5 + 5);\r\n    }\r\n\r\n}\r\n","import { Component, ElementRef, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NbComponentStatus, NbWindowService,NbWindowRef,NbToastrService } from '@nebular/theme';\r\nimport {ApiWindowOrderPopup} from './apiWindowiOrderPopup.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\nimport { MessageService } from '../../dashboard/services/MessageService';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n// import { ApiGetService } from '../OrderTable/apiGet.services';\r\n// import {HttpClient} from '@angular/common/http'\r\n// import { WindowFormComponent } from '../..window-form/window-form.component';\r\n// import { WindowFormComponent } from '../../modal-overlays/window/window-form/window-form.component';\r\n\r\n\r\ninterface Ordenes {\r\n  id?: number;\r\n  order: string;\r\n  name: string;\r\n  description: string;\r\n  reference: string;\r\n  orderLength: number;\r\n  cutsNumber: number;\r\n  cutsWidth: number;\r\n  cutsLength: number;\r\n  origen: string;\r\n  priority: number;\r\n}\r\n\r\ninterface OrdenActualizar {\r\n  id:number;\r\n  orden: string;\r\n  referencia: string;\r\n  origen: string;\r\n  destino: string;\r\n  longitud: number;\r\n  cortes: number;\r\n  cortesAncho: number;\r\n  cortesLargo: number;\r\n  priority:number;\r\n  PreviousPriority:number;\r\n}\r\n\r\ninterface MaquinasDestino {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\ninterface MaquinasOrigen {\r\n  id?: number;\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\n\r\nlet DESTINOS: MaquinasDestino[] = [\r\n\r\n\r\n];\r\n\r\nlet ORIGENES: MaquinasOrigen[] = [\r\n\r\n\r\n];\r\n\r\nlet ORDENESACTUALIZAR: OrdenActualizar;\r\n{\r\n\r\n}\r\n\r\nlet DESTINO: MaquinasDestino;\r\n{\r\n\r\n}\r\n\r\nlet ORIGEN: MaquinasOrigen;\r\n{\r\n\r\n}\r\n\r\nlet ORDEN: Ordenes;\r\n{\r\n\r\n}\r\n\r\nlet win:NbWindowRef;\r\n@Component({\r\n  providers: [ApiWindowOrderPopup],\r\n  selector: 'ngx-windowOrderPopup',\r\n  templateUrl: './windowsOrderPopup.component.html',\r\n  styleUrls: ['windowsOrderPopup.component.scss'],\r\n})\r\nexport class WindowComponent {\r\n\r\n\r\n  dataPost: OrdenActualizar;\r\n  statuses: NbComponentStatus[] = ['basic'];\r\n\r\n  options = [\r\n    { value: 'STAKER#1', label: 'STAKER#1' },\r\n    { value: 'STAKER#2', label: 'STAKER#2' },\r\n    // { value: 'This is value 3', label: 'Option 3' },\r\n    // { value: 'This is value 4', label: 'Option 4' },\r\n  ];\r\n  option;\r\n\r\n  options2 = [\r\n    { value: 'Martin 1228', label: 'Martin 1228' },\r\n    { value: 'JS', label: 'JS' },\r\n    { value: '924', label: '924' },\r\n    { value: 'S&S', label: 'S&S' },\r\n  ];\r\n  option2;\r\n\r\n  destino = DESTINOS;\r\n  maquinaDestino = DESTINO;\r\n  origen = ORIGENES;\r\n  maquinaOrigen = ORIGEN;\r\n\r\npublic selectedDestino ;\r\npublic selectedOrigen ;\r\n\r\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\r\n  @ViewChild('contentTemplate2', { static: true }) contentTemplate2: TemplateRef<any>;\r\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\r\n  @ViewChild('ordenValor') ordenValor: ElementRef;\r\n  @ViewChild('longitudValor') longitudValor: ElementRef;\r\n  @ViewChild('cortesValor') cortesValor: ElementRef;\r\n  @ViewChild('anchoValor') anchoValor: ElementRef;\r\n  @ViewChild('largoValor') largoValor: ElementRef;\r\n  @ViewChild('priorityValue') priorityValue: ElementRef;\r\n  @ViewChild('referenciaValor') referenciaValor: ElementRef;\r\n\r\n\r\n\r\n  // @ViewChild('desplegableValor') desplegableValor:NbSelectComponent;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private windowService: NbWindowService,\r\n    private apiGetComp: ApiWindowOrderPopup,\r\n    private api: HttpService,\r\n    private messageService: MessageService,\r\n    private toasterService: NbToastrService,\r\n    ) {\r\n      this.MaquinasDestinoLista();\r\n      this.MaquinasOrigenLista();\r\n    }\r\n\r\n    data = ORDEN;\r\n    dataOption2;\r\n\r\n\r\n  openWindowForm(nombreWindow: string, texto: string, orden: Ordenes) {\r\n    // this.MaquinasDestinoLista();\r\n    ORDEN = orden;\r\n    this.data = orden;\r\n    DESTINO = {\r\n      value : orden.description,\r\n      label : orden.description,\r\n    };\r\n\r\n    ORIGEN = {\r\n      value : orden.origen,\r\n      label : orden.origen,\r\n    };\r\n    win=this.windowService.open(WindowComponent, { title: nombreWindow});\r\n\r\n  }\r\n\r\n  MaquinasDestinoLista() {\r\n\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasDestinoLista').subscribe((res: any) => {\r\n      DESTINOS = res;\r\n      });\r\n  }\r\n\r\n  MaquinasOrigenLista() {\r\n\r\n    this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Orders/ObtenerMaquinasOrigenLista').subscribe((res: any) => {\r\n      ORIGENES = res;\r\n      // console.log(ORIGENES);\r\n      });\r\n  }\r\n\r\n\r\nopenWindow(contentTemplate, titleValue: string, textValue: string, numberValue: number, nameValue: string, value: number) {\r\n\r\n    this.windowService.open(\r\n      contentTemplate,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          text: textValue,\r\n          number: numberValue,\r\n          name: nameValue,\r\n          x: value,\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  openWindow2(contentTemplate2, titleValue: string, orderValue: string, nameValue: string, descripcionValue: string, referenciaValue: string, orderLengthValue: number) {\r\n    this.windowService.open(\r\n      contentTemplate2,\r\n      {\r\n        title: titleValue,\r\n        context: {\r\n          orden: orderValue,\r\n          nombre: nameValue,\r\n          descripcion: descripcionValue,\r\n          referencia: referenciaValue,\r\n          orderLength: orderLengthValue,\r\n\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n\r\n  Refresh(orden: string, nombre: string) {\r\n    // console.log(this._Ordenes$);\r\n    // console.log(this.ordenesMaquina$)\r\n    // console.log(this.ordenesFiltro);\r\n    console.log(orden + ', ' + nombre);\r\n  }\r\n\r\n  Edit() {\r\n\r\n    ORDENESACTUALIZAR = {\r\n      id:this.data.id,\r\n      orden: this.data.order,\r\n      referencia: this.referenciaValor.nativeElement.value,\r\n      origen: this.maquinaOrigen.value,\r\n      destino: this.maquinaDestino.value,\r\n      longitud: Number(this.longitudValor.nativeElement.value),\r\n      cortes: Number(this.cortesValor.nativeElement.value),\r\n      cortesAncho: Number(this.anchoValor.nativeElement.value),\r\n      cortesLargo: Number(this.largoValor.nativeElement.value),\r\n      priority: Number(this.priorityValue.nativeElement.value),\r\n      PreviousPriority: this.data.priority,\r\n    };\r\n\r\n    this.apiGetComp.PostJson(this.api.apiUrlMatbox + '/Orders/ActualizarOrden', ORDENESACTUALIZAR).subscribe((res: any) => {\r\n      this.messageService.sendMessage('orderTable');\r\n      this.handleSuccessResponse();\r\n    });\r\n  }\r\n\r\n  handleSuccessResponse() {\r\n    this.toasterService.success('Orden ' + ORDEN.order + ' actualizada con exito' );\r\n    this.back();\r\n  }\r\n\r\n  back() {\r\n    win.close();\r\n    this.router.navigate(['/pages/tables/OrderTable']);\r\n  }\r\n\r\n\r\n  ChangeLocation($event) {\r\n    const selectedValue = this.options2.find(location => location.value === $event.value );\r\n    console.log(selectedValue);\r\n}\r\n\r\n}\r\n","<div class=\"row\">\r\n\r\n  <div class=\"col-md-6\">\r\n    <!-- <nb-card> -->\r\n\r\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\"></p>  -->\r\n    <!-- <p>Orden: <input type=\"text\" id=\"ordenValue\" name=\"ordenValue\" nbInput #ordenValor  value=\"{{ data.order }}\" required minlength=\"0\" maxlength=\"20\" size=\"10\" disabled=\"true\"></p> -->\r\n    <!-- <p>Orden: {{ data.order }}</p> -->\r\n    <!-- <p>Nombre: {{ data.name }}</p> -->\r\n    <!-- <p>Descripcion: {{ data.description }}</p> -->\r\n    <!-- <p>Referencia: </p>\r\n    <p>{{ data.reference }}</p> -->\r\n    <p>Referencia: <input type=\"text\" id=\"referenciaValue\" name=\"referenciaValue\" nbInput #referenciaValor  value=\"{{ data.reference }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Longitud:   <input type=\"number\" id=\"longitudValue\" name=\"longitudValue\" nbInput #longitudValor  value=\"{{ data.orderLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Cortes:     <input type=\"number\" id=\"cortesValue\" name=\"cortesValue\" nbInput #cortesValor  value=\"{{ data.cutsNumber }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Ancho:      <input type=\"number\" id=\"anchoValue\" name=\"anchoValue\" nbInput #anchoValor  value=\"{{ data.cutsWidth }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Largo:      <input type=\"number\" id=\"largoValue\" name=\"largoValue\" nbInput #largoValor  value=\"{{ data.cutsLength }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n    <p>Prioridad:  <input type=\"number\" id=\"priorityValue\" name=\"priorityValue\" nbInput #priorityValue  value=\"{{ data.priority }}\" required minlength=\"0\" maxlength=\"30\" size=\"10\"></p>\r\n  <!-- </nb-card> -->\r\n  </div>\r\n\r\n  <div class=\"col-md-6\">\r\n\r\n\r\n    <!-- <nb-card> -->\r\n      <p><nb-card-header>Dispositivos Origen</nb-card-header></p>\r\n\r\n  <!-- <nb-card-body> -->\r\n    <p><nb-select [(ngModel)]=\"maquinaOrigen.value\"> \r\n  <nb-option *ngFor=\"let option of origen\" [value]=\"option.value\">\r\n    {{ option.label }}\r\n  </nb-option>             \r\n</nb-select></p>\r\n\r\n\r\n<!-- </nb-card-body> -->\r\n\r\n<p><nb-card-header>Dispositivos Destino</nb-card-header></p>\r\n\r\n<!-- <nb-card-body> -->\r\n<p><nb-select [(ngModel)]=\"maquinaDestino.value\"> \r\n<nb-option *ngFor=\"let option2 of destino\" [value]=\"option2.value\" >\r\n{{ option2.label }}\r\n</nb-option>             \r\n</nb-select></p>\r\n<!-- </nb-card> -->\r\n\r\n    <!-- <nb-card>\r\n      <nb-card-header>Select</nb-card-header>\r\n      <nb-card-body>\r\n        <nb-select selected=\"1\">\r\n          <nb-option value=\"1\">Option 1</nb-option>\r\n          <nb-option value=\"2\">Option 2</nb-option>\r\n        </nb-select>\r\n      </nb-card-body>\r\n    </nb-card> -->\r\n    \r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n\r\n  <p><button nbButton hero fullWidth shape=\"semi-round\" status=\"primary\" size=\"large\" (click)=\"Edit()\">EDIT</button></p>\r\n</div>\r\n\r\n\r\n</div>\r\n  \r\n\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\r\nimport { ApiGetService } from '../../../@core/backend/common/api/apiGet.services';\r\nimport { HttpService } from '../../../@core/backend/common/api/http.service';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { takeWhile } from 'rxjs/operators';\r\nimport { NbAccessChecker } from '@nebular/security';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GridComponent, PageSettingsModel, FilterSettingsModel, CommandClickEventArgs, EditService, CommandColumnService, CommandModel, ToolbarService, PageService, QueryCellInfoEventArgs, DialogEditEventArgs, ToolbarItems } from '@syncfusion/ej2-angular-grids';\r\nimport { UserStore } from '../../../@core/stores/user.store';\r\nimport { Dialog, Tooltip } from '@syncfusion/ej2-popups';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { ClickEventArgs } from '@syncfusion/ej2-navigations';\r\nimport Swal from 'sweetalert2';\r\n\r\ninterface Alarmas {\r\n  Id: number;\r\n  Message: string;\r\n  Level: string;\r\n  Exception: string;\r\n  UserId: string;\r\n  TimeStamp: string;\r\n  ETD: string;\r\n  UserIdAcknow: string;\r\n  IdDevice: string;\r\n}\r\n\r\nlet ALARMAS: Alarmas[] = [\r\n\r\n\r\n];\r\n\r\n@Component({\r\n  selector: 'ngx-alarms',\r\n  templateUrl: './alarms.component.html',\r\n  providers: [ToolbarService, EditService, PageService],\r\n  styleUrls: ['./alarms.component.scss',]\r\n})\r\nexport class AlarmsComponent implements OnDestroy {\r\n\r\n  public select = false;\r\n  private alive = true;\r\n  mostrar: Boolean;\r\n  public pageSettings: PageSettingsModel;\r\n  \r\n\r\n  public editSettings: Object;\r\n    // public toolbar: string[];\r\n    public toolbar: ToolbarItems[] | object;\r\n\r\n  public historyAlarmData: Alarmas[];\r\n  public editparams: Object;\r\n  public commands: CommandModel[];\r\n  public filterOptions: FilterSettingsModel;\r\n\r\n  alarmas = ALARMAS;\r\n\r\n  settings = {\r\n    // actions: false,\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      \r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-checkmark-circle\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    \r\n    columns: {\r\n      Id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n        filter: false,\r\n        hide: true,\r\n\r\n      },\r\n      Message: {\r\n        title: 'Mensaje',\r\n        type: 'string',\r\n        filter: true,\r\n      },\r\n      Level: {\r\n        title: 'Nivel',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      // exception: {\r\n      //   title: 'excepci√≥n',\r\n      //   type: 'string',\r\n      //   filter: false,\r\n      // },\r\n      UserId: {\r\n        title: 'Usuario',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      TimeStamp: {\r\n        title: 'Fecha',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n  public Alarm: Alarmas[];\r\n\r\n  constructor(\r\n    public accessChecker: NbAccessChecker,\r\n    private toastrService: NbToastrService,\r\n    public apiGetComp: ApiGetService,\r\n    private api: HttpService,\r\n    private http: HttpClient,\r\n    private userStore: UserStore,\r\n  ) {\r\n    \r\n    this.alive;\r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      if(res){ \r\n        this.select = false;\r\n        this.mostrar = false;\r\n      }else {\r\n        this.select=true;\r\n        this.mostrar=true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.Chargealarms();\r\n    this.ChargeHistoryData();\r\n    this.pageSettings = { pageSize: 10 };\r\n    this.filterOptions = {\r\n      type: 'Menu',\r\n   };\r\n   this.editSettings = { allowEditing: true, allowAdding: false, allowDeleting: true , newRowPosition: 'Top' };\r\n   this.toolbar = [{text: 'Delete', prefixIcon: 'fas fa-check'},\r\n   { text: 'Reconocer alarmas', tooltipText: 'Click', prefixIcon: 'fas fa-check-double', id: 'Click' }];\r\n//    this.editSettings = { allowEditing: false, allowDeleting: true };\r\n//    this.commands = [\r\n//   //  { type: 'Edit', buttonOption: { iconCss: ' e-icons e-edit', cssClass: 'e-flat' } },\r\n//    { type: 'Delete', buttonOption: { iconCss: 'e-icons e-delete', cssClass: 'e-flat' } },\r\n//   //  { type: 'Save', buttonOption: { iconCss: 'e-icons e-update', cssClass: 'e-flat' } },\r\n//   //  { type: 'Cancel', buttonOption: { iconCss: 'e-icons e-cancel-icon', cssClass: 'e-flat' } }\r\n// ];\r\n  }\r\n\r\n  // onedit($event: any) {\r\n  //     this.apiGetComp.GetJson(this.api.apiUrlMatbox + '/Alarms/postalarm?IdAlarm' + $event.data.id).subscribe((res: any) => {\r\n  //       //REPORTOCUPATION=res;\r\n  //       console.log(\"alarmId\", res);\r\n  //       // this.Alarm = res;\r\n  //       // this.source.load(res);\r\n  //     });\r\n    \r\n  // }\r\n\r\n  commandClick(args: CommandClickEventArgs): void {\r\n    debugger\r\n    alert(JSON.stringify(args.rowData));\r\n    \r\n}\r\n\r\nclickHandler(args: ClickEventArgs): void {\r\n  if (args.item.id === 'Click') {\r\n    console.log('click: ', args);\r\n    debugger\r\n    this.reconocer();\r\n    console.log('Se reconocieron todas las alarmas');\r\n    \r\n      // alert('Custom Toolbar Click...');\r\n  }\r\n}\r\n\r\ntooltip(args: QueryCellInfoEventArgs) {\r\n  const tooltip: Tooltip = new Tooltip({\r\n      content: args.data[args.column.field].toString()\r\n      \r\n  }, args.cell as HTMLTableCellElement);\r\n  // console.log('tool:', tooltip);\r\n}\r\n\r\n// actionComplete(args: DialogEditEventArgs): void {\r\n//   if ((args.requestType === 'beginEdit' || args.requestType === 'add')) {\r\n//       if (Browser.isDevice) {\r\n//           args.dialog.height = window.innerHeight - 90 + 'px';\r\n//           (<Dialog>args.dialog).dataBind();\r\n//       }\r\n//       // Set initail Focus\r\n//       if (args.requestType === 'beginEdit') {\r\n//           (args.form.elements.namedItem('CustomerName') as HTMLInputElement).focus();\r\n//       } else if (args.requestType === 'add') {\r\n//           (args.form.elements.namedItem('OrderID') as HTMLInputElement).focus();\r\n//       }\r\n//   }\r\n// }\r\n\r\nactionComplete(args) {\r\n  if (( args.requestType === 'delete')) {\r\n      // const dialog = args.dialog;\r\n      debugger\r\n      const Id = 'Id';\r\n      // change the header of the dialog\r\n      console.log('Type: ', args.data[0].Id);\r\n      // console.log('id: ', args.rowData.Id);\r\n      // debugger\r\n    \r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        if(res){ \r\n          const currentUserId = this.userStore.getUser().id;\r\n          var respons = \r\n            {\r\n            IdAlarm: args.data[0].Id,\r\n            UserIdAcknow: currentUserId\r\n            };\r\n          // let alarm = {IdAlarm: event.data.Id};\r\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\r\n      \r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        //  console.log(\"alarmId\", res);\r\n         if (res) {\r\n          this.toastrService.success('', '¬°Alarma solucionada!'); \r\n          this.source.refresh();\r\n        } else {\r\n          this.toastrService.danger('', 'Algo salio mal.');\r\n        }\r\n      });\r\n      // args.rowData.Id.resolve();\r\n      //     this.select = false;\r\n      //     this.mostrar = false;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n        }\r\n      });\r\n      // dialog.header = args.requestType === 'beginEdit' ? 'Record of ' + args.rowData[CustomerID] : 'New Customer';\r\n  }\r\n}\r\n\r\nDelete(event): void {\r\n    debugger\r\n    \r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        if(res){ \r\n          const currentUserId = this.userStore.getUser().id;\r\n          var respons = \r\n            {\r\n            IdAlarm: event.data.Id,\r\n            UserIdAcknow: currentUserId\r\n            };\r\n          let alarm = {IdAlarm: event.data.Id};\r\n      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmId', respons)\r\n      \r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        //  console.log(\"alarmId\", res);\r\n         if (res) {\r\n          this.toastrService.success('', '¬°Alarma solucionada!'); \r\n          this.source.refresh();\r\n        } else {\r\n          this.toastrService.danger('', 'Algo salio mal.');\r\n        }\r\n      });\r\n      event.confirm.resolve();\r\n          this.select = false;\r\n          this.mostrar = false;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n        }\r\n      });\r\n    //  console.log(\"Evento: \", event);\r\n      \r\n    \r\n  }\r\n\r\n  reconocer() {\r\n    this.accessChecker.isGranted('edit', 'ordertable')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      if(res){ \r\n      Swal.fire({\r\n      title: 'Desea reconocer alarmas?',\r\n      text: `¬°Reconocer√° todas las alarmas!`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: '¬°S√≠, Reconocer!'\r\n    }).then(result => {\r\n      debugger\r\n      if (result.value) {\r\n      const currentUserId = this.userStore.getUser().id;\r\n          var respons = \r\n            {\r\n              UserIdAcknow: currentUserId\r\n            };\r\n            \r\n       this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmAll', respons)\r\n       .pipe(takeWhile(() => this.alive))\r\n       .subscribe((res: any) => {\r\n        this.source.refresh();\r\n        this.Chargealarms();\r\n       });\r\n    \r\n          Swal.fire('¬°Se Elimin√≥ Exitosamente', 'success');\r\n          this.source.refresh();\r\n      }\r\n    });\r\n          this.source.refresh();   \r\n          this.select = false;\r\n          this.mostrar = false;\r\n        }else {\r\n          this.select=true;\r\n          this.mostrar=true;\r\n        }\r\n      });\r\n  }\r\n\r\n  // reconocer() {\r\n  //   debugger\r\n  //   this.accessChecker.isGranted('edit', 'ordertable')\r\n  //     .pipe(takeWhile(() => this.alive))\r\n  //     .subscribe((res: any) => {\r\n  //       if(res){ \r\n  //     const currentUserId = this.userStore.getUser().id;\r\n  //         var respons = \r\n  //           {\r\n  //             UserIdAcknow: currentUserId\r\n  //           };\r\n            \r\n  //      this.apiGetComp.PostJson(this.api.apiUrlNode1 + '/ResetAlarmAll', respons)\r\n  //      .pipe(takeWhile(() => this.alive))\r\n  //      .subscribe((res: any) => {\r\n  //         if (res) {\r\n  //          this.toastrService.success('', '¬°Alarmas solucionadas!');\r\n  //          this.source.refresh();\r\n  //          this.Chargealarms();\r\n  //          this.select=true;\r\n  //        } else {\r\n  //          this.toastrService.danger('', 'Algo salio mal.');\r\n  //        }\r\n  //        this.source.refresh();\r\n  //      });\r\n  //     }else {\r\n  //       this.select=true;\r\n  //       this.mostrar=true;\r\n  //     }\r\n  //   });\r\n       \r\n  // }\r\n\r\n  Chargealarms() {\r\n    this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      this.Alarm = res;\r\n      // console.log('test alarm: ', this.Alarm)\r\n      // this.source.load(res);\r\n      // this.source.refresh();\r\n    });\r\n    const contador = interval(30000)\r\n    contador.subscribe((n) => {\r\n      this.apiGetComp.GetJson(this.api.apiUrlNode1 + '/GetAlarms')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        this.Alarm = res;\r\n        // this.source.load(res);\r\n        // this.source.refresh();\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  ChargeHistoryData() {\r\n    this.http.get(this.api.apiUrlNode1 + '/historyalarm')\r\n    .pipe(takeWhile(() => this.alive))\r\n    .subscribe((res: any) => {\r\n      // tslint:disable-next-line: no-console\r\n      // console.log('HistoryAlarmData: ', res);\r\n      this.historyAlarmData = res;\r\n    });\r\n    const contador = interval(40000)\r\n    contador.subscribe((n) => {\r\n      this.http.get(this.api.apiUrlNode1 + '/historyalarm')\r\n      .pipe(takeWhile(() => this.alive))\r\n      .subscribe((res: any) => {\r\n        this.historyAlarmData = res;\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<!-- <h2>Alarmas</h2> -->\r\n<nb-card>\r\n    <nb-tabset>\r\n        <nb-tab tabTitle=\"Alarmas\">\r\n            <nb-card>\r\n                <nb-card-header>\r\n                    Alarmas\r\n                </nb-card-header>\r\n\r\n                <!-- <nb-card-body> -->\r\n                <!-- <ng2-smart-table class=\"example-smart-table\" [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n                    </ng2-smart-table> -->\r\n\r\n                <ejs-grid [dataSource]='Alarm' allowPaging='true' (toolbarClick)='clickHandler($event)' (actionComplete)=\"actionComplete($event)\" allowTextWrap='true' [pageSettings]='pageSettings' [editSettings]='editSettings' [toolbar]='toolbar' [filterSettings]='filterOptions'\r\n                    [allowFiltering]=\"true\" height='400'>\r\n                    <e-columns>\r\n                        <e-column field='Message' headerText='Mensaje' width=180 isPrimaryKey='true'></e-column>\r\n                        <e-column field='Level' headerText='Nivel' width=85></e-column>\r\n                        <e-column field='UserId' headerText='Usuario' width=100></e-column>\r\n                        <e-column field='TimeStamp' headerText='Fecha' width=90></e-column>\r\n                        <!-- <e-column headerText='Acciones' width='60' [commands]='commands' (click)=\"Delete($event)\"></e-column> -->\r\n                    </e-columns>\r\n                </ejs-grid>\r\n\r\n                <!-- </nb-card-body> -->\r\n                <!-- <nb-card-footer>\r\n                    <button type=\"submit\" nbButton status=\"primary\" *ngIf=\"!mostrar\" [disabled]=\"select\" (click)=\"reconocer()\" class=\"btn btn-primary\">Reconocer alarmas</button>\r\n                    \r\n                </nb-card-footer> -->\r\n            </nb-card>\r\n        </nb-tab>\r\n        <nb-tab tabTitle=\"Historico Alarmas\">\r\n            <nb-card>\r\n                <nb-card-header>\r\n                    Historico Alarmas\r\n                </nb-card-header>\r\n                <!-- <nb-card-body> -->\r\n                <ejs-grid [dataSource]='historyAlarmData' [allowPaging]=\"true\" allowTextWrap='true' (queryCellInfo)='tooltip($event)' [pageSettings]='pageSettings' [filterSettings]='filterOptions' [allowFiltering]=\"true\" height='400'>\r\n                    <e-columns>\r\n                        <e-column field='Message' headerText='Mensaje' width=180></e-column>\r\n                        <e-column field='Level' headerText='Nivel' width=75></e-column>\r\n                        <e-column field='UserId' headerText='Usuario' width=75></e-column>\r\n                        <e-column field='TimeStamp' headerText='Fecha' width=85></e-column>\r\n                        <e-column field='EDT' headerText='Fecha fin' width=100></e-column>\r\n                        <e-column field='UserIdAcknow' headerText='Usuario reco' width=85></e-column>\r\n                    </e-columns>\r\n                </ejs-grid>\r\n                <!-- </nb-card-body> -->\r\n            </nb-card>\r\n        </nb-tab>\r\n    </nb-tabset>\r\n</nb-card>","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/interfaces/common/smart-table';\r\n\r\n@Component({\r\n  selector: 'ngx-smart-table',\r\n  templateUrl: './smart-table.component.html',\r\n  styleUrls: ['./smart-table.component.scss'],\r\n})\r\nexport class SmartTableComponent {\r\n\r\n  settings = {\r\n    actions: {\r\n      add: true,\r\n      edit: true,\r\n      delete: true,\r\n    },\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmCreate: true\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n      confirmSave: true\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      firstName: {\r\n        title: 'First Name',\r\n        type: 'string',\r\n        filter: false,\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n        type: 'string',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      login: {\r\n        title: 'Login',\r\n        type: 'string',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      email: {\r\n        title: 'E-mail',\r\n        type: 'string',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n      age: {\r\n        title: 'Age',\r\n        type: 'number',\r\n        filter: false,\r\n        editable: false,\r\n        addable: false\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData) {\r\n    const data = this.service.getData();\r\n    this.source.load(data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCreateConfirm(event) {\r\n    // debugger\r\n    console.log('Create Event In Console');\r\n    console.log('insert', event);\r\n    console.log('id', event.newData.id, '&', 'alias', event.newData.firstName);\r\n    event.confirm.resolve();\r\n  }\r\n\r\n  onSaveConfirm(event) {\r\n    // debugger\r\n    console.log('Edit Event In Console');\r\n    console.log('update', event);\r\n    console.log('id', event.newData.id, '&', 'alias', event.newData.firstName);\r\n    event.confirm.resolve();\r\n  }\r\n\r\n}\r\n","<!--\r\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\r\n  ~ Licensed under the Single Application / Multi Application License.\r\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n  -->\r\n\r\n<nb-card>\r\n  <nb-card-header>\r\n    Smart Table\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table class=\"example-smart-table\"\r\n                     [settings]=\"settings\"\r\n                     [source]=\"source\"\r\n                     (deleteConfirm)=\"onDeleteConfirm($event)\" \r\n                     (editConfirm)=\"onSaveConfirm($event)\"\r\n\t\t\t\t\t\t(createConfirm)=\"onCreateConfirm($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\nimport { SmartTableComponent } from './smart-table/smart-table.component';\r\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\r\nimport { OrderTableComponent } from './OrderTable/orderTable.component';\r\nimport { AlarmsComponent } from './alarms/alarms.component';\r\nimport { SmartOrderTableComponent } from './SmartOrderTable/smartOrderTable.component';\r\nimport { AdminGuard } from '../../@auth/admin.guard';\r\nimport { UserGuard } from '../../@auth/user.guard';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [\r\n    {\r\n      path: 'smart-table',\r\n      component: SmartTableComponent,\r\n    },\r\n    {\r\n      path: 'tree-grid',\r\n      component: TreeGridComponent,\r\n    },\r\n    {\r\n      path: 'OrderTable',\r\n      component: OrderTableComponent,\r\n    },\r\n    {\r\n      path: 'alarms',\r\n      component: AlarmsComponent,\r\n    },\r\n    {\r\n      path: 'SmartOrderTable',\r\n      component: SmartOrderTableComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  SmartTableComponent,\r\n  TreeGridComponent,\r\n  OrderTableComponent,\r\n  SmartOrderTableComponent,\r\n];\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n}\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { NbCardModule, NbTabsetModule, NbIconModule, NbInputModule, NbSelectModule, NbTreeGridModule, NbRadioModule, NbCheckboxModule, \r\n  NbActionsModule, NbUserModule, NbDatepickerModule, NbButtonModule, NbToggleModule} from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\r\nimport { FsIconComponent } from './tree-grid/tree-grid.component';\r\nimport {MeasureConverterPipe} from '../../@theme/pipes';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http'\r\nimport {ApiGetService} from './OrderTable/apiGet.services'\r\nimport {ApiWindowOrderPopup} from './WindowOrderPopup/apiWindowiOrderPopup.services'\r\nimport {WindowComponent} from './WindowOrderPopup/windowsOrderPopup.component'\r\nimport {ApiWindowCreateOrderPopup} from './WindowCreateOrderPopup/apiWindowCreateOrderPopup.services'\r\nimport {WindowCreateComponent} from './WindowCreateOrderPopup/windowsCreateOrderPopup.component';\r\nimport { AlarmsComponent } from './alarms/alarms.component'\r\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\r\nimport { PageService, SortService, FilterService, GroupService } from '@syncfusion/ej2-angular-grids';\r\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    NbTreeGridModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    TablesRoutingModule,\r\n    Ng2SmartTableModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NbSelectModule,\r\n    NbInputModule,\r\n    NbCardModule,\r\n    NbActionsModule,\r\n    NbUserModule,\r\n    NbCheckboxModule,\r\n    NbRadioModule,\r\n    NbDatepickerModule,\r\n    NbSelectModule,\r\n    NbIconModule,\r\n    NbButtonModule,\r\n    NbToggleModule,\r\n    NbTabsetModule,\r\n    GridModule,\r\n    DropDownListAllModule,\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n    FsIconComponent,\r\n    WindowComponent,\r\n    WindowCreateComponent,\r\n    AlarmsComponent,\r\n  ],\r\n  providers: [\r\n    MeasureConverterPipe,\r\n    ApiGetService,\r\n    ApiWindowOrderPopup,\r\n    ApiWindowCreateOrderPopup,\r\n    PageService,\r\n    SortService,\r\n    FilterService,\r\n    GroupService,\r\n  ],\r\n})\r\nexport class TablesModule { }\r\n","/*\r\n * Copyright (c) Akveo 2019. All Rights Reserved.\r\n * Licensed under the Single Application / Multi Application License.\r\n * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\r\nimport {MeasureConverterPipe} from '../../../@theme/pipes';\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n  children?: TreeNode<T>[];\r\n  expanded?: boolean;\r\n}\r\n\r\ninterface FSEntry {\r\n  name: string;\r\n  size: number;\r\n  kind: string;\r\n  items?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-tree-grid',\r\n  templateUrl: './tree-grid.component.html',\r\n  styleUrls: ['./tree-grid.component.scss'],\r\n})\r\nexport class TreeGridComponent {\r\n  customColumn = 'name';\r\n  defaultColumns = [ 'size', 'kind', 'items' ];\r\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\r\n\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n\r\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>,\r\n              public measureConverterPipe: MeasureConverterPipe) {\r\n    this.dataSource = this.dataSourceBuilder.create(this.data);\r\n  }\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n  private data: TreeNode<FSEntry>[] = [\r\n    {\r\n      data: { name: 'Projects', size: 1800000, items: 4, kind: 'dir' },\r\n      children: [\r\n        { data: { name: 'project-1.doc', kind: 'doc', size: 240000 } },\r\n        { data: { name: 'project-2.doc', kind: 'doc', size: 290000 } },\r\n        { data: { name: 'project-3', kind: 'txt', size: 466000 } },\r\n        { data: { name: 'project-4.docx', kind: 'docx', size: 900000 } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Reports', kind: 'dir', size: 400000, items: 2 },\r\n      children: [\r\n        { data: { name: 'Report 1', kind: 'doc', size: 100000 } },\r\n        { data: { name: 'Report 2', kind: 'doc', size: 300000 } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Other', kind: 'dir', size: 109000000, items: 2 },\r\n      children: [\r\n        { data: { name: 'backup.bkp', kind: 'bkp', size: 107000000 } },\r\n        { data: { name: 'secret-note.txt', kind: 'txt', size: 2000000 } },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  getCellValue(columnValue: string | number, columnName: string): string | number {\r\n    if (columnName === 'size') {\r\n      return this.measureConverterPipe.transform(columnValue);\r\n    }\r\n    return columnValue || '-';\r\n  }\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-fs-icon',\r\n  template: `\r\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\r\n    </nb-tree-grid-row-toggle>\r\n    <ng-template #fileIcon>\r\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class FsIconComponent {\r\n  @Input() kind: string;\r\n  @Input() expanded: boolean;\r\n\r\n  isDir(): boolean {\r\n    return this.kind === 'dir';\r\n  }\r\n}\r\n","<!--\r\n  ~ Copyright (c) Akveo 2019. All Rights Reserved.\r\n  ~ Licensed under the Single Application / Multi Application License.\r\n  ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.\r\n  -->\r\n\r\n<nb-card>\r\n  <nb-card-body>\r\n\r\n    <label class=\"search-label\" for=\"search\">Search:</label>\r\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\r\n\r\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n\r\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\r\n          {{customColumn}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\r\n          {{row.data[customColumn]}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\r\n                    [nbTreeGridColumnDef]=\"column\"\r\n                    [showOn]=\"getShowOn(index)\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\r\n          {{column}}\r\n        </th>\r\n\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{getCellValue(row.data[column], column)}}</td>\r\n      </ng-container>\r\n\r\n    </table>\r\n\r\n  </nb-card-body>\r\n</nb-card>\r\n"]}